INSERT INTO "public"."user" VALUES ('9ba179ed-d26d-4828-a0f6-8836c2063992', 'nguyenquoctuan385@gmail.com', '2002-05-29', 'Tuan', 'Nguyen Quoc', '+8412365478', NULL, NULL, '2024-04-12 21:33:23.371836+07', '2024-04-12 21:33:23.371836+07', 'f');
INSERT INTO "public"."user" VALUES ('b029f559-52a8-4699-b595-71161498ed8c', 'dcthong852@gmail.com', '2002-04-29', 'Thong', 'Duong', '+8412365478', NULL, NULL, '2024-04-15 18:07:20.891115+07', '2024-04-15 18:07:20.891115+07', 'f');
INSERT INTO "public"."user" VALUES ('8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7', 'nthoang852@gmail.com', '2002-03-29', 'Hoang', 'Nguyen Thanh', '+8412365478', NULL, NULL, '2024-04-15 18:07:41.151759+07', '2024-04-15 18:07:41.151759+07', 'f');
INSERT INTO "public"."user" VALUES ('39328bcf-8af6-44fc-9ae9-247f953ee2a2', 'ndqkhanh852@gmail.com', '2002-03-29', 'Khanh', 'Nguyen Dinh', '+8412365478', NULL, NULL, '2024-04-15 18:07:41.151759+07', '2024-04-15 18:07:41.151759+07', 'f');
INSERT INTO "public"."user" VALUES ('8edbc0aa-0b91-480e-a428-23abf2109df9', 'tgtien852@gmail.com', '2002-03-29', 'Tien', 'Truong Gia', '+8412365478', NULL, NULL, '2024-04-15 18:07:41.151759+07', '2024-04-15 18:07:41.151759+07', 'f');
INSERT INTO "public"."user" VALUES ('05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510', 'dntien852@gmail.com', '2002-03-29', 'Tien', 'Dang Ngoc', '+8412365478', NULL, NULL, '2024-04-15 18:07:41.151759+07', '2024-04-15 18:07:41.151759+07', 'f');
INSERT INTO "public"."user" VALUES ('64412e27-169e-44ea-a101-74ebf8cb82d9', 'kayonkiu@gmail.com', '2002-03-29', 'Admin', 'User', NULL, NULL, NULL, '2024-06-04 19:54:23.636865+07', '2024-06-04 19:54:23.637867+07', 'f');
INSERT INTO "public"."user" VALUES ('cb2c22ac-87de-44e4-9638-35979f6af667', 'duongchithong2002@gmail.com', '2002-03-29', 'Dương', 'Chí Thông', NULL, NULL, NULL, '2024-06-04 19:54:23.664571+07', '2024-06-04 19:54:23.664571+07', 'f');
INSERT INTO "public"."user" VALUES ('2d7ed5a0-fb21-4927-9a25-647c17d29668', 'dntienes@gmail.com', '2002-03-29', 'Tiến', 'Đặng Ngọc', '0993331110', NULL, NULL, '2024-06-04 19:54:23.690581+07', '2024-06-04 19:54:23.690581+07', 'f');
INSERT INTO "public"."user" VALUES ('2d3c1e66-1835-457f-93e9-265fe483feee', 'dt.ngocthw@gmail.com', '2002-03-29', 'Thư', 'Ngọc', NULL, NULL, NULL, '2024-06-04 19:54:23.712124+07', '2024-06-04 19:54:23.712124+07', 'f');
INSERT INTO "public"."user" VALUES ('ca3040f2-e173-40a5-aab7-6ef15965ce43', 'truonggiatien123@gmail.com', '2002-03-29', 'Trương', 'Gia Tiến', NULL, NULL, NULL, '2024-06-04 19:54:23.789748+07', '2024-06-04 19:54:23.789748+07', 'f');
INSERT INTO "public"."user" VALUES ('a9f5487e-c0b1-4fa4-b93a-6f16bde90583', 'ktpm4t@gmail.com', '2002-03-29', 'giáo', 'vien', '+8412365478', NULL, 'http://62.171.185.208:8081/theme/image.php?theme=classic&component=core&image=u%2Ff1', '2024-06-04 19:54:23.73386+07', '2024-08-04 14:16:29.763+07', 'f');
INSERT INTO "public"."user" VALUES ('ad3c4eb3-8ddb-45a0-9df2-d6ec5d14fbbc', 'hailong@gmail.com', NULL, 'Hải', 'Long', NULL, NULL, NULL, '2024-08-04 14:16:29.729+07', '2024-08-04 14:16:29.729+07', 'f');
INSERT INTO "public"."user" VALUES ('a4cd3cac-3b49-4b36-93e7-13fbb14ce76f', 'kaitokid23454@gmail.com', NULL, 'Mai', 'Tô Kiệt', NULL, NULL, NULL, '2024-08-04 14:16:29.729+07', '2024-08-04 14:16:29.729+07', 'f');
INSERT INTO "public"."user" VALUES ('8cbf0aa4-f707-4cd3-8258-0c72f8fb4db0', 'haiduong@gmail.com', NULL, 'Pam', 'Hải Đường', NULL, NULL, NULL, '2024-08-04 14:16:29.978+07', '2024-08-04 14:16:29.978+07', 'f');
INSERT INTO "public"."user" VALUES ('87031f89-d9b0-449f-84f4-c9b6dff15a9a', 'Huydtw@gmail.com', NULL, 'Bùi Lê Quang', 'Huy', NULL, NULL, NULL, '2024-08-04 14:16:34.881+07', '2024-08-04 14:16:34.881+07', 'f');
INSERT INTO "public"."user" VALUES ('444bbc7d-86f8-4258-9429-e73ce69a9e41', 'kimngan@gmail.com', NULL, 'Hoàng', 'Kim Ngân', NULL, NULL, NULL, '2024-08-04 14:16:34.991+07', '2024-08-04 14:16:34.991+07', 'f');
INSERT INTO "public"."user" VALUES ('853b8f16-20c9-42e9-a04d-daa0237823ca', '20127574@student.hcmus.edu.vn', NULL, 'Hoàng Phước Gia', 'Nguyên', NULL, NULL, NULL, '2024-08-04 14:16:35.049+07', '2024-08-04 14:16:35.049+07', 'f');
INSERT INTO "public"."user" VALUES ('fcf62145-e196-4777-a201-77f6693810c4', '20127597@student.hcmus.edu.vn', NULL, 'Bùi Tấn', 'Phương', NULL, NULL, NULL, '2024-08-04 14:16:36.885+07', '2024-08-04 14:16:36.885+07', 'f');
INSERT INTO "public"."user" VALUES ('c2f39b5b-6aeb-4b82-8541-d25920314339', '20127447@student.hcmus.edu.vn', NULL, 'Ngô', 'Đức Bảo', NULL, NULL, NULL, '2024-08-04 14:16:36.935+07', '2024-08-04 14:16:36.935+07', 'f');
INSERT INTO "public"."user" VALUES ('994ebe5b-db43-4cd3-a1ee-693c2ef681ef', '20127329@student.hcmus.edu.vn', NULL, 'Bùi', 'Quang Thành', NULL, NULL, NULL, '2024-08-04 14:16:38.488+07', '2024-08-04 14:16:38.488+07', 'f');
INSERT INTO "public"."user" VALUES ('baddeb10-3f99-4843-859c-50cc51659153', '20127281@student.hcmus.edu.vn', NULL, 'Lê Đình', 'Phúc', NULL, NULL, NULL, '2024-08-04 14:16:37.058+07', '2024-08-04 14:16:37.058+07', 'f');
INSERT INTO "public"."user" VALUES ('87076e41-40fd-4832-bbbc-1e5211878264', '20127161@student.hcmus.edu.vn', NULL, 'Bùi Thị Thanh', 'Hoa', NULL, NULL, NULL, '2024-08-04 14:16:38.653+07', '2024-08-04 14:16:38.653+07', 'f');
INSERT INTO "public"."user" VALUES ('4526d150-cfcf-4b04-ab54-12789b788829', 'nlhdung@fit.hcmus.edu.vn', NULL, 'Nguyễn Lê Hoàng', 'Dũng', NULL, NULL, NULL, '2024-08-04 14:16:40.095+07', '2024-08-04 14:16:40.095+07', 'f');
INSERT INTO "public"."user" VALUES ('2df936cc-f04a-4269-85ca-5dcf8099e184', 'ltphat20@clc.fitus.edu.vn', NULL, 'Lưu Tấn', 'Phát', NULL, NULL, NULL, '2024-08-04 14:16:38.665+07', '2024-08-04 14:16:38.665+07', 'f');
INSERT INTO "public"."user" VALUES ('b887e221-2edd-4a37-9b65-209c92b8997d', '20127116@student.hcmus.edu.vn', NULL, 'Nguyễn Gia', 'Bảo', NULL, NULL, NULL, '2024-08-04 14:16:40.058+07', '2024-08-04 14:16:40.058+07', 'f');
INSERT INTO "public"."user" VALUES ('2d5137ae-9d77-4a12-94ea-fda383a8db10', '20127291@student.hcmus.edu.vn', NULL, 'Lâm Quang Anh', 'Quân', NULL, NULL, NULL, '2024-08-04 14:16:39.187+07', '2024-08-04 14:16:39.187+07', 'f');
INSERT INTO "public"."user" VALUES ('205b0afa-3efa-4bdf-9bc0-3f6449ff5c1a', '20127358@student.hcmus.edu.vn', NULL, 'Lê Châu', 'Toàn', NULL, NULL, NULL, '2024-08-04 14:16:42.293+07', '2024-08-04 14:16:42.293+07', 'f');
INSERT INTO "public"."user" VALUES ('9e9e9485-bbad-4aa4-9e2d-f8362dbbbba1', '20127275@student.hcmus.edu.vn', NULL, 'Lê Nhất', 'Duy', NULL, NULL, NULL, '2024-08-04 14:16:40.745+07', '2024-08-04 14:16:40.745+07', 'f');
INSERT INTO "public"."user" VALUES ('4a182d8b-a553-455c-8485-f834da6de4e9', '20127252@student.hcmus.edu.vn', NULL, 'Ngô Gia', 'Ngân', NULL, NULL, NULL, '2024-08-04 14:16:41.97+07', '2024-08-04 14:16:41.97+07', 'f');
INSERT INTO "public"."user" VALUES ('2c4e42ab-be60-439f-95dc-28ccd7c75411', '20127666@student.hcmus.edu.vn', NULL, 'Huỳnh Tấn', 'Vinh', NULL, NULL, NULL, '2024-08-04 14:16:41.119+07', '2024-08-04 14:16:41.119+07', 'f');
INSERT INTO "public"."user" VALUES ('ee83822a-75aa-4b08-8772-c2cd40443532', '20127043@student.hcmus.edu.vn', NULL, 'Nguyễn Thoại Đăng', 'Khoa', NULL, NULL, NULL, '2024-08-04 14:16:41.091+07', '2024-08-04 14:16:41.091+07', 'f');
INSERT INTO "public"."user" VALUES ('097ad133-9434-44d0-ad2f-16db49f0be9c', '20127064@student.hcmus.edu.vn', NULL, 'Nguyễn Trần Mai', 'Phương', NULL, NULL, NULL, '2024-08-04 14:16:42.351+07', '2024-08-04 14:16:42.351+07', 'f');
INSERT INTO "public"."user" VALUES ('db95956f-786e-46c7-87c1-ad5ebaacf355', '20127090@student.hcmus.edu.vn', NULL, 'Lê Thanh', 'Tú', NULL, NULL, NULL, '2024-08-04 14:16:43.178+07', '2024-08-04 14:16:43.178+07', 'f');
INSERT INTO "public"."user" VALUES ('0bea60a7-9789-42bb-a217-22d142cf3b1b', '20127334@student.hcmus.edu.vn', NULL, 'Nguyễn Phát', 'Thịnh', NULL, NULL, NULL, '2024-08-04 14:16:42.906+07', '2024-08-04 14:16:42.906+07', 'f');
INSERT INTO "public"."user" VALUES ('ffed4ce4-53b7-497e-a449-e3dee93aec1d', '20127069@student.hcmus.edu.vn', NULL, 'Nguyễn Sanh', 'Tài', NULL, NULL, NULL, '2024-08-04 14:16:44.564+07', '2024-08-04 14:16:44.564+07', 'f');
INSERT INTO "public"."user" VALUES ('fff06898-5361-4464-9e75-8b1435e46d15', '20127318@student.hcmus.edu.vn', NULL, 'Phan Trí', 'Tài', NULL, NULL, NULL, '2024-08-04 14:16:43.267+07', '2024-08-04 14:16:43.267+07', 'f');
INSERT INTO "public"."user" VALUES ('e45e5e33-d62e-47cb-9d54-cee790fc6b5f', '20127323@student.hcmus.edu.vn', NULL, 'Võ Nhật', 'Tân', NULL, NULL, NULL, '2024-08-04 14:16:45.647+07', '2024-08-04 14:16:45.647+07', 'f');
INSERT INTO "public"."user" VALUES ('182709ef-635b-40a4-9ccd-774dd39b380f', '20120052@student.hcmus.edu.vn', NULL, 'Lê Đức', 'Đạt', NULL, NULL, NULL, '2024-08-04 14:16:45.244+07', '2024-08-04 14:16:45.244+07', 'f');
INSERT INTO "public"."user" VALUES ('58b79c83-ba88-430b-a9c9-d549d43b3600', '20127633@student.hcmus.edu.vn', NULL, 'Nguyễn Hoàng', 'Thịnh', NULL, NULL, NULL, '2024-08-04 14:16:49.317+07', '2024-08-04 14:16:49.317+07', 'f');
INSERT INTO "public"."user" VALUES ('06ccbc31-e870-41c9-9293-b54aef58de21', '20127573@student.hcmus.edu.vn', NULL, 'Nguyễn Thị Hồng', 'Ngọc', NULL, NULL, NULL, '2024-08-04 14:16:47.06+07', '2024-08-04 14:16:47.06+07', 'f');
INSERT INTO "public"."user" VALUES ('62973440-0374-4c2c-a49b-b771b7640912', 'tmhieu2024@gmail.com', NULL, 'Hiếu', 'Trần Minh', NULL, NULL, NULL, '2024-08-04 14:16:49.06+07', '2024-08-04 14:16:49.06+07', 'f');
INSERT INTO "public"."user" VALUES ('a1845f87-cece-4cb0-91c7-7bd68f439063', '20127143@student.hcmus.edu.vn', NULL, 'Phạm Giang Thái', 'Dương', NULL, NULL, NULL, '2024-08-04 14:16:49.876+07', '2024-08-04 14:16:49.876+07', 'f');
INSERT INTO "public"."user" VALUES ('c2efd8b2-7ab2-45b8-b7c9-425ac7d36b56', '20127644@student.hcmus.edu.vn', NULL, 'Nguyễn Khắc', 'Tiệp', NULL, NULL, NULL, '2024-08-04 14:16:50.691+07', '2024-08-04 14:16:50.691+07', 'f');
INSERT INTO "public"."user" VALUES ('d7c3523c-d595-44f0-ad72-ddf8ae299cbb', '20127456@student.hcmus.edu.vn', NULL, 'Nguyễn Mạnh', 'Cường', NULL, NULL, NULL, '2024-08-04 14:16:51.877+07', '2024-08-04 14:16:51.877+07', 'f');
INSERT INTO "public"."user" VALUES ('6c44fd5e-560d-4b8a-9d61-03c3e66872ef', '20127607@student.hcmus.edu.vn', NULL, 'Phạm Việt', 'Quang', NULL, NULL, NULL, '2024-08-04 14:16:51.109+07', '2024-08-04 14:16:51.109+07', 'f');
INSERT INTO "public"."user" VALUES ('75dd8ca8-14aa-4dbb-aac0-c16bcb1ef61f', '20127600@student.hcmus.edu.vn', NULL, 'Bảo', 'Nguyễn Ngọc Phi', NULL, NULL, NULL, '2024-08-04 14:16:53.748+07', '2024-08-04 14:16:53.748+07', 'f');
INSERT INTO "public"."user" VALUES ('d2befc26-a318-4ae1-a1c6-c71dd7e7d79d', '20127277@student.hcmus.edu.vn', NULL, 'Nguyễn Triệu', 'Phú', NULL, NULL, NULL, '2024-08-04 14:16:53.252+07', '2024-08-04 14:16:53.252+07', 'f');
INSERT INTO "public"."user" VALUES ('730f379c-986b-4274-8b88-3e90e5bbba25', '20127556@student.hcmus.edu.vn', NULL, 'Tăng Kim', 'Long', NULL, NULL, NULL, '2024-08-04 14:16:52.555+07', '2024-08-04 14:16:52.555+07', 'f');
INSERT INTO "public"."user" VALUES ('dd81de86-7f96-482a-b967-2e8e4cd9d910', '20127595@student.hcmus.edu.vn', NULL, 'Nguyễn Trọng', 'Phúc', NULL, NULL, NULL, '2024-08-04 14:16:54.576+07', '2024-08-04 14:16:54.576+07', 'f');
INSERT INTO "public"."user" VALUES ('2c5ab7ea-f37f-4917-bec2-202b20d25ff0', 'nttung2024@gmail.com', NULL, 'Tùng', 'Nguyễn Thanh', NULL, NULL, NULL, '2024-08-04 14:16:54.911+07', '2024-08-04 14:16:54.911+07', 'f');
INSERT INTO "public"."user" VALUES ('e1ac8c3c-1c60-4c14-8143-84c3c8c66934', '20127681@student.hcmus.edu.vn', NULL, 'Nguyễn Thiên', 'Phúc', NULL, NULL, NULL, '2024-08-04 14:16:56.425+07', '2024-08-04 14:16:56.425+07', 'f');
INSERT INTO "public"."user" VALUES ('bfca2841-ee2c-4981-9c74-3ef605fc1c3d', '20127562@student.hcmus.edu.vn', NULL, 'Nguyễn Đăng', 'Minh', NULL, NULL, NULL, '2024-08-04 14:16:55.984+07', '2024-08-04 14:16:55.984+07', 'f');
INSERT INTO "public"."user" VALUES ('7179898a-c353-4917-8dbd-62e10ea3249e', 'tmhung2024@gmail.com', NULL, 'Hùng', 'Trần Mạnh', NULL, NULL, NULL, '2024-08-04 14:16:57.431+07', '2024-08-04 14:16:57.431+07', 'f');
INSERT INTO "public"."user" VALUES ('588636d6-7193-4a2b-be5f-cafe112d3bf5', '20127569@student.hcmus.edu.vn', NULL, 'Tô Đình Phương', 'Nam', NULL, NULL, NULL, '2024-08-04 14:16:56.841+07', '2024-08-04 14:16:56.841+07', 'f');

INSERT INTO public.topic(id, name, description, thumbnail_url, created_by, updated_by, is_single_programming_language)
VALUES
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb92',
     'Learn C',
     'C is a fundamental programming language that''s ideal for beginners due to its simplicity and direct control over hardware. Learning C provides a strong foundation in computer science concepts and programming techniques.',
     'https://cdn.codechef.com/images/self-learning/icons/c.svg',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     true),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb93',
     'Learn C++',
     'C++ is a powerful, high-performance programming language that''s widely used in game development, system software, and scientific computing. It''s an extension of C with additional features like object-oriented programming.',
     'https://cdn.codechef.com/images/self-learning/icons/cpp.svg',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     true),
    ('9ba179ed-d26d-4828-a0f6-8836c2063992',
     'Learn Python',
     'Python is a versatile and user-friendly programming language known for its readability and efficiency. It''s widely used for web development, data analysis, artificial intelligence, and more.',
     'https://cdn.codechef.com/images/self-learning/icons/python.svg',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
        true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46',
     'Learn Java',
     'Java is a high-level, class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible. It is a general-purpose programming language intended to let application developers write once, run anywhere (WORA), meaning that compiled Java code can run on all platforms that support Java without the need for recompilation.',
     'https://cdn.codechef.com/images/self-learning/icons/java.svg',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     true),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47',
     'Learn JavaScript',
     'JavaScript is a programming language that conforms to the ECMAScript specification. JavaScript is high-level, often just-in-time compiled, and multi-paradigm. It has curly-bracket syntax, dynamic typing, prototype-based object-orientation, and first-class functions.',
     'https://logos-download.com/wp-content/uploads/2019/01/JavaScript_Logo.png',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     true),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49',
     'Learn GO',
     'Go, also known as Golang, is a programming language created by Google, renowned for its simplicity and efficiency. It''s designed for building scalable and high-performance web applications and network servers. Go''s strong support for concurrency and its straightforward syntax make it popular for cloud computing and microservices.',
     'https://cdn.codechef.com/images/self-learning/icons/go.svg',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     true),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb50',
     'Learn C#',
     'C# is a general-purpose, multi-paradigm programming language developed by Microsoft. C# is widely used for building desktop applications, web applications, and games. It is a simple, modern, and object-oriented language that is easy to learn.',
     'https://cdn.codechef.com/images/self-learning/icons/c-sharp.svg',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     true),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb51',
     'Learn Kotlin',
     'Kotlin, a modern programming language developed by JetBrains, is notably used for Android app development. It''s appreciated for its concise syntax and interoperability with Java, offering an improved development experience. Kotlin''s safety features and support for functional programming make it a favored choice for both mobile and server-side applications.',
     'https://cdn.codechef.com/images/self-learning/icons/kotlin.svg',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     true),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb52',
     'Learn Rust',
     'Rust is a high-performance programming language known for its focus on safety and concurrency, making it ideal for systems programming. It''s designed to prevent common programming errors, offering memory safety without a garbage collector. Rust''s growing popularity stems from its use in software infrastructure, embedded systems, and other performance-critical applications.',
     'https://cdn.codechef.com/images/self-learning/icons/rust.svg',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     true),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb53',
     'Learn PHP',
     'PHP is a popular general-purpose scripting language that is especially suited to web development. Fast, flexible and pragmatic, PHP powers everything from your blog to the most popular websites in the world.',
     'https://www.php.net//images/logos/new-php-logo.svg',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     true),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48',
     'Data structures and Algorithms',
     'Explore the fundamental building blocks of computer science through our comprehensive courses on Data Structures and Algorithms. Gain a solid understanding of both theory and practical application.',
     'https://cdn.codechef.com/images/self-learning/icons/stacks-and-queues.svg',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     '9ba179ed-d26d-4828-a0f6-8836c2063992',
     false);

INSERT INTO public.organization(id, description, name, created_at, updated_at, is_deleted)
VALUES
	 ('08b65a39-394f-4977-a5fa-3fe145b620f8','Moodle description','Moodle','2024-04-15 18:09:29.488151+07','2024-04-15 18:09:29.488151+07',false),
	 ('cb69c0bf-c454-4f15-be10-791f6749dac7','Moodle description','Moodle 2','2024-04-15 18:09:29.488151+07','2024-04-15 18:09:29.488151+07',false);

insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('e268cd70-cf0d-46ce-8f69-ade9d3a955a2', 'Assembly (NASM 2.14.02)', 45, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('ec1a6b7b-7817-4241-bc8f-febce8d2770e', 'Bash (5.0.0)', 46, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('d6f8e702-0ab0-40cb-82b9-a7963bd1cf80', 'Basic (FBC 1.07.1)', 47, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('6b2f42e1-81e6-493b-9cc1-2436febc320e', 'C (Clang 7.0.1)', 75, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('8794526e-f528-4ffc-b98d-320812e79c6f', 'C++ (Clang 7.0.1)', 76, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('50e74d89-5742-4c21-b9e5-96a4766283fa', 'C (GCC 7.4.0)', 48, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('e6a880d8-f0b2-4c2d-b97d-a74d5bec87b3', 'C++ (GCC 7.4.0)', 52, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('fb38c7b8-d50a-4980-95de-6a50a49ecc5d', 'C (GCC 8.3.0)', 49, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('aed9a00b-6a4b-4534-b85e-4981097d61de', 'C++ (GCC 8.3.0)', 53, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('5f11cfd5-4358-4e8e-b28a-9c53beb014ad', 'C (GCC 9.2.0)', 50, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('cba00cd8-8114-4bc4-84e6-499c27467978', 'C++ (GCC 9.2.0)', 54, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('875a7edb-f310-4a15-89f0-7ca9fc8ce028', 'Clojure (1.10.1)', 86, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('70614628-fc54-4620-b9b9-81b918cae732', 'C# (Mono 6.6.0.161)', 51, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('f6dd240a-b9c5-4ab6-b977-105136f75907', 'COBOL (GnuCOBOL 2.2)', 77, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('8c37b8a9-c6de-4db1-9638-b3633e44f5a5', 'Common Lisp (SBCL 2.0.0)', 55, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('833c5b34-acc6-4e4c-8e37-3c806538924f', 'D (DMD 2.089.1)', 56, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('aa81ebed-79f2-4a9e-b45f-5406b45889b3', 'Elixir (1.9.4)', 57, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('59c636af-82c5-45f3-b2c6-5c47067f5462', 'Erlang (OTP 22.2)', 58, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('bd5d2b87-da1d-4be9-be0b-3a9dcdbf8849', 'Executable', 44, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('5ab21579-2a25-4d63-83c6-032ba4f66518', 'F# (.NET Core SDK 3.1.202)', 87, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('9cc1ba4a-f325-4767-8d3d-e2808f82cd76', 'Fortran (GFortran 9.2.0)', 59, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('e68c5866-1435-4958-bafe-ad901ee75c8d', 'Go (1.13.5)', 60, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('3fa9d570-86d1-41c0-8044-981bfe4636b4', 'Groovy (3.0.3)', 88, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('0b50bbe2-582e-4582-a51b-2b2ac4212420', 'Haskell (GHC 8.8.1)', 61, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('c95d5c7d-cadf-42cc-afdc-968211ae3720', 'Java (OpenJDK 13.0.1)', 62, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('cc69d904-ba4e-44fb-a0b5-8170e30bac39', 'JavaScript (Node.js 12.14.0)', 63, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('a48c0969-16bb-4d8a-a611-751b48f72454', 'Kotlin (1.3.70)', 78, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('794665fa-0c05-4f48-9255-68bf5bb84685', 'Lua (5.3.5)', 64, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('54ba8969-a91a-4863-a634-87aef2c43148', 'Multi-file program', 89, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('5effd41c-97f4-4843-b6c0-ee1790cb8502', 'Objective-C (Clang 7.0.1)', 79, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('d00b24db-44a5-49c2-99ea-d7c832199c9d', 'OCaml (4.09.0)', 65, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('df127469-95be-4de7-aebe-7852608d4066', 'Octave (5.1.0)', 66, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('87426e80-200c-4fcc-8df4-388307419247', 'Pascal (FPC 3.0.4)', 67, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('0b79d359-f4b5-4ede-aa55-7a6eb8f0a4a8', 'Perl (5.28.1)', 85, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('9c84c818-6931-4309-b669-9631d6363118', 'PHP (7.4.1)', 68, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('4183d72e-a4fe-4c76-9e61-5fb42afad43b', 'Plain Text', 43, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('dae1111e-87a6-47c5-bae1-d62e8bd4dd10', 'Prolog (GNU Prolog 1.4.5)', 69, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('5413d5e9-5513-4e86-b585-b4f9149bc692', 'Python (2.7.17)', 70, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('d27a8b36-83fd-450d-a7c3-bf3eef7b1468', 'Python (3.8.1)', 71, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('eb1526bd-6dbc-4512-81ee-60b38af78669', 'R (4.0.0)', 80, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('39b33107-a91d-47e2-af0b-cfec36dd1f6f', 'Ruby (2.7.0)', 72, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('cac1604f-a42d-4c27-92c1-45da338220e2', 'Rust (1.40.0)', 73, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('acf4fa1d-35e8-41ee-b174-8f485a35b25f', 'Scala (2.13.2)', 81, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('959eb798-748b-4d49-a0d9-7580bf679e07', 'SQL (SQLite 3.27.2)', 82, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('5122684e-b577-40ef-a25a-7cc6b9f19088', 'Swift (5.2.3)', 83, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('574bebfa-640b-4836-9920-9686123cf324', 'TypeScript (3.7.4)', 74, 2, 204800);
insert into programming_language (id, name, compiler_api_id, time_limit, memory_limit) values ('c2812b53-059f-43cb-8e9b-966246a79567', 'Visual Basic.Net (vbnc 0.0.0.5943)', 84, 2, 204800);

INSERT INTO public.topic_programming_language(topic_id, programming_language_id)
VALUES
    -- C
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb92', '6b2f42e1-81e6-493b-9cc1-2436febc320e'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb92', '50e74d89-5742-4c21-b9e5-96a4766283fa'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb92', 'fb38c7b8-d50a-4980-95de-6a50a49ecc5d'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb92', '5f11cfd5-4358-4e8e-b28a-9c53beb014ad'),
    -- C++
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb93', '8794526e-f528-4ffc-b98d-320812e79c6f'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb93', 'e6a880d8-f0b2-4c2d-b97d-a74d5bec87b3'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb93', 'aed9a00b-6a4b-4534-b85e-4981097d61de'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb93', 'cba00cd8-8114-4bc4-84e6-499c27467978'),
    -- Python
    ('9ba179ed-d26d-4828-a0f6-8836c2063992', '5413d5e9-5513-4e86-b585-b4f9149bc692'),
    ('9ba179ed-d26d-4828-a0f6-8836c2063992', 'd27a8b36-83fd-450d-a7c3-bf3eef7b1468'),
    -- Java
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46', 'c95d5c7d-cadf-42cc-afdc-968211ae3720'),
    -- JavaScript
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47', 'cc69d904-ba4e-44fb-a0b5-8170e30bac39'),
    -- GO
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49', 'e68c5866-1435-4958-bafe-ad901ee75c8d'),
    -- C#
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb50', '70614628-fc54-4620-b9b9-81b918cae732'),
    -- Kotlin
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb51', 'a48c0969-16bb-4d8a-a611-751b48f72454'),
    -- Rust
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb52', 'cac1604f-a42d-4c27-92c1-45da338220e2'),
    -- PHP
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb53', '9c84c818-6931-4309-b669-9631d6363118'),
    -- Java, C, C++, Python, Javascript, GO, C#
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', 'c95d5c7d-cadf-42cc-afdc-968211ae3720'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '6b2f42e1-81e6-493b-9cc1-2436febc320e'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '8794526e-f528-4ffc-b98d-320812e79c6f'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '5413d5e9-5513-4e86-b585-b4f9149bc692'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', 'cc69d904-ba4e-44fb-a0b5-8170e30bac39'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', 'e68c5866-1435-4958-bafe-ad901ee75c8d'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '70614628-fc54-4620-b9b9-81b918cae732');


INSERT INTO public.question(id, org_id, difficulty, name, question_text, general_feedback, default_mark, qtype, created_by, updated_by, copy_state)
VALUES
    ('b6484e21-6937-489c-b031-b71767994233', NULL, 'EASY', 'Khái niệm và ứng dụng của con trỏ', 'Hãy giải thích khái niệm con trỏ trong ngôn ngữ lập trình C/C++. Tại sao con trỏ lại quan trọng trong lập trình?', 'Question Gold feedback', 1, 'ESSAY', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994132', NULL, 'MEDIUM', 'Question hihi', 'Question Wow Text', 'Question Amazing feedback', 1, 'SHORT_ANSWER', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994735', NULL, 'HARD', 'Question haha', 'Question Speaker Text', 'Good Job', 1, 'MULTIPLE_CHOICE', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994752', NULL, 'MEDIUM', 'K Divisible Elements Subarrays', 'Question Wow Text', 'Question Amazing feedback', 1, 'SHORT_ANSWER', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994753', NULL, 'HARD', 'Total Appeal of A String', 'Question Speaker Text', 'Good Job', 1, 'MULTIPLE_CHOICE', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994751', NULL, 'EASY', 'Minimum Consecutive Cards to Pick Up', 'Question Wire Text', 'Question Gold feedback', 1, 'ESSAY', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992', 'CREATED'),

    --    Questions with qtype CODE
    --1
    ('b6484e21-6937-489c-b031-b71767994221', NULL, 'EASY', 'Sum of two integer', E'<div class="elfjS" data-track-load="description_content"><p>Given two integer number A and B.</p><p>Calculate the sum of A and B.</p><p>&nbsp;</p><p><strong class="example">Example 1:</strong></p><pre>\nInput:\n1\n1\nOutput: 2\n</pre><p><strong class="example">Example 2:</strong></p><pre>\nInput:\n13\n10\nOutput: 23 \n</pre><p>&nbsp;</p></div>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    --2
    ('b6484e21-6937-489c-b031-b71767994736', NULL, 'EASY', 'Sum of an array', E'<p>Write a function that takes an array of numbers as input and returns the sum of all the elements in the array.</p><blockquote>Example:</blockquote><pre class=\"ql-syntax\" spellcheck=\"false\"> Input:\r\n 3\r\n 1 2 3\r\n Output: 6    \r\n</pre><p><br></p>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    --3
    ('b6484e21-6937-489c-b031-b71767994737', NULL, 'EASY', 'FizzBuzz', E'<p>Write a program that prints the numbers from 1 to n. But for multiples of three, print \"Fizz\" instead of the number, and for the multiples of five, print \"Buzz\". For numbers that are multiples of both three and five, print \"FizzBuzz\".</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input: 15\r\nOutput:\r\n1 2 Fizz 4 Buzz Fizz 7 8 Fizz Buzz 11 Fizz 13 14 FizzBuzz\r\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    --4
    ('b6484e21-6937-489c-b031-b71767994738', NULL, 'MEDIUM', 'Robber', E'<p>You are given a list of non-negative integers representing the amount of money of each house in a row of houses. Each house has a certain amount of money stashed, but you cannot rob two adjacent houses at the same time because the police will be alerted. Your task is to determine the maximum amount of money you can rob tonight without alerting the police.</p><p>Example 1:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input: \r\n4\r\n1 2 3 1\r\nOutput: 4\r\nExplanation: Rob house 1 (money = 1) and then rob house 3 (money = 3). Total amount = 1 + 3 = 4.\r\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    --5
    ('b6484e21-6937-489c-b031-b71767994739', NULL, 'MEDIUM', 'Three sum closest', E'<p>You are given an array <code>nums</code> of integers. Write a function to find three numbers in <code>nums</code> such that the sum is closest to a given target <code>target</code>. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\r\n4\r\n-1 2 1 -4\r\n1\r\nOutput: 2\r\nExplanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\r\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    --6
    ('b6484e21-6937-489c-b031-b71767994740', NULL, 'EASY', 'List divisor', E'<p>List all divisor of number <code>n</code></p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n10\nOutput:\n1 2 5 10\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    --7
    ('b6484e21-6937-489c-b031-b71767994741', NULL, 'EASY', 'List odd divisor', E'<p>List all odd divisor of number <code>n</code></p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input: 9\nOutput:\n1, 3, 9\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994742', NULL, 'EASY', 'Entirely odd digit', E'<p>Check if the positive integer <code>n</code> consists entirely of odd digits.</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n11\nOutput:\ntrue\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994743', NULL, 'MEDIUM', 'Palindrome integer', E'<p>Check if the positive integer n is a palindrome or not</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n11\nOutput:\ntrue\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994744', NULL, 'MEDIUM', 'Finding maximum sum k less than n', E'<p>Given <code>n</code> is a positive integer. Find the largest positive integer <code>k</code> such that S(k)&lt;n, where S(k) is defined as follows: S(k)=1+2+3+…+k.</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n15\nOutput:\n4\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994745', NULL, 'MEDIUM', 'Check 2^k', E'<p>Check if a 4-byte integer is of the form 2^k</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n4\nOutput:\ntrue\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994746', NULL, 'MEDIUM', 'Check 3^k', E'<p>Check if a 4-byte integer is of the form 3^k</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n4\nOutput:\nfalse\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994747', NULL, 'MEDIUM', 'Calculate S(n, x) with Summation and Exponential Series', E'<p>Calculate&nbsp;<span class=\"ql-formula\" data-value=\"S(n, x) = x + \\frac{x^2}{1 + 2} + \\frac{x^3}{1 + 2 + 3} + \\cdots + \\frac{x^n}{1 + 2 + 3 + \\cdots + n}\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>x</mi><mo>+</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mrow><mn>1</mn><mo>+</mo><mn>2</mn></mrow></mfrac><mo>+</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn></mrow></mfrac><mo>+</mo><mo>⋯</mo><mo>+</mo><mfrac><msup><mi>x</mi><mi>n</mi></msup><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>n</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">S(n, x) = x + \\frac{x^2}{1 + 2} + \\frac{x^3}{1 + 2 + 3} + \\cdots + \\frac{x^n}{1 + 2 + 3 + \\cdots + n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.0576em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.6667em; vertical-align: -0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1.4213em; vertical-align: -0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.0179em;\"><span class=\"\" style=\"top: -2.655em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">2</span></span></span></span><span class=\"\" style=\"top: -3.23em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width: 0.04em;\"></span></span><span class=\"\" style=\"top: -3.394em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8913em;\"><span class=\"\" style=\"top: -2.931em; margin-right: 0.0714em;\"><span class=\"pstrut\" style=\"height: 2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.4033em;\"><span class=\"\"></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1.4213em; vertical-align: -0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.0179em;\"><span class=\"\" style=\"top: -2.655em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">3</span></span></span></span><span class=\"\" style=\"top: -3.23em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width: 0.04em;\"></span></span><span class=\"\" style=\"top: -3.394em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8913em;\"><span class=\"\" style=\"top: -2.931em; margin-right: 0.0714em;\"><span class=\"pstrut\" style=\"height: 2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.4033em;\"><span class=\"\"></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.6667em; vertical-align: -0.0833em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1.3143em; vertical-align: -0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.911em;\"><span class=\"\" style=\"top: -2.655em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">3</span><span class=\"mbin mtight\">+</span><span class=\"minner mtight\">⋯</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"\" style=\"top: -3.23em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width: 0.04em;\"></span></span><span class=\"\" style=\"top: -3.394em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.7385em;\"><span class=\"\" style=\"top: -2.931em; margin-right: 0.0714em;\"><span class=\"pstrut\" style=\"height: 2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.4033em;\"><span class=\"\"></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>﻿</span> , rounded to three decimal places.</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n2 1.5\nOutput:\n2.250\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994748', NULL, 'EASY', 'Check square number', 'Given an integer number n, check if it is a square number', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994749', NULL, 'EASY', 'Find the nax number from the set of float number a, b, c', 'A line with three number separated by a space character', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994750', NULL, 'EASY', 'Same sign number', 'Check if Two Real Numbers Have the Same Sign', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994754', NULL, 'MEDIUM', 'Solve ax+b=0', E'<p>Write a program to solve the linear equation <span class=\"ql-formula\" data-value=\"ax + b = 0\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">ax + b = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.6667em; vertical-align: -0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span>﻿</span> </p><p>Example 1:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input: \n0 0\nOutput:\nInfinite solutions\n</pre><p>Example 2:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n0 5\nOutput:\nNo solution\n</pre><p>Example 3:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n3 0\nOutput:\n0\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994755', NULL, 'EASY', 'Determine the Quarter of a Given Month', E'<p>Input a month of a year. Determine which quarter the month belongs to</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n1\nOutput:\nQuarter 1\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994756', NULL, 'EASY', 'Calculate sum of cubes', E'<p>Calculate <span class=\"ql-formula\" data-value=\"S(n) = 1^3 + 2^3 + \\ldots + n^3\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mn>1</mn><mn>3</mn></msup><mo>+</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">S(n) = 1^3 + 2^3 + \\ldots + n^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.0576em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.8974em; vertical-align: -0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8141em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.8974em; vertical-align: -0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8141em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.6667em; vertical-align: -0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8141em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span></span>﻿</span> </p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n2\nOutput:\n9\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994757', NULL, 'EASY', 'English alphabet printing', 'Print from A to the nth character in the English alphabet', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994758', NULL, 'MEDIUM', 'Check prime number', 'Check if n is a prime number or not', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994759', NULL, 'EASY', 'Replace negative number', E'<p>Write a program to input three real numbers. Replace all negative numbers with their absolute values</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n1 -1.1 -2\nOutput:\n1 1.1 2\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994760', NULL, 'HARD', 'Check triangle from side length', E'<p>Write a program to input the lengths of the three sides of a triangle and determine the type of triangle</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n1 1 1\nOutput:\nEquilateral triangle\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994761', NULL, 'EASY', 'Determine number of days in a month', E'<p>Write a program to input a month and a year. Determine the number of days in that month</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n1 2020\nOutput:\n31\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994762', NULL, 'MEDIUM', 'Previous and next day', E'<p>Write a program to input a date, find the previous day and the next day</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n2024 6 26\nOutput:\n2024-06-25, 2024-06-27\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994763', NULL, 'HARD', 'Determine the Day of the Week from a Given Date', E'<p>Write a program to input a day, month, and year. Determine the day of the week for that date</p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n2024-03-01\nOutput:\nFriday\n</pre>', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED');
INSERT INTO public.question(question_bank_category_id,
    id, org_id, difficulty, name, question_text, general_feedback, default_mark, qtype, created_by, updated_by, copy_state)
VALUES
    ('d8fed7b0-bd98-436e-9c4d-36b8fe9f372e',
    'b6484e21-6937-489c-b031-b71767994764', '08b65a39-394f-4977-a5fa-3fe145b620f8', 'EASY', 'List divisor', E'<p>List all divisor of number <code>n</code></p><p>Example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">Input:\n10\nOutput:\n1 2 5 10\n</pre>', 'Good Job', 10, 'CODE', '64412e27-169e-44ea-a101-74ebf8cb82d9', '64412e27-169e-44ea-a101-74ebf8cb82d9', 'CREATED');
INSERT INTO public.question(id, org_id, difficulty, name, question_text, general_feedback, default_mark, qtype, created_by, updated_by, copy_state)
VALUES
    ('b6484e21-6937-489c-b031-b71767994765', NULL, 'EASY', 'Count words', '', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994766', NULL, 'EASY', 'Reverse string', '', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994767', NULL, 'MEDIUM', 'Palindrome string', '', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994768', NULL, 'MEDIUM', 'Delete consecutive duplicate characters', '', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994769', NULL, 'EASY', 'Count the number of times a character appears', '', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994770', NULL, 'MEDIUM', 'Find the first non-repeating character', '', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994771', NULL, 'EASY', 'Count the vowels in the string', '', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994772', NULL, 'MEDIUM', 'Find the longest word in the string', '', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994773', NULL, 'HARD', 'Check string contains prime number', '', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
    ('b6484e21-6937-489c-b031-b71767994774', NULL, 'HARD', 'Find the substring with the greatest length that does not contain repeated characters', '', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED');
--    ('b6484e21-6937-489c-b031-b71767994775', NULL, 'HARD', 'Question 75', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994776', NULL, 'HARD', 'Question 76', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994777', NULL, 'HARD', 'Question 77', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994778', NULL, 'HARD', 'Question 78', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994779', NULL, 'HARD', 'Question 79', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994780', NULL, 'HARD', 'Question 80', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994781', NULL, 'HARD', 'Question 81', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994782', NULL, 'HARD', 'Question 82', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994783', NULL, 'HARD', 'Question 83', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994784', NULL, 'HARD', 'Question 84', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994785', NULL, 'HARD', 'Question 85', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994786', NULL, 'HARD', 'Question 86', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994787', NULL, 'HARD', 'Question 87', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994788', NULL, 'HARD', 'Question 88', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994789', NULL, 'HARD', 'Question 89', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994790', NULL, 'HARD', 'Question 90', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994791', NULL, 'HARD', 'Question 91', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994792', NULL, 'HARD', 'Question 92', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994793', NULL, 'HARD', 'Question 93', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994794', NULL, 'HARD', 'Question 94', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994795', NULL, 'HARD', 'Question 95', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994796', NULL, 'HARD', 'Question 96', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994797', NULL, 'HARD', 'Question 97', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994798', NULL, 'HARD', 'Question 98', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994799', NULL, 'HARD', 'Question 99', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994800', NULL, 'HARD', 'Question 100', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994801', NULL, 'HARD', 'Question 101', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994802', NULL, 'HARD', 'Question 102', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994803', NULL, 'HARD', 'Question 103', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994804', NULL, 'HARD', 'Question 104', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994805', NULL, 'HARD', 'Question 105', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994806', NULL, 'HARD', 'Question 106', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994807', NULL, 'HARD', 'Question 107', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994808', NULL, 'HARD', 'Question 108', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994809', NULL, 'HARD', 'Question 109', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994810', NULL, 'HARD', 'Question 110', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994811', NULL, 'HARD', 'Question 111', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994812', NULL, 'HARD', 'Question 112', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994813', NULL, 'HARD', 'Question 113', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994814', NULL, 'HARD', 'Question 114', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994815', NULL, 'HARD', 'Question 115', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994816', NULL, 'HARD', 'Question 116', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994817', NULL, 'HARD', 'Question 117', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994818', NULL, 'HARD', 'Question 118', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994819', NULL, 'HARD', 'Question 119', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994820', NULL, 'HARD', 'Question 120', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994821', NULL, 'HARD', 'Question 121', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994822', NULL, 'HARD', 'Question 122', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994823', NULL, 'HARD', 'Question 123', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994824', NULL, 'HARD', 'Question 124', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994825', NULL, 'HARD', 'Question 125', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994826', NULL, 'HARD', 'Question 126', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994827', NULL, 'HARD', 'Question 127', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994828', NULL, 'HARD', 'Question 128', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994829', NULL, 'HARD', 'Question 129', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994830', NULL, 'HARD', 'Question 130', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994831', NULL, 'HARD', 'Question 131', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994832', NULL, 'HARD', 'Question 132', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994833', NULL, 'HARD', 'Question 133', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994834', NULL, 'HARD', 'Question 134', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994835', NULL, 'HARD', 'Question 135', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994836', NULL, 'HARD', 'Question 136', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994837', NULL, 'HARD', 'Question 137', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994838', NULL, 'HARD', 'Question 138', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994839', NULL, 'HARD', 'Question 139', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994840', NULL, 'HARD', 'Question 140', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994841', NULL, 'HARD', 'Question 141', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994842', NULL, 'HARD', 'Question 142', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994843', NULL, 'HARD', 'Question 143', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994844', NULL, 'HARD', 'Question 144', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994845', NULL, 'HARD', 'Question 145', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994846', NULL, 'HARD', 'Question 146', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED'),
--    ('b6484e21-6937-489c-b031-b71767994847', NULL, 'HARD', 'Question 147', 'Question Mouse Text', 'Good Job', 10, 'CODE', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c', 'CREATED');

INSERT INTO public.answer_of_question(id, question_id, feedback, answer, fraction)
VALUES
--    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'b6484e21-6937-489c-b031-b71767994221', 'Correct', 'print(Hello World)', 1), câu hỏi code thì làm j có ở đây
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64', 'b6484e21-6937-489c-b031-b71767994233', 'Wrong', 'Essat 1', 1),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb86', 'b6484e21-6937-489c-b031-b71767994233', 'Wow', 'p p p)', 1),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', 'b6484e21-6937-489c-b031-b71767994233', 'Good', 'essay t12', 1),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69', 'b6484e21-6937-489c-b031-b71767994132', 'Bad', 'short answer t12', 1),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfe63', 'b6484e21-6937-489c-b031-b71767994735', 'Hihi', 'multi 1', 1),
    ('d215b5f8-0249-4dc5-89a3-51fd148cff62', 'b6484e21-6937-489c-b031-b71767994735', 'huhu', 'multi 2', 1),
    ('d215b5f8-0249-4dc5-89a3-51fd148cff20', 'b6484e21-6937-489c-b031-b71767994735', 'haha', 'multi 3', 1);

INSERT INTO public.qtype_code_question(id, question_id, dsl_template)
VALUES
    ('3c5b1113-d267-4d21-bc6e-8cbd4cb57b69', 'b6484e21-6937-489c-b031-b71767994221', 'template'),
    ('f6d7b882-9399-4bc3-baad-6350285bfa78', 'b6484e21-6937-489c-b031-b71767994736', 'template'),
    ('48caf2c9-8c81-49a7-b656-c3b024a798c3', 'b6484e21-6937-489c-b031-b71767994737', 'template'),
    ('2589a5b7-94c9-4a76-86d9-576718ca63c3', 'b6484e21-6937-489c-b031-b71767994738', 'template'),
    ('2dbe940c-8d25-4a88-a283-d79785c1ea2a', 'b6484e21-6937-489c-b031-b71767994739', 'template'),
    ('07bf0b32-09ce-47d0-b4e1-c0ba35799b43', 'b6484e21-6937-489c-b031-b71767994740', 'template'),
    ('2f3b15cc-219f-47eb-8d17-702e89afb86a', 'b6484e21-6937-489c-b031-b71767994741', 'template'),
    ('fe0a658d-7ce9-4524-b388-84539a34a521', 'b6484e21-6937-489c-b031-b71767994742', 'template'),
    ('1374d22a-b27b-4d3d-9ad4-b613e1f1e253', 'b6484e21-6937-489c-b031-b71767994743', 'template'),
    ('06d71d03-f5ba-4a89-9083-596ef649ade9', 'b6484e21-6937-489c-b031-b71767994744', 'template'),
    ('b1ae32db-17e6-4fdb-991b-160e95721562', 'b6484e21-6937-489c-b031-b71767994745', 'template'),
    ('058cdf70-3cc5-4a99-9edd-edfa0325c207', 'b6484e21-6937-489c-b031-b71767994746', 'template'),
    ('51981528-01ff-491a-bc7b-a24aedfb0363', 'b6484e21-6937-489c-b031-b71767994747', 'template'),
    ('6181a38b-2b06-4a60-ad5f-750780d79e3e', 'b6484e21-6937-489c-b031-b71767994748', 'template'),
    ('22427527-053c-4602-a519-9e52cb5f2366', 'b6484e21-6937-489c-b031-b71767994749', 'template'),
    ('cd39d755-41f1-452f-a0df-09c64c7a67cf', 'b6484e21-6937-489c-b031-b71767994750', 'template'),
    ('d49496bb-87a5-483f-9597-564ad6ee0305', 'b6484e21-6937-489c-b031-b71767994754', 'template'),
    ('4be91526-365b-4e50-99ae-75ba2a87ba08', 'b6484e21-6937-489c-b031-b71767994755', 'template'),
    ('4be91526-365b-4e50-99ae-75ba2a87ba09', 'b6484e21-6937-489c-b031-b71767994756', 'template'),
    ('fa373da0-9d7d-4ced-bf8b-c06a0063cd4e', 'b6484e21-6937-489c-b031-b71767994757', 'template'),
    ('1f24ac22-737a-4074-9290-ec41bb15e2b0', 'b6484e21-6937-489c-b031-b71767994758', 'template'),
    ('7841c704-b8ae-4664-bb2c-d4a63fb80fd5', 'b6484e21-6937-489c-b031-b71767994759', 'template'),
    ('30a01889-fbc9-4eaf-9f4e-fa0341ea6ced', 'b6484e21-6937-489c-b031-b71767994760', 'template'),
    ('25315a21-41a1-464d-b9dc-d4ec978cd2ff', 'b6484e21-6937-489c-b031-b71767994761', 'template'),
    ('e557b35c-715e-4d21-8aaf-8c86ad5690b1', 'b6484e21-6937-489c-b031-b71767994762', 'template'),
    ('219cafcd-d4fe-4fb0-81fd-be2da867f9d4', 'b6484e21-6937-489c-b031-b71767994763', 'template'),
    ('9922c45b-fe25-4539-8c4b-4d247473b127', 'b6484e21-6937-489c-b031-b71767994764', 'template'),
    ('bdc0ef30-46e2-407d-84a8-91462d1de97a', 'b6484e21-6937-489c-b031-b71767994765', 'template'),
    ('32459c31-e4b5-47a8-9625-76889c861914', 'b6484e21-6937-489c-b031-b71767994766', 'template'),
    ('7c2bb851-a179-455a-a0f4-7d1de202ceb5', 'b6484e21-6937-489c-b031-b71767994767', 'template'),
    ('2314f334-86be-44da-ab5a-f12edd3c6a94', 'b6484e21-6937-489c-b031-b71767994768', 'template'),
    ('ce18bd5a-5fc3-4ffd-b72a-7b23378d9c16', 'b6484e21-6937-489c-b031-b71767994769', 'template'),
    ('39628971-3bbc-4e10-ad17-266bd1910aa3', 'b6484e21-6937-489c-b031-b71767994770', 'template'),
    ('95d876bb-2b16-4b90-b305-58d24b46ffc0', 'b6484e21-6937-489c-b031-b71767994771', 'template'),
    ('518e1f5c-f46b-4862-811c-c6c19f35b433', 'b6484e21-6937-489c-b031-b71767994772', 'template'),
    ('927ad7dd-b9a1-4909-b5ea-c3dbd34b6023', 'b6484e21-6937-489c-b031-b71767994773', 'template'),
    ('e228e9cd-205a-4af2-bf17-a69fef609f82', 'b6484e21-6937-489c-b031-b71767994774', 'template');


INSERT INTO public.qtype_essay_question(id, question_id, response_format, response_required, response_field_lines, min_word_limit, max_word_limit, attachments, attachments_required, grader_info, grader_info_format, response_template, max_bytes, file_types_list)
VALUES
    ('27549d54-4a3a-4be4-9875-eab03f88ba6e', 'b6484e21-6937-489c-b031-b71767994233', 'editor', 1, 10, 0, 0, 2, 0, 'Truong Gia Tien', 'author name', 'pdf please', 10, 'archive,document');

INSERT INTO public.qtype_shortanswer_question(id, question_id, case_sensitive)
VALUES
    ('27549d54-4a3a-4be4-9875-eab03f88ba7f', 'b6484e21-6937-489c-b031-b71767994132', false);

INSERT INTO public.qtype_multichoice_question(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES
    ('27549d54-4a3a-4be4-9875-eab03f88ba8f', 'b6484e21-6937-489c-b031-b71767994735', true, true, 'Correct', 'Partially correct', 'Incorrect', 'none', 3, 'Show instruction 2');

INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'd215b5f8-0249-4dc5-89a3-51fd148cfb46', 'Intermediate Java', 'INTERMEDIATE', 'This course is designed for intermediate Java programmers who want to enhance their skills and knowledge. It covers advanced topics such as object-oriented programming, data structures, algorithms, and more.', 0.0, '2024-04-15 11:09:29.488151+00', '2024-04-15 11:09:29.488151+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.603388+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.603388+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', 'd215b5f8-0249-4dc5-89a3-51fd148cfb46', 'Advanced Java', 'ADVANCED', 'This course is designed for experienced Java programmers who want to master advanced Java concepts and techniques. It covers topics such as decorators, generators, metaclasses, and more.', 0.0, '2024-04-15 11:09:29.488151+00', '2024-04-15 11:09:29.488151+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.603388+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.603388+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'd215b5f8-0249-4dc5-89a3-51fd148cfb46', 'Learn Java', 'BASIC', '<h3>Overview</h3><p>Welcome to the <strong>Learn Java</strong> course, designed specifically for beginners who are eager to dive into the world of Java programming. This course provides a thorough introduction to Java, covering the fundamental concepts and essential skills needed to become proficient in this popular programming language. Whether you''re aiming to build a strong foundation in programming or enhance your existing skills, this course is tailored to guide you through the basics of Java and beyond.</p><p><br></p><h3>What You Will Learn</h3><ol><li><strong>Java Syntax and Print Statements: </strong>Discover the core syntax of Java and understand how to use print statements effectively. Learn to display output and debug your code using various print methods.</li><li><strong>Variables and Data Types: </strong>Explore Java''s variable types and data structures. Gain insights into how different data types work and how to use them in your programs.</li><li><strong>Operators: </strong>Delve into the fundamental operators in Java, including arithmetic operations. Understand how to perform calculations and manipulate data using operators.</li><li><strong>Strings: </strong>Learn about string handling in Java, including the creation, manipulation, and comparison of string values. Master the use of strings to handle textual data.</li><li><strong>User Inputs: </strong>Discover how to capture and process user inputs. Learn about different methods for reading input, including <code>BufferedReader</code> and <code>Scanner</code>.</li><li><strong>Conditional Statements: </strong>Master control flow with conditional statements. Understand how to make decisions in your code using <code>if-else</code> and <code>switch</code> statements.</li><li><strong>Loops: </strong>Gain proficiency in using loops to execute repetitive tasks. Learn about different types of loops and how to use them effectively in your programs.</li><li><strong>Arrays: </strong>Explore the concept of arrays, including how to declare, initialize, and manipulate arrays. Learn about one-dimensional and multidimensional arrays to handle collections of data.</li><li><strong>Methods: </strong>Understand the structure and purpose of methods in Java. Learn to define, call, and use methods to organize and reuse code efficiently.</li></ol><h3>Features</h3><ul><li><strong>Hands-on Lessons:</strong> Each topic is accompanied by practical examples and exercises to reinforce your understanding.</li><li><strong>Comprehensive Resources:</strong> Access a variety of resources including detailed lessons, videos, and real-world examples to enhance your learning experience.</li><li><strong>Interactive Learning:</strong> Engage with interactive exercises and projects to apply what you''ve learned and build your programming skills.</li></ul><p><br></p><h3>Who Should Take This Course</h3><p>This course is ideal for:</p><ul><li>Beginners who want to start learning Java programming from scratch.</li><li>Individuals seeking to build a strong foundation in Java for further study or career advancement.</li><li>Anyone interested in understanding the basics of Java and applying them in real-world scenarios.</li></ul><p><br></p><h3>Conclusion</h3><p>By the end of this course, you will have a solid understanding of Java fundamentals and be equipped to tackle more advanced programming challenges. You''ll be prepared to continue your learning journey with more complex Java concepts and applications.</p><p>Join us in this exciting course and start your journey towards mastering Java programming today!</p>', 0.0, '2024-07-20 09:17:28.876+00', '2027-09-20 19:04:08.876+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.603388+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:28.966831+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '9ba179ed-d26d-4828-a0f6-8836c2063992', 'Learn Python Programming', 'BASIC', '<p>Welcome to the <strong>Learn Python Programming</strong> certificate course! This beginner-friendly course is designed to provide you with a solid foundation in Python programming. Whether you''re new to coding or looking to refresh your skills, this course covers all the essential concepts and techniques you need to start writing efficient and effective Python code.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Output / Print in Python</strong></p><ul><li><strong>Introducing Output / Printing</strong>: Learn how to display output in Python using the <code>print</code> function.</li><li><strong>Printing on Multiple Lines</strong>: Discover techniques for printing text across multiple lines.</li><li><strong>Print Text and Numbers Using Single Print</strong>: Combine text and numbers in a single print statement.</li><li><strong>Câu Lệnh Print Trong Python | In ra màn hình trong Python</strong>: Understand print statements in Python, explained in Vietnamese.</li><li><strong>Sum of Two Integers</strong>: Implement a program to calculate and print the sum of two integers.</li></ul><p><strong>Variables and Datatypes</strong></p><ul><li><strong>Introduction to Variables and Datatypes</strong>: Understand the basics of variables and data types in Python.</li><li><strong>Variables in Python</strong>: Learn how to declare and use variables effectively.</li><li><strong>Check Square Number</strong>: Write a program to check if a number is a perfect square.</li></ul><p><strong>Operators</strong></p><ul><li><strong>Arithmetic Operators</strong>: Perform basic arithmetic operations like addition, subtraction, multiplication, and division.</li><li><strong>Relational Operators</strong>: Compare values using relational operators such as <code>==</code>, <code>!=</code>, <code>&gt;</code>, <code>&lt;</code>, <code>&gt;=</code>, and <code>&lt;=</code>.</li><li><strong>Logical Operators</strong>: Combine conditions using logical operators <code>and</code>, <code>or</code>, and <code>not</code>.</li><li><strong>Precedence and Associativity</strong>: Understand the order of operations and associativity rules in Python expressions.</li><li><strong>Arithmetic Operators in Python</strong>: Apply arithmetic operators in various programming scenarios.</li><li><strong>List Odd Divisor</strong>: Write a program to list all odd divisors of a given number.</li></ul><p><strong>Strings</strong></p><ul><li><strong>Introduction to Strings</strong>: Learn the basics of string manipulation and operations.</li><li><strong>Strings in Python</strong>: Explore advanced string functions and methods.</li></ul><p><strong>User Inputs</strong></p><ul><li><strong>Taking User Input</strong>: Learn how to read input from users in Python.</li><li><strong>Python User Input ⌨️</strong>: Practical examples of handling user inputs.</li><li><strong>Sum of Two Integers</strong>: Implement a program to read two integers from the user and calculate their sum.</li></ul><p><strong>Conditional Statements</strong></p><ul><li><strong>Intro to If / Else</strong>: Understand the basics of conditional statements in Python.</li><li><strong>Python If Statements | Python Tutorial #10</strong>: Learn how to use <code>if</code>, <code>else</code>, and <code>elif</code> statements to control program flow.</li><li><strong>Check Prime Number</strong>: Write a program to check if a number is prime.</li></ul><p><strong>Arrays</strong></p><ul><li><strong>Introduction to Arrays</strong>: Learn the fundamentals of arrays and their usage.</li><li><strong>ARRAYS in Python - Start Here!</strong>: Understand how to work with arrays in Python.</li><li><strong>Check 2^k</strong>: Write a program to check if a number is a power of 2.</li></ul><p><strong>Loops</strong></p><ul><li><strong>While Loops</strong>: Learn how to use <code>while</code> loops for repetitive tasks.</li><li><strong>For Loops</strong>: Explore the use of <code>for</code> loops to iterate over sequences.</li><li><strong>Break / Continue</strong>: Understand how to control loop execution using <code>break</code> and <code>continue</code> statements.</li><li><strong>Nested Loops</strong>: Learn how to use loops within loops for complex iteration tasks.</li><li><strong>Loops in Python | While &amp; For Loops | Python Full Course</strong>: Comprehensive coverage of looping constructs in Python.</li></ul><p><strong>Functions in Python</strong></p><ul><li><strong>Learn About Functions</strong>: Understand the basics of defining and calling functions.</li><li><strong>Python Functions | Python Tutorial for Absolute Beginners</strong>: Dive deeper into function concepts and best practices.</li><li><strong>Check Prime Number</strong>: Implement a function to check if a number is prime.</li></ul><p><strong>Tuples and Dictionary</strong></p><ul><li><strong>Learn About Tuples</strong>: Understand the characteristics and uses of tuples in Python.</li><li><strong>Dictionary</strong>: Learn how to use dictionaries for key-value pair data storage.</li><li><strong>Python Lists, Tuples, and Dictionaries</strong>: Comprehensive overview of lists, tuples, and dictionaries in Python.</li></ul><p><br></p><p>By the end of this course, you will have a solid understanding of Python programming, enabling you to write clean, efficient, and effective code. This course is structured to build your skills step-by-step, ensuring a thorough understanding of each concept before moving on to the next. Join us and start your journey towards becoming a proficient Python programmer!</p>', 4.0, '2024-07-30 17:44:20.54+00', '2027-10-01 03:31:00.54+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.603388+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.607817+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '9ba179ed-d26d-4828-a0f6-8836c2063992', 'Advanced Python', 'ADVANCED', '<p>Welcome to the <strong>Advanced Python</strong> certificate course! This comprehensive program is designed for experienced programmers who want to deepen their understanding of Python''s advanced features and capabilities. Whether you''re looking to enhance your current skills or prepare for more complex programming challenges, this course will equip you with the knowledge and tools necessary to excel in Python development.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Functions and Modules</strong></p><ul><li><strong>Modules</strong>: Learn how to organize your code into reusable modules, enhancing maintainability and scalability.</li><li><strong>Namespaces and Scope</strong>: Understand the principles of namespaces and scope, and how they affect variable visibility and lifetime.</li><li><strong>Generators</strong>: Explore the power of generators for creating iterators and managing large datasets efficiently with minimal memory usage.</li></ul><p><strong>Advanced Python Features</strong></p><ul><li><strong>Iterators</strong>: Delve into the creation and use of iterators, a fundamental aspect of Python programming.</li><li><strong>Regular Expressions</strong>: Master the use of regular expressions for pattern matching and text processing tasks.</li><li><strong>Decorators</strong>: Learn how to use decorators to modify the behavior of functions and methods, enabling cleaner and more readable code.</li></ul><p><strong>Introduction to OOPs</strong></p><ul><li><strong>What is OOPs / Features of OOPs</strong>: Get introduced to the core concepts and features of Object-Oriented Programming (OOP).</li><li><strong>Constructors, Static Members</strong>: Understand the role of constructors and static members in class design and object management.</li></ul><p><strong>Inheritance, Packages and Interfaces</strong></p><ul><li><strong>Inheritance</strong>: Explore the concepts of inheritance to create hierarchical class structures and promote code reuse.</li><li><strong>Objects as Parameters &amp; Aggregation</strong>: Learn how to pass objects as parameters and utilize aggregation for complex class relationships.</li><li><strong>Polymorphism - Overloading</strong>: Implement polymorphism through method overloading to enhance code flexibility.</li><li><strong>Method Overriding</strong>: Override methods in derived classes to customize or extend base class functionality.</li><li><strong>Interfaces &amp; Abstract Classes</strong>: Understand the use of interfaces and abstract classes to define contracts and enforce consistent behavior across different classes.</li><li><strong>Returning Objects - Static, Nested, and Inner Classes</strong>: Explore advanced class structures and their applications.</li><li><strong>Upcasting &amp; Dynamic Method Dispatch</strong>: Utilize upcasting and dynamic method dispatch to achieve polymorphic behavior and efficient code execution.</li><li><strong>Inheritance in Python | Types of Inheritance in Python</strong>: Discover the different types of inheritance supported in Python and their use cases.</li></ul><p><strong>Exception Handling and Multithreading</strong></p><ul><li><strong>Exception Handling Basics</strong>: Learn how to handle exceptions to build robust and error-resistant applications.</li><li><strong>Multiple Catch Clauses</strong>: Use multiple catch clauses to handle different types of exceptions effectively.</li><li><strong>Nested Try Statements</strong>: Implement nested try statements for more granular error handling.</li><li><strong>Multithreaded Programming</strong>: Explore multithreading techniques to improve application performance and responsiveness.</li><li><strong>Yield Method and Interrupting a Thread</strong>: Understand the <code>yield</code> method and how to manage thread interruptions.</li><li><strong>Priorities / Synchronization</strong>: Manage thread priorities and synchronization to ensure efficient and coordinated execution.</li></ul><p><strong>Generics and File Handling</strong></p><ul><li><strong>Reading and Writing Files</strong>: Master the techniques of file handling for data persistence and retrieval.</li><li><strong>Generic Programming: Classes, Methods</strong>: Implement generic programming to create flexible and reusable classes and methods that work with different data types.</li></ul><p><br></p><p>By the end of this course, you will have a profound understanding of advanced Python programming concepts and techniques, empowering you to tackle complex projects and develop sophisticated applications with confidence. Join us on this exciting journey to master the depths of Python programming!</p>', 4.0, '2024-07-31 09:21:35.716+00', '2027-10-01 19:08:15.716+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.603388+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.777129+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '9ba179ed-d26d-4828-a0f6-8836c2063992', 'Beginner DSA In Python', 'BASIC', '<p>Welcome to the <strong>Beginner DSA in Python</strong> certificate course! This comprehensive course is designed to introduce you to the fundamentals of Data Structures and Algorithms (DSA) using Python. Tailored for beginners, this course will equip you with essential programming skills and a solid understanding of DSA concepts, enabling you to solve complex problems efficiently.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Recap - Logic Building</strong></p><p>Before diving into more advanced topics, we''ll refresh our understanding of basic logic building. This section will reinforce your foundational skills, ensuring you are well-prepared for the challenges ahead.</p><p><br></p><p><strong>Array Operations</strong></p><ul><li><strong>Array Operations Part-1</strong>: Learn the basics of array construction and manipulation, focusing on how to store and access multiple items efficiently.</li><li><strong>Important Array Functions</strong>: Discover essential functions for manipulating arrays, such as sorting, reversing, and slicing.</li><li><strong>Array Operations Part-2</strong>: Delve deeper into advanced array techniques and explore more complex operations.</li><li><strong>Arrays In Python | Python Array Operations | Python Tutorial For Beginners | Edureka</strong>: Gain a thorough understanding of arrays through detailed tutorials and practical examples.</li><li><strong>Palindrome Integer</strong>: Implement a program to check if a given integer is a palindrome, applying your array manipulation skills.</li></ul><p><strong>Basic String Operations</strong></p><ul><li><strong>String Operations Part-1</strong>: Understand the basics of string manipulation, including how to access and modify string data.</li><li><strong>String Operations Part-2</strong>: Explore advanced string operations, such as slicing, concatenation, and formatting.</li><li><strong>String Methods in Python are Easy 🧵</strong>: Learn various string methods provided by Python to handle and process string data effortlessly.</li></ul><p><strong>Basic Math Continued</strong></p><ul><li><strong>Basic Math Continued Part-1</strong>: Tackle more complex mathematical problems, focusing on finding divisors of integers and other practical applications.</li><li><strong>Basic Math Continued Part-2</strong>: Further your understanding of mathematical operations with problems involving greatest common divisors (GCD) and least common multiples (LCM).</li><li><strong>Check 2^k</strong>: Write a program to check if a given number is a power of 2, applying mathematical concepts in programming.</li><li><strong>Python - Basic Math Tutorial</strong>: Strengthen your mathematical foundations with a comprehensive tutorial covering essential basic math concepts.</li></ul><p><br></p><p>By the end of this course, you will have a solid grasp of essential data structures and algorithms, along with foundational programming skills in Python. This course is designed to build your knowledge incrementally, ensuring a thorough understanding of each topic before moving on to the next. Join us on this exciting journey and start mastering Python programming today!</p>', 4.0, '2024-07-31 06:55:21.546+00', '2027-10-01 16:42:01.546+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.603388+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 06:55:21.606216+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('452371a5-2f58-4bfa-947b-af3140671057', 'd215b5f8-0249-4dc5-89a3-51fd148cfb93', 'Learn C++', 'BASIC', '<h1>Course Description: Learn C++ Crash Course</h1><p>Embark on a thrilling journey into the world of C++ programming with our <strong>"Learn C++ Crash Course"</strong>! This dynamic and hands-on course is designed to take you from a novice to a confident C++ programmer in no time. Perfect for beginners and those looking to solidify their programming skills, this course covers everything you need to know about C++.</p><h2>What You''ll Learn:</h2><h3>Chapter 1: Hello World</h3><p>Begin your adventure with the classic "Hello World" program. Learn about the structure of a C++ program, basic syntax, and how to set up your development environment.</p><h3>Chapter 2: Variables</h3><p>Discover the building blocks of C++ with variables. Understand different data types, variable declaration, initialization, and how to manipulate data.</p><h3>Chapter 3: Conditionals</h3><p>Dive into decision-making with conditionals. Master if statements, else if, else, and switch cases to control the flow of your programs.</p><h3>Chapter 4: Loops</h3><p>Unleash the power of loops to perform repetitive tasks efficiently. Explore for, while, and do-while loops, and understand their practical applications.</p><h3>Chapter 5: Vectors &amp; Arrays</h3><p>Get hands-on with data structures. Learn about arrays and vectors, their differences, and how to use them to store and manipulate collections of data.</p><h3>Chapter 6: Classes &amp; Objects</h3><p>Step into the realm of object-oriented programming. Create and work with classes and objects, understand constructors and destructors, and implement encapsulation, inheritance, and polymorphism.</p><h2>Why Enroll?</h2><ul><li><strong>Interactive Learning:</strong> Engage with practical examples, quizzes, and coding exercises to reinforce your understanding.</li><li><strong>Expert Guidance:</strong> Learn from industry professionals with years of experience in C++ programming.</li><li><strong>Comprehensive Curriculum:</strong> Cover all essential topics needed to build a solid foundation in C++.</li><li><strong>Flexible Schedule:</strong> Learn at your own pace with lifetime access to course materials.</li></ul><p>Join us in the <strong>"Learn C++ Crash Course"</strong> and take the first step towards becoming a proficient C++ programmer. Let''s code, create, and innovate together!</p><p>This paste expires in &lt;1 hour. Public IP access. Share whatever you see with others in seconds with Context.Terms of ServiceReport this</p>', NULL, '2024-07-20 09:46:43.455+00', '2027-09-20 19:33:23.455+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-10 13:43:04.895+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.577774+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('cbddf1c0-d816-44fe-bce3-16ed430306ef', 'd215b5f8-0249-4dc5-89a3-51fd148cfb92', 'Problem solving in C', 'BASIC', '<p>Welcome to the <strong>Problem Solving in C</strong> certificate course! This comprehensive course is designed for beginners eager to master the fundamentals of C programming through engaging and practical problem-solving exercises. Whether you''re new to programming or looking to solidify your foundational skills, this course provides the essential tools and knowledge to get you started on your coding journey.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Getting Started</strong></p><ul><li><strong>Input and Output</strong>: Learn the basics of reading input from the user and displaying output to the console.</li><li><strong>What are Test Cases?</strong>: Understand the importance of test cases in verifying the correctness of your programs.</li><li><strong>Custom Input</strong>: Explore techniques for handling user input in various formats.</li><li><strong>Check Square Number</strong>: Implement a program to determine if a given number is a perfect square.</li></ul><p><strong>Basic Math</strong></p><ul><li><strong>Addition and Multiplication</strong>: Master the fundamental arithmetic operations and their applications in programming.</li><li><strong>Subtraction and Division</strong>: Dive into more arithmetic operations essential for solving a variety of problems.</li><li><strong>Useful Math Functions</strong>: Discover essential math functions provided by the C standard library.</li><li><strong>Sum of Two Integers</strong>: Practice writing simple programs to compute the sum of two integers.</li><li><strong>Arithmetic Operators in C</strong>: Understand and use the basic arithmetic operators available in C.</li></ul><p><strong>Conditional Statements</strong></p><ul><li><strong>Conditional Statements in C</strong>: Learn to control the flow of your programs using if, else if, and else statements.</li><li><strong>Conditionals (if-else, Nested if and else if)</strong>: Explore advanced conditional structures for more complex decision making.</li><li><strong>Determine the Day of the Week from a Given Date</strong>: Write a program to calculate the day of the week for any given date.</li></ul><p><strong>Logic Building</strong></p><ul><li><strong>Logic Building Part-1</strong>: Start with basic logic-building exercises to develop your problem-solving skills.</li><li><strong>Logic Building Part-2</strong>: Advance to more complex logic problems and learn to break down larger problems into manageable parts.</li><li><strong>Logic Building Part-3</strong>: Master advanced logic-building techniques to tackle challenging problems with confidence.</li><li><strong>Logic Building with C</strong>: Apply your logic-building skills specifically in the context of C programming.</li><li><strong>Finding Maximum Sum K Less Than N</strong>: Solve problems that require finding maximum sums under given constraints.</li></ul><p><br></p><p>By the end of this course, you will have a solid foundation in C programming and the problem-solving skills necessary to tackle a wide range of programming challenges. This course is structured to build your confidence and competence step by step, ensuring a thorough understanding of each concept before moving on to the next. Join us and start your journey towards becoming a proficient C programmer!</p>', NULL, '2024-07-30 17:17:59.312+00', '2027-10-01 03:04:39.312+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 13:53:49.015976+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:17:59.395195+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('2d2ebd9e-2829-495e-87f7-4f050a8f3628', 'd215b5f8-0249-4dc5-89a3-51fd148cfb92', 'Learn C Programming', 'BASIC', '<h3>Course Description</h3><p>Unlock the world of programming with our <strong>"Learn C"</strong> certificate course! This course is tailored for beginners eager to dive into the fundamentals of C programming. Whether you''re looking to start a career in tech or simply want to expand your knowledge, this course offers a solid foundation in one of the most powerful and widely-used programming languages.</p><p><br></p><h3>What You''ll Learn</h3><ol><li><strong>Introduction, Outputting &amp; Math Operators: </strong>Start your journey by mastering the basics of C. Learn to write your first "Hello World" program, understand how to output data, and perform essential arithmetic operations. This foundational knowledge will set the stage for all your future coding endeavors.</li><li><strong>Pointers and Memory: </strong>Dive deep into the concept of pointers and memory management. Discover how to use pointers to optimize your code and manage memory effectively, providing you with a deeper understanding of how programs interact with computer memory.</li><li><strong>Variables and Data Types: </strong>Explore C’s variable types and data structures. Learn to declare and use various data types to handle data efficiently and accurately, making your programs more versatile and robust.</li><li><strong>Conditionals: </strong>Learn how to use conditionals to make your programs smarter. With <code>if</code> and <code>switch</code> statements, you’ll be able to control the flow of your programs based on different conditions, making your code more dynamic and responsive.</li><li><strong>Loops: </strong>Master the use of loops to execute repetitive tasks efficiently. Discover how <code>while</code> and <code>for</code> loops can help you automate repetitive operations, making your code more efficient and concise.</li><li><strong>Arrays: </strong>Understand arrays, a fundamental data structure in C. Learn to declare, initialize, and manipulate arrays to handle collections of data effectively, streamlining your programming tasks.</li><li><strong>Strings: </strong>Delve into string manipulation, an essential skill for handling text data. Learn how to work with strings to perform various text operations, enhancing the functionality of your programs.</li><li><strong>Functions and Structures: </strong>Elevate your programming skills by exploring functions and structures. Learn how to define and use functions to organize your code and create reusable components. Understand structures to group related data, making your code more modular and maintainable.</li></ol><p><br></p><h3>Why Enroll?</h3><ul><li><strong>Practical Learning</strong>: Engage in hands-on exercises that solidify your understanding and skills.</li><li><strong>Expert Guidance</strong>: Benefit from a course designed to provide a clear and comprehensive introduction to C programming.</li><li><strong>Career-Ready Skills</strong>: Gain essential programming skills that are highly valued in the tech industry, laying the groundwork for further study and career advancement.</li></ul><p><br></p><p>Join the <strong>"Learn C"</strong> course today and embark on your journey to becoming a proficient C programmer!</p>', NULL, '2024-07-30 17:14:54.831+00', '2027-10-01 03:01:34.831+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 07:57:26.179961+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.938074+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d2a18a10-a142-426b-bd8d-97ede9db5941', 'd215b5f8-0249-4dc5-89a3-51fd148cfb92', 'Beginner DSA in C', 'BASIC', '<p>Welcome to the <strong>Beginner DSA in C</strong> certificate course! This course is tailored for beginners who are eager to dive into the world of Data Structures and Algorithms (DSA) using the C programming language. This course will guide you through the fundamental concepts and practical implementations, ensuring you build a strong foundation in DSA that is crucial for efficient problem-solving and software development.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Recap</strong></p><ul><li><strong>Recap - Logic Building</strong>: Refresh your understanding of basic logic-building techniques essential for solving programming problems. Revisit key concepts and ensure a solid grounding before diving into data structures.</li></ul><p><strong>Array Operations</strong></p><ul><li><strong>Array Operations Part-1</strong>: Learn the basics of array construction and manipulation. Understand how to initialize, access, and modify array elements.</li><li><strong>Array Operations Part-2</strong>: Dive deeper into advanced array operations, including traversal, insertion, deletion, and more.</li><li><strong>English Alphabet Printing</strong>: Implement a program to print the English alphabet using arrays.</li><li><strong>Array Operations - Traversal, Insertion | Explanation with C Program | DSA Course</strong>: Gain a thorough understanding of array traversal and insertion with detailed explanations and C program examples.</li></ul><p><strong>Basic String Operations</strong></p><ul><li><strong>String Operations Part-1</strong>: Introduction to string handling in C. Learn how to initialize, access, and manipulate strings.</li><li><strong>String Operations Part-2</strong>: Explore advanced string operations, including concatenation, comparison, and substring extraction.</li><li><strong>String Literals and String Initializations</strong>: Understand different ways to initialize strings and work with string literals in C.</li></ul><p><strong>Debug Algorithmic Problems</strong></p><ul><li><strong>Flow of Control and Key Variables</strong>: Learn to control the flow of your programs and identify key variables critical to the logic of your algorithms.</li><li><strong>Check-points</strong>: Understand the importance of checkpoints in debugging and ensuring your algorithm performs as expected.</li></ul><p><br></p><p>By the end of this course, you will have a strong grasp of basic data structures and algorithms in C, enabling you to tackle more complex programming challenges with confidence. This course is designed to provide a step-by-step approach, building your skills incrementally and ensuring a comprehensive understanding of each topic. Join us and start your journey towards mastering Data Structures and Algorithms in C!</p>', NULL, '2024-07-30 17:16:20.841+00', '2027-10-01 03:03:00.841+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 13:54:16.458221+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:16:20.907598+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('265190be-817b-4b8e-a8e4-7b7e4980915f', 'd215b5f8-0249-4dc5-89a3-51fd148cfb50', 'Logic Building in C#', 'BASIC', '<p>Welcome to the <strong>Logic Building in C#</strong> certificate course! This comprehensive program is designed to introduce you to the fundamental principles of logic building and problem solving in C#. Whether you''re a beginner or looking to sharpen your skills, this course will equip you with the essential tools to approach and solve programming problems effectively.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Getting Started on Problem Solving</strong></p><ul><li><strong>Input and Output</strong>: Learn the basics of handling input and output operations in C#, an essential foundation for any interactive program.</li><li><strong>What are Test Cases?</strong>: Understand the importance of test cases in validating your solutions and ensuring correctness.</li><li><strong>What are Custom Inputs?</strong>: Explore how to handle custom inputs to make your programs more flexible and user-friendly.</li><li><strong>Sum of Two Integers</strong>: Implement a basic program to practice input, output, and arithmetic operations by summing two integers.</li></ul><p><strong>Basic Math</strong></p><ul><li><strong>Addition and Multiplication</strong>: Master the basic arithmetic operations of addition and multiplication, and their applications in C#.</li><li><strong>Subtraction and Division</strong>: Learn how to perform subtraction and division, essential for a wide range of calculations.</li><li><strong>Useful Math Functions</strong>: Explore useful math functions provided by C# to perform complex calculations with ease.</li><li><strong>C# Math Class 📏</strong>: Dive deeper into the <code>Math</code> class in C#, which offers a variety of functions for advanced mathematical operations.</li><li><strong>Calculate Sum of Cubes</strong>: Apply your knowledge of arithmetic operations to calculate the sum of cubes, reinforcing your understanding of loops and accumulation.</li></ul><p><strong>Conditional Statements</strong></p><ul><li><strong>Conditional Statements Part-1</strong>: Get introduced to <code>if</code>, <code>else if</code>, and <code>else</code> statements to control the flow of your program based on conditions.</li><li><strong>Conditional Statements Part-2</strong>: Explore advanced uses of conditional statements, including logical operators and the <code>switch</code> statement.</li><li><strong>Conditional Statements in C#</strong>: Gain a comprehensive understanding of how to implement and use conditional statements effectively in C#.</li><li><strong>Check Square Number</strong>: Develop a program to check if a given number is a perfect square, applying your knowledge of conditional statements.</li></ul><p><strong>Logic Building</strong></p><ul><li><strong>Logic Building Part-1</strong>: Learn the fundamental steps to approach and solve programming problems, from understanding the problem statement to writing and testing your code.</li><li><strong>Logic Building Part-2</strong>: Build on the foundation by tackling more complex problems and refining your problem-solving approach, including breaking down problems and using recursion.</li><li><strong>Logic Building Part-3</strong>: Apply advanced logic building techniques to solve real-world problems, focusing on optimizing solutions and using dynamic programming.</li></ul><p><br></p><p>By the end of this course, you will have a solid foundation in logic building and problem solving in C#. This structured approach will prepare you to tackle a wide range of programming challenges efficiently and effectively, setting you on the path to becoming a proficient C# developer. Join us on this exciting journey and start building your problem-solving skills today!</p>', NULL, '2024-07-31 11:26:34.259+00', '2027-10-01 21:13:14.259+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:09:11.729531+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:26:34.322833+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', 'd215b5f8-0249-4dc5-89a3-51fd148cfb50', 'Learn C# Programming', 'BASIC', '<p>Welcome to the <strong>Learn C# Programming</strong> certificate course! This comprehensive program is designed to introduce you to the fundamentals of C# programming. Whether you''re new to coding or looking to enhance your skills, this course provides a solid foundation to help you become proficient in C#. By the end of this course, you''ll be equipped with the knowledge and skills to develop dynamic and interactive applications.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Outputting &amp; Math Operators</strong></p><ul><li><strong>Introducing Printing - Console.WriteLine()</strong>: Learn how to use the <code>Console.WriteLine()</code> method to output text to the console, a fundamental step in displaying information in your programs.</li><li><strong>Printing on Multiple Lines</strong>: Discover techniques for printing text across multiple lines using multiple <code>Console.WriteLine()</code> statements and newline characters.</li><li><strong>Multiple Prints Using Single Console.WriteLine()</strong>: Explore how to print multiple variables or values using a single <code>Console.WriteLine()</code> statement for more concise and readable code.</li><li><strong>Math Operators and Overall Code Structure</strong>: Understand how to use basic math operators in C# and grasp the overall structure of a simple C# program.</li><li><strong>C# Output 💬</strong>: Master various output techniques to enhance the user interface of your applications.</li><li><strong>Sum of Two Integers</strong>: Implement a basic calculator to perform addition of two integers, reinforcing your understanding of input and output in C#.</li></ul><p><strong>Variables and Data Types</strong></p><ul><li><strong>Introduction to Variables and Data Types</strong>: Learn about declaring, initializing, and using variables, and understand the different data types available in C#.</li><li><strong>C# Variables ✖️</strong>: Explore the practical use of variables in various scenarios.</li><li><strong>Calculate Sum of Cubes</strong>: Apply your knowledge of variables and math operators to calculate the sum of cubes of numbers.</li></ul><p><strong>Strings</strong></p><ul><li><strong>Introduction to Strings</strong>: Understand the fundamentals of strings in C#, including how to declare, initialize, and manipulate them.</li><li><strong>Strings in C#</strong>: Dive deeper into string operations, including concatenation, substring extraction, and string interpolation.</li></ul><p><strong>User Inputs</strong></p><ul><li><strong>Introducing Taking Inputs - Console.ReadLine()</strong>: Learn how to use the <code>Console.ReadLine()</code> method to take input from the user, making your programs interactive.</li><li><strong>C# User Input ⌨️</strong>: Practice handling different types of user input and converting them to various data types.</li><li><strong>Replace Negative Number</strong>: Create a program that processes user input to replace negative numbers with their absolute values.</li></ul><p><strong>Conditional Statements</strong></p><ul><li><strong>Introduction to "if", "else"</strong>: Understand the basic conditional statements in C# to execute code based on specific conditions.</li><li><strong>Review Problems</strong>: Reinforce your understanding of conditional statements through practical problem-solving.</li><li><strong>Different Ways to Compare Elements Inside If</strong>: Learn about the various comparison operators available in C# and how to use them within <code>if</code> statements.</li><li><strong>Combining Conditions - And, Or</strong>: Discover how to combine multiple conditions using logical operators to create more complex conditional statements.</li><li><strong>Switch</strong>: Simplify complex conditional logic using the <code>switch</code> statement in C#.</li><li><strong>Conditional Statements In C#</strong>: Gain a comprehensive understanding of conditional statements and their applications.</li><li><strong>Check Square Number</strong>: Develop a program to check if a given number is a perfect square, applying your knowledge of conditional statements.</li></ul><p><strong>Arrays</strong></p><ul><li><strong>Introduction to Arrays</strong>: Learn the fundamentals of arrays, including how to declare, initialize, and manipulate them.</li><li><strong>C# Arrays 🚗</strong>: Explore practical applications of arrays in various scenarios.</li><li><strong>Sum of an Array</strong>: Implement a program to calculate the sum of elements in an array, reinforcing your understanding of array manipulation.</li></ul><p><strong>Loops</strong></p><ul><li><strong>While Loops</strong>: Understand how to use <code>while</code> loops to execute a block of code repeatedly as long as a specified condition is true.</li><li><strong>For Loops</strong>: Learn how to use <code>for</code> loops to execute a block of code a specific number of times.</li><li><strong>Break, Continue, For Each</strong>: Discover how to use the <code>break</code> and <code>continue</code> statements to control loop execution and explore the <code>foreach</code> loop for iterating over collections.</li><li><strong>C# Loops Tutorial | Loops In C# | Iteration Statements In C#</strong>: Gain a comprehensive understanding of loops and iteration statements in C#.</li><li><strong>Calculate Sum of Cubes</strong>: Apply your knowledge of loops to calculate the sum of cubes of numbers, reinforcing your understanding of iteration and accumulation.</li></ul><p><br></p><p>By mastering these lessons, you''ll be able to write efficient, dynamic, and interactive C# programs. This course is structured to build your skills step-by-step, ensuring a thorough understanding of each concept before moving on to the next. Join us and start your journey to becoming a proficient C# programmer today!</p>', NULL, '2024-07-31 11:07:14.148+00', '2027-10-01 20:53:54.148+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:55:31.759687+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.213117+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('13f83797-dd2a-4083-aebf-43f45993bbe9', 'd215b5f8-0249-4dc5-89a3-51fd148cfb50', 'Beginner DSA in C#', 'BASIC', '<p>Welcome to the <strong>Beginner DSA in C#</strong> certificate course! This comprehensive program is designed to introduce you to the fundamental concepts of Data Structures and Algorithms (DSA) using C#. Whether you''re new to programming or looking to strengthen your skills, this course provides a solid foundation to help you become proficient in solving complex problems efficiently.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Recap - Logic Building</strong></p><ul><li><strong>Recap - Logic Building</strong>: Revisit the essential principles of logic building that form the backbone of problem-solving in programming. Strengthen your understanding of algorithmic thinking and learn how to break down problems into manageable steps.</li></ul><p><strong>Array Operations</strong></p><ul><li><strong>Array Operations Part-1</strong>: Get started with arrays, learning how to declare, initialize, and access elements in an array. Understand the basic syntax and operations required to manipulate arrays in C#.</li><li><strong>Array Operations Part-2</strong>: Build on your knowledge of arrays by exploring advanced operations such as sorting, finding maximum and minimum values, reversing arrays, and searching for elements.</li><li><strong>Perform Operations on Array in C#</strong>: Apply your skills to perform various operations on arrays, including multi-dimensional arrays and more complex data manipulations.</li></ul><p><strong>Basic String Operations</strong></p><ul><li><strong>String Operations Part-1</strong>: Understand the fundamentals of strings, including how to declare, initialize, and access string elements. Learn about the basic syntax and operations needed to work with strings in C#.</li><li><strong>String Operations Part-2</strong>: Dive deeper into string manipulation techniques such as concatenation, interpolation, and using string methods for advanced operations.</li><li><strong>Strings and String Manipulation</strong>: Explore comprehensive string manipulation techniques, including splitting, joining, trimming, and replacing strings to handle complex text processing tasks.</li></ul><p><strong>Basic Math Continued</strong></p><ul><li><strong>Basic Math Continued Part-1</strong>: Enhance your mathematical skills by exploring modular arithmetic, exponentiation, square roots, and absolute values. Learn how to implement these functions and apply them to solve real-world problems.</li><li><strong>Basic Math Continued Part-2</strong>: Extend your mathematical capabilities by delving into trigonometric and logarithmic functions, as well as rounding numbers. Understand how to use these advanced mathematical operations in your programs.</li><li><strong>Determine the Quarter of a Given Month</strong>: Apply your knowledge of basic math to develop a program that determines the quarter of a given month, reinforcing your understanding of logical and mathematical operations.</li></ul><p><br></p><p>By completing this course, you will gain a robust understanding of data structures and algorithms in C#, along with the ability to manipulate arrays, strings, and perform complex mathematical operations. This course will equip you with the skills necessary to tackle a wide range of programming challenges, setting you on the path to becoming a proficient C# developer. Join us and start building your expertise in C# today!</p>', NULL, '2024-07-31 18:12:12.845+00', '2027-10-02 03:58:52.846+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:08:59.315815+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:12:12.89316+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('1eb1b48d-a62e-4262-8bab-1abda96d5588', 'd215b5f8-0249-4dc5-89a3-51fd148cfb47', 'JavaScript Fundamentals', 'BASIC', '<p>Welcome to <strong>JavaScript Fundamentals</strong>, a comprehensive certificate course designed to introduce you to the core concepts and practical applications of JavaScript. Whether you''re a complete beginner or looking to strengthen your foundational knowledge, this course will equip you with the skills necessary to build dynamic and interactive web applications. Let''s dive into the details of what you''ll learn in this course!</p><p><br></p><h3>Course Breakdown</h3><p><strong>Introduction to JavaScript</strong></p><ul><li><strong>What is JavaScript?</strong> Discover the history, purpose, and capabilities of JavaScript, and understand why it''s a vital tool in modern web development.</li></ul><p><strong>Variables and Data Types</strong></p><ul><li><strong>Declaring Variables with </strong><code><strong>var</strong></code><strong>, </strong><code><strong>let</strong></code><strong>, and </strong><code><strong>const</strong></code> Learn how to declare variables using different keywords and understand the scope and lifetime of variables.</li><li><strong>Understanding Data Types: Number, String, Boolean, Null, Undefined, Symbol</strong> Explore the various data types in JavaScript and how to work with them effectively.</li><li><strong>Type Conversion and Coercion</strong> Master the techniques of converting between different data types and the nuances of type coercion in JavaScript.</li><li><strong>JavaScript for Beginners #3 - Variables and Data Types</strong> Gain practical insights into variables and data types through engaging tutorials and examples.</li></ul><p><strong>Operators and Expressions</strong></p><ul><li><strong>Arithmetic Operators</strong> Understand the fundamental arithmetic operations you can perform on numbers.</li><li><strong>Comparison Operators</strong> Learn how to compare values and control the flow of your programs.</li><li><strong>Logical Operators</strong> Explore how to combine multiple conditions using logical operators.</li><li><strong>Assignment Operators</strong> Get to grips with assigning values to variables using various assignment operators.</li><li><strong>Conditional (ternary) Operator</strong> Discover a concise way to handle conditional logic with the ternary operator.</li><li><strong>Expressions and Operators || JavaScript tutorial for Beginners</strong> Dive deep into expressions and operators with comprehensive tutorials.</li></ul><p><strong>Control Structures</strong></p><ul><li><strong>If...else Statements</strong> Master the basics of conditional statements to control the execution flow.</li><li><strong>Switch Statements</strong> Learn how to handle multiple conditions efficiently using switch statements.</li><li><strong>Loops: for, while, do...while</strong> Understand how to execute code repeatedly with different types of loops.</li><li><strong>Breaking and Continuing Loops</strong> Discover how to fine-tune your loops using break and continue statements.</li><li><strong>Control Statements | Theory</strong> Explore the theoretical foundations of control statements to enhance your understanding.</li></ul><p><strong>Functions</strong></p><ul><li><strong>Function Declarations and Expressions</strong> Learn the difference between function declarations and expressions and how to use them.</li><li><strong>Arrow Functions</strong> Get familiar with the concise syntax of arrow functions and their benefits.</li><li><strong>Parameters and Arguments</strong> Understand how to pass information to functions and handle multiple arguments.</li><li><strong>Return Statements</strong> Learn how to return values from functions to make your code more modular and reusable.</li><li><strong>Scope and Closures</strong> Explore the concepts of scope and closures to manage variable accessibility and lifetime effectively.</li></ul><p><strong>Objects and Arrays</strong></p><ul><li><strong>Creating and Manipulating Objects</strong> Discover how to create and manipulate objects to structure your data effectively.</li><li><strong>Array Methods and Properties</strong> Learn the essential methods and properties to work with arrays efficiently.</li><li><strong>Iterating Over Arrays</strong> Understand different techniques to iterate over arrays and process data.</li><li><strong>Nested Objects and Arrays</strong> Explore how to work with complex data structures involving nested objects and arrays.</li></ul><p><strong>DOM Manipulation</strong></p><ul><li><strong>Selecting DOM Elements</strong> Learn how to select and interact with DOM elements to build dynamic web pages.</li><li><strong>Modifying Element Content and Attributes</strong> Understand how to change the content and attributes of DOM elements.</li><li><strong>Creating and Removing Elements</strong> Discover how to create new elements and remove existing ones dynamically.</li><li><strong>Event Handling and Listeners</strong> Master the art of handling events and adding interactivity to your web applications.</li></ul><p><br></p><p>By the end of this course, you will have a solid understanding of JavaScript fundamentals and be able to create interactive web applications with confidence. Join us on this journey to master JavaScript and unlock your potential in web development!</p>', NULL, '2024-08-01 07:57:16.552+00', '2027-10-02 17:43:56.552+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:20:35.689458+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.614004+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('db16e13e-9c52-47ac-8bd0-45f0dc0bab38', 'd215b5f8-0249-4dc5-89a3-51fd148cfb47', 'Advanced JavaScript', 'ADVANCED', '<p>Dive deep into the world of JavaScript with our <strong>Advanced JavaScript</strong> course. Designed for experienced developers, this course explores sophisticated JavaScript concepts, modern design patterns, functional programming, advanced DOM manipulation, and the latest frameworks and libraries. Enhance your skills to build complex, efficient, and maintainable web applications.</p><p><br></p><h3>Course Breakdown</h3><p><strong>JavaScript Design Patterns</strong></p><ul><li><strong>Understanding Design Patterns</strong> Explore the importance of design patterns in software development, providing reusable solutions to common problems.</li><li><strong>Module Pattern</strong> Learn how to create encapsulated code with the module pattern, enhancing reusability and maintainability.</li><li><strong>Revealing Module Pattern</strong> Discover the revealing module pattern to create clear and consistent public APIs for your modules.</li><li><strong>Singleton Pattern</strong> Understand how to implement the singleton pattern to ensure a class has only one instance and provides a global point of access to it.</li><li><strong>Factory Pattern</strong> Master the factory pattern to create objects without specifying the exact class of object that will be created.</li></ul><p><strong>Functional Programming in JavaScript</strong></p><ul><li><strong>Understanding Functional Programming Principles</strong> Get an overview of functional programming principles and their benefits in JavaScript.</li><li><strong>Pure Functions</strong> Learn how to write pure functions that produce predictable and consistent results without side effects.</li><li><strong>Immutability</strong> Understand the concept of immutability and how to create immutable data structures.</li><li><strong>Map, Reduce, and Filter</strong> Master the use of <code>map</code>, <code>reduce</code>, and <code>filter</code> functions to process and transform arrays.</li><li><strong>Functional Libraries (e.g., Lodash)</strong> Explore functional libraries like Lodash to enhance your functional programming capabilities.</li></ul><p><strong>Advanced DOM Manipulation</strong></p><ul><li><strong>Advanced Techniques for Manipulating the DOM</strong> Discover advanced methods for manipulating the DOM to create dynamic and interactive web applications.</li><li><strong>Virtual DOM</strong> Understand the concept of the Virtual DOM and how it improves performance by minimizing direct manipulation of the real DOM.</li><li><strong>Performance Optimization</strong> Learn techniques to optimize DOM manipulation for better performance and responsiveness.</li></ul><p><strong>JavaScript Frameworks and Libraries</strong></p><ul><li><strong>Introduction to Frameworks (React, Angular, Vue)</strong> Get an overview of the most popular JavaScript frameworks and libraries: React, Angular, and Vue.</li><li><strong>Setting Up a Development Environment</strong> Learn how to set up a development environment for building JavaScript applications with modern frameworks.</li><li><strong>Building a Simple Application with React</strong> Build a simple React application to understand the core concepts of React, including components, props, and state.</li><li><strong>State Management with Redux</strong> Understand how to manage state in a React application using Redux.</li></ul><p><strong>Web Components</strong></p><ul><li><strong>Understanding Web Components</strong> Learn about Web Components and their importance in modern web development.</li><li><strong>Custom Elements</strong> Discover how to define and use custom elements in your web applications.</li><li><strong>Shadow DOM</strong> Understand how to use the Shadow DOM to encapsulate styles and structure within a web component.</li><li><strong>HTML Templates</strong> Learn how to use HTML templates to define reusable HTML snippets that can be used within your web components.</li></ul><p><br></p><p>By mastering these advanced JavaScript topics, you will be equipped to tackle complex programming challenges and build sophisticated, efficient, and maintainable web applications. Join us in the <strong>Advanced JavaScript</strong> course and elevate your JavaScript skills to the next level!</p>', NULL, '2024-08-01 09:18:46.92+00', '2027-10-02 19:05:26.92+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:21:25.320376+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:46.976541+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'd215b5f8-0249-4dc5-89a3-51fd148cfb48', 'One-dimensional Arrays', 'BASIC', '<p>Unlock the power of one-dimensional arrays with our comprehensive <strong>One-dimensional Arrays</strong> course. Designed for beginners, this course delves into the fundamentals of arrays, a crucial data structure in programming. You will learn how to efficiently store, access, and manipulate data using arrays, and tackle a variety of practical problems that reinforce these concepts.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Fundamentals Of One-dimensional Arrays</strong></p><ul><li><strong>Introduction to One-dimensional Arrays</strong> Begin your journey by understanding the core concepts of one-dimensional arrays. Learn about their structure, how to declare and initialize them, and perform basic operations such as accessing, updating, and traversing elements.</li><li><strong>List Odd Divisors</strong> Apply your knowledge of arrays to solve problems like listing all odd divisors of a number. Develop algorithms that iterate through arrays to find specific elements based on given conditions.</li><li><strong>Sum of an Array</strong> Master the technique of calculating the sum of elements in an array. Understand how to use loops to traverse arrays and accumulate values efficiently.</li><li><strong>Robber</strong> Tackle more complex problems such as the "Robber" problem, where you need to optimize your solution to maximize the sum of non-adjacent elements in an array. This exercise will enhance your problem-solving skills and understanding of dynamic programming.</li><li><strong>Three Sum Closest</strong> Challenge yourself with advanced problems like finding three numbers in an array whose sum is closest to a given target. Learn to implement sorting and two-pointer techniques to solve this efficiently.</li></ul><h3>What You Will Learn</h3><ol><li><strong>Array Fundamentals:</strong></li></ol><ul><li class="ql-indent-1">Declaration and initialization of arrays in different programming languages.</li><li class="ql-indent-1">Accessing and updating elements using indices.</li><li class="ql-indent-1">Traversing arrays using loops.</li></ul><ol><li><strong>Algorithm Development:</strong></li></ol><ul><li class="ql-indent-1">Creating algorithms to solve specific problems using arrays.</li><li class="ql-indent-1">Understanding the efficiency of different approaches.</li><li class="ql-indent-1">Implementing solutions in various programming languages.</li></ul><ol><li><strong>Practical Problem Solving:</strong></li></ol><ul><li class="ql-indent-1">Applying theoretical knowledge to real-world problems.</li><li class="ql-indent-1">Enhancing coding skills through hands-on exercises.</li><li class="ql-indent-1">Developing optimized solutions for complex scenarios.</li></ul><h3>Why Enroll?</h3><ul><li><strong>Comprehensive Learning:</strong> Gain a solid foundation in one-dimensional arrays, an essential data structure in programming.</li><li><strong>Practical Skills:</strong> Solve real-world problems and improve your algorithmic thinking.</li><li><strong>Flexible Learning:</strong> Suitable for beginners with a focus on practical, hands-on coding exercises.</li><li><strong>Foundational Course:</strong> Build a strong base for further studies in data structures and algorithms.</li></ul><p><br></p><p>By the end of this course, you will have a thorough understanding of one-dimensional arrays and be able to solve a wide range of problems using this versatile data structure. Join us in the <strong>One-dimensional Arrays</strong> course and take the first step towards mastering data structures and algorithms!</p>', 0.0, '2024-08-01 09:42:43.415+00', '2027-10-02 19:29:23.415+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.603388+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:42:43.462435+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('534b285b-83ee-41a0-93ea-9fb79fb2ffd4', 'd215b5f8-0249-4dc5-89a3-51fd148cfb52', 'Learn Rust', 'BASIC', '<p>Welcome to the <strong>Learn Rust Programming</strong> certificate course! This comprehensive program is designed to introduce you to the fundamental concepts of Rust, a powerful and modern systems programming language. Whether you are new to programming or looking to expand your skills, this course will provide you with a solid foundation in Rust, equipping you with the knowledge to build efficient and safe software.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Outputting &amp; Math Operators</strong></p><ul><li><strong>Introducing Printing - </strong><code><strong>println!</strong></code>: Learn the basics of outputting text to the console using the <code>println!</code> macro, essential for displaying information in Rust programs.</li><li><strong>Printing on Multiple Lines</strong>: Explore how to print text across multiple lines using multiple <code>println!</code> statements and newline characters.</li><li><strong>Multiple Prints Using Single </strong><code><strong>println!</strong></code>: Discover how to use a single <code>println!</code> statement to print multiple variables and values for cleaner and more readable code.</li><li><strong>Math Operators and Overall Code Structure</strong>: Understand the basic arithmetic operators in Rust and learn about the overall structure of a Rust program.</li><li><strong>Rust 101 - Arithmetic Operators</strong>: Dive deeper into arithmetic operators and their applications in Rust.</li><li><strong>Input/Output in Rust - Read Trait</strong>: Gain insight into Rust''s input/output mechanisms and the <code>Read</code> trait for handling input operations.</li></ul><p><strong>Variables and Data Types</strong></p><ul><li><strong>Introduction to Variables and Data Types</strong>: Get acquainted with variables and data types in Rust, including how to declare, initialize, and use them effectively.</li><li><strong>Variables and Data Types in Rust</strong>: Explore the various data types available in Rust and learn how to work with them in your programs.</li></ul><p><strong>Strings</strong></p><ul><li><strong>Introduction to Strings</strong>: Understand the basics of strings in Rust, including how to declare, initialize, and manipulate them.</li><li><strong>Strings in Rust FINALLY EXPLAINED!</strong>: Gain a deeper understanding of string operations and methods in Rust, making string manipulation straightforward and efficient.</li></ul><p><strong>User Inputs</strong></p><ul><li><strong>Introducing Taking Inputs - </strong><code><strong>std::io::stdin().read_line()</strong></code>: Learn how to take user input in Rust using the <code>std::io::stdin().read_line()</code> method, essential for interactive applications.</li><li><strong>Reading User Input in Rust</strong>: Further explore techniques for reading and handling user input in Rust.</li></ul><p><strong>Conditional Statements</strong></p><ul><li><strong>Introduction to "if", "else"</strong>: Master the basics of conditional statements in Rust, including <code>if</code>, <code>else if</code>, and <code>else</code> constructs.</li><li><strong>Different Ways to Compare Elements Inside </strong><code><strong>if</strong></code>: Discover various comparison operators and how to use them within <code>if</code> statements.</li><li><strong>Combining Conditions - And, Or</strong>: Learn how to combine multiple conditions using logical operators <code>&amp;&amp;</code> (AND) and <code>||</code> (OR) for more complex decision-making.</li><li><strong>Switch</strong>: Understand the <code>match</code> statement in Rust, which simplifies selecting one of many code blocks to execute based on a variable''s value.</li><li><strong>Rust Conditional Statements</strong>: Gain a comprehensive overview of conditional statements in Rust, ensuring you can handle any decision-making scenario.</li></ul><p><strong>Arrays</strong></p><ul><li><strong>Introduction to Arrays</strong>: Get to know arrays in Rust, including how to declare, initialize, access, and manipulate them.</li><li><strong>Rust Programming Tutorial #20 - Arrays</strong>: Dive deeper into advanced array operations and techniques in Rust.</li></ul><p><strong>Loops</strong></p><ul><li><strong>Break, Continue, For Each</strong>: Learn how to control loop execution using <code>break</code>, <code>continue</code>, and the <code>for_each</code> method for iterating over collections.</li><li><strong>While Loops</strong>: Understand how to use <code>while</code> loops to repeatedly execute a block of code as long as a specified condition is true.</li><li><strong>For Loops</strong>: Master the use of <code>for</code> loops to iterate over ranges and collections efficiently.</li><li><strong>Rust Programming Tutorial #8 - While Loop</strong>: Gain practical insights and examples of using <code>while</code> loops in Rust.</li><li><strong>Rust Programming Tutorial #9 - For Loop</strong>: Explore practical examples and advanced uses of <code>for</code> loops in Rust.</li></ul><p><br></p><p>By the end of this course, you will have a strong foundation in Rust programming, enabling you to write efficient, safe, and high-performance software. Join us on this journey to master Rust and unlock the potential of this powerful language in your programming toolkit!</p>', NULL, '2024-07-31 18:51:59.847+00', '2027-10-02 04:38:39.847+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:12:52.282675+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.903831+00');
INSERT INTO "public"."certificate_course" ("id", "topic_id", "name", "skill_level", "description", "avg_rating", "start_time", "end_time", "created_by", "created_at", "updated_by", "updated_at") VALUES ('cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', 'd215b5f8-0249-4dc5-89a3-51fd148cfb47', 'Intermediate JavaScript', 'INTERMEDIATE', '<p>Welcome to <strong>Intermediate JavaScript</strong>, an in-depth certificate course designed for developers who have a basic understanding of JavaScript and are ready to take their skills to the next level. This course covers advanced JavaScript concepts and modern ES6+ features that are essential for building sophisticated and high-performance web applications. By the end of this course, you will be well-versed in advanced functions, asynchronous programming, error handling and debugging, and event-driven programming.</p><p><br></p><h3>Course Breakdown</h3><p><strong>Advanced Functions</strong></p><ul><li><strong>Higher-Order Functions</strong> Learn about functions that take other functions as arguments or return them as results, enabling more modular and reusable code.</li><li><strong>Callback Functions</strong> Understand how to use callbacks to handle asynchronous operations and avoid blocking code execution.</li><li><strong>Function Currying</strong> Master the technique of transforming functions to handle multiple arguments one at a time, enhancing code reusability and readability.</li><li><strong>Recursion</strong> Explore the concept of recursion, where functions call themselves to solve problems that can be broken down into simpler sub-problems.</li></ul><p><strong>Asynchronous JavaScript</strong></p><ul><li><strong>Understanding Asynchronous Programming</strong> Grasp the importance of non-blocking code execution and how it improves application performance.</li><li><strong>Callbacks</strong> Delve into using callbacks effectively to handle asynchronous tasks such as network requests and file operations.</li><li><strong>Promises</strong> Learn how to use promises to manage asynchronous operations more cleanly and avoid callback hell.</li><li><strong>Async/Await</strong> Simplify asynchronous code with the async/await syntax, making it easier to read and maintain.</li></ul><p><strong>Error Handling and Debugging</strong></p><ul><li><strong>Try...Catch Statements</strong> Implement error handling using try...catch blocks to manage exceptions gracefully and maintain application stability.</li><li><strong>Throwing Custom Errors</strong> Create and throw custom errors to provide more meaningful feedback during error conditions.</li><li><strong>Debugging Techniques and Tools</strong> Utilize various debugging techniques and tools to identify and fix issues in your code efficiently.</li><li><strong>Console Methods for Debugging</strong> Leverage powerful console methods to log information, display data in tabular format, and group related messages, enhancing your debugging process.</li></ul><p><strong>ES6+ Features</strong></p><ul><li><strong>Classes and Modules</strong> Learn how to define and use classes and modules to create modular and reusable code structures.</li><li><strong>Let and Const</strong> Understand the block-scoped nature of let and const, and when to use each for variable declarations.</li><li><strong>Template Literals</strong> Use template literals to create multi-line strings and embed expressions within strings effortlessly.</li><li><strong>Destructuring Assignment</strong> Unpack values from arrays and objects into distinct variables using destructuring, simplifying data manipulation.</li><li><strong>Spread and Rest Operators</strong> Master the spread and rest operators to expand and collect elements, making your code more concise and flexible.</li><li><strong>Default Parameters</strong> Set default values for function parameters to handle cases where arguments are not provided, ensuring robust functions.</li></ul><p><strong>Event-Driven Programming</strong></p><ul><li><strong>Understanding Events</strong> Learn the basics of events and how to handle them in JavaScript to create interactive web applications.</li><li><strong>Event Propagation: Capturing and Bubbling</strong> Understand the phases of event propagation and how to control event flow using capturing and bubbling techniques.</li><li><strong>Event Delegation</strong> Use event delegation to manage events efficiently, especially when dealing with dynamic content.</li><li><strong>Debouncing and Throttling</strong> Optimize event handling with debouncing and throttling techniques to improve application performance and responsiveness.</li></ul><p><br></p><p>By mastering the concepts covered in this Intermediate JavaScript course, you will be equipped to tackle complex programming challenges and build dynamic, efficient, and maintainable web applications. Join us and elevate your JavaScript skills to the next level!</p>', NULL, '2024-08-01 08:47:27.988+00', '2027-10-02 18:34:07.988+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:20:52.599647+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.064482+00');

-- use all the above course ids to insert into certificate_course_user table
INSERT INTO public.certificate_course_user(certificate_course_id, user_id)
VALUES
    -- cer course id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb19'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb20'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb18'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb15'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb17'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb16'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: '452371a5-2f58-4bfa-947b-af3140671057'
    ('452371a5-2f58-4bfa-947b-af3140671057', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('452371a5-2f58-4bfa-947b-af3140671057', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('452371a5-2f58-4bfa-947b-af3140671057', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('452371a5-2f58-4bfa-947b-af3140671057', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('452371a5-2f58-4bfa-947b-af3140671057', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('452371a5-2f58-4bfa-947b-af3140671057', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('452371a5-2f58-4bfa-947b-af3140671057', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('452371a5-2f58-4bfa-947b-af3140671057', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('452371a5-2f58-4bfa-947b-af3140671057', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: 'cbddf1c0-d816-44fe-bce3-16ed430306ef'
    ('cbddf1c0-d816-44fe-bce3-16ed430306ef', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('cbddf1c0-d816-44fe-bce3-16ed430306ef', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('cbddf1c0-d816-44fe-bce3-16ed430306ef', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('cbddf1c0-d816-44fe-bce3-16ed430306ef', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('cbddf1c0-d816-44fe-bce3-16ed430306ef', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('cbddf1c0-d816-44fe-bce3-16ed430306ef', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('cbddf1c0-d816-44fe-bce3-16ed430306ef', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('cbddf1c0-d816-44fe-bce3-16ed430306ef', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('cbddf1c0-d816-44fe-bce3-16ed430306ef', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: '2d2ebd9e-2829-495e-87f7-4f050a8f3628'
    ('2d2ebd9e-2829-495e-87f7-4f050a8f3628', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('2d2ebd9e-2829-495e-87f7-4f050a8f3628', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('2d2ebd9e-2829-495e-87f7-4f050a8f3628', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('2d2ebd9e-2829-495e-87f7-4f050a8f3628', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('2d2ebd9e-2829-495e-87f7-4f050a8f3628', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('2d2ebd9e-2829-495e-87f7-4f050a8f3628', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('2d2ebd9e-2829-495e-87f7-4f050a8f3628', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('2d2ebd9e-2829-495e-87f7-4f050a8f3628', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('2d2ebd9e-2829-495e-87f7-4f050a8f3628', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: 'd2a18a10-a142-426b-bd8d-97ede9db5941'
    ('d2a18a10-a142-426b-bd8d-97ede9db5941', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d2a18a10-a142-426b-bd8d-97ede9db5941', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d2a18a10-a142-426b-bd8d-97ede9db5941', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d2a18a10-a142-426b-bd8d-97ede9db5941', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d2a18a10-a142-426b-bd8d-97ede9db5941', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d2a18a10-a142-426b-bd8d-97ede9db5941', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d2a18a10-a142-426b-bd8d-97ede9db5941', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d2a18a10-a142-426b-bd8d-97ede9db5941', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d2a18a10-a142-426b-bd8d-97ede9db5941', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: '265190be-817b-4b8e-a8e4-7b7e4980915f'
    ('265190be-817b-4b8e-a8e4-7b7e4980915f', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('265190be-817b-4b8e-a8e4-7b7e4980915f', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('265190be-817b-4b8e-a8e4-7b7e4980915f', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('265190be-817b-4b8e-a8e4-7b7e4980915f', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('265190be-817b-4b8e-a8e4-7b7e4980915f', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('265190be-817b-4b8e-a8e4-7b7e4980915f', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('265190be-817b-4b8e-a8e4-7b7e4980915f', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('265190be-817b-4b8e-a8e4-7b7e4980915f', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('265190be-817b-4b8e-a8e4-7b7e4980915f', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: '0c1a30e7-97f9-4b5d-8d35-b500e7a57f82'
    ('0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: '13f83797-dd2a-4083-aebf-43f45993bbe9'
    ('13f83797-dd2a-4083-aebf-43f45993bbe9', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('13f83797-dd2a-4083-aebf-43f45993bbe9', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('13f83797-dd2a-4083-aebf-43f45993bbe9', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('13f83797-dd2a-4083-aebf-43f45993bbe9', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('13f83797-dd2a-4083-aebf-43f45993bbe9', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('13f83797-dd2a-4083-aebf-43f45993bbe9', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('13f83797-dd2a-4083-aebf-43f45993bbe9', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('13f83797-dd2a-4083-aebf-43f45993bbe9', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('13f83797-dd2a-4083-aebf-43f45993bbe9', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: '1eb1b48d-a62e-4262-8bab-1abda96d5588'
    ('1eb1b48d-a62e-4262-8bab-1abda96d5588', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('1eb1b48d-a62e-4262-8bab-1abda96d5588', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('1eb1b48d-a62e-4262-8bab-1abda96d5588', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('1eb1b48d-a62e-4262-8bab-1abda96d5588', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('1eb1b48d-a62e-4262-8bab-1abda96d5588', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('1eb1b48d-a62e-4262-8bab-1abda96d5588', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('1eb1b48d-a62e-4262-8bab-1abda96d5588', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('1eb1b48d-a62e-4262-8bab-1abda96d5588', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('1eb1b48d-a62e-4262-8bab-1abda96d5588', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: 'db16e13e-9c52-47ac-8bd0-45f0dc0bab38'
    ('db16e13e-9c52-47ac-8bd0-45f0dc0bab38', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('db16e13e-9c52-47ac-8bd0-45f0dc0bab38', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('db16e13e-9c52-47ac-8bd0-45f0dc0bab38', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('db16e13e-9c52-47ac-8bd0-45f0dc0bab38', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('db16e13e-9c52-47ac-8bd0-45f0dc0bab38', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('db16e13e-9c52-47ac-8bd0-45f0dc0bab38', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('db16e13e-9c52-47ac-8bd0-45f0dc0bab38', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('db16e13e-9c52-47ac-8bd0-45f0dc0bab38', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('db16e13e-9c52-47ac-8bd0-45f0dc0bab38', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb21'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: '534b285b-83ee-41a0-93ea-9fb79fb2ffd4'
    ('534b285b-83ee-41a0-93ea-9fb79fb2ffd4', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('534b285b-83ee-41a0-93ea-9fb79fb2ffd4', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('534b285b-83ee-41a0-93ea-9fb79fb2ffd4', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('534b285b-83ee-41a0-93ea-9fb79fb2ffd4', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('534b285b-83ee-41a0-93ea-9fb79fb2ffd4', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('534b285b-83ee-41a0-93ea-9fb79fb2ffd4', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('534b285b-83ee-41a0-93ea-9fb79fb2ffd4', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('534b285b-83ee-41a0-93ea-9fb79fb2ffd4', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('534b285b-83ee-41a0-93ea-9fb79fb2ffd4', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- cer course id: 'cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a'
    ('cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', '2d7ed5a0-fb21-4927-9a25-647c17d29668');




-- each user can only review a course once
INSERT INTO public.review(id, certificate_course_id, rating, content, created_by, updated_by)
VALUES
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 5, 'Great course! I learned a lot from it.', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 4, 'Good course! I enjoyed it.', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 3, 'Okay course. Could be better.', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'd215b5f8-0249-4dc5-89a3-51fd148cfb16', 5, 'Great course! I learned a lot from it.', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'd215b5f8-0249-4dc5-89a3-51fd148cfb16', 4, 'Good course! I enjoyed it.', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', 'd215b5f8-0249-4dc5-89a3-51fd148cfb16', 3, 'Okay course. Could be better.', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'd215b5f8-0249-4dc5-89a3-51fd148cfb17', 5, 'Great course! I learned a lot from it.', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', 'd215b5f8-0249-4dc5-89a3-51fd148cfb17', 4, 'Good course! I enjoyed it.', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', 'd215b5f8-0249-4dc5-89a3-51fd148cfb17', 3, 'Okay course. Could be better.', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', '452371a5-2f58-4bfa-947b-af3140671057', 5, 'Great course! I learned a lot from it.', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', '452371a5-2f58-4bfa-947b-af3140671057', 4, 'Good course! I enjoyed it.', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', '452371a5-2f58-4bfa-947b-af3140671057', 3, 'Okay course. Could be better.', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', '452371a5-2f58-4bfa-947b-af3140671057', 5, 'Excellent course', '39328bcf-8af6-44fc-9ae9-247f953ee2a2', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', '452371a5-2f58-4bfa-947b-af3140671057', 5, 'The best course ever!', '2d7ed5a0-fb21-4927-9a25-647c17d29668', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 5, 'Great course! I learned a lot from it.', '9ba179ed-d26d-4828-a0f6-8836c2063992', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 4, 'Good course! I enjoyed it.', 'b029f559-52a8-4699-b595-71161498ed8c', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 3, 'Okay course. Could be better.', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7');


INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('2f316c08-6f46-4fa8-8aa6-c02602556802', '0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', 0, 'Outputting & Math Operators', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.226599+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.2266+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('266211ad-b8ac-4d99-8618-e5567b467067', '0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', 1, 'Variables and Data Types', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.247932+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.247933+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('20035541-a9c7-488a-8cad-346841600648', 'd215b5f8-0249-4dc5-89a3-51fd148cfb17', 0, 'Functions and Modules', '<p><br></p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.789907+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.789909+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('9877a522-d634-4866-b9ba-159d9952d139', 'd215b5f8-0249-4dc5-89a3-51fd148cfb17', 1, 'Advanced Python Features', '<p>Learn about advanced python features like Iterators, Regular Expressions and Decorators</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.802755+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.802757+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('22f8b1cd-bfff-4989-8a83-9a4cd46e3870', 'd215b5f8-0249-4dc5-89a3-51fd148cfb17', 2, ' Introduction to OOPs', '<p>This chapter covers binary trees and their implementation, operations, and applications.</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.809608+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.809609+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', 'd215b5f8-0249-4dc5-89a3-51fd148cfb19', 1, 'Introduction to Stacks and Queues', 'This chapter introduces stacks and queues and covers basic concepts such as implementation, operations, and applications.', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.606514+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.606514+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', 'd215b5f8-0249-4dc5-89a3-51fd148cfb19', 2, 'Linked Lists', 'This chapter covers linked lists and their implementation, operations, and applications.', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 07:51:27.606514+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 07:51:27.606514+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', 'd215b5f8-0249-4dc5-89a3-51fd148cfb19', 3, 'Binary Trees', 'This chapter covers binary trees and their implementation, operations, and applications.', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7', '2024-07-20 07:51:27.606514+00', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7', '2024-07-20 07:51:27.606514+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', 'd215b5f8-0249-4dc5-89a3-51fd148cfb20', 1, 'Introduction to Stacks and Queues', 'This chapter introduces stacks and queues and covers basic concepts such as implementation, operations, and applications.', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.606514+00', '9ba179ed-d26d-4828-a0f6-8836c2063992', '2024-07-20 07:51:27.606514+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', 'd215b5f8-0249-4dc5-89a3-51fd148cfb20', 2, 'Linked Lists', 'This chapter covers linked lists and their implementation, operations, and applications.', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 07:51:27.606514+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 07:51:27.606514+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', 'd215b5f8-0249-4dc5-89a3-51fd148cfb20', 3, 'Binary Trees', 'This chapter covers binary trees and their implementation, operations, and applications.', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7', '2024-07-20 07:51:27.606514+00', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7', '2024-07-20 07:51:27.606514+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('de760849-3377-4334-8d14-ba89ca34e927', 'd215b5f8-0249-4dc5-89a3-51fd148cfb18', 0, 'Print statement and Java Syntax', '<p>Learn the basic concepts of Java, one of the most widely used object-oriented programming languages.</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:28.974485+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:28.974485+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('a6ba8a08-84ae-4655-8406-05d181e58ae3', 'd215b5f8-0249-4dc5-89a3-51fd148cfb18', 1, 'Variables and Data Types', '<p><br></p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.005581+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.005582+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('9ce115e6-aaef-4743-9fb2-db64c86c4acd', 'd215b5f8-0249-4dc5-89a3-51fd148cfb18', 2, 'Operators', '<p><br></p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.00836+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.008361+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('4bbff1c6-51e5-4c6d-b5eb-0335f9b718cd', 'd215b5f8-0249-4dc5-89a3-51fd148cfb18', 3, 'Strings', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.011627+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.011627+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('567446cf-e4dd-45a6-93c1-9b539a9c4f2e', 'd215b5f8-0249-4dc5-89a3-51fd148cfb18', 4, 'User Inputs', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.015518+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.015519+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('259f29ff-ba18-4417-bafd-9e1c4c1319d2', 'd215b5f8-0249-4dc5-89a3-51fd148cfb18', 5, 'Conditional Statements', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.01767+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.017671+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('34b88085-66f2-47cc-85d9-0db02d5dfa64', 'd215b5f8-0249-4dc5-89a3-51fd148cfb18', 6, 'Loops', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.020402+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.020402+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('b995e375-ff54-4265-b81a-5c2b1f6f3b86', 'd215b5f8-0249-4dc5-89a3-51fd148cfb18', 7, 'Arrays', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.022025+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.022025+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('62513510-6e1b-4548-8b73-95427e766bb3', 'd215b5f8-0249-4dc5-89a3-51fd148cfb18', 8, ' Methods in Java', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.023454+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:17:29.023454+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('6c08d79b-4fd6-4369-99ea-322078e55307', '452371a5-2f58-4bfa-947b-af3140671057', 0, 'Hello World', '<p><span style="color: rgb(16, 22, 47);">Write, compile, and execute your first C++ program!</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.606642+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.606644+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('88515ed4-0b74-47d8-9279-0d47c2a21ef4', '452371a5-2f58-4bfa-947b-af3140671057', 1, 'Variables', '<p>Introduction to variables and basic data types.</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.664991+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.664995+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('75c1b5b9-370d-4c24-9335-56c5dbd43c51', '452371a5-2f58-4bfa-947b-af3140671057', 2, 'Conditionals & Logic', '<p>Learn how to use conditionals and logic to build programs that generate different outcomes.</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.685545+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.685549+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('e099d057-b400-456b-b01a-54c5be0364d4', '452371a5-2f58-4bfa-947b-af3140671057', 3, 'Loops', '<p>Loops, loops, loops, loops, loops.</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.70497+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.704974+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('e31671c0-e26f-46e7-ba81-6d954a51c37c', '452371a5-2f58-4bfa-947b-af3140671057', 4, 'Vectors', '<p>Learn how to use C++ vectors, a great way to keep your data organized.</p><p><br></p><p><br></p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.716337+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.716341+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('fcbeaffe-82c1-4535-aa2a-246ba99adc7e', 'd215b5f8-0249-4dc5-89a3-51fd148cfb17', 3, 'Inheritance, Packages and Interfaces', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.811375+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.811375+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('55192438-8e60-4f3c-a8cb-a6e3e2dd164b', 'd215b5f8-0249-4dc5-89a3-51fd148cfb17', 4, 'Exception handling and multithreading', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.816839+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.816841+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('8a4e420d-46d5-4eb2-b801-2136ad54c0fa', 'd215b5f8-0249-4dc5-89a3-51fd148cfb17', 5, 'Generics and File handling', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.821308+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 09:21:35.821309+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('c982460d-a9d0-4a2c-919c-5a2dace33050', 'd215b5f8-0249-4dc5-89a3-51fd148cfb16', 0, 'Recap - Logic building', '<p>Recap on logic building from Beginner''s part-1</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 06:55:21.61226+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 06:55:21.612266+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('0b8f86c2-ceb5-4849-be55-196ee65c07fe', 'd215b5f8-0249-4dc5-89a3-51fd148cfb16', 1, 'Array Operations', '<p>This chapter covers advanced Java programming topics such as object-oriented programming, data structures, and algorithms.</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 06:55:21.616295+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 06:55:21.616296+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('6b6031db-d128-40da-b3d4-4d6e8d346c5b', 'd215b5f8-0249-4dc5-89a3-51fd148cfb16', 2, 'Basic string operations', '<p><br></p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 06:55:21.619621+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 06:55:21.619627+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('5157a1ed-4393-4d91-9d3c-f9e94589620f', 'd215b5f8-0249-4dc5-89a3-51fd148cfb16', 3, 'Basic math continued', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 06:55:21.621888+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 06:55:21.621889+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('2a90b255-ca79-4fba-af46-952ac41a0502', '452371a5-2f58-4bfa-947b-af3140671057', 5, 'Functions', '<p>Use C++ functions to write more flexible, modular, reusable code.</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.725628+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.725631+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('3e3699ce-1b80-4236-873f-05b17522e25f', '452371a5-2f58-4bfa-947b-af3140671057', 6, 'Classes & Objects', '<p>Use C++ classes and objects to build more scalable, modular programs.</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.738072+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-20 09:46:43.738076+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('1d9b2a8f-e543-4c4d-ae65-b82a22e234b1', '0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', 2, 'Strings', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.254921+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.254922+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('aa21ea7c-eee7-482e-80d1-39d3fe5b6da4', '0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', 3, 'User Inputs', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.2588+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.258801+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('9dfc1f9e-be04-448d-ae04-16cf3599e861', '0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', 4, 'Conditional Statements', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.264342+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.264343+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('3cfbf83b-3d61-4f46-aaa8-6bbd2c07c216', '0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', 5, 'Arrays', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.275642+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.275643+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('1c64da87-8cf6-47d9-ad16-b2ea87945562', '0c1a30e7-97f9-4b5d-8d35-b500e7a57f82', 6, 'Loops', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.281607+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:07:14.281608+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('9e2dfaec-351f-41a1-8cf1-394d5bfe5846', 'db16e13e-9c52-47ac-8bd0-45f0dc0bab38', 0, 'JavaScript Design Patterns', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:46.98741+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:46.987411+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('b3557f99-e402-4d5a-8574-058fafe5fa28', 'db16e13e-9c52-47ac-8bd0-45f0dc0bab38', 1, 'Functional Programming in JavaScript', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:47.005883+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:47.005884+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('2eaa7791-da93-45fe-b20c-20e86379d8a1', 'db16e13e-9c52-47ac-8bd0-45f0dc0bab38', 2, 'Advanced DOM Manipulation', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:47.014462+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:47.014463+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('9f4635ae-bdb4-4ce8-954f-fe7905cf3619', 'db16e13e-9c52-47ac-8bd0-45f0dc0bab38', 3, 'JavaScript Frameworks and Libraries', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:47.019736+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:47.019741+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('807a912f-1d50-4aa0-9a65-cc3869ec70c9', 'db16e13e-9c52-47ac-8bd0-45f0dc0bab38', 4, 'Web Components', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:47.026464+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:18:47.026465+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('dbb26f3a-5184-49db-8d89-0e30898a470f', 'd215b5f8-0249-4dc5-89a3-51fd148cfb21', 0, 'Fundamentals Of One-dimensional Arrays', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:42:43.476368+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 09:42:43.476369+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('b1f13eaf-9fd1-4b93-8bab-71cc3b1ee9b0', 'cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', 0, 'Advanced Functions', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.071401+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.071401+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('9f6e63e8-a037-4b51-911d-cc4da22189f1', 'cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', 1, 'Asynchronous JavaScript', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.076645+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.076646+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('0802330e-801e-4560-837e-ec318192f029', 'cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', 2, 'Error Handling and Debugging', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.079303+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.079303+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('1114db30-77a8-402e-a56f-64de3c93d36d', 'cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', 3, 'ES6 + Features', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.081146+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.081146+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('8df85dd0-20a1-42fa-96bb-78cc90ee6187', 'cc43bb7a-a0c2-4cae-92c6-b4cfa6c5fb8a', 4, 'Event-Driven Programming', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.08412+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 08:47:28.084121+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('41039a23-f534-44d4-ab43-55b0580d7dc1', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 0, 'Introduction, Outputting & Math Operators', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.948307+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.948307+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('8478ca69-d368-4f1e-84c2-e792b694bb68', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 1, 'Pointers and Memory', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.965859+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.96586+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('d88a276f-b263-4b8e-aaf9-7f8340c6b100', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 2, 'Variables and Data Types', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.969837+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.969838+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('626aedf8-8a49-42e0-be2d-8f25d146704c', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 3, 'Conditionals', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.976502+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.976503+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('20c10331-48be-401e-a923-fd6fe734176a', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 4, 'Loops', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.984884+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.984885+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('0a02f0ef-03fd-4621-88b2-872d7536bba0', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 5, 'Arrays', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.997549+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:54.99755+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('470ed176-4da4-4337-bc24-de5c20719293', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 6, 'Strings', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:55.009631+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:55.009632+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('afec063e-fa7e-424d-9ca1-0ea52810da18', '2d2ebd9e-2829-495e-87f7-4f050a8f3628', 7, 'Functions and Structures', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:55.016438+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:14:55.016439+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('de140ad6-3454-40ad-a9db-12ba171f969d', 'd2a18a10-a142-426b-bd8d-97ede9db5941', 0, 'Recap', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:16:20.918931+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:16:20.918932+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('a35521fa-847b-4ddf-a75a-0c416adec848', 'd2a18a10-a142-426b-bd8d-97ede9db5941', 1, ' Array Operations', '<p>Basic implementation of Arrays in programming problems</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:16:20.929919+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:16:20.92992+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('21d7c27b-83ff-4715-b290-02e34c5cd70b', 'd2a18a10-a142-426b-bd8d-97ede9db5941', 2, 'Basic string operations', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:16:20.936189+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:16:20.93619+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('dffe4b22-0465-48fe-8de0-6d846d5cb08c', 'd2a18a10-a142-426b-bd8d-97ede9db5941', 3, 'Debug Algorithmic Problems', '<p>Master principles required to debug beginner level algorithmic problems</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:16:20.940844+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:16:20.940845+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('0f72faae-00c0-49d7-ad43-9cfa2e42a51b', 'cbddf1c0-d816-44fe-bce3-16ed430306ef', 0, 'Getting started', '<p>Learn how to take input and output for programming problems. Understand about hidden and custom test cases. End the module with practice problems.</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:17:59.404789+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:17:59.404789+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('5df4c2b2-7be2-43f1-a7c7-924a4b542027', 'cbddf1c0-d816-44fe-bce3-16ed430306ef', 1, 'Basic math', '<p>Simple math concepts required to solve programming problems</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:17:59.445575+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:17:59.445576+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('0296d1de-6b5d-4b7b-8997-bf5bdc140e16', 'cbddf1c0-d816-44fe-bce3-16ed430306ef', 2, 'Conditional statements', '<p>Simple conditional concepts required in programming problems</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:17:59.463175+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:17:59.463175+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('6b703088-5f16-405c-869f-2f3ecd4445ae', 'cbddf1c0-d816-44fe-bce3-16ed430306ef', 3, 'Logic Building', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:17:59.469564+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:17:59.469565+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('19419e58-966b-4ae9-8c4a-330100c76166', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 0, ' Output / Print in Python', '<p>Learn how to make Python print whatever you want, and learn to use it as a basic calculator.</p>', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.619936+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.619937+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('94c250f7-7f2c-4cd8-a41f-5d05bbabedf6', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 1, 'Variables and datatypes', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.633219+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.63322+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('6afaf653-6486-4ffb-b2d0-1460e629933f', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 2, 'Operators', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.637961+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.637961+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('ebc43b1c-2c83-4d5d-8f8d-c940bc5cc4b2', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 3, 'Strings', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.644186+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.644187+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('80ddc21d-f973-498a-a213-c70f6a6df53a', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 4, 'User inputs', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.646059+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.64606+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('f72f8157-1b3e-4de0-acf3-7da9760b9352', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 5, 'Conditional statements', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.648786+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.648787+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('33526918-26be-4fe4-8c92-9cc7bc0d53fd', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 6, 'Arrays', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.651212+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.651213+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('685c9fe2-e6e1-4ebc-bb1f-251a2822ca2e', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 7, 'Loops', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.653463+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.653464+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('b7d4d279-925b-42a6-b198-134b74efa721', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 8, 'Functions in python', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.656777+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.656778+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('236a5c83-3d52-4a4e-9f59-7101fe603889', 'd215b5f8-0249-4dc5-89a3-51fd148cfb15', 9, 'Tuples and Dictionary', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.658916+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-30 17:44:20.658917+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('736ddfc6-cf8b-4a9c-825e-f6529410f492', '13f83797-dd2a-4083-aebf-43f45993bbe9', 0, 'Recap - Logic building', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:12:12.9009+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:12:12.900903+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('f646e38b-8dd6-4cc6-a17a-187415ee8ba2', '13f83797-dd2a-4083-aebf-43f45993bbe9', 1, 'Array Operations', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:12:12.910064+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:12:12.91007+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('3a57a7e8-9989-498a-beb8-2a5a81774427', '13f83797-dd2a-4083-aebf-43f45993bbe9', 2, 'Basic string operations', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:12:12.913759+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:12:12.91376+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('4a4d46dd-09d3-403e-8b9c-a42154814e27', '13f83797-dd2a-4083-aebf-43f45993bbe9', 3, 'Basic math continued', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:12:12.916838+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:12:12.91684+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('9633622c-8304-4610-81f2-2c3af684ff7e', '265190be-817b-4b8e-a8e4-7b7e4980915f', 0, 'Getting started on problem solving', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:26:34.331799+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:26:34.3318+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('0b7edcfd-cb5b-4a3f-b282-450b2c2bc000', '265190be-817b-4b8e-a8e4-7b7e4980915f', 1, ' Basic Math', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:26:34.33647+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:26:34.33647+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('b4f5bfde-dfa4-4bb0-9e81-705405423211', '265190be-817b-4b8e-a8e4-7b7e4980915f', 2, 'Conditional statements', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:26:34.339947+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:26:34.339947+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('196b3f65-770e-4078-8865-73f665a65f93', '265190be-817b-4b8e-a8e4-7b7e4980915f', 3, ' Logic building', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:26:34.344061+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 11:26:34.344062+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('4710e388-7569-4d36-ac26-4588d0da9643', '1eb1b48d-a62e-4262-8bab-1abda96d5588', 0, 'Introduction to JavaScript', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.625794+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.625795+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('76fc9f87-6f51-4416-a1f7-ee1426e46688', '1eb1b48d-a62e-4262-8bab-1abda96d5588', 1, 'Variables and Data Types', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.62708+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.627085+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('b77003f7-a3dd-469b-b2de-99c0700233c3', '1eb1b48d-a62e-4262-8bab-1abda96d5588', 2, 'Operators and Expressions', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.630367+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.630367+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('20de1ddc-7dec-4e12-b833-fca267b44a91', '1eb1b48d-a62e-4262-8bab-1abda96d5588', 3, 'Control Structures', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.637199+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.637199+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('e8860811-7ecd-44fc-8719-17b680ac5441', '1eb1b48d-a62e-4262-8bab-1abda96d5588', 4, 'Functions', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.64418+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.644181+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('66442f0b-4d4f-4eb4-9d0a-dc0fbe9ae914', '1eb1b48d-a62e-4262-8bab-1abda96d5588', 5, 'Objects and Arrays', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.651465+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.651465+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('4487ad9c-6b9d-4002-b1d9-f47ea0b40982', '1eb1b48d-a62e-4262-8bab-1abda96d5588', 6, 'DOM Manipulation', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.654892+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-08-01 07:57:16.654893+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('875e0a0c-cd9f-41e8-9304-b9d589c5b2c7', '534b285b-83ee-41a0-93ea-9fb79fb2ffd4', 0, 'Outputting & Math Operators', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.91318+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.913181+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('9009c296-a5bb-47b2-9cc3-d154d23342d1', '534b285b-83ee-41a0-93ea-9fb79fb2ffd4', 1, 'Variables and Data Types', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.920347+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.920347+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('4e2864f7-f74f-4281-8b1e-71fe6bfc56d9', '534b285b-83ee-41a0-93ea-9fb79fb2ffd4', 2, 'Strings', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.922392+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.922393+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('5ba5a591-f36c-4a4d-a09a-1a85dd4f42e4', '534b285b-83ee-41a0-93ea-9fb79fb2ffd4', 3, 'User Inputs', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.924365+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.924366+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('240d7ad7-391e-4a5a-8fe0-3dfcc4a46d1f', '534b285b-83ee-41a0-93ea-9fb79fb2ffd4', 4, 'Conditional Statements', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.92605+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.92605+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('789ec000-6f61-4349-bad4-4a8deffe46b0', '534b285b-83ee-41a0-93ea-9fb79fb2ffd4', 5, 'Arrays', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.928843+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.928844+00');
INSERT INTO "public"."chapter" ("id", "certificate_course_id", "no", "title", "description", "created_by", "created_at", "updated_by", "updated_at") VALUES ('0b8d3b3a-1d28-41c1-80d4-19375d5ce114', '534b285b-83ee-41a0-93ea-9fb79fb2ffd4', 6, 'Loops', '', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.933288+00', 'b029f559-52a8-4699-b595-71161498ed8c', '2024-07-31 18:51:59.933289+00');

INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('bc0ac556-cee1-4530-ab5f-676720cb49e2', 0, '875e0a0c-cd9f-41e8-9304-b9d589c5b2c7', 'LESSON', ' Introducing printing - println', NULL, '<h4>Lesson: Introducing Printing - <code>println!</code></h4><p><strong>Objective:</strong> Learn how to use the <code>println!</code> macro in Rust to output text to the console. This is the foundational step for displaying information in Rust programs.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Using </strong><code><strong>println!</strong></code><strong>:</strong></p><p>The <code>println!</code> macro is used to print text to the console with a newline character at the end. It can be used to display static text, variables, and formatted strings.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    println!("Hello, World!");
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>println!</code> is a macro that prints text followed by a newline.</li><li>The text to be printed is enclosed in double quotes.</li></ul><p><strong>2. Printing Variables:</strong></p><p>You can print the value of variables using <code>println!</code> by including the variable name inside curly braces <code>{}</code> within the string.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let name = "Alice";
    println!("Hello, {}!", name);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let name = "Alice";</code> declares a variable <code>name</code> with the value "Alice".</li><li><code>println!("Hello, {}!", name);</code> prints "Hello, Alice!", where <code>{}</code> is replaced by the value of <code>name</code>.</li></ul><p><strong>3. Formatting Output:</strong></p><p>Rust allows for advanced formatting using format specifiers within the <code>println!</code> macro.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let x = 42;
    let y = 3.14159;
    println!("x = {}, y = {:.2}", x, y);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>x = {}</code> prints the value of <code>x</code>.</li><li><code>y = {:.2}</code> prints the value of <code>y</code> rounded to two decimal places.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5d0e997a-03eb-41c8-9d76-49eb34d9bc13', 1, '875e0a0c-cd9f-41e8-9304-b9d589c5b2c7', 'LESSON', ' Printing on multiple lines', NULL, '<h4>Lesson: Printing on Multiple Lines</h4><p><strong>Objective:</strong> Learn how to print text across multiple lines using multiple <code>println!</code> statements and how to handle newline characters within a single <code>println!</code> statement.</p><h3>Key Concepts:</h3><p><strong>1. Multiple </strong><code><strong>println!</strong></code><strong> Statements:</strong></p><p>Use multiple <code>println!</code> statements to print text on different lines.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    println!("Hello");
    println!("World");
}
</pre><p><strong>Explanation:</strong></p><ul><li>Each <code>println!</code> statement prints text followed by a newline.</li></ul><p><strong>2. Using Newline Characters:</strong></p><p>Use the <code>\n</code> escape character to insert a newline within a single <code>println!</code> statement.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    println!("Hello\nWorld");
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>\n</code> inserts a newline, so "Hello" and "World" are printed on separate lines.</li></ul><p><strong>3. Combining Strings:</strong></p><p>Concatenate strings using the <code>+</code> operator or format strings using the <code>format!</code> macro.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let part1 = "Hello";
    let part2 = "World";
    println!("{}\n{}", part1, part2);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>{}</code> placeholders are replaced by <code>part1</code> and <code>part2</code>, each followed by a newline.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('937920bf-cb40-412f-9f1b-dd40a1428faa', 2, '875e0a0c-cd9f-41e8-9304-b9d589c5b2c7', 'LESSON', ' Multiple prints using single println', NULL, '<h4>Lesson: Multiple Prints Using Single <code>println!</code></h4><p><strong>Objective:</strong> Learn how to print multiple variables or values using a single <code>println!</code> statement for more concise and readable code.</p><h3>Key Concepts:</h3><p><strong>1. Using Placeholders:</strong></p><p>Use <code>{}</code> placeholders to include multiple variables in a single <code>println!</code>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let age = 25;
    let name = "Alice";
    println!("Name: {}, Age: {}", name, age);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>{}</code> placeholders are replaced by the values of <code>name</code> and <code>age</code>.</li></ul><p><strong>2. String Interpolation:</strong></p><p>Rust supports string interpolation through the <code>format!</code> macro.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let age = 25;
    let name = "Alice";
    println!("{}", format!("Name: {}, Age: {}", name, age));
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>format!</code> creates a formatted string which is then printed by <code>println!</code>.</li></ul><p><strong>3. Combining Strings:</strong></p><p>Concatenate multiple strings and variables in a single <code>println!</code> statement.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let city = "New York";
    let country = "USA";
    println!("City: {}, Country: {}", city, country);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>{}</code> placeholders are replaced by <code>city</code> and <code>country</code>.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('4eaea639-e720-4e1f-8d45-886747f5e0c6', 3, '875e0a0c-cd9f-41e8-9304-b9d589c5b2c7', 'LESSON', ' Math Operators and overall code structure', NULL, '<h4>Lesson: Math Operators and Overall Code Structure</h4><p><strong>Objective:</strong> Learn how to use basic math operators in Rust and understand the overall structure of a simple Rust program.</p><h3>Key Concepts:</h3><p><strong>1. Basic Math Operators:</strong></p><p>Rust supports basic arithmetic operators such as addition (<code>+</code>), subtraction (<code>-</code>), multiplication (<code>*</code>), division (<code>/</code>), and modulus (<code>%</code>).</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let a = 10;
    let b = 5;
    println!("Addition: {}", a + b);
    println!("Subtraction: {}", a - b);
    println!("Multiplication: {}", a * b);
    println!("Division: {}", a / b);
    println!("Modulus: {}", a % b);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>+</code> adds two numbers.</li><li><code>-</code> subtracts the second number from the first.</li><li><code>*</code> multiplies two numbers.</li><li><code>/</code> divides the first number by the second.</li><li><code>%</code> returns the remainder of the division.</li></ul><p><strong>2. Order of Operations:</strong></p><p>Follow the standard mathematical order of operations (PEMDAS/BODMAS).</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let result = 10 + 5 * 2;
    println!("Result: {}", result);  // Output: 20
}
</pre><p><strong>Explanation:</strong></p><ul><li>Multiplication is performed before addition.</li></ul><p><strong>3. Overall Code Structure:</strong></p><p>Understand the basic structure of a Rust program, including the <code>fn main()</code> function and the use of <code>let</code> for variable declaration.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    // Variable declaration
    let a = 10;
    let b = 5;

    // Performing operations
    let sum = a + b;
    let difference = a - b;
    let product = a * b;
    let quotient = a / b;
    let remainder = a % b;

    // Printing results
    println!("Sum: {}", sum);
    println!("Difference: {}", difference);
    println!("Product: {}", product);
    println!("Quotient: {}", quotient);
    println!("Remainder: {}", remainder);
}
</pre><p><strong>Explanation:</strong></p><ul><li>The <code>main</code> function is the entry point of a Rust program.</li><li>Variables are declared using <code>let</code>.</li><li>Arithmetic operations are performed and stored in variables.</li><li>Results are printed using <code>println!</code>.</li></ul><p>By mastering these lessons, you will be able to effectively output text to the console and perform basic arithmetic operations, laying a solid foundation for more advanced programming concepts in Rust.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a0349b64-9174-42d1-8fdc-03ac706c3ff2', 4, '875e0a0c-cd9f-41e8-9304-b9d589c5b2c7', 'VIDEO', 'Rust 101 - Arithmetic operators', NULL, '', 'https://www.youtube.com/watch?v=O6qMBJGQwUk');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b5e7c723-a7ca-4e14-93b3-807ba7f46b5c', 5, '875e0a0c-cd9f-41e8-9304-b9d589c5b2c7', 'VIDEO', 'Input/Output in Rust - Read Trait', NULL, '', 'https://www.youtube.com/watch?v=ARZJL067pkU');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5a69712d-15b4-4d5e-ba7d-95525e2ced4e', 0, '9009c296-a5bb-47b2-9cc3-d154d23342d1', 'LESSON', 'Introduction to Variables and Data Types', NULL, '<h4>Lesson: Introduction to Variables and Data Types</h4><p><strong>Objective:</strong> Understand the fundamentals of variables and data types in Rust. Learn how to declare, initialize, and use variables, and explore the various data types available in Rust.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. What are Variables?</strong></p><p>Variables are used to store data that can be accessed and manipulated by your program. In Rust, variables are immutable by default, but they can be made mutable using the <code>mut</code> keyword.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let x = 5;         // Immutable variable
    let mut y = 10;    // Mutable variable

    println!("x = {}", x);
    println!("y = {}", y);

    y += 5;
    println!("Updated y = {}", y);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let x = 5;</code> declares an immutable variable <code>x</code> with the value <code>5</code>.</li><li><code>let mut y = 10;</code> declares a mutable variable <code>y</code> with the value <code>10</code>.</li><li><code>y += 5;</code> updates the value of <code>y</code> by adding <code>5</code>.</li></ul><p><strong>2. Data Types in Rust</strong></p><p>Rust is a statically-typed language, which means that the type of a variable must be known at compile time. Rust can usually infer the type based on the value, but you can also specify the type explicitly.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let integer: i32 = 42;       // 32-bit integer
    let float: f64 = 3.14;       // 64-bit floating-point number
    let boolean: bool = true;    // Boolean
    let character: char = ''A'';   // Character

    println!("integer = {}", integer);
    println!("float = {}", float);
    println!("boolean = {}", boolean);
    println!("character = {}", character);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let integer: i32 = 42;</code> declares an integer variable of type <code>i32</code>.</li><li><code>let float: f64 = 3.14;</code> declares a floating-point variable of type <code>f64</code>.</li><li><code>let boolean: bool = true;</code> declares a boolean variable.</li><li><code>let character: char = ''A'';</code> declares a character variable.</li></ul><p><strong>3. Common Data Types</strong></p><p>Rust provides several primitive data types, including:</p><ul><li><strong>Integers</strong>: Signed (<code>i8</code>, <code>i16</code>, <code>i32</code>, <code>i64</code>, <code>i128</code>, <code>isize</code>) and unsigned (<code>u8</code>, <code>u16</code>, <code>u32</code>, <code>u64</code>, <code>u128</code>, <code>usize</code>).</li><li><strong>Floating-Point Numbers</strong>: <code>f32</code> and <code>f64</code>.</li><li><strong>Boolean</strong>: <code>bool</code>.</li><li><strong>Character</strong>: <code>char</code>.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let small_number: u8 = 255;          // 8-bit unsigned integer
    let large_number: i64 = -9223372036854775808; // 64-bit signed integer
    let pi: f32 = 3.14159;               // 32-bit floating-point number

    println!("small_number = {}", small_number);
    println!("large_number = {}", large_number);
    println!("pi = {}", pi);
}
</pre><p><strong>4. Compound Data Types</strong></p><p>Rust also supports compound data types like tuples and arrays.</p><ul><li><strong>Tuples</strong>: Group multiple values of different types into a single compound value.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let tuple: (i32, f64, char) = (500, 6.4, ''z'');
    let (x, y, z) = tuple; // Destructuring

    println!("tuple = {:?}", tuple);
    println!("x = {}", x);
    println!("y = {}", y);
    println!("z = {}", z);
}
</pre><ul><li><strong>Arrays</strong>: Collection of multiple values of the same type.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let array: [i32; 5] = [1, 2, 3, 4, 5];
    let first_element = array[0];

    println!("array = {:?}", array);
    println!("first_element = {}", first_element);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let tuple: (i32, f64, char) = (500, 6.4, ''z'');</code> declares a tuple with three elements.</li><li><code>let (x, y, z) = tuple;</code> destructures the tuple into three variables <code>x</code>, <code>y</code>, and <code>z</code>.</li><li><code>let array: [i32; 5] = [1, 2, 3, 4, 5];</code> declares an array of five <code>i32</code> elements.</li><li><code>let first_element = array[0];</code> accesses the first element of the array.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that declares different types of variables, performs some operations on them, and prints the results.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    // Declare variables
    let a: i32 = 10;
    let b: f64 = 20.5;
    let is_active: bool = true;
    let letter: char = ''R'';

    // Perform operations
    let sum = a + b as i32; // Type casting
    let product = a * 2;
    let is_not_active = !is_active;

    // Print results
    println!("a = {}", a);
    println!("b = {}", b);
    println!("is_active = {}", is_active);
    println!("letter = {}", letter);
    println!("sum = {}", sum);
    println!("product = {}", product);
    println!("is_not_active = {}", is_not_active);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let sum = a + b as i32;</code> casts <code>b</code> to <code>i32</code> before adding it to <code>a</code>.</li><li><code>let product = a * 2;</code> multiplies <code>a</code> by <code>2</code>.</li><li><code>let is_not_active = !is_active;</code> negates the boolean value of <code>is_active</code>.</li></ul><p>By understanding variables and data types in Rust, you will be able to store and manipulate data effectively, laying a strong foundation for more advanced programming concepts.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('86c23001-f67f-490c-86fa-6d0da06923b7', 1, '9009c296-a5bb-47b2-9cc3-d154d23342d1', 'VIDEO', 'Variables and Data types in Rust', NULL, '', 'https://www.youtube.com/watch?v=V867Ulf17vs');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('13c6f59c-91e7-4d68-bbeb-f8c4359d3d67', 0, '4e2864f7-f74f-4281-8b1e-71fe6bfc56d9', 'LESSON', 'Introduction to Strings', NULL, '<h4>Lesson: Introduction to Strings</h4><p><strong>Objective:</strong> Understand the fundamentals of strings in Rust. Learn how to declare, initialize, and manipulate strings, and explore common string methods and properties.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. What are Strings?</strong></p><p>Strings in Rust are a sequence of characters. Rust has two main string types: <code>String</code> and string slices (<code>&amp;str</code>). The <code>String</code> type is a growable, mutable string, while string slices are references to an immutable string.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let immutable_str: &amp;str = "Hello, world!"; // String slice
    let mut mutable_string: String = String::from("Hello, Rust!"); // String

    println!("Immutable string slice: {}", immutable_str);
    println!("Mutable String: {}", mutable_string);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let immutable_str: &amp;str = "Hello, world!";</code> declares an immutable string slice.</li><li><code>let mut mutable_string: String = String::from("Hello, Rust!");</code> declares a mutable <code>String</code>.</li></ul><p><strong>2. Creating and Initializing Strings</strong></p><p>You can create and initialize strings using string literals, <code>String::from</code>, or the <code>to_string</code> method.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let string_literal = "Hello, world!";
    let from_string = String::from("Hello, Rust!");
    let to_string = "Hello, everyone!".to_string();

    println!("String literal: {}", string_literal);
    println!("String from String::from: {}", from_string);
    println!("String from to_string: {}", to_string);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let string_literal = "Hello, world!";</code> creates a string slice from a string literal.</li><li><code>let from_string = String::from("Hello, Rust!");</code> creates a <code>String</code> from a string literal.</li><li><code>let to_string = "Hello, everyone!".to_string();</code> converts a string slice to a <code>String</code>.</li></ul><p><strong>3. String Methods and Properties</strong></p><p>Rust provides various methods to manipulate strings. Some commonly used methods include:</p><ul><li><code>len()</code>: Returns the length of the string.</li><li><code>push_str()</code>: Appends a string slice to a <code>String</code>.</li><li><code>push()</code>: Appends a character to a <code>String</code>.</li><li><code>replace()</code>: Replaces all occurrences of a substring with another substring.</li><li><code>split_whitespace()</code>: Splits the string by whitespace and returns an iterator.</li></ul><p><strong>Examples:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let mut greeting = String::from("Hello");

    // len() method
    println!("Length: {}", greeting.len());

    // push_str() method
    greeting.push_str(", Rust!");
    println!("After push_str: {}", greeting);

    // push() method
    greeting.push(''!'');
    println!("After push: {}", greeting);

    // replace() method
    let new_greeting = greeting.replace("Rust", "World");
    println!("After replace: {}", new_greeting);

    // split_whitespace() method
    for word in new_greeting.split_whitespace() {
        println!("Word: {}", word);
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>greeting.len()</code> returns the length of the string.</li><li><code>greeting.push_str(", Rust!");</code> appends <code>", Rust!"</code> to the <code>greeting</code>.</li><li><code>greeting.push(''!'');</code> appends the character <code>''!''</code> to the <code>greeting</code>.</li><li><code>greeting.replace("Rust", "World");</code> replaces <code>"Rust"</code> with <code>"World"</code>.</li><li><code>new_greeting.split_whitespace()</code> splits the string by whitespace and iterates through the words.</li></ul><p><strong>4. String Concatenation</strong></p><p>Strings can be concatenated using the <code>+</code> operator or the <code>format!</code> macro.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let hello = String::from("Hello");
    let world = String::from("World");

    // Using + operator
    let hello_world = hello + " " + &amp;world + "!";
    println!("Concatenated using +: {}", hello_world);

    // Using format! macro
    let formatted = format!("{} {}!", "Hello", "Rust");
    println!("Concatenated using format!: {}", formatted);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>hello + " " + &amp;world + "!";</code> concatenates <code>hello</code>, a space, <code>world</code>, and an exclamation mark.</li><li><code>format!("{} {}!", "Hello", "Rust");</code> uses the <code>format!</code> macro to concatenate and format strings.</li></ul><p><strong>5. Slicing Strings</strong></p><p>You can create string slices to reference a part of a string.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let full_string = String::from("Hello, Rustaceans!");

    let slice1 = &amp;full_string[0..5]; // "Hello"
    let slice2 = &amp;full_string[7..11]; // "Rust"

    println!("Slice 1: {}", slice1);
    println!("Slice 2: {}", slice2);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let slice1 = &amp;full_string[0..5];</code> creates a slice containing the first five characters.</li><li><code>let slice2 = &amp;full_string[7..11];</code> creates a slice containing characters from index 7 to 10.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that takes a user''s first and last name as input, concatenates them into a full name, converts the full name to uppercase, and displays the length of the full name.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">use std::io;

fn main() {
    let mut first_name = String::new();
    let mut last_name = String::new();

    println!("Enter your first name:");
    io::stdin().read_line(&amp;mut first_name).expect("Failed to read line");
    println!("Enter your last name:");
    io::stdin().read_line(&amp;mut last_name).expect("Failed to read line");

    // Remove newline characters
    let first_name = first_name.trim();
    let last_name = last_name.trim();

    // Concatenate first name and last name
    let full_name = format!("{} {}", first_name, last_name);

    // Convert full name to uppercase
    let upper_full_name = full_name.to_uppercase();

    // Display the full name and its length
    println!("Full Name: {}", upper_full_name);
    println!("Length of Full Name: {}", upper_full_name.len());
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>io::stdin().read_line(&amp;mut first_name).expect("Failed to read line");</code> reads the first name from user input.</li><li><code>let full_name = format!("{} {}", first_name.trim(), last_name.trim());</code> concatenates the trimmed first and last names.</li><li><code>let upper_full_name = full_name.to_uppercase();</code> converts the full name to uppercase.</li><li><code>println!("Length of Full Name: {}", upper_full_name.len());</code> prints the length of the full name.</li></ul><p>By understanding and mastering strings in Rust, you will be able to handle and manipulate textual data effectively, solving complex problems with ease. This lesson builds a strong foundation for working with strings in more advanced Rust programming tasks.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('01c6d596-b4d7-455d-a1b3-461944bf1ffa', 1, '4e2864f7-f74f-4281-8b1e-71fe6bfc56d9', 'VIDEO', 'Strings in Rust FINALLY EXPLAINED!', NULL, '', 'https://www.youtube.com/watch?v=Mcuqzx3rBWc');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('eb38c10e-da31-43c9-9793-8c194ca97710', 0, '5ba5a591-f36c-4a4d-a09a-1a85dd4f42e4', 'LESSON', 'Introducing taking inputs - std::io::stdin().read_line()', NULL, '<h4>Lesson: Introducing Taking Inputs - <code>std::io::stdin().read_line()</code></h4><p><strong>Objective:</strong> Learn how to use the <code>std::io::stdin().read_line()</code> method to take input from the user in a Rust program. Understanding how to handle user input is essential for creating interactive applications.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Using </strong><code><strong>std::io::stdin().read_line()</strong></code><strong>:</strong></p><p>The <code>std::io::stdin().read_line()</code> method reads a line of text from standard input and appends it to a string. It is commonly used for taking user input.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">use std::io;

fn main() {
    let mut input = String::new();
    println!("Please enter your name:");

    io::stdin().read_line(&amp;mut input).expect("Failed to read line");
    println!("Hello, {}!", input.trim());
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>use std::io;</code>: Imports the I/O library.</li><li><code>let mut input = String::new();</code>: Declares a mutable <code>String</code> variable to store user input.</li><li><code>io::stdin().read_line(&amp;mut input).expect("Failed to read line");</code>: Reads a line from standard input and appends it to <code>input</code>.</li><li><code>input.trim()</code>: Removes any leading or trailing whitespace from the input.</li></ul><p><strong>2. Handling Errors:</strong></p><p>The <code>expect</code> method is used to handle potential errors that may occur during input reading. It provides a custom error message if the operation fails.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">use std::io;

fn main() {
    let mut input = String::new();
    println!("Enter a number:");

    io::stdin().read_line(&amp;mut input).expect("Failed to read line");

    let trimmed = input.trim();
    match trimmed.parse::&lt;i32&gt;() {
        Ok(i) =&gt; println!("You entered the number: {}", i),
        Err(_) =&gt; println!("That''s not a valid number!"),
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>match trimmed.parse::&lt;i32&gt;() { ... }</code>: Tries to parse the trimmed input as an <code>i32</code>.</li><li><code>Ok(i) =&gt; println!("You entered the number: {}", i)</code>: Prints the number if parsing is successful.</li><li><code>Err(_) =&gt; println!("That''s not a valid number!");</code>: Prints an error message if parsing fails.</li></ul><p><strong>3. Multiple Inputs:</strong></p><p>You can take multiple inputs from the user by calling <code>read_line</code> multiple times.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">use std::io;

fn main() {
    let mut first_name = String::new();
    let mut last_name = String::new();

    println!("Enter your first name:");
    io::stdin().read_line(&amp;mut first_name).expect("Failed to read line");

    println!("Enter your last name:");
    io::stdin().read_line(&amp;mut last_name).expect("Failed to read line");

    let full_name = format!("{} {}", first_name.trim(), last_name.trim());
    println!("Your full name is: {}", full_name);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let mut first_name = String::new();</code>: Declares a mutable <code>String</code> variable for the first name.</li><li><code>let mut last_name = String::new();</code>: Declares a mutable <code>String</code> variable for the last name.</li><li><code>io::stdin().read_line(&amp;mut first_name).expect("Failed to read line");</code>: Reads the first name from standard input.</li><li><code>io::stdin().read_line(&amp;mut last_name).expect("Failed to read line");</code>: Reads the last name from standard input.</li><li><code>let full_name = format!("{} {}", first_name.trim(), last_name.trim());</code>: Concatenates the first and last names.</li></ul><p><strong>4. Converting Input to Other Data Types:</strong></p><p>You often need to convert the input from a string to other data types such as integers or floats.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">use std::io;

fn main() {
    let mut input = String::new();
    println!("Enter your age:");

    io::stdin().read_line(&amp;mut input).expect("Failed to read line");

    let age: i32 = input.trim().parse().expect("Please type a number!");
    println!("You are {} years old.", age);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let age: i32 = input.trim().parse().expect("Please type a number!");</code>: Parses the trimmed input as an <code>i32</code>.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that takes a user''s name and age as input and prints a greeting message along with their age.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">use std::io;

fn main() {
    let mut name = String::new();
    let mut age_input = String::new();

    println!("Enter your name:");
    io::stdin().read_line(&amp;mut name).expect("Failed to read line");

    println!("Enter your age:");
    io::stdin().read_line(&amp;mut age_input).expect("Failed to read line");

    let age: i32 = age_input.trim().parse().expect("Please type a number!");
    println!("Hello, {}! You are {} years old.", name.trim(), age);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let mut name = String::new();</code>: Declares a mutable <code>String</code> variable for the name.</li><li><code>let mut age_input = String::new();</code>: Declares a mutable <code>String</code> variable for the age input.</li><li><code>let age: i32 = age_input.trim().parse().expect("Please type a number!");</code>: Parses the age input as an <code>i32</code>.</li><li><code>println!("Hello, {}! You are {} years old.", name.trim(), age);</code>: Prints the greeting message with the name and age.</li></ul><p>By mastering <code>std::io::stdin().read_line()</code> to take input from the user, you will be able to create interactive Rust programs that can respond to user data, making your applications more dynamic and user-friendly. This lesson lays the groundwork for more advanced input handling and processing techniques in Rust.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('282c9246-1319-4e0f-9392-dbae3852a1e7', 1, 'a6ba8a08-84ae-4655-8406-05d181e58ae3', 'VIDEO', 'Java Basics - An Overview', NULL, '', 'https://youtu.be/doxwM_gVc90?si=GVcuTo7tYVhTrbde');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('0270923f-ca5e-4676-8b8e-bf667e579a18', 1, '62513510-6e1b-4548-8b73-95427e766bb3', 'VIDEO', 'Java methods 📞', NULL, '', 'https://youtu.be/v5p_SUfi710?si=SHNA00c8OUpILr1Y');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('fa9d1c90-6bab-4220-bee4-2e33c5192485', 0, '34b88085-66f2-47cc-85d9-0db02d5dfa64', 'LESSON', 'Loops in Java', NULL, '<h3>Introduction to Loops</h3><p>Loops in Java are used to execute a block of code repeatedly based on a condition. They are essential for tasks that require repetition, such as iterating over arrays or performing repetitive operations. Java provides several types of loops:</p><ol><li><code><strong>for</strong></code><strong> Loop</strong></li><li><code><strong>while</strong></code><strong> Loop</strong></li><li><code><strong>do-while</strong></code><strong> Loop</strong></li></ol><h3>The <code>for</code> Loop</h3><p>The <code>for</code> loop is used when you know in advance how many times you want to execute a block of code. It consists of three parts: initialization, condition, and iteration.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
for (initialization; condition; iteration) {
    // Code to execute repeatedly
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
for (int i = 0; i &lt; 5; i++) {
    System.out.println("Iteration: " + i);
}
</pre><p>In this example:</p><ul><li><code>initialization</code> is <code>int i = 0</code> (the loop starts with <code>i</code> set to 0).</li><li><code>condition</code> is <code>i &lt; 5</code> (the loop continues as long as <code>i</code> is less than 5).</li><li><code>iteration</code> is <code>i++</code> (after each iteration, <code>i</code> is incremented by 1).</li></ul><h3>The <code>while</code> Loop</h3><p>The <code>while</code> loop is used when the number of iterations is not known in advance and is determined by a condition that is evaluated before each iteration.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
while (condition) {
    // Code to execute repeatedly
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int i = 0;
while (i &lt; 5) {
    System.out.println("Iteration: " + i);
    i++;
}
</pre><p>In this example:</p><ul><li><code>condition</code> is <code>i &lt; 5</code> (the loop continues as long as <code>i</code> is less than 5).</li><li><code>i++</code> is used to increment <code>i</code> within the loop body.</li></ul><h3>The <code>do-while</code> Loop</h3><p>The <code>do-while</code> loop is similar to the <code>while</code> loop, but it guarantees that the block of code will be executed at least once because the condition is evaluated after the execution of the loop body.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
do {
    // Code to execute repeatedly
} while (condition);
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int i = 0;
do {
    System.out.println("Iteration: " + i);
    i++;
} while (i &lt; 5);
</pre><p>In this example:</p><ul><li>The block of code is executed first, and then <code>condition</code> (<code>i &lt; 5</code>) is evaluated to determine if the loop should continue.</li></ul><h3>Nested Loops</h3><p>You can nest loops within each other to perform more complex iterations.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
for (int i = 0; i &lt; 3; i++) {
    for (int j = 0; j &lt; 3; j++) {
        System.out.println("i: " + i + ", j: " + j);
    }
}
</pre><p>In this example, the outer loop iterates three times, and for each iteration of the outer loop, the inner loop also iterates three times.</p><h3>Break and Continue Statements</h3><p>The <code>break</code> and <code>continue</code> statements are used to control the flow of loops.</p><ul><li><code><strong>break</strong></code>: Exits the loop immediately, regardless of the condition.</li><li><code><strong>continue</strong></code>: Skips the current iteration and proceeds to the next iteration of the loop.</li></ul><p><strong>Example using </strong><code><strong>break</strong></code><strong>:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
for (int i = 0; i &lt; 5; i++) {
    if (i == 3) {
        break; // Exit the loop when i is 3
    }
    System.out.println("i: " + i);
}
</pre><p><strong>Example using </strong><code><strong>continue</strong></code><strong>:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
for (int i = 0; i &lt; 5; i++) {
    if (i == 3) {
        continue; // Skip the rest of the loop body when i is 3
    }
    System.out.println("i: " + i);
}
</pre><h3>Example Program</h3><p>Here’s a complete example program demonstrating different types of loops:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class LoopExample {
    public static void main(String[] args) {
        // For loop
        System.out.println("For Loop:");
        for (int i = 0; i &lt; 5; i++) {
            System.out.println("Iteration: " + i);
        }

        // While loop
        System.out.println("While Loop:");
        int j = 0;
        while (j &lt; 5) {
            System.out.println("Iteration: " + j);
            j++;
        }

        // Do-while loop
        System.out.println("Do-While Loop:");
        int k = 0;
        do {
            System.out.println("Iteration: " + k);
            k++;
        } while (k &lt; 5);

        // Nested loops
        System.out.println("Nested Loops:");
        for (int x = 0; x &lt; 3; x++) {
            for (int y = 0; y &lt; 3; y++) {
                System.out.println("x: " + x + ", y: " + y);
            }
        }

        // Break and Continue
        System.out.println("Break and Continue:");
        for (int i = 0; i &lt; 5; i++) {
            if (i == 3) {
                break;
            }
            System.out.println("Break example - i: " + i);
        }

        for (int i = 0; i &lt; 5; i++) {
            if (i == 3) {
                continue;
            }
            System.out.println("Continue example - i: " + i);
        }
    }
}
</pre><h3>Conclusion</h3><p>Loops are powerful constructs in Java that allow you to execute code repeatedly based on specified conditions. Understanding how to use <code>for</code>, <code>while</code>, and <code>do-while</code> loops, along with <code>break</code> and <code>continue</code> statements, will help you manage repetitive tasks and control the flow of your programs effectively.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('cd20e221-d739-4d7a-b855-0fe1603b211d', 1, '34b88085-66f2-47cc-85d9-0db02d5dfa64', 'VIDEO', 'Introduction to Loops in Java Programming - For Beginners', NULL, '', 'https://youtu.be/tCJZiHEpHbg?si=MpEkgMgfQe_eumok');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('ee19f9b6-b558-4c65-beaa-2cdd926c8419', 0, 'b995e375-ff54-4265-b81a-5c2b1f6f3b86', 'LESSON', 'Arrays in Java', NULL, '<h3>Introduction to Arrays</h3><p>An array in Java is a data structure that allows you to store multiple values of the same type in a single variable. Arrays are useful for handling collections of data, such as lists or tables. Each element in an array is accessed using an index, which starts from 0.</p><h3>Declaring Arrays</h3><p>To use an array, you first need to declare it. Here’s how you can declare an array in Java:</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
dataType[] arrayName;
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int[] numbers;
</pre><p>In this example, <code>numbers</code> is an array of integers.</p><h3>Initializing Arrays</h3><p>After declaring an array, you need to initialize it. You can initialize an array in two main ways:</p><ol><li><strong>Using the </strong><code><strong>new</strong></code><strong> Keyword</strong></li><li>You can initialize an array with a specified size using the <code>new</code> keyword.</li><li><strong>Syntax:</strong></li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
arrayName = new dataType[size];
</pre><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
int[] numbers = new int[5]; // Array of 5 integers
</pre><ol><li><strong>Using an Array Literal</strong></li><li>You can also initialize an array with specific values at the time of declaration.</li><li><strong>Syntax:</strong></li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
dataType[] arrayName = {value1, value2, value3, ...};
</pre><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
int[] numbers = {1, 2, 3, 4, 5};
</pre><h3>Accessing Array Elements</h3><p>You can access and modify elements in an array using their index. The index starts from 0 and goes up to <code>length - 1</code>, where <code>length</code> is the size of the array.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
arrayName[index]
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int[] numbers = {1, 2, 3, 4, 5};
int firstNumber = numbers[0]; // Access the first element
numbers[2] = 10; // Modify the third element
</pre><h3>Array Length</h3><p>The <code>length</code> property of an array returns the number of elements in the array.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int[] numbers = {1, 2, 3, 4, 5};
int length = numbers.length;
System.out.println("Array length: " + length);
</pre><h3>Iterating Through Arrays</h3><p>You can use loops to iterate through the elements of an array.</p><ol><li><strong>Using a </strong><code><strong>for</strong></code><strong> Loop</strong></li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
int[] numbers = {1, 2, 3, 4, 5};
for (int i = 0; i &lt; numbers.length; i++) {
    System.out.println(numbers[i]);
}
</pre><ol><li><strong>Using an Enhanced </strong><code><strong>for</strong></code><strong> Loop</strong></li><li>The enhanced <code>for</code> loop (also known as the "for-each" loop) simplifies iterating through arrays.</li><li><strong>Syntax:</strong></li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
for (dataType element : arrayName) {
    // Code to execute for each element
}
</pre><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
int[] numbers = {1, 2, 3, 4, 5};
for (int number : numbers) {
    System.out.println(number);
}
</pre><h3>Multidimensional Arrays</h3><p>Java also supports multidimensional arrays, such as 2D arrays. A 2D array can be thought of as an array of arrays.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
dataType[][] arrayName;
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int[][] matrix = new int[3][3]; // 3x3 matrix
</pre><p>You can initialize a 2D array with values as follows:</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int[][] matrix = {
    {1, 2, 3},
    {4, 5, 6},
    {7, 8, 9}
};
</pre><p><strong>Accessing Elements:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int value = matrix[1][2]; // Access the element in the second row, third column
</pre><p><strong>Iterating Through a 2D Array:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
for (int i = 0; i &lt; matrix.length; i++) {
    for (int j = 0; j &lt; matrix[i].length; j++) {
        System.out.print(matrix[i][j] + " ");
    }
    System.out.println();
}
</pre><h3>Example Program</h3><p>Here’s a complete example demonstrating various operations with arrays:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class ArrayExample {
    public static void main(String[] args) {
        // 1D Array Declaration and Initialization
        int[] numbers = {1, 2, 3, 4, 5};

        // Accessing Elements
        System.out.println("First element: " + numbers[0]);

        // Modifying Elements
        numbers[2] = 10;

        // Printing Array Elements using for Loop
        System.out.println("Array elements:");
        for (int i = 0; i &lt; numbers.length; i++) {
            System.out.println(numbers[i]);
        }

        // Printing Array Elements using Enhanced for Loop
        System.out.println("Array elements (Enhanced for Loop):");
        for (int number : numbers) {
            System.out.println(number);
        }

        // 2D Array Declaration and Initialization
        int[][] matrix = {
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        };

        // Printing 2D Array Elements
        System.out.println("2D Array elements:");
        for (int i = 0; i &lt; matrix.length; i++) {
            for (int j = 0; j &lt; matrix[i].length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
    }
}
</pre><h3>Conclusion</h3><p>Arrays are a fundamental part of Java that allow you to manage collections of data efficiently. Understanding how to declare, initialize, access, and iterate through arrays will help you handle multiple values effectively in your Java programs. Multidimensional arrays further extend this concept, enabling more complex data structures.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c598ae41-0cfd-4a22-b0f6-bf057e3c5768', 1, 'b995e375-ff54-4265-b81a-5c2b1f6f3b86', 'VIDEO', 'Java arrays 🚗', NULL, '', 'https://youtu.be/ei_4Nt7XWOw?si=aAyI3LF0EUYA7BKi');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('08faef47-d54d-4a37-8aa4-67d50b9a4539', 0, '62513510-6e1b-4548-8b73-95427e766bb3', 'LESSON', 'Methods In Java', NULL, '<h3>Introduction to Methods</h3><p>In Java, methods are blocks of code designed to perform a specific task. They allow you to group code into reusable units, making your program more organized and easier to manage. Methods help you avoid code duplication by allowing you to call the same piece of code from multiple places.</p><h3>Defining a Method</h3><p>To define a method, you need to specify its return type, name, and parameters (if any). A method definition includes the method body enclosed in curly braces <code>{}</code>.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
returnType methodName(parameters) {
    // Code to execute
    return value; // if returnType is not void
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class Example {
    // Method that returns an integer
    public int add(int a, int b) {
        return a + b;
    }

    // Method with no return value
    public void printMessage() {
        System.out.println("Hello, world!");
    }
}
</pre><h3>Calling a Method</h3><p>You can call a method by using its name followed by parentheses. If the method requires parameters, you need to pass them inside the parentheses.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
methodName(arguments);
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class Example {
    public static void main(String[] args) {
        Example example = new Example();

        // Calling a method with a return value
        int sum = example.add(5, 10);
        System.out.println("Sum: " + sum);

        // Calling a method with no return value
        example.printMessage();
    }

    public int add(int a, int b) {
        return a + b;
    }

    public void printMessage() {
        System.out.println("Hello, world!");
    }
}
</pre><h3>Method Parameters</h3><p>Methods can accept parameters, which are variables used to pass information into the method. You can define multiple parameters, separated by commas.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class Example {
    public int multiply(int x, int y) {
        return x * y;
    }
}
</pre><p>When calling this method, you provide values for <code>x</code> and <code>y</code>:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
int product = example.multiply(4, 5);
</pre><h3>Method Return Types</h3><p>Methods can return values of any data type. If a method does not return a value, it should have a return type of <code>void</code>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class Example {
    // Method with return value
    public int square(int number) {
        return number * number;
    }

    // Method with no return value
    public void displayMessage() {
        System.out.println("This method has no return value.");
    }
}
</pre><h3>Method Overloading</h3><p>Method overloading allows you to define multiple methods with the same name but different parameter lists. The method that gets called depends on the number and type of arguments passed.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class Example {
    // Method to add two integers
    public int add(int a, int b) {
        return a + b;
    }

    // Overloaded method to add three integers
    public int add(int a, int b, int c) {
        return a + b + c;
    }
}
</pre><h3>Method Scope</h3><p>A method’s scope refers to where it can be accessed. Methods defined in a class can be called from other methods within the same class or from other classes if they are public.</p><h3>Static Methods</h3><p>Static methods belong to the class rather than any particular instance. They can be called without creating an instance of the class.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
public static returnType methodName(parameters) {
    // Code to execute
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class Example {
    public static void printStaticMessage() {
        System.out.println("This is a static method.");
    }
}
</pre><p>You can call the static method without creating an instance of the class:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
Example.printStaticMessage();
</pre><h3>Example Program</h3><p>Here’s a complete example demonstrating various aspects of methods:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class MethodExample {
    public static void main(String[] args) {
        MethodExample example = new MethodExample();

        // Calling a method with parameters and return value
        int sum = example.add(5, 10);
        System.out.println("Sum: " + sum);

        // Calling an overloaded method
        int total = example.add(1, 2, 3);
        System.out.println("Total: " + total);

        // Calling a method with no return value
        example.displayMessage();

        // Calling a static method
        MethodExample.printStaticMessage();
    }

    // Method with return value
    public int add(int a, int b) {
        return a + b;
    }

    // Overloaded method
    public int add(int a, int b, int c) {
        return a + b + c;
    }

    // Method with no return value
    public void displayMessage() {
        System.out.println("This method has no return value.");
    }

    // Static method
    public static void printStaticMessage() {
        System.out.println("This is a static method.");
    }
}
</pre><h3>Conclusion</h3><p>Methods are fundamental to organizing and structuring your Java programs. They allow you to encapsulate functionality, improve code reuse, and enhance readability. By understanding how to define, call, and manage methods, you can write more modular and maintainable code.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6283a358-69a8-4621-a187-4e15b7ba8289', 0, 'de760849-3377-4334-8d14-ba89ca34e927', 'LESSON', 'Learn print in detail', NULL, '<h3>Introduction to Printing in Java</h3><p>In Java, the <code>System.out</code> object is used to output data to the console. There are two primary methods to print data: <code>print</code> and <code>println</code>.</p><ol><li><strong>print</strong>: This method prints the text to the console.</li><li><strong>println</strong>: This method prints the text to the console and then moves the cursor to a new line.</li></ol><h3>Basic Syntax</h3><ul><li><strong>Using </strong><code><strong>print</strong></code>:</li></ul><pre class="ql-syntax" spellcheck="false">java
Copy code
System.out.print("Hello, World!");
</pre><ul><li>This will output:</li></ul><pre class="ql-syntax" spellcheck="false">Copy code
Hello, World!
</pre><ul><li><strong>Using </strong><code><strong>println</strong></code>:</li></ul><pre class="ql-syntax" spellcheck="false">java
Copy code
System.out.println("Hello, World!");
</pre><ul><li>This will output:</li></ul><pre class="ql-syntax" spellcheck="false">Copy code
Hello, World!
</pre><h3>Differences Between <code>print</code> and <code>println</code></h3><p>The main difference between <code>print</code> and <code>println</code> is that <code>println</code> adds a newline character at the end of the output, moving the cursor to the next line. This makes it easy to print multiple lines of text.</p><pre class="ql-syntax" spellcheck="false">java
Copy code
System.out.print("Hello, ");
System.out.print("World!");
</pre><p>This will output:</p><pre class="ql-syntax" spellcheck="false">Copy code
Hello, World!
java
Copy code
System.out.println("Hello, ");
System.out.println("World!");
</pre><p>This will output:</p><pre class="ql-syntax" spellcheck="false">Copy code
Hello,
World!
</pre><h3>Printing Variables</h3><p>You can also print variables using <code>print</code> and <code>println</code>.</p><pre class="ql-syntax" spellcheck="false">java
Copy code
int number = 10;
System.out.print("The number is: ");
System.out.println(number);
</pre><p>This will output:</p><pre class="ql-syntax" spellcheck="false">csharp
Copy code
The number is: 10
</pre><h3>Formatting Output</h3><p>Java provides the <code>printf</code> method for formatted output. It works similarly to the <code>printf</code> function in C.</p><pre class="ql-syntax" spellcheck="false">java
Copy code
int number = 10;
String name = "Alice";
System.out.printf("Hello, %s! You have %d new messages.\n", name, number);
</pre><p>This will output:</p><pre class="ql-syntax" spellcheck="false">arduino
Copy code
Hello, Alice! You have 10 new messages.
</pre><h3>Escape Sequences</h3><p>You can use escape sequences to format your output.</p><ul><li><code>\n</code>: Newline</li><li><code>\t</code>: Tab</li><li><code>\\</code>: Backslash</li><li><code>\"</code>: Double quote</li></ul><pre class="ql-syntax" spellcheck="false">java
Copy code
System.out.println("Hello, \nWorld!");
System.out.println("A tab:\tHere");
System.out.println("Backslash:\\");
System.out.println("Quote:\"");
</pre><p>This will output:</p><pre class="ql-syntax" spellcheck="false">less
Copy code
Hello,
World!
A tab:	Here
Backslash:\
Quote:"
</pre><h3>Example Program</h3><p>Here''s a complete example program demonstrating the use of <code>print</code>, <code>println</code>, and <code>printf</code> methods:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class PrintExample {
    public static void main(String[] args) {
        // Using print
        System.out.print("This is a print example.");
        System.out.print(" No newline after this.");

        // Using println
        System.out.println(" This is a println example.");
        System.out.println("This is another println example.");

        // Printing variables
        int number = 42;
        double price = 19.99;
        String name = "Java";
        System.out.println("Number: " + number);
        System.out.println("Price: " + price);
        System.out.println("Name: " + name);

        // Using printf
        System.out.printf("Name: %s, Number: %d, Price: %.2f\n", name, number, price);

        // Using escape sequences
        System.out.println("This is a line with a newline\nand a tab\tand a quote: \"");
    }
}
</pre><h3>Conclusion</h3><p>Understanding how to use <code>print</code>, <code>println</code>, and <code>printf</code> effectively is essential for creating readable and user-friendly console applications in Java. Practice these methods with various data types and formatting options to become more proficient.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('01ca9729-6c79-414c-8819-4390e167d529', 1, 'de760849-3377-4334-8d14-ba89ca34e927', 'VIDEO', 'What Is Java? | Java In 5 Minutes | Java Programming | Java Tutorial For Beginners | Simplilearn', NULL, '', 'https://youtu.be/mAtkPQO1FcA?si=KgglCgcDoZicuMQ6');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('adc19e75-7be4-4218-9802-8fb8d192ca4d', 2, 'de760849-3377-4334-8d14-ba89ca34e927', 'CODE', 'Print Sum Of Two Integers', 'b6484e21-6937-489c-b031-b71767994221', 'Sum of two integer', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('57310739-6d40-422c-850d-e75bdc3e3328', 0, 'a6ba8a08-84ae-4655-8406-05d181e58ae3', 'LESSON', 'Variables and Data Types in Java', NULL, '<h3>Introduction to Variables</h3><p>Variables in Java are used to store data that can be used and manipulated throughout your program. Each variable has a data type that determines what kind of data it can hold.</p><h3>Declaring Variables</h3><p>To declare a variable in Java, you need to specify the data type followed by the variable name.</p><pre class="ql-syntax" spellcheck="false">java
Copy code
int number;
</pre><h3>Initializing Variables</h3><p>You can initialize a variable when you declare it by assigning it a value.</p><pre class="ql-syntax" spellcheck="false">java
Copy code
int number = 10;
</pre><h3>Basic Data Types</h3><p>Java has several built-in data types, divided into two categories: primitive data types and reference data types.</p><h4>Primitive Data Types</h4><ol><li><strong>byte</strong>: 8-bit signed integer.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
byte b = 100;
</pre><ol><li><strong>short</strong>: 16-bit signed integer.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
short s = 10000;
</pre><ol><li><strong>int</strong>: 32-bit signed integer.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
int i = 100000;
</pre><ol><li><strong>long</strong>: 64-bit signed integer.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
long l = 100000L;
</pre><ol><li><strong>float</strong>: 32-bit floating-point number.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
float f = 10.5f;
</pre><ol><li><strong>double</strong>: 64-bit floating-point number.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
double d = 20.5;
</pre><ol><li><strong>boolean</strong>: Represents true or false.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
boolean flag = true;
</pre><ol><li><strong>char</strong>: 16-bit Unicode character.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
char c = ''A'';
</pre><h4>Reference Data Types</h4><p>Reference data types include classes, arrays, and interfaces.</p><ol><li><strong>String</strong>: Represents a sequence of characters.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
String str = "Hello, Java!";
</pre><h3>Type Casting</h3><p>Type casting is converting one data type to another. There are two types of casting:</p><ol><li><strong>Implicit Casting (Widening Conversion)</strong>: Automatically done by Java.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
int i = 100;
double d = i;  // Implicit casting
</pre><ol><li><strong>Explicit Casting (Narrowing Conversion)</strong>: Must be done manually.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
double d = 100.5;
int i = (int) d;  // Explicit casting
</pre><h3>Example Program</h3><p>Here''s a complete example program demonstrating variables and data types in Java:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class VariablesExample {
    public static void main(String[] args) {
        // Primitive data types
        byte b = 100;
        short s = 10000;
        int i = 100000;
        long l = 100000L;
        float f = 10.5f;
        double d = 20.5;
        boolean flag = true;
        char c = ''A'';

        // Reference data type
        String str = "Hello, Java!";

        // Printing variables
        System.out.println("Byte value: " + b);
        System.out.println("Short value: " + s);
        System.out.println("Int value: " + i);
        System.out.println("Long value: " + l);
        System.out.println("Float value: " + f);
        System.out.println("Double value: " + d);
        System.out.println("Boolean value: " + flag);
        System.out.println("Char value: " + c);
        System.out.println("String value: " + str);

        // Type casting
        int intVal = 100;
        double doubleVal = intVal;  // Implicit casting
        System.out.println("Implicitly casted double value: " + doubleVal);

        double anotherDouble = 100.5;
        int anotherInt = (int) anotherDouble;  // Explicit casting
        System.out.println("Explicitly casted int value: " + anotherInt);
    }
}
</pre><h3>Conclusion</h3><p>Understanding variables and data types is fundamental in Java programming. By mastering these concepts, you can effectively store and manipulate data in your applications.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a2d550b1-c925-4eb3-a751-6407e8c39523', 0, '9ce115e6-aaef-4743-9fb2-db64c86c4acd', 'LESSON', 'Arithmetic Operators in Java', NULL, '<h3>Introduction to Arithmetic Operators</h3><p>Arithmetic operators in Java are used to perform basic mathematical operations such as addition, subtraction, multiplication, and division. These operators are fundamental for any programming task that involves numerical calculations.</p><h3>Addition (<code>+</code>)</h3><p>The addition operator <code>+</code> is used to add two operands. It can be used with both integers and floating-point numbers.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int a = 10;
int b = 5;
int sum = a + b;
System.out.println("The sum of a and b is: " + sum);
</pre><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">css
Copy code
The sum of a and b is: 15
</pre><h3>Subtraction (<code>-</code>)</h3><p>The subtraction operator <code>-</code> is used to subtract the right operand from the left operand.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int a = 10;
int b = 5;
int difference = a - b;
System.out.println("The difference between a and b is: " + difference);
</pre><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">css
Copy code
The difference between a and b is: 5
</pre><h3>Multiplication (<code>*</code>)</h3><p>The multiplication operator <code>*</code> is used to multiply two operands.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int a = 10;
int b = 5;
int product = a * b;
System.out.println("The product of a and b is: " + product);
</pre><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">css
Copy code
The product of a and b is: 50
</pre><h3>Division (<code>/</code>)</h3><p>The division operator <code>/</code> is used to divide the left operand by the right operand. When using integers, the result will also be an integer, meaning the decimal part will be truncated.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int a = 10;
int b = 5;
int quotient = a / b;
System.out.println("The quotient when a is divided by b is: " + quotient);
</pre><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">csharp
Copy code
The quotient when a is divided by b is: 2
</pre><p><strong>Note:</strong> If you want to obtain a floating-point result, at least one of the operands must be a floating-point number.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
double a = 10;
double b = 4;
double quotient = a / b;
System.out.println("The quotient when a is divided by b is: " + quotient);
</pre><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">csharp
Copy code
The quotient when a is divided by b is: 2.5
</pre><h3>Example Program</h3><p>Here''s a complete example program demonstrating the use of arithmetic operators in Java:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class ArithmeticOperatorsExample {
    public static void main(String[] args) {
        int a = 10;
        int b = 5;
        double c = 10.0;
        double d = 4.0;

        // Addition
        int sum = a + b;
        System.out.println("The sum of a and b is: " + sum);

        // Subtraction
        int difference = a - b;
        System.out.println("The difference between a and b is: " + difference);

        // Multiplication
        int product = a * b;
        System.out.println("The product of a and b is: " + product);

        // Integer Division
        int quotientInt = a / b;
        System.out.println("The quotient when a is divided by b (integer division) is: " + quotientInt);

        // Floating-point Division
        double quotientDouble = c / d;
        System.out.println("The quotient when c is divided by d (floating-point division) is: " + quotientDouble);
    }
}
</pre><h3>Conclusion</h3><p>Understanding and using arithmetic operators is essential for performing mathematical calculations in Java. Practice these operators with different types of operands to become more proficient in handling numerical data in your programs.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('bbe57580-dd18-46da-96d4-30ac7d80d0cc', 1, '9ce115e6-aaef-4743-9fb2-db64c86c4acd', 'VIDEO', 'Arithmetic Operators in Java', NULL, '', 'https://youtu.be/flWjzwzgybI?si=PIhMWR1NXPjALguT');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('fa8cfaa6-2507-479a-a7d8-1934441efcde', 0, '4bbff1c6-51e5-4c6d-b5eb-0335f9b718cd', 'LESSON', 'Strings In Java', NULL, '<h3>Introduction to Strings</h3><p>Strings in Java are objects that represent sequences of characters. They are used to store and manipulate text. Unlike primitive data types, strings are instances of the <code>String</code> class.</p><h3>Creating Strings</h3><p>You can create a string in Java in several ways:</p><ol><li><strong>Using String Literals</strong></li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
String greeting = "Hello, World!";
</pre><ol><li><strong>Using the </strong><code><strong>new</strong></code><strong> Keyword</strong></li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
String greeting = new String("Hello, World!");
</pre><h3>String Methods</h3><p>Java provides a variety of methods to manipulate strings. Here are some commonly used string methods:</p><ol><li><strong>Length of a String</strong></li><li>The <code>length()</code> method returns the number of characters in a string.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
String str = "Hello, World!";
int length = str.length();
System.out.println("Length of the string: " + length);
</pre><ol><li><strong>Concatenation</strong></li><li>You can concatenate two strings using the <code>+</code> operator or the <code>concat()</code> method.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
String str1 = "Hello";
String str2 = "World";
String result = str1 + ", " + str2 + "!";
System.out.println(result);

String result2 = str1.concat(", ").concat(str2).concat("!");
System.out.println(result2);
</pre><ol><li><strong>Character at a Specific Index</strong></li><li>The <code>charAt()</code> method returns the character at a specific index.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
String str = "Hello, World!";
char ch = str.charAt(0);
System.out.println("Character at index 0: " + ch);
</pre><ol><li><strong>Substring</strong></li><li>The <code>substring()</code> method extracts a part of the string.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
String str = "Hello, World!";
String sub = str.substring(7, 12);
System.out.println("Substring: " + sub);
</pre><ol><li><strong>Contains</strong></li><li>The <code>contains()</code> method checks if a string contains a specified sequence of characters.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
String str = "Hello, World!";
boolean contains = str.contains("World");
System.out.println("Contains ''World'': " + contains);
</pre><ol><li><strong>Replace</strong></li><li>The <code>replace()</code> method replaces all occurrences of a specified character or substring with another character or substring.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
String str = "Hello, World!";
String replacedStr = str.replace("World", "Java");
System.out.println("Replaced String: " + replacedStr);
</pre><ol><li><strong>Equals</strong></li><li>The <code>equals()</code> method compares two strings for equality.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
String str1 = "Hello";
String str2 = "Hello";
boolean isEqual = str1.equals(str2);
System.out.println("Strings are equal: " + isEqual);
</pre><h3>String Immutability</h3><p>Strings in Java are immutable, which means once a string is created, it cannot be changed. Any operation that modifies a string will result in the creation of a new string.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
String str = "Hello";
str = str.concat(", World!");
System.out.println(str); // Output: Hello, World!
</pre><h3>Example Program</h3><p>Here''s a complete example program demonstrating the use of strings in Java:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class StringExample {
    public static void main(String[] args) {
        // Creating strings
        String greeting = "Hello, World!";
        String greetingNew = new String("Hello, World!");

        // Length of the string
        int length = greeting.length();
        System.out.println("Length of the string: " + length);

        // Concatenation
        String str1 = "Hello";
        String str2 = "World";
        String result = str1 + ", " + str2 + "!";
        System.out.println(result);

        String result2 = str1.concat(", ").concat(str2).concat("!");
        System.out.println(result2);

        // Character at a specific index
        char ch = greeting.charAt(0);
        System.out.println("Character at index 0: " + ch);

        // Substring
        String sub = greeting.substring(7, 12);
        System.out.println("Substring: " + sub);

        // Contains
        boolean contains = greeting.contains("World");
        System.out.println("Contains ''World'': " + contains);

        // Replace
        String replacedStr = greeting.replace("World", "Java");
        System.out.println("Replaced String: " + replacedStr);

        // Equals
        boolean isEqual = str1.equals(str2);
        System.out.println("Strings are equal: " + isEqual);
    }
}
</pre><h3>Conclusion</h3><p>Understanding strings and their methods is essential for manipulating text in Java. Strings are versatile and powerful, allowing you to perform a wide range of operations, from simple concatenation to complex transformations.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('e62daba7-70da-463b-a996-d6fb12fd2a69', 1, '4bbff1c6-51e5-4c6d-b5eb-0335f9b718cd', 'VIDEO', 'What is String in Java', NULL, '', 'https://youtu.be/cV-sOpOgof8?si=Bz8rVYwb6upCUYhi');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a3a0f7b7-b998-49cd-a6c4-7a81ac589dd0', 2, '4bbff1c6-51e5-4c6d-b5eb-0335f9b718cd', 'CODE', 'English Alphabet Printing', 'b6484e21-6937-489c-b031-b71767994757', 'English alphabet printing', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('58396b7e-9044-4b91-bf07-c1ec7e007eac', 1, '5ba5a591-f36c-4a4d-a09a-1a85dd4f42e4', 'VIDEO', 'Reading user input in Rust', NULL, '', 'https://www.youtube.com/watch?v=3tXY1StzlGs');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('95dc53e2-0350-46fc-af2a-65bb94d2bebf', 0, '567446cf-e4dd-45a6-93c1-9b539a9c4f2e', 'LESSON', 'User Inputs In Java', NULL, '<h3>Introduction to User Inputs</h3><p>In Java, handling user input is crucial for interactive programs. The <code>Scanner</code> class is commonly used to read data from various input sources, such as the keyboard. This lesson will guide you through the basics of using the <code>Scanner</code> class to get user inputs in Java.</p><h3>Importing the Scanner Class</h3><p>To use the <code>Scanner</code> class, you need to import it from the <code>java.util</code> package.</p><pre class="ql-syntax" spellcheck="false">java
Copy code
import java.util.Scanner;
</pre><h3>Creating a Scanner Object</h3><p>You can create an instance of the <code>Scanner</code> class by passing <code>System.in</code> to its constructor, which allows it to read from the keyboard.</p><pre class="ql-syntax" spellcheck="false">java
Copy code
Scanner scanner = new Scanner(System.in);
</pre><h3>Reading User Inputs</h3><p>The <code>Scanner</code> class provides several methods to read different types of data. Here’s how you can use these methods:</p><ol><li><strong>Reading an Integer</strong></li><li>To read an integer value, use the <code>nextInt()</code> method.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
Scanner scanner = new Scanner(System.in);
System.out.print("Enter an integer: ");
int number = scanner.nextInt();
System.out.println("You entered: " + number);
</pre><ol><li><strong>Reading a Floating-Point Number</strong></li><li>To read a floating-point number, use the <code>nextDouble()</code> method.</li></ol><pre class="ql-syntax" spellcheck="false">java
Copy code
System.out.print("Enter a floating-point number: ");
double decimal = scanner.nextDouble();
System.out.println("You entered: " + decimal);
</pre><ol><li><strong>Reading a String</strong></li><li>To read a single word or a line of text, use the <code>next()</code> or <code>nextLine()</code> methods.</li></ol><ul><li><strong>Reading a Single Word</strong></li></ul><pre class="ql-syntax" spellcheck="false">java
Copy code
System.out.print("Enter a single word: ");
String word = scanner.next();
System.out.println("You entered: " + word);
</pre><ul><li><strong>Reading a Line of Text</strong></li></ul><pre class="ql-syntax" spellcheck="false">java
Copy code
System.out.print("Enter a line of text: ");
scanner.nextLine(); // consume the newline left-over
String line = scanner.nextLine();
System.out.println("You entered: " + line);
</pre><h3>Example Program</h3><p>Here is a complete example program demonstrating various types of user inputs:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
import java.util.Scanner;

public class UserInputExample {
    public static void main(String[] args) {
        // Create a Scanner object
        Scanner scanner = new Scanner(System.in);

        // Reading an integer
        System.out.print("Enter an integer: ");
        int number = scanner.nextInt();
        System.out.println("You entered: " + number);

        // Reading a floating-point number
        System.out.print("Enter a floating-point number: ");
        double decimal = scanner.nextDouble();
        System.out.println("You entered: " + decimal);

        // Reading a single word
        System.out.print("Enter a single word: ");
        scanner.nextLine(); // consume the newline left-over
        String word = scanner.next();
        System.out.println("You entered: " + word);

        // Reading a line of text
        System.out.print("Enter a line of text: ");
        scanner.nextLine(); // consume the newline left-over
        String line = scanner.nextLine();
        System.out.println("You entered: " + line);

        // Close the scanner
        scanner.close();
    }
}
</pre><h3>Handling Input Mismatches</h3><p>If the user inputs data that doesn’t match the expected type, the <code>Scanner</code> will throw an <code>InputMismatchException</code>. To handle this, you can use exception handling techniques:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
import java.util.Scanner;
import java.util.InputMismatchException;

public class SafeInputExample {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        try {
            System.out.print("Enter an integer: ");
            int number = scanner.nextInt();
            System.out.println("You entered: " + number);
        } catch (InputMismatchException e) {
            System.out.println("Invalid input. Please enter an integer.");
        }

        scanner.close();
    }
}
</pre><h3>Conclusion</h3><p>Handling user inputs in Java is straightforward using the <code>Scanner</code> class. By understanding the various methods provided by <code>Scanner</code>, you can effectively capture and process user data. Remember to handle potential exceptions to make your programs more robust and user-friendly.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('90aaf174-feaf-4b3a-912d-ff1eb5e1c62d', 1, '567446cf-e4dd-45a6-93c1-9b539a9c4f2e', 'VIDEO', 'User Input using BufferedReader and Scanner in Java', NULL, '', 'https://youtu.be/bwHr9G5VIls?si=IE2R7vrgWlfdiVuu');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('7c946695-508a-4cce-b20a-2e30f911c1cc', 0, '259f29ff-ba18-4417-bafd-9e1c4c1319d2', 'LESSON', 'Conditional Statements In Java', NULL, '<h3>Introduction to Conditional Statements</h3><p>Conditional statements are used to make decisions in Java programs. They allow you to execute certain blocks of code based on whether a condition is true or false. Java provides several types of conditional statements:</p><ol><li><code><strong>if</strong></code><strong> Statement</strong></li><li><code><strong>if-else</strong></code><strong> Statement</strong></li><li><code><strong>if-else if-else</strong></code><strong> Statement</strong></li><li><code><strong>switch</strong></code><strong> Statement</strong></li></ol><h3>The <code>if</code> Statement</h3><p>The <code>if</code> statement allows you to execute a block of code if a specified condition evaluates to true.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
if (condition) {
    // Code to execute if condition is true
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int age = 20;
if (age &gt;= 18) {
    System.out.println("You are an adult.");
}
</pre><h3>The <code>if-else</code> Statement</h3><p>The <code>if-else</code> statement allows you to execute one block of code if the condition is true and another block if the condition is false.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
if (condition) {
    // Code to execute if condition is true
} else {
    // Code to execute if condition is false
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int age = 16;
if (age &gt;= 18) {
    System.out.println("You are an adult.");
} else {
    System.out.println("You are not an adult.");
}
</pre><h3>The <code>if-else if-else</code> Statement</h3><p>The <code>if-else if-else</code> statement allows you to test multiple conditions. If the first condition is false, it tests the next condition, and so on.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
if (condition1) {
    // Code to execute if condition1 is true
} else if (condition2) {
    // Code to execute if condition2 is true
} else {
    // Code to execute if none of the above conditions are true
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int score = 85;
if (score &gt;= 90) {
    System.out.println("Grade: A");
} else if (score &gt;= 80) {
    System.out.println("Grade: B");
} else if (score &gt;= 70) {
    System.out.println("Grade: C");
} else {
    System.out.println("Grade: F");
}
</pre><h3>The <code>switch</code> Statement</h3><p>The <code>switch</code> statement is used to select one of many code blocks to be executed. It is a more elegant way to handle multiple conditions based on the value of a variable.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
switch (expression) {
    case value1:
        // Code to execute if expression equals value1
        break;
    case value2:
        // Code to execute if expression equals value2
        break;
    // More cases as needed
    default:
        // Code to execute if none of the cases match
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int day = 3;
switch (day) {
    case 1:
        System.out.println("Monday");
        break;
    case 2:
        System.out.println("Tuesday");
        break;
    case 3:
        System.out.println("Wednesday");
        break;
    case 4:
        System.out.println("Thursday");
        break;
    case 5:
        System.out.println("Friday");
        break;
    case 6:
        System.out.println("Saturday");
        break;
    case 7:
        System.out.println("Sunday");
        break;
    default:
        System.out.println("Invalid day");
}
</pre><h3>Nested Conditional Statements</h3><p>You can nest conditional statements within each other to create more complex logic.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">java
Copy code
int age = 25;
boolean hasTicket = true;

if (age &gt;= 18) {
    if (hasTicket) {
        System.out.println("You can enter the event.");
    } else {
        System.out.println("You need a ticket to enter.");
    }
} else {
    System.out.println("You are not allowed to enter.");
}
</pre><h3>Example Program</h3><p>Here’s a complete example demonstrating the use of conditional statements:</p><pre class="ql-syntax" spellcheck="false">java
Copy code
public class ConditionalExample {
    public static void main(String[] args) {
        int number = 15;

        // Using if-else
        if (number % 2 == 0) {
            System.out.println(number + " is even.");
        } else {
            System.out.println(number + " is odd.");
        }

        // Using switch
        int day = 5;
        switch (day) {
            case 1:
                System.out.println("Monday");
                break;
            case 2:
                System.out.println("Tuesday");
                break;
            case 3:
                System.out.println("Wednesday");
                break;
            case 4:
                System.out.println("Thursday");
                break;
            case 5:
                System.out.println("Friday");
                break;
            case 6:
                System.out.println("Saturday");
                break;
            case 7:
                System.out.println("Sunday");
                break;
            default:
                System.out.println("Invalid day");
        }
    }
}
</pre><h3>Conclusion</h3><p>Conditional statements are essential for controlling the flow of your Java programs. They enable your code to make decisions and perform different actions based on various conditions. Understanding and using these statements effectively will help you build more dynamic and responsive applications.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('de5e09b5-7a12-4d70-a338-3291b5306513', 1, '259f29ff-ba18-4417-bafd-9e1c4c1319d2', 'VIDEO', 'Conditional Statements | If-else, Switch Break | Complete Java Placement Course | Lecture 3', NULL, '', 'https://youtu.be/I5srDu75h_M?si=k67GK5hib7Qmt_j0');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('7dc6df9e-658c-40d7-99bc-776f2f7280a2', 2, '259f29ff-ba18-4417-bafd-9e1c4c1319d2', 'CODE', 'Determine Number Of Days In A Month', 'b6484e21-6937-489c-b031-b71767994761', 'Determine number of days in a month', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('3dcb036d-4358-48c1-8268-8a2b31546d84', 0, '6c08d79b-4fd6-4369-99ea-322078e55307', 'LESSON', 'Hello World!', NULL, '<p>Take a look at the&nbsp;<strong>hello.cpp</strong>&nbsp;file in the code editor that is placed in the middle of the screen. It’s a C++ program!</p><p>In our code editor, the file name is displayed at the top:</p><p><img src="https://i.ibb.co/SPphDcX/image.png"></p><p><a href="https://www.codecademy.com/resources/docs/cpp?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">C++</a>&nbsp;programs are stored in&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/files" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">files</a>&nbsp;which usually have the file extension&nbsp;<strong>.cpp</strong>, which simply stands for “C Plus Plus”.</p><p>The code inside our C++ file is a classic first step all new programmers take — they greet the world through the terminal!</p><p>The&nbsp;<a href="https://www.codecademy.com/resources/docs/command-line/terminal?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;"><em>terminal</em></a>&nbsp;is the black panel on the right. It should be blank right now. The code in the text editor will print text out onto the terminal. More specifically, it will print the phrase&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">Hello World!</code>.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c19ab4d0-26bd-4440-8bf7-bc4b73bd2fcd', 1, '6c08d79b-4fd6-4369-99ea-322078e55307', 'CODE', 'Calculate sum of cubes', 'b6484e21-6937-489c-b031-b71767994756', 'Calculate sum of cubes', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('efbeb31a-60e7-4296-a133-fcd293998895', 2, '6c08d79b-4fd6-4369-99ea-322078e55307', 'LESSON', 'Compile & Excute', NULL, '<h3>Code → Save → Compile → Execute</h3><p>C++ is a compiled language. That means that to get a C++ program to run, you must first translate it from a human-readable form to something a machine can “understand.” That translation is done by a program called a&nbsp;<em>compiler</em>.</p><p>When you program in C++, you mainly go through 4 phases during development:</p><ol><li><strong>Code</strong>&nbsp;— writing the program</li><li><strong>Save</strong>&nbsp;— saving the program</li><li><strong>Compile</strong>&nbsp;— compiling via the&nbsp;<a href="https://www.codecademy.com/resources/docs/command-line/terminal" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">terminal</a></li><li><strong>Execute</strong>&nbsp;— executing via the terminal</li></ol><p>And repeat (debug the&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/errors" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">errors</a>&nbsp;if needed).</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('099ff9aa-0b78-4892-9654-cea67d385d41', 3, '6c08d79b-4fd6-4369-99ea-322078e55307', 'LESSON', 'Compile & Execute (Advanced)', NULL, '<h2>The Process</h2><p>C++ is a compiled language. That means that to get a program to run, you must first translate it from the human-readable form to something a machine can “understand.” That translation is done by a program called a&nbsp;<em>compiler</em>.</p><p>What you read and write is called&nbsp;<em>source code</em>&nbsp;(usually it’s in an English-like language like C++), and what the computer executes is called&nbsp;<em>executable</em>,&nbsp;<em>object code</em>, or&nbsp;<a href="https://www.codecademy.com/resources/docs/general/machine-code?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;"><em>machine code</em></a>&nbsp;(a machine language).</p><p>Typically C++ source code files are given the suffix:</p><ul><li><strong>.cpp</strong>&nbsp;(ex:&nbsp;<strong>hello.cpp</strong>) or</li><li><strong>.h</strong>&nbsp;(ex:&nbsp;<strong>std_lib_facilities.h</strong>).</li></ul><p><img src="https://i.ibb.co/mq0FwpL/image.png"></p><h4>Compile:</h4><pre class="ql-syntax" spellcheck="false">g++ hello.cpp -o hello

</pre><p>A compiler translates the C++ program into machine language code which it stores on the disk as a file with the extension&nbsp;<strong>.o</strong>&nbsp;(e.g.&nbsp;<strong>hello.o</strong>). A linker then links the object code with standard library routines that the program may use and creates an executable image which is also saved on disk, usually as a file with the file name without any extension (e.g.&nbsp;<strong>hello</strong>).</p><h4>Execute:</h4><pre class="ql-syntax" spellcheck="false">./hello

</pre><p>The executable is loaded from the disk to memory and the computer’s&nbsp;<a href="https://www.codecademy.com/resources/docs/general/computer-hardware/cpu?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">CPU</a>&nbsp;(<strong>C</strong>entral&nbsp;<strong>P</strong>rocessing&nbsp;<strong>U</strong>nit) executes the program one instruction at a time.</p><h4>Running Hello World Locally:</h4><p>On the Mac, it’s called the&nbsp;<a href="https://www.codecademy.com/resources/docs/command-line/terminal?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">Terminal</a>. On Windows, it’s called the Command Prompt.</p><p><span style="background-color: rgb(255, 255, 255); color: rgb(255, 255, 255);"><img src="https://i.imgur.com/GQLYcJI.png"></span></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('69c78499-bb6b-4a9e-8e07-7d1c623d0af8', 4, '6c08d79b-4fd6-4369-99ea-322078e55307', 'VIDEO', 'Running Hello World via Terminal (Mac)', NULL, '', 'https://www.youtube.com/watch?v=N4796qsD-H8');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a36f857e-e2f7-4a9a-8c22-ebea4acbb93a', 5, '6c08d79b-4fd6-4369-99ea-322078e55307', 'VIDEO', 'Running Hello World via Command Prompt (Windows)', NULL, '', 'https://www.youtube.com/watch?v=GxHLErBLgI8');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('0c76cd5a-4aeb-4c86-abbc-94d8fa9e0f84', 0, '88515ed4-0b74-47d8-9279-0d47c2a21ef4', 'LESSON', 'Variables', NULL, '<h3>Introduction to Variables</h3><p>1 min</p><p>The&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">"Hello World!"</code>&nbsp;program simply writes to the screen. It does not read anything, calculate anything, or allow for&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/user-input" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">user input</a>. That’s no fun!</p><p>Real programs tend to produce results based on some input that the user of the program gives, rather than just outputting the same thing every time.</p><p>To read something from the keyboard, we first need somewhere in the computer’s memory to&nbsp;<em>store data</em>. That is where variables come in.</p><p>A&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/variables?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;"><strong>variable</strong></a>&nbsp;is simply a name that represents a particular piece of your computer’s memory that has been set aside for you to store, retrieve, and use data.</p><p>In this lesson, we will learn about some of the basic&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/data-types?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">data types</a>:</p><ul><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">int</code>: integer numbers</li><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">double</code>: floating-point numbers</li><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">char</code>: individual characters</li><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">string</code>: a sequence of characters</li><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">bool</code>: true/false values</li></ul><p>Every variable has a&nbsp;<strong>type</strong>, which represents the kind of information you can store inside of it. It tells your compiler how much memory to set aside for the variable, and it defines what you can do with the variable.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9d57c570-118e-4af8-82ea-4e0c627512bc', 1, '88515ed4-0b74-47d8-9279-0d47c2a21ef4', 'LESSON', 'Basic Data Types', NULL, '<h4>Basic Data Types:</h4><p><a href="https://www.codecademy.com/resources/docs/cpp?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">C++</a>&nbsp;provides a rather large number of&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/data-types?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">types</a>. However, you can write perfectly good programs using only five of those:</p><p><span style="background-color: rgb(255, 255, 255); color: var(--color-text);"><img src="https://content.codecademy.com/courses/learn-cpp/variables/data-types.gif"></span></p><p>Here are some examples of declaring and initializing&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/variables?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">variables</a>:</p><pre class="ql-syntax" spellcheck="false">int age =&nbsp;28;

double price =&nbsp;8.99;

char grade =&nbsp;''A'';

std::string message =&nbsp;"Game Over";

bool late_to_work =&nbsp;true;

</pre><h4>Datatype Modifiers:</h4><p>As the name implies, datatype modifiers are used with built-in data types to modify the length of data that a particular data type can hold. Data type modifiers in C++ are:</p><ul><li><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>signed</strong></code></li><li><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>unsigned</strong></code></li><li><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>short</strong></code></li><li><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>long</strong></code></li></ul><p>We will learn about these in a bit!</p><h4>Const:</h4><p><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>const</strong></code>&nbsp;(constant) variables cannot be changed by your program during execution.</p><pre class="ql-syntax" spellcheck="false">const double quarter =&nbsp;0.25;

// and now variable quarter can only be 0.25

</pre><p>Simply add the keyword&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>const</strong></code>&nbsp;before the data type during declaration to make the variable not modifiable.</p><h4>Type Conversion:</h4><p>A type cast is basically a conversion from one type to another.</p><p>The notation&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>(type) value</strong></code>&nbsp;means “convert&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>value</strong></code>&nbsp;to&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>type</strong></code>“. So for example:</p><pre class="ql-syntax" spellcheck="false">double weight1;
int weight2;

weight1 =&nbsp;154.49;
weight2 =&nbsp;(int) weight1;

// weight2 is now 154

</pre><p><strong>Note:</strong>&nbsp;Going from a&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>double</strong></code>&nbsp;to an&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>int</strong></code>&nbsp;simply removes the decimal. There’s no rounding involved.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6147f0ef-ff4f-46d8-921a-a1a3fc5ad0a0', 2, '88515ed4-0b74-47d8-9279-0d47c2a21ef4', 'VIDEO', 'C++ Data Types', NULL, '', 'https://www.youtube.com/watch?v=8GJqjFoY7UQ');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d84a5566-793a-4da3-acf3-1163c8fdd745', 3, '88515ed4-0b74-47d8-9279-0d47c2a21ef4', 'CODE', 'Sign number', 'b6484e21-6937-489c-b031-b71767994750', 'Same sign number', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9592bc3e-874d-4d62-9b06-877d2ad79998', 4, '88515ed4-0b74-47d8-9279-0d47c2a21ef4', 'VIDEO', 'Data type sizes', NULL, '', 'https://www.youtube.com/watch?v=Bgs9PxHuF1M');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('4ee891ca-5117-425e-a226-288b50190375', 0, '75c1b5b9-370d-4c24-9335-56c5dbd43c51', 'LESSON', 'Conditionals & Logic', NULL, '<h3>Introduction to Conditionals &amp; Logic</h3><p>&lt;1 min</p><p>Every program we’ve seen so far has only had one possible path of execution — they all execute line by line, from top to bottom. And every time you run one of those programs, it gives you the same exact result. But it’s the twenty-first century, and we like options!</p><p>In this lesson, we will explore how programs make decisions by evaluating conditions and introduce logic into our code!</p><p>We’ll be covering the following concepts:</p><ul><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">if</code>,&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">else if</code>, and&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">else</code>&nbsp;statements</li><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);"><a href="https://www.codecademy.com/resources/docs/cpp/switch?page_ref=catalog" rel="noopener noreferrer" target="_blank">switch</a></code>&nbsp;statements</li><li><a href="https://www.codecademy.com/resources/docs/cpp/operators?page_ref=cataloglink" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">Relational operators</a></li><li><a href="https://www.codecademy.com/resources/docs/cpp/operators?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">Logical operators</a></li></ul><p>So…&nbsp;<em>if</em>&nbsp;you’ve already learned these concepts in another language, go to the next lesson —&nbsp;<em>else</em>, prepare yourself and let’s get started!</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('bee705ff-3fd4-4b5d-bc8a-4d6e2157617b', 0, '240d7ad7-391e-4a5a-8fe0-3dfcc4a46d1f', 'LESSON', 'Introductino to "if", "else"', NULL, '<h4>Lesson: Introduction to "if", "else"</h4><p><strong>Objective:</strong> Understand the basics of conditional statements in Rust, namely <code>if</code> and <code>else</code>, which allow you to execute code based on specific conditions.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. If Statement:</strong></p><p>The <code>if</code> statement executes a block of code if a specified condition is true.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let number = 10;
    if number &gt; 5 {
        println!("The number is greater than 5.");
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>if number &gt; 5 { ... }</code>: Executes the block of code if <code>number</code> is greater than 5.</li></ul><p><strong>2. If-Else Statement:</strong></p><p>The <code>else</code> statement executes a block of code if the condition in the <code>if</code> statement is false.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let number = 3;
    if number &gt; 5 {
        println!("The number is greater than 5.");
    } else {
        println!("The number is 5 or less.");
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>else { ... }</code>: Executes the block of code if the <code>if</code> condition is false.</li></ul><p><strong>3. Else If Statement:</strong></p><p>The <code>else if</code> statement allows you to check multiple conditions.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let number = 7;
    if number &gt; 10 {
        println!("The number is greater than 10.");
    } else if number &gt; 5 {
        println!("The number is greater than 5 but less than or equal to 10.");
    } else {
        println!("The number is 5 or less.");
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>else if number &gt; 5 { ... }</code>: Checks another condition if the previous <code>if</code> condition is false.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that checks if a given number is positive, negative, or zero.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">use std::io;

fn main() {
    let mut input = String::new();
    println!("Enter a number:");
    io::stdin().read_line(&amp;mut input).expect("Failed to read line");

    let number: i32 = input.trim().parse().expect("Please type a number!");
    if number &gt; 0 {
        println!("The number is positive.");
    } else if number &lt; 0 {
        println!("The number is negative.");
    } else {
        println!("The number is zero.");
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li>The program reads an integer input from the user and checks if it is positive, negative, or zero using <code>if</code>, <code>else if</code>, and <code>else</code> statements.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('cc2e6609-5a53-4d06-993d-3dd1d7bf840f', 1, '75c1b5b9-370d-4c24-9335-56c5dbd43c51', 'LESSON', 'Logical Operators', NULL, '<h3>Introduction to Logical Operators</h3><p>1 min</p><p>Often, when we are trying to create a control flow for our program, we’ll encounter situations where the logic cannot be satisfied with a single condition.</p><p><a href="https://www.codecademy.com/resources/docs/cpp/operators?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;"><em>Logical operators</em></a>&nbsp;are used to combine two or more conditions. They allow programs to make more flexible decisions. The result of the operation of a logical operator is a&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">bool</code>&nbsp;value of either&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">true</code>&nbsp;or&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">false</code>.</p><p>There are three logical operators that we will cover:</p><ul><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">&amp;&amp;</code>: the&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">and</code>&nbsp;logical operator</li><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">||</code>: the&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">or</code>&nbsp;logical operator</li><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">!</code>: the&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">not</code>&nbsp;logical operator</li></ul><p>We will also discuss the order of operations.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('bbefd6ae-0381-4ff2-88a4-eaf6457e8ff3', 2, '75c1b5b9-370d-4c24-9335-56c5dbd43c51', 'CODE', 'Prime number', 'b6484e21-6937-489c-b031-b71767994758', 'Check prime number', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c98adbce-828d-4faf-bb47-7d8028167274', 3, '75c1b5b9-370d-4c24-9335-56c5dbd43c51', 'VIDEO', 'Operators in C++', NULL, '', 'https://www.youtube.com/watch?v=ezqsL-st8qg');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b1de3308-67cc-4abd-b3a7-6a3d0f235e96', 4, '75c1b5b9-370d-4c24-9335-56c5dbd43c51', 'CODE', 'Sum of two integer', 'b6484e21-6937-489c-b031-b71767994221', 'Sum of two integer', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9d5a2747-e2e4-49c5-a1eb-1bfd38a764a6', 5, '75c1b5b9-370d-4c24-9335-56c5dbd43c51', 'CODE', 'Three sum closest', 'b6484e21-6937-489c-b031-b71767994739', 'Three sum closest', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c194da54-8669-4054-8dd5-e574a3df5c09', 0, 'e099d057-b400-456b-b01a-54c5be0364d4', 'LESSON', 'Loops', NULL, '<h3>Introduction to Loops</h3><p>&lt;1 min</p><p>A&nbsp;<strong>loop</strong>&nbsp;is a programming tool that&nbsp;<em>repeats</em>&nbsp;some code or a set of instructions until a specified condition is reached. As a programmer, you’ll find that you rely on&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/loops" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">loops</a>&nbsp;all the time! You’ll hear the generic term “iterate” when referring to loops;&nbsp;<em>iterate</em>&nbsp;simply means “to repeat”.</p><p>When we see that a process has to repeat multiple times in a row, we write a loop. Loops allow us to create efficient code that automates processes to make scalable, manageable programs.</p><p>In this lesson, we will learn about two types of loops:&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">while</code>&nbsp;loops and&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">for</code>&nbsp;loops!</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b0b854a6-a995-4510-8d38-03e027c49f83', 1, 'e099d057-b400-456b-b01a-54c5be0364d4', 'LESSON', 'Errors', NULL, '<h3>Introduction to Bugs</h3><p>1 min</p><p><em>“First actual case of bug being found.”</em></p><p>The story goes that on September 9th, 1947, computer scientist&nbsp;<a href="https://en.wikipedia.org/wiki/Grace_Hopper" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">Grace Hopper</a>&nbsp;found a moth in the Harvard Mark II computer’s log book and reported the world’s first literal computer bug. However, the term “bug”, in the sense of technical error, dates back at least to 1878 and with Thomas Edison.</p><p>On your programming journey, you are destined to encounter innumerable red errors. Some even say, that debugging is over 75% of the development time. But what makes a programmer successful isn’t avoiding errors, it’s knowing how to find the solution.</p><p>In C++, there are many different ways of classifying errors, but they can be boiled down to four categories:</p><ul><li><strong>Compile-time errors:</strong>&nbsp;Errors found by the compiler.</li><li><strong>Link-time errors:</strong>&nbsp;Errors found by the linker when it is trying to combine object files into an executable program.</li><li><strong>Run-time errors:</strong>&nbsp;Errors found by checks in a running program.</li><li><strong>Logic errors:</strong>&nbsp;Errors found by the programmer looking for the causes of erroneous results.</li></ul><p>In this mini-lesson, we will be looking at different errors and different error messages, and we’ll teach you how to think about errors in your code a little differently.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('31cfeeec-30ad-482f-8aea-028913d2a0f2', 2, 'e099d057-b400-456b-b01a-54c5be0364d4', 'CODE', 'FizzBuzz', 'b6484e21-6937-489c-b031-b71767994737', 'FizzBuzz', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1b22d932-f8c0-41ec-a46f-46b2eec749dc', 0, 'e31671c0-e26f-46e7-ba81-6d954a51c37c', 'LESSON', 'Vectors', NULL, '<h3>Introduction to Vectors</h3><p>1 min</p><p>To do just about anything of interest in a program, we need a group of data to work with.</p><p>For example, our program might need:</p><ul><li>A list of Twitter’s trending tags</li><li>A set of payment options for a car</li><li>A catalog of eBooks read over the last year</li></ul><p>The need for storing a collection of data is endless.</p><p>We are familiar with&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/data-types" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data types</a>&nbsp;like&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">double</code>, but how do we store a group of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>s or a group of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">double</code>s?</p><p>In this lesson, we will start with one of the simplest, and arguably the most useful, ways of storing data in C++: a vector.</p><p>A&nbsp;<em>vector</em>&nbsp;is a sequence of elements that you can access by index.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('2f67e699-31f1-4507-84ef-d34410c5f489', 1, 'e31671c0-e26f-46e7-ba81-6d954a51c37c', 'LESSON', 'Arrays', NULL, '<p><strong>Like vectors, the array is a data structure used in C++ to store a sequential collection of elements. Unlike vectors, its size cannot be changed.</strong></p><p>Being able to store multiple pieces of related information in the same structure is very useful when writing C++ programs. One way we can do that is by using vectors:</p><pre class="ql-syntax" spellcheck="false">std::vector&lt;int&gt; favoriteNums =&nbsp;{7, 9, 15, 16};

std::cout &lt;&lt; favoriteNums[2]; // Prints: 15

</pre><p>Vectors are a modern approach to handling information. But C++ also inherits a more low-level means of doing this from its parent language, C, called&nbsp;<em>arrays</em>.</p><p>Arrays in C++ are similar to vectors in that they allow us to store groups of information. However, arrays are ultimately lower-level constructs and require some more work on the part of the user.</p><h2>Arrays vs. Vectors</h2><p>If you’ve used C++ vectors in the past, you may be wondering what exactly the difference is between them and arrays, and when you should use which.</p><p>As was mentioned earlier, arrays are inherited from C, C++’s parent language. They are a low-level data structure and are incredibly rigid.&nbsp;<em>With arrays, you can’t add or remove elements; you can only modify existing elements.</em></p><p>Vectors are originated from arrays. Early in the creation of C++, the language developers took these basic arrays and wrote code to enhance them and make them more flexible and powerful. Therefore you can think of vectors as super arrays!</p><p>Vectors don’t require a static size. It’s possible to add and remove elements from them, as well as access their current size at any time.</p><h2>Creating an Array</h2><p>When creating an array, you have to keep two pieces of information in mind:</p><ol><li>The type of data you want to store inside of it.</li><li>How many items you want it to be able to hold (its size).</li></ol><p>We can create an array a lot like we create normal variables, by specifying the data type, giving it a descriptive name, and also specifying its size:</p><pre class="ql-syntax" spellcheck="false">int favoriteNums[4];

</pre><p>In the above code example, we’ve created an array with a size of&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>4</strong></code>, meaning it can hold four integers (all four elements will initially have the default&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>int</strong></code>&nbsp;value of&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>0</strong></code>).</p><p>In many cases, you won’t know what data needs to go in the array until after you’ve created it, but if you do happen to know the contents of the array ahead of time, you can initialize it with custom values upfront:</p><pre class="ql-syntax" spellcheck="false">int favoriteNums[] =&nbsp;{7, 9, 15, 16};

</pre><p>This array would also have a size of&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>4</strong></code>, but we don’t need to explicitly specify that when we initialize it in this way.</p><h2>Array Indices</h2><p>Like vectors, each element in an array is assigned a specific index starting at zero. To access or modify an element in the array you may simply refer to it by its index and operate on it accordingly.</p><pre class="ql-syntax" spellcheck="false">char vowels[] =&nbsp;{''a'', ''e'', ''i'', ''o'', ''u''};
//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indexes:&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;4

std::cout &lt;&lt; vowels[0]; // Prints: a

vowels[0] =&nbsp;''r'';

std::cout &lt;&lt; vowels[0]; // Prints: r

</pre><p>In the case above we initialized an array of&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>char</strong></code>s with all of the vowels, and then printed out the first element in the array at index&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>0</strong></code>. We then modified the element at index&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>0</strong></code>&nbsp;by assigning it a new value of&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>r</strong></code>, which got printed out below.</p><p>Arrays in C++ have a set size, meaning you can’t add or remove elements once the array has been created. You may only modify existing elements without changing the total size or shape of the structure.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('46c10603-3b46-4f72-b259-9e8d20e90d48', 2, 'e31671c0-e26f-46e7-ba81-6d954a51c37c', 'VIDEO', 'Passing Vectors to Functions', NULL, '', 'https://www.youtube.com/watch?v=aUhYCyU2Meo');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d72d93dd-1e4b-49f3-829d-6bd7391e2fdc', 3, 'e31671c0-e26f-46e7-ba81-6d954a51c37c', 'CODE', 'Array sum', 'b6484e21-6937-489c-b031-b71767994736', 'Sum of an array', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c97f6d4c-ed9a-41e4-abde-89fad89fba76', 2, '0f72faae-00c0-49d7-ad43-9cfa2e42a51b', 'LESSON', 'Custom input', NULL, '<h3>What are custom inputs</h3><p>What are&nbsp;<code>custom inputs</code>?</p><p>You will usually find a&nbsp;<code><strong>custom</strong></code>&nbsp;<code>inputs</code>&nbsp;box in programming problems.</p><p><code><strong>Custom</strong></code>&nbsp;<code>inputs</code>&nbsp;allow you to do the following</p><ul><li>You are able to see the&nbsp;<code>output</code>&nbsp;generated by your code for&nbsp;<code>inputs</code>&nbsp;defined by you</li><li>Test your code with your&nbsp;<code>sample inputs</code>.</li><li>This helps you debug&nbsp;<code><strong>Wrong Answers (WA)</strong></code>,&nbsp;<code><strong>Runtime Errors (RE)</strong></code>&nbsp;faster</li><li>Create your own&nbsp;<code><strong>test cases</strong></code>.</li><li>In programming problems - you want to find exceptions or&nbsp;<code>test cases</code>&nbsp;where your code / logic can fail.</li><li><code><strong>Custom</strong></code>&nbsp;<code>inputs</code>&nbsp;allow you to test your code for the same.</li></ul><p>Click on&nbsp;<code><strong>Next</strong></code>&nbsp;to proceed.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1da523d7-baa5-49f7-b045-af02b4b5ce4a', 0, '2a90b255-ca79-4fba-af46-952ac41a0502', 'LESSON', 'Functions', NULL, '<h3>The Function of Functions</h3><p>4 min</p><p>As a programmer, you will find yourself reusing the same blocks of code over and over throughout your program. In times like these, you can turn to functions.</p><p>Also known as a method or procedure, a&nbsp;<em>function</em>&nbsp;is a named group of code statements that accomplish something together, a bit like a factory machine.</p><p><img src="https://content.codecademy.com/courses/learn-cpp/functions/functions-conceptual.gif">There are some great reasons to use functions in your code:</p><ul><li>A single line can make all that code fire off instead of a whole bunch of lines.</li><li>You can build DRY (Don’t Repeat Yourself) code, reusing the code you already wrote.</li><li>Functions help make your code flexible and&nbsp;<em>modular</em>, meaning you can group your code more easily by task.</li></ul><p>In fact, every C++ program has at least one function. “Hold on,” you may be thinking, “I’ve written some C++ programs, but I haven’t written any functions yet!”</p><p>Well, as it happens,&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">main()</code>&nbsp;is a function that you’ve already used! And you’ll understand it a bit more as you learn how functions work.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a71a049b-ad3c-4461-a1b7-b51cbe7a202d', 1, '2a90b255-ca79-4fba-af46-952ac41a0502', 'LESSON', 'C++ Functions challenge', NULL, '<h3>How It Works</h3><p>&lt;1 min</p><p>Roll up your sleeves and get yourself in the mood for&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/functions" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">functions</a>, because it’s code challenge time!</p><p>Say what? Here’s how it works:</p><ul><li>Each exercise in this lesson has a C++ function for you to build.</li><li>Each challenge has many solutions and we encourage you to be creative.</li><li>We don’t care what goes on in the function as long as it works the way it should. (Notice those tests in&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">main()</code>&nbsp;for each function.)</li></ul><p>As a refresher, C++ function syntax looks like this:</p><pre class="ql-syntax" spellcheck="false">return_type function_name(paramater1, parameter2) {

&nbsp;&nbsp;&nbsp;// Code block here

&nbsp;&nbsp;&nbsp;return output_if_there_is_any;

}

</pre><p>For example, with real code this might look like:</p><pre class="ql-syntax" spellcheck="false">bool is_even(int number) {

&nbsp;&nbsp;if (number %&nbsp;2 == 0) {

&nbsp;&nbsp;&nbsp;&nbsp;return true;

&nbsp;&nbsp;}

&nbsp;&nbsp;return false;

}

</pre><p>Best of luck!</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('4b63932a-f317-4904-9da1-66659e2c2569', 2, '2a90b255-ca79-4fba-af46-952ac41a0502', 'LESSON', 'FUNCTIONS: SCOPE & FLEXIBILITY', NULL, '<h3>The Scope of Things</h3><p>7 min</p><p>Take a look at the program below. We have a&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">void</code>&nbsp;function named&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">favorite_animal()</code>&nbsp;and&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">main()</code>&nbsp;with a few statements inside.</p><pre class="ql-syntax" spellcheck="false">#include &lt;iostream&gt;

std::string sea_animal =&nbsp;"manatee";

void favorite_animal(std::string best_animal) {

&nbsp;&nbsp;std::string animal =&nbsp;best_animal;
&nbsp;&nbsp;std::cout &lt;&lt; "Best animal: " &lt;&lt; animal &lt;&lt; "\n";

}

int main() {

&nbsp;&nbsp;favorite_animal("jaguar");

&nbsp;&nbsp;std::cout &lt;&lt; sea_animal &lt;&lt; "\n";
&nbsp;&nbsp;std::cout &lt;&lt; animal &lt;&lt; "\n";

}

</pre><p>When this program is compiled and executed,&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">sea_animal</code>&nbsp;will print, but&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">animal</code>&nbsp;won’t. Why do you think that’s the case?</p><p><em>Scope</em>&nbsp;is the region of code that can access or view a given element.</p><ul><li><a href="https://www.codecademy.com/resources/docs/cpp/variables" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">Variables</a>&nbsp;defined in&nbsp;<em>global scope</em>&nbsp;are accessible throughout the program.</li><li>Variables defined in a function have&nbsp;<em>local scope</em>&nbsp;and are only accessible inside the function.</li></ul><p><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">sea_animal</code>&nbsp;was defined in global scope at the top of the program, outside of&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">main()</code>. So&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">sea_animal</code>&nbsp;is defined everywhere in the program.</p><p>Because&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">animal</code>&nbsp;was only defined within&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">favorite_animal()</code>&nbsp;and not returned, it is not accessible to the rest of the program.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('93884e62-225d-41e8-8bef-2b6b83525606', 3, '2a90b255-ca79-4fba-af46-952ac41a0502', 'CODE', '2^k', 'b6484e21-6937-489c-b031-b71767994745', 'Check 2^k', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('fc975304-6d90-4bb7-a94b-4952aa2e3c27', 0, '3e3699ce-1b80-4236-873f-05b17522e25f', 'VIDEO', 'Classes & Objects', NULL, '', 'https://www.youtube.com/watch?v=nVrQO2eVU7A');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('67091f8f-802e-4169-9678-78fbb2555dde', 1, '3e3699ce-1b80-4236-873f-05b17522e25f', 'LESSON', 'Classes & Objects', NULL, '<h3>Getting Classy with C++</h3><p>3 min</p><p>So far, we’ve used several&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/data-types" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data types</a>, including&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">double</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">std::string</code>, and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">bool</code>. When we work with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">std::string</code>, we can create&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;with certain properties and&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/methods" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">methods</a>&nbsp;specific to those types. For example:</p><pre class="ql-syntax" spellcheck="false">int age =&nbsp;33;
age++; // age is now 34

</pre><p>But what happens when you want to create a “type” for something else? You can make your own! Bjarne Stroustrup developed C++ because he wanted to add a feature known as “classes” to the C language. A C++&nbsp;<em>class</em>&nbsp;is a user-defined type.</p><p>The class serves as a blueprint for&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/objects" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);"><em>objects</em></a>, which are instances of the class (just like&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">age</code>&nbsp;is an instance of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>). An object gets characteristics and behaviors from its class.</p><p>We can create an empty C++ class like this in a header file:</p><pre class="ql-syntax" spellcheck="false">class City {
&nbsp;&nbsp;
}; // &lt;-- notice this semicolon!

</pre><p><strong>Fun fact:</strong>&nbsp;C++’s original name was “C with&nbsp;<a href="https://www.codecademy.com/resources/docs/cpp/classes" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Classes</a>.”</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5e062ef6-0170-44a5-8b03-0f03f66e9b25', 2, '3e3699ce-1b80-4236-873f-05b17522e25f', 'LESSON', 'Why Object-Oriented Programming?', NULL, '<h1>Why Object-Oriented Programming?</h1><p><strong>Why has object-oriented programming become a major programming paradigm?</strong></p><p>So far, you’ve built two kinds of C++ programs:</p><ul><li>Procedural: The program moves through a linear series of instructions.</li><li>Functional: The program moves from one function to another.</li></ul><p>But there is another very common way to structure C++ code: object-oriented programming.</p><p>Let’s consider a physical object: a light bulb. A light (usually) has two possible states: on and off. It also has functionality that allows you to change its state: you can turn it on and you turn it off. Thankfully, you don’t need to know electrical engineering to use the light! You only need to know how to interact with it.</p><p><em>Object-oriented programming (OOP)</em>&nbsp;is a programming paradigm that allows you to package together data states and functionality to modify those data states, while keeping the details hidden away (like with the lightbulb). As a result, code with OOP design is flexible, modular, and abstract. This makes it particularly useful when you create larger programs.</p><p>In C++, you can apply OOP in your code with classes and objects. And the C++ objects you create will have states and functionality.</p><p>There are four major benefits to object-oriented programming:</p><ul><li><strong>Encapsulation:</strong>&nbsp;in OOP, you bundle code into a single unit where you can determine the scope of each piece of data.</li><li><strong>Abstraction:</strong>&nbsp;by using classes, you are able to generalize your object types, simplifying your program.</li><li><strong>Inheritance:</strong>&nbsp;because a class can inherit attributes and behaviors from another class, you are able to reuse more code.</li><li><strong>Polymorphism:</strong>&nbsp;one class can be used to create many objects, all from the same flexible piece of code.</li></ul><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6e484389-1ef9-4628-b90d-550801d65e08', 3, '3e3699ce-1b80-4236-873f-05b17522e25f', 'VIDEO', 'Why Object-Oriented Programming?', NULL, '', 'https://www.youtube.com/watch?v=u8gRq4OojXY&embeds_referring_euri=https%3A%2F%2Fwww.codecademy.com%2F&embeds_referring_origin=https%3A%2F%2Fwww.codecademy.com&feature=emb_imp_woyt');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('40616ff6-3efb-482d-86a0-dfe7b986db72', 3, '0f72faae-00c0-49d7-ad43-9cfa2e42a51b', 'CODE', 'Check square number', 'b6484e21-6937-489c-b031-b71767994748', 'Check square number', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('eb767932-a7f1-4eb9-a4cc-56f9e4e9f702', 1, '240d7ad7-391e-4a5a-8fe0-3dfcc4a46d1f', 'LESSON', 'Different ways to compare elements inside if', NULL, '<h4>Lesson: Different Ways to Compare Elements Inside If</h4><p><strong>Objective:</strong> Learn about the various comparison operators available in Rust and how to use them within <code>if</code> statements to compare elements.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Comparison Operators:</strong></p><ul><li><strong>Equality (</strong><code><strong>==</strong></code><strong>)</strong>: Checks if two values are equal.</li><li><strong>Inequality (</strong><code><strong>!=</strong></code><strong>)</strong>: Checks if two values are not equal.</li><li><strong>Greater Than (</strong><code><strong>&gt;</strong></code><strong>)</strong>: Checks if the left value is greater than the right value.</li><li><strong>Less Than (</strong><code><strong>&lt;</strong></code><strong>)</strong>: Checks if the left value is less than the right value.</li><li><strong>Greater Than or Equal To (</strong><code><strong>&gt;=</strong></code><strong>)</strong>: Checks if the left value is greater than or equal to the right value.</li><li><strong>Less Than or Equal To (</strong><code><strong>&lt;=</strong></code><strong>)</strong>: Checks if the left value is less than or equal to the right value.</li></ul><p><strong>Examples:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let a = 5;
    let b = 10;

    if a == b {
        println!("a is equal to b");
    }

    if a != b {
        println!("a is not equal to b");
    }

    if a &gt; b {
        println!("a is greater than b");
    }

    if a &lt; b {
        println!("a is less than b");
    }

    if a &gt;= 5 {
        println!("a is greater than or equal to 5");
    }

    if b &lt;= 10 {
        println!("b is less than or equal to 10");
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li>Demonstrates the use of various comparison operators in <code>if</code> statements.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that checks if two numbers are equal, not equal, greater than, or less than each other.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">use std::io;

fn main() {
    let mut input1 = String::new();
    let mut input2 = String::new();

    println!("Enter the first number:");
    io::stdin().read_line(&amp;mut input1).expect("Failed to read line");

    println!("Enter the second number:");
    io::stdin().read_line(&amp;mut input2).expect("Failed to read line");

    let number1: i32 = input1.trim().parse().expect("Please type a number!");
    let number2: i32 = input2.trim().parse().expect("Please type a number!");

    if number1 == number2 {
        println!("The numbers are equal.");
    } else if number1 != number2 {
        println!("The numbers are not equal.");
    }

    if number1 &gt; number2 {
        println!("The first number is greater than the second number.");
    } else if number1 &lt; number2 {
        println!("The first number is less than the second number.");
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li>The program reads two integer inputs from the user and compares them using various comparison operators.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a5bb607b-fe1e-47bb-bf3c-03ae9eeb817f', 2, '240d7ad7-391e-4a5a-8fe0-3dfcc4a46d1f', 'LESSON', 'Combining Conditions - And, Or', NULL, '<h4>Lesson: Combining Conditions - And, Or</h4><p><strong>Objective:</strong> Learn how to combine multiple conditions using logical operators <code>&amp;&amp;</code> (AND) and <code>||</code> (OR) to create more complex conditional statements.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Logical AND (</strong><code><strong>&amp;&amp;</strong></code><strong>):</strong></p><p>The <code>&amp;&amp;</code> operator combines two conditions and returns true only if both conditions are true.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let age = 25;
    let has_license = true;

    if age &gt;= 18 &amp;&amp; has_license {
        println!("You are eligible to drive.");
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>if age &gt;= 18 &amp;&amp; has_license { ... }</code>: Checks if <code>age</code> is at least 18 and <code>has_license</code> is true.</li></ul><p><strong>2. Logical OR (</strong><code><strong>||</strong></code><strong>):</strong></p><p>The <code>||</code> operator combines two conditions and returns true if at least one of the conditions is true.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let is_weekend = true;
    let is_holiday = false;

    if is_weekend || is_holiday {
        println!("You have a day off.");
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>if is_weekend || is_holiday { ... }</code>: Checks if either <code>is_weekend</code> or <code>is_holiday</code> is true.</li></ul><p><strong>3. Combining Multiple Conditions:</strong></p><p>You can combine multiple conditions using both <code>&amp;&amp;</code> and <code>||</code> to form complex logical expressions.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let age = 20;
    let has_permission = false;

    if (age &gt;= 18 &amp;&amp; age &lt;= 21) || has_permission {
        println!("You have limited access.");
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>if (age &gt;= 18 &amp;&amp; age &lt;= 21) || has_permission { ... }</code>: Checks if <code>age</code> is between 18 and 21 (inclusive) or <code>has_permission</code> is true.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that checks if a user is eligible for a discount based on their age and membership status.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">use std::io;

fn main() {
    let mut age_input = String::new();
    let mut member_input = String::new();

    println!("Enter your age:");
    io::stdin().read_line(&amp;mut age_input).expect("Failed to read line");

    println!("Are you a member? (yes/no):");
    io::stdin().read_line(&amp;mut member_input).expect("Failed to read line");

    let age: i32 = age_input.trim().parse().expect("Please type a number!");
    let is_member = member_input.trim() == "yes";

    if age &lt; 18 || age &gt;= 65 || is_member {
        println!("You are eligible for a discount.");
    } else {
        println!("You are not eligible for a discount.");
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li>The program reads the user''s age and membership status, then checks if they are eligible for a discount based on combined conditions using <code>||</code>.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('230ee53b-8ec8-4f85-bdc4-f09949f3b2f5', 3, '240d7ad7-391e-4a5a-8fe0-3dfcc4a46d1f', 'LESSON', 'Switch', NULL, '<h4>Lesson: Switch</h4><p><strong>Objective:</strong> Learn how to use the <code>match</code> statement in Rust to simplify the process of selecting one of many code blocks to be executed based on the value of a variable or expression.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Match Statement:</strong></p><p>The <code>match</code> statement is used to execute one code block among many based on the value of a variable or expression.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let day = 3;

    match day {
        1 =&gt; println!("Monday"),
        2 =&gt; println!("Tuesday"),
        3 =&gt; println!("Wednesday"),
        4 =&gt; println!("Thursday"),
        5 =&gt; println!("Friday"),
        6 =&gt; println!("Saturday"),
        7 =&gt; println!("Sunday"),
        _ =&gt; println!("Invalid day"),
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>match day { ... }</code>: Matches the value of <code>day</code> against the patterns provided.</li><li><code>_ =&gt; println!("Invalid day")</code>: The <code>_</code> pattern is a catch-all</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('60818dbb-3d9e-437a-a7c6-df8093fddc2e', 4, '240d7ad7-391e-4a5a-8fe0-3dfcc4a46d1f', 'VIDEO', 'Rust Conditional Statements', NULL, '', 'https://www.youtube.com/watch?v=Vz9_y7NjRlQ');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1b9c096a-9613-4eda-aea9-0d7de1562326', 0, '789ec000-6f61-4349-bad4-4a8deffe46b0', 'LESSON', 'Introduction to Arrays', NULL, '<h4>Lesson: Introduction to Arrays</h4><p><strong>Objective:</strong> Understand the basics of arrays in Rust. Learn how to declare, initialize, access, and manipulate arrays. This lesson will provide a foundation for working with arrays, which are essential for storing and processing collections of data.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. What are Arrays?</strong></p><p>Arrays in Rust are a fixed-size collection of elements of the same type. Each element can be accessed by its index.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">
fn main() {
    let array = [1, 2, 3, 4, 5];
    println!("Array: {:?}", array);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let array = [1, 2, 3, 4, 5];</code> declares an array of five integers.</li><li><code>println!("Array: {:?}", array);</code> prints the entire array using the <code>:?</code> format specifier.</li></ul><p><strong>2. Declaring and Initializing Arrays:</strong></p><p>Arrays can be declared and initialized in several ways.</p><p><strong>Examples:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    // Array with explicit type and length
    let array: [i32; 5] = [1, 2, 3, 4, 5];
    println!("Array with explicit type and length: {:?}", array);

    // Array with all elements initialized to the same value
    let array = [0; 5];
    println!("Array with all elements initialized to 0: {:?}", array);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let array: [i32; 5] = [1, 2, 3, 4, 5];</code> declares an array of five <code>i32</code> elements.</li><li><code>let array = [0; 5];</code> declares an array of five elements, all initialized to <code>0</code>.</li></ul><p><strong>3. Accessing Array Elements:</strong></p><p>You can access array elements using their index. Indexes in Rust are zero-based, meaning the first element is at index <code>0</code>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let array = [10, 20, 30, 40, 50];
    println!("First element: {}", array[0]);
    println!("Third element: {}", array[2]);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>array[0]</code> accesses the first element of the array.</li><li><code>array[2]</code> accesses the third element of the array.</li></ul><p><strong>4. Modifying Array Elements:</strong></p><p>Arrays can be modified if they are mutable.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let mut array = [1, 2, 3, 4, 5];
    array[1] = 10;
    array[3] = 20;
    println!("Modified array: {:?}", array);
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let mut array = [1, 2, 3, 4, 5];</code> declares a mutable array.</li><li><code>array[1] = 10;</code> modifies the second element of the array.</li><li><code>array[3] = 20;</code> modifies the fourth element of the array.</li></ul><p><strong>5. Iterating Over Arrays:</strong></p><p>You can iterate over arrays using a <code>for</code> loop.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let array = [10, 20, 30, 40, 50];
    for element in array.iter() {
        println!("Element: {}", element);
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>for element in array.iter() { ... }</code> iterates over each element in the array.</li></ul><p><strong>6. Array Length:</strong></p><p>You can get the length of an array using the <code>len</code> method.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let array = [10, 20, 30, 40, 50];
    println!("Array length: {}", array.len());
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>array.len()</code> returns the number of elements in the array.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that declares an array of 5 integers, modifies some of its elements, prints the entire array, and then iterates over it to print each element.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    // Declare and initialize the array
    let mut array = [1, 2, 3, 4, 5];

    // Modify some elements
    array[1] = 10;
    array[3] = 20;

    // Print the entire array
    println!("Modified array: {:?}", array);

    // Iterate over the array and print each element
    for element in array.iter() {
        println!("Element: {}", element);
    }

    // Print the length of the array
    println!("Array length: {}", array.len());
}
</pre><p><strong>Explanation:</strong></p><ul><li>The program declares a mutable array of 5 integers.</li><li>It modifies the second and fourth elements of the array.</li><li>It prints the entire array using the <code>:?</code> format specifier.</li><li>It iterates over the array and prints each element.</li><li>It prints the length of the array.</li></ul><p>By mastering arrays in Rust, you will be able to store and manipulate collections of data efficiently, laying a solid foundation for more advanced data structures and algorithms. This lesson provides the building blocks for working with arrays and performing common array operations in Rust.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('918cdafb-700f-4824-89cc-044031be3b24', 1, '789ec000-6f61-4349-bad4-4a8deffe46b0', 'VIDEO', 'Rust Programming Tutorial #20 - Arrays', NULL, '', 'https://www.youtube.com/watch?v=cH6Qv47MPwk');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('4f5ead34-6c8a-44fc-9565-7bf7e77e7469', 0, '0b8d3b3a-1d28-41c1-80d4-19375d5ce114', 'LESSON', 'Break, Continue, For each', NULL, '<h4>Lesson: Break, Continue, For Each</h4><p><strong>Objective:</strong> Learn how to use <code style="background-color: rgb(240, 240, 240);">break</code> and <code style="background-color: rgb(240, 240, 240);">continue</code> statements to control loop execution, and explore the <code style="background-color: rgb(240, 240, 240);">for_each</code> method for iterating over collections.</p><h3>Key Concepts:</h3><p><strong>1. Break Statement:</strong></p><p>The <code style="background-color: rgb(240, 240, 240);">break</code> statement terminates the loop immediately.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    for i in 0..10 {
        if i == 5 {
            break;
        }
        println!("i: {}", i);
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code style="background-color: rgb(240, 240, 240);">if i == 5 { break; }</code> exits the loop when <code style="background-color: rgb(240, 240, 240);">i</code> equals 5.</li></ul><p><strong>2. Continue Statement:</strong></p><p>The <code style="background-color: rgb(240, 240, 240);">continue</code> statement skips the current iteration and proceeds with the next iteration.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    for i in 0..10 {
        if i % 2 == 0 {
            continue;
        }
        println!("i: {}", i);
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code style="background-color: rgb(240, 240, 240);">if i % 2 == 0 { continue; }</code> skips even numbers and continues with the next iteration.</li></ul><p><strong>3. For Each Method:</strong></p><p>The <code style="background-color: rgb(240, 240, 240);">for_each</code> method allows for functional-style iteration over collections.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let array = [1, 2, 3, 4, 5];
    array.iter().for_each(|&amp;x| {
        println!("Element: {}", x);
    });
}
</pre><p><strong>Explanation:</strong></p><ul><li><code style="background-color: rgb(240, 240, 240);">array.iter().for_each(|&amp;x| { ... });</code> iterates over each element in the array and executes the closure for each element.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that iterates over a range of numbers from 1 to 10, prints each number, but skips multiples of 3 and stops if it encounters the number 8.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    for i in 1..=10 {
        if i % 3 == 0 {
            continue;
        }
        if i == 8 {
            break;
        }
        println!("i: {}", i);
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code style="background-color: rgb(240, 240, 240);">if i % 3 == 0 { continue; }</code> skips multiples of 3.</li><li><code style="background-color: rgb(240, 240, 240);">if i == 8 { break; }</code> stops the loop when <code style="background-color: rgb(240, 240, 240);">i</code> equals 8.</li></ul><p>By mastering <code style="background-color: rgb(240, 240, 240);">while</code> loops, <code style="background-color: rgb(240, 240, 240);">for</code> loops, and the use of <code style="background-color: rgb(240, 240, 240);">break</code>, <code style="background-color: rgb(240, 240, 240);">continue</code>, and <code style="background-color: rgb(240, 240, 240);">for_each</code>, you will be able to handle repetitive tasks and complex iterations efficiently in your Rust programs. These lessons provide the foundation for more advanced control flow and iteration techniques in Rust.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('bd5a3d36-5b43-49ea-af70-a6f77abcfffa', 0, '9633622c-8304-4610-81f2-2c3af684ff7e', 'LESSON', ' Input and Output', NULL, '<h3>Getting started with programming problems</h3><p>If you are here - then you already know the basic syntax of C#.</p><p>Let''s now take it up a notch and train you to solve programming problems. Before that, let us do a quick recap of what we had learned about C# in&nbsp;<a href="https://www.codechef.com/learn/c-sharp" rel="noopener noreferrer" target="_blank" style="color: rgb(87, 128, 176);">Learn C# Path</a>.</p><p>On CodeChef and other platforms, you will come across programming problems.</p><ul><li>Each programming problem has a&nbsp;<strong>problem statement</strong></li><li>You write a&nbsp;<strong>solution code</strong>&nbsp;which will solve the problem</li><li>Your code is executed, performs some computations, and generates&nbsp;<strong>your output</strong>.</li><li><strong>Your output</strong>&nbsp;is compared with the&nbsp;<strong>Expected output</strong>.</li><li class="ql-indent-1">If they match - then your code is correct!</li><li class="ql-indent-1">If they don''t match - then there is some error in your code.</li></ul><p>Click on&nbsp;<strong>Next</strong>&nbsp;to proceed!</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('abd12328-4d62-40fb-9b66-d203951a2dcc', 1, '9633622c-8304-4610-81f2-2c3af684ff7e', 'LESSON', 'What are test cases?', NULL, '<h3>What are test cases</h3><p>In the previous module, we practiced simple methods of input&nbsp;and&nbsp;output used in programming problems.</p><p><br></p><p>Let us take the next small step and learn about&nbsp;<strong>test cases</strong>.</p><p>You will find the concept of ''test cases'' on various programming platforms such as Leetcode, Codeforces, CodeChef, Hackerrank. What are&nbsp;<strong>test cases</strong>?</p><ul><li><strong>Test cases</strong>&nbsp;are multiple&nbsp;<strong>Inputs</strong>&nbsp;- multiple instances of the same problem, all of which have to be solved by your code correctly.</li><li>Example 1: Consider 5 test cases or 5 inputs</li></ul><pre class="ql-syntax" spellcheck="false">11
13
2
4
9
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('36f1ebbe-a26f-491b-b97a-e0b3f4ea7123', 2, '9633622c-8304-4610-81f2-2c3af684ff7e', 'LESSON', 'What are Custom inputs?', NULL, '<h3>What are custom inputs</h3><p>What are custom inputs?</p><p>You will usually find a&nbsp;<strong>custom</strong>&nbsp;inputs box in programming problems.</p><p><strong>Custom</strong>&nbsp;inputs allow you to do the following</p><ul><li>You are able to see the output generated by your code for inputs defined by you</li><li>Test your code with your sample inputs.</li><li>This helps you debug&nbsp;<strong>Wrong Answers (WA)</strong>,&nbsp;<strong>Runtime Errors (RE)</strong>&nbsp;faster</li><li>Create your own&nbsp;<strong>test cases</strong>.</li><li>In programming problems - you want to find exceptions or test cases where your code / logic can fail.</li><li><strong>Custom</strong>&nbsp;inputs allow you to test your code for the same.</li></ul><p>Click on&nbsp;<strong>Next</strong>&nbsp;to proceed.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('0acb5264-ecf2-4173-838e-4417431f5f9d', 3, '9633622c-8304-4610-81f2-2c3af684ff7e', 'CODE', 'Sum of two integer', 'b6484e21-6937-489c-b031-b71767994221', 'Sum of two integer', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('23c7df33-6bc3-4410-aa78-7dbbb1e615da', 0, '0b7edcfd-cb5b-4a3f-b282-450b2c2bc000', 'LESSON', 'Addition and multiplication', NULL, '<h4>Lesson: Addition and Multiplication</h4><p><strong>Objective:</strong> Learn how to perform basic arithmetic operations such as addition and multiplication in C#. These operations are fundamental for performing calculations in any programming task.</p><h3>Key Concepts:</h3><p><strong>1. Addition:</strong></p><p>Addition is the arithmetic operation of combining two or more numbers to get their total.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        int a = 10;
        int b = 20;
        int sum = a + b;

        Console.WriteLine("Addition:");
        Console.WriteLine($"{a} + {b} = {sum}");
    }
}
</pre><p><strong>2. Multiplication:</strong></p><p>Multiplication is the arithmetic operation of scaling one number by another. It is essentially repeated addition.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        int a = 10;
        int b = 20;
        int product = a * b;

        Console.WriteLine("Multiplication:");
        Console.WriteLine($"{a} * {b} = {product}");
    }
}
</pre><p><strong>3. Combining Addition and Multiplication:</strong></p><p>You can combine addition and multiplication to perform more complex calculations.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        int a = 10;
        int b = 20;
        int c = 5;

        int result = (a + b) * c;

        Console.WriteLine("Combining Addition and Multiplication:");
        Console.WriteLine($"({a} + {b}) * {c} = {result}");
    }
}
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that takes two numbers as input from the user and outputs their sum and product.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter the first number:");
        int num1 = int.Parse(Console.ReadLine());

        Console.WriteLine("Enter the second number:");
        int num2 = int.Parse(Console.ReadLine());

        int sum = num1 + num2;
        int product = num1 * num2;

        Console.WriteLine("Results:");
        Console.WriteLine($"Sum: {num1} + {num2} = {sum}");
        Console.WriteLine($"Product: {num1} * {num2} = {product}");
    }
}
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('8eee2d09-e705-4f36-ab38-c66cfa766dfc', 1, '0b7edcfd-cb5b-4a3f-b282-450b2c2bc000', 'LESSON', ' Subtraction and division', NULL, '<h4>Lesson: Subtraction and Division</h4><p><strong>Objective:</strong> Learn how to perform subtraction and division operations in C#. These operations are essential for performing various calculations and data manipulations.</p><h3>Key Concepts:</h3><p><strong>1. Subtraction:</strong></p><p>Subtraction is the arithmetic operation of finding the difference between two numbers.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        int a = 20;
        int b = 10;
        int difference = a - b;

        Console.WriteLine("Subtraction:");
        Console.WriteLine($"{a} - {b} = {difference}");
    }
}
</pre><p><strong>2. Division:</strong></p><p>Division is the arithmetic operation of splitting a number into equal parts. It consists of a dividend (number to be divided) and a divisor (number by which to divide).</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        int a = 20;
        int b = 10;
        int quotient = a / b;

        Console.WriteLine("Division:");
        Console.WriteLine($"{a} / {b} = {quotient}");
    }
}
</pre><p><strong>3. Combining Subtraction and Division:</strong></p><p>You can combine subtraction and division to perform more complex calculations.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        int a = 20;
        int b = 10;
        int c = 5;

        int result = (a - b) / c;

        Console.WriteLine("Combining Subtraction and Division:");
        Console.WriteLine($"({a} - {b}) / {c} = {result}");
    }
}
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that takes two numbers as input from the user and outputs their difference and quotient.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter the first number:");
        int num1 = int.Parse(Console.ReadLine());

        Console.WriteLine("Enter the second number:");
        int num2 = int.Parse(Console.ReadLine());

        int difference = num1 - num2;
        int quotient = num1 / num2;

        Console.WriteLine("Results:");
        Console.WriteLine($"Difference: {num1} - {num2} = {difference}");
        Console.WriteLine($"Quotient: {num1} / {num2} = {quotient}");
    }
}
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('364eb227-398c-4552-be02-1a9108329e0e', 0, '5df4c2b2-7be2-43f1-a7c7-924a4b542027', 'LESSON', 'Addition and multiplication', NULL, '<h4>Lesson: Addition and Multiplication</h4><p>In this lesson, we will delve into the fundamental operations of addition and multiplication, essential building blocks in C programming and mathematical problem solving.</p><p><strong>Addition:</strong> Addition is the process of combining two or more numbers to obtain their total. In C, the <code>+</code> operator is used for addition. For example:</p><pre class="ql-syntax" spellcheck="false">int sum = 5 + 3; // sum now holds the value 8
</pre><p>Addition is commutative, meaning the order of numbers does not affect the result:</p><pre class="ql-syntax" spellcheck="false">int a = 4;
int b = 7;
int result = a + b; // result is 11
</pre><p><strong>Multiplication:</strong> Multiplication involves adding a number to itself a certain number of times. In C, the <code>*</code> operator is used for multiplication. For instance:</p><pre class="ql-syntax" spellcheck="false">int product = 4 * 5; // product now holds the value 20
</pre><p>Like addition, multiplication is also commutative:</p><pre class="ql-syntax" spellcheck="false">int x = 6;
int y = 3;
int product = x * y; // product is 18
</pre><p>Understanding these basic operations is crucial for solving more complex mathematical problems in programming.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('f1eaf498-92ae-408a-898c-0074883bb621', 1, '5df4c2b2-7be2-43f1-a7c7-924a4b542027', 'LESSON', 'Subtraction and division', NULL, '<h4>Lesson: Subtraction and Division</h4><p>Next, we explore subtraction and division, two more essential arithmetic operations in C programming.</p><p><strong>Subtraction:</strong> Subtraction is the process of finding the difference between two numbers. In C, the <code>-</code> operator is used for subtraction:</p><pre class="ql-syntax" spellcheck="false">int difference = 9 - 4; // difference now holds the value 5
</pre><p>Subtraction is not commutative, meaning the order of numbers affects the result:</p><pre class="ql-syntax" spellcheck="false">int m = 10;
int n = 3;
int result = m - n; // result is 7
</pre><p><strong>Division:</strong> Division is the process of determining how many times one number is contained within another. The <code>/</code> operator is used for division in C:</p><pre class="ql-syntax" spellcheck="false">int quotient = 20 / 4; // quotient now holds the value 5
</pre><p>Division is not commutative:</p><pre class="ql-syntax" spellcheck="false">int p = 15;
int q = 3;
int result = p / q; // result is 5
</pre><p>It''s important to note that dividing by zero is undefined and should be avoided in programs.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a0302865-abd6-4230-a937-f0a866ca4568', 2, '0b7edcfd-cb5b-4a3f-b282-450b2c2bc000', 'LESSON', ' Useful math functions', NULL, '<h4>Lesson: Useful Math Functions</h4><p><strong>Objective:</strong> Explore some of the useful math functions provided by the <code>System.Math</code> class in C#. These functions allow you to perform complex mathematical calculations with ease.</p><h3>Key Concepts:</h3><p><strong>1. Math.Sqrt():</strong></p><p>The <code>Math.Sqrt()</code> method returns the square root of a specified number.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        double number = 16;
        double sqrt = Math.Sqrt(number);

        Console.WriteLine("Square Root:");
        Console.WriteLine($"The square root of {number} is {sqrt}");
    }
}
</pre><p><strong>2. Math.Pow():</strong></p><p>The <code>Math.Pow()</code> method returns a specified number raised to the specified power.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        double baseNum = 2;
        double exponent = 3;
        double result = Math.Pow(baseNum, exponent);

        Console.WriteLine("Power:");
        Console.WriteLine($"{baseNum} raised to the power of {exponent} is {result}");
    }
}
</pre><p><strong>3. Math.Abs():</strong></p><p>The <code>Math.Abs()</code> method returns the absolute value of a specified number.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        int number = -10;
        int absoluteValue = Math.Abs(number);

        Console.WriteLine("Absolute Value:");
        Console.WriteLine($"The absolute value of {number} is {absoluteValue}");
    }
}
</pre><p><strong>4. Math.Max() and Math.Min():</strong></p><p>The <code>Math.Max()</code> method returns the larger of two specified numbers, while the <code>Math.Min()</code> method returns the smaller of two specified numbers.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        int a = 10;
        int b = 20;

        int max = Math.Max(a, b);
        int min = Math.Min(a, b);

        Console.WriteLine("Max and Min:");
        Console.WriteLine($"The maximum of {a} and {b} is {max}");
        Console.WriteLine($"The minimum of {a} and {b} is {min}");
    }
}
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that takes a number from the user and performs various mathematical operations such as calculating the square root, power, absolute value, and finding the maximum and minimum of two numbers.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter a number:");
        double num = double.Parse(Console.ReadLine());

        double sqrt = Math.Sqrt(num);
        double power = Math.Pow(num, 2);
        double abs = Math.Abs(num);

        Console.WriteLine("Mathematical Operations:");
        Console.WriteLine($"Square root of {num} is {sqrt}");
        Console.WriteLine($"{num} raised to the power of 2 is {power}");
        Console.WriteLine($"Absolute value of {num} is {abs}");

        Console.WriteLine("Enter two numbers:");
        int a = int.Parse(Console.ReadLine());
        int b = int.Parse(Console.ReadLine());

        int max = Math.Max(a, b);
        int min = Math.Min(a, b);

        Console.WriteLine("Max and Min:");
        Console.WriteLine($"The maximum of {a} and {b} is {max}");
        Console.WriteLine($"The minimum of {a} and {b} is {min}");
    }
}
</pre><p>By mastering these basic math operations and useful functions, you will be well-equipped to handle a wide range of mathematical tasks in your C# programs.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a92178a5-2f81-4451-a759-e302ec1e4fe6', 3, '0b7edcfd-cb5b-4a3f-b282-450b2c2bc000', 'VIDEO', 'C# Math class 📏', NULL, '', 'https://www.youtube.com/watch?v=tzRK0QFEte0');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('e5b5e57e-c224-49b9-a878-cbb47fc8fcd3', 4, '0b7edcfd-cb5b-4a3f-b282-450b2c2bc000', 'CODE', 'Calculate sum of cubes', 'b6484e21-6937-489c-b031-b71767994756', 'Calculate sum of cubes', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b0f3bfa3-b20b-49c6-bd71-519d7bd07a03', 0, 'b4f5bfde-dfa4-4bb0-9e81-705405423211', 'LESSON', ' Conditional statements part-1', NULL, '<h4>Lesson: Conditional Statements Part-1</h4><p><strong>Objective:</strong> Understand the basics of conditional statements in C# and learn how to use <code>if</code>, <code>else if</code>, and <code>else</code> statements to control the flow of your programs based on specific conditions.</p><h3>Key Concepts:</h3><p><strong>1. If Statement:</strong></p><p>The <code>if</code> statement executes a block of code if a specified condition is true.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">if (condition)
{
    // Code to be executed if the condition is true
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 10;
if (number &gt; 5)
{
    Console.WriteLine("The number is greater than 5.");
}
</pre><p><strong>2. If-Else Statement:</strong></p><p>The <code>else</code> statement executes a block of code if the condition in the <code>if</code> statement is false.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">if (condition)
{
    // Code to be executed if the condition is true
}
else
{
    // Code to be executed if the condition is false
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 3;
if (number &gt; 5)
{
    Console.WriteLine("The number is greater than 5.");
}
else
{
    Console.WriteLine("The number is 5 or less.");
}
</pre><p><strong>3. Else If Statement:</strong></p><p>The <code>else if</code> statement allows you to check multiple conditions.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">if (condition1)
{
    // Code to be executed if condition1 is true
}
else if (condition2)
{
    // Code to be executed if condition2 is true
}
else
{
    // Code to be executed if both condition1 and condition2 are false
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 7;
if (number &gt; 10)
{
    Console.WriteLine("The number is greater than 10.");
}
else if (number &gt; 5)
{
    Console.WriteLine("The number is greater than 5 but less than or equal to 10.");
}
else
{
    Console.WriteLine("The number is 5 or less.");
}
</pre><p><strong>4. Nested If Statements:</strong></p><p>You can nest <code>if</code> statements to check for multiple conditions within the same block.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 8;
if (number &gt; 5)
{
    if (number % 2 == 0)
    {
        Console.WriteLine("The number is greater than 5 and even.");
    }
    else
    {
        Console.WriteLine("The number is greater than 5 and odd.");
    }
}
else
{
    Console.WriteLine("The number is 5 or less.");
}
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that checks if a given number is positive, negative, or zero.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter a number:");
        int number = int.Parse(Console.ReadLine());

        if (number &gt; 0)
        {
            Console.WriteLine("The number is positive.");
        }
        else if (number &lt; 0)
        {
            Console.WriteLine("The number is negative.");
        }
        else
        {
            Console.WriteLine("The number is zero.");
        }
    }
}
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('4fff2ea6-1f42-4007-8e52-f70800bc10c3', 1, 'b4f5bfde-dfa4-4bb0-9e81-705405423211', 'LESSON', ' Conditional statements part-2', NULL, '<h4>Lesson: Conditional Statements Part-2</h4><p><strong>Objective:</strong> Explore advanced uses of conditional statements in C# by learning how to combine conditions using logical operators and utilize the <code>switch</code> statement for more complex decision-making scenarios.</p><h3>Key Concepts:</h3><p><strong>1. Combining Conditions with Logical Operators:</strong></p><p>You can combine multiple conditions using logical operators such as <code>&amp;&amp;</code> (AND) and <code>||</code> (OR).</p><p><strong>Logical AND (</strong><code><strong>&amp;&amp;</strong></code><strong>):</strong></p><p>The <code>&amp;&amp;</code> operator combines two conditions and returns true only if both conditions are true.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int age = 25;
bool hasLicense = true;

if (age &gt;= 18 &amp;&amp; hasLicense)
{
    Console.WriteLine("You are eligible to drive.");
}
</pre><p><strong>Logical OR (</strong><code><strong>||</strong></code><strong>):</strong></p><p>The <code>||</code> operator combines two conditions and returns true if at least one of the conditions is true.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">bool isWeekend = true;
bool isHoliday = false;

if (isWeekend || isHoliday)
{
    Console.WriteLine("You have a day off.");
}
</pre><p><strong>Combining Multiple Conditions:</strong></p><p>You can combine multiple conditions using both <code>&amp;&amp;</code> and <code>||</code> to form complex logical expressions.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int age = 20;
bool hasPermission = false;

if ((age &gt;= 18 &amp;&amp; age &lt;= 21) || hasPermission)
{
    Console.WriteLine("You have limited access.");
}
</pre><p><strong>2. The Switch Statement:</strong></p><p>The <code>switch</code> statement allows you to execute one code block among many based on the value of a variable or expression.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">switch (expression)
{
    case value1:
        // Code to be executed if expression equals value1
        break;
    case value2:
        // Code to be executed if expression equals value2
        break;
    // Additional cases
    default:
        // Code to be executed if expression doesn''t match any case
        break;
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int day = 3;

switch (day)
{
    case 1:
        Console.WriteLine("Monday");
        break;
    case 2:
        Console.WriteLine("Tuesday");
        break;
    case 3:
        Console.WriteLine("Wednesday");
        break;
    case 4:
        Console.WriteLine("Thursday");
        break;
    case 5:
        Console.WriteLine("Friday");
        break;
    case 6:
        Console.WriteLine("Saturday");
        break;
    case 7:
        Console.WriteLine("Sunday");
        break;
    default:
        Console.WriteLine("Invalid day");
        break;
}
</pre><p><strong>3. Using the Default Case:</strong></p><p>The <code>default</code> case in a <code>switch</code> statement executes if none of the other cases match the value of the variable or expression.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 10;

switch (number)
{
    case 1:
        Console.WriteLine("One");
        break;
    case 2:
        Console.WriteLine("Two");
        break;
    default:
        Console.WriteLine("Other number");
        break;
}
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that converts a numerical grade to a letter grade using the <code>switch</code> statement.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter your numerical grade:");
        int grade = int.Parse(Console.ReadLine());

        switch (grade / 10)
        {
            case 10:
            case 9:
                Console.WriteLine("Your grade is A.");
                break;
            case 8:
                Console.WriteLine("Your grade is B.");
                break;
            case 7:
                Console.WriteLine("Your grade is C.");
                break;
            case 6:
                Console.WriteLine("Your grade is D.");
                break;
            default:
                Console.WriteLine("Your grade is F.");
                break;
        }
    }
}
</pre><p>By mastering these advanced conditional statements, you will be able to write more dynamic and responsive C# programs, capable of handling a wide range of decision-making scenarios efficiently.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('0e908dc9-052e-4e11-a685-92bc2d3a8cfb', 2, 'b4f5bfde-dfa4-4bb0-9e81-705405423211', 'VIDEO', 'Conditional Statements in C#', NULL, '', 'https://www.youtube.com/watch?v=LwIULGTxs-I');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('2fefd7d3-1575-4476-bb1c-2103dc576943', 3, 'b4f5bfde-dfa4-4bb0-9e81-705405423211', 'CODE', 'Check square number', 'b6484e21-6937-489c-b031-b71767994748', 'Check square number', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('94290e78-3a1d-427b-8a03-f47de435e3d2', 0, '196b3f65-770e-4078-8865-73f665a65f93', 'LESSON', ' Logic building part-1', NULL, '<h3>How to solve programming problems</h3><p>In the previous modules - we solved simple programming problems that had a direct approach.</p><p>In this module, we will cover problems that focus on logic building. Some suggestions for this module:</p><ul><li>Use a pen and paper to work out solutions.</li><li>The logic / algorithm first has to be clear in your mind before you decide to code it out.</li><li>Don''t spend more than 30 minutes on any problem. While the objective is to learn - if you don''t know the approach, it''s best to learn the concept / review the solution.</li></ul><p>For Beginner''s level programming problems - we think the following works best</p><ul><li><strong>Step 1</strong>: Understand the problem statement and the sample test cases</li><li><strong>Step 2</strong>: Generate examples - Create 10 input and output cases of your own</li><li><strong>Step 3</strong>: Observations / Pattern - Observe your examples to identify the logic</li><li><strong>Step 4</strong>: Plan your code - Modularise and solve sub-components of your problem</li><li><strong>Step 5</strong>: Learn - You may come across components of your logic where you don''t know how to execute the code.</li><li>In such cases, ask Google or ChatGPT or your friends and learn!</li><li><strong>Step 6</strong>: Write the code - For simpler programming problems - C++ solutions will be less than 20 lines in more than 95% of the cases.</li><li><strong>Step 7</strong>: Identify edge cases - If your code still fails - try and and come up with corner cases where your code may fail</li></ul><p>Click on&nbsp;<strong>Next</strong>&nbsp;to continue.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9feb132a-c157-409c-b3b5-d3854c24ab2f', 1, '196b3f65-770e-4078-8865-73f665a65f93', 'LESSON', ' Logic building part-2', NULL, '<h4>Lesson: Logic Building Part-2</h4><p><strong>Objective:</strong> Build on the foundation laid in Part-1 by tackling more complex problems and refining your problem-solving approach. This lesson will help you enhance your logical thinking and coding skills.</p><h3>Key Concepts:</h3><p><strong>1. Breaking Down Complex Problems:</strong></p><p>In this lesson, we will focus on solving more complex problems that require breaking down the problem into smaller, manageable parts. This involves understanding the problem statement thoroughly and identifying the different components that need to be addressed.</p><p><strong>Example Problem:</strong> Write a program to find the factorial of a given number.</p><p><strong>Steps to Solve:</strong></p><ol><li><strong>Understand the Problem Statement and Sample Test Cases:</strong></li></ol><ul><li>Problem: Calculate the factorial of a number nn</li><li class="ql-indent-1">n.</li><li class="ql-indent-1">Sample Test Case: Input: 5, Output: 120</li></ul><ol><li><strong>Generate Examples:</strong></li></ol><ul><li class="ql-indent-1">Input: 3, Output: 6 (3! = 3 * 2 * 1)</li><li class="ql-indent-1">Input: 4, Output: 24 (4! = 4 * 3 * 2 * 1)</li></ul><ol><li><strong>Observations / Pattern:</strong></li></ol><ul><li class="ql-indent-1">Factorial of a number is the product of all positive integers less than or equal to the number.</li></ul><ol><li><strong>Plan Your Code:</strong></li></ol><ul><li class="ql-indent-1">Initialize a variable to store the result (e.g., <code>result = 1</code>).</li><li>Use a loop to multiply the variable by each integer from 1 to nn</li><li class="ql-indent-1">n.</li></ul><ol><li><strong>Learn:</strong></li></ol><ul><li class="ql-indent-1">Understand how loops work and how to multiply numbers iteratively.</li></ul><ol><li><strong>Write the Code:</strong></li></ol><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter a number:");
        int n = int.Parse(Console.ReadLine());
        int result = 1;

        for (int i = 1; i &lt;= n; i++)
        {
            result *= i;
        }

        Console.WriteLine("Factorial: " + result);
    }
}
</pre><ol><li><strong>Identify Edge Cases:</strong></li></ol><ul><li class="ql-indent-1">Input: 0, Output: 1 (0! is defined as 1)</li><li class="ql-indent-1">Input: Negative number, Output: Undefined (factorial is not defined for negative numbers)</li></ul><p><strong>2. Using Recursion:</strong></p><p>Learn how to use recursion to solve problems where the solution involves solving smaller instances of the same problem.</p><p><strong>Example Problem:</strong> Write a recursive program to calculate the factorial of a number.</p><p><strong>Steps to Solve:</strong></p><ol><li><strong>Understand the Problem Statement and Sample Test Cases:</strong></li></ol><ul><li>Problem: Calculate the factorial of a number nn</li><li class="ql-indent-1">n using recursion.</li><li class="ql-indent-1">Sample Test Case: Input: 5, Output: 120</li></ul><ol><li><strong>Generate Examples:</strong></li></ol><ul><li class="ql-indent-1">Input: 3, Output: 6</li><li class="ql-indent-1">Input: 4, Output: 24</li></ul><ol><li><strong>Observations / Pattern:</strong></li></ol><ul><li>The factorial of nn</li><li>n can be defined as n×(n−1)!n \times (n-1)!</li><li class="ql-indent-1">n×(n−1)!.</li></ul><ol><li><strong>Plan Your Code:</strong></li></ol><ul><li>Define a recursive function that calls itself with n−1n-1</li><li>n−1 until nn</li><li class="ql-indent-1">n is 1.</li></ul><ol><li><strong>Learn:</strong></li></ol><ul><li class="ql-indent-1">Understand the concept of recursion and how base cases work.</li></ul><ol><li><strong>Write the Code:</strong></li></ol><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter a number:");
        int n = int.Parse(Console.ReadLine());
        int result = Factorial(n);
        Console.WriteLine("Factorial: " + result);
    }

    static int Factorial(int n)
    {
        if (n == 0 || n == 1)
            return 1;
        else
            return n * Factorial(n - 1);
    }
}
</pre><p>	<strong>Identify Edge Cases:</strong></p><ul><li>Input: 0, Output: 1</li><li>Input: Negative number, Output: Undefined</li></ul><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c8d81db9-daba-4e5b-92d9-84644d4cbeb8', 2, '196b3f65-770e-4078-8865-73f665a65f93', 'LESSON', ' Logic building part-3', NULL, '<h4>Lesson: Logic Building Part-3</h4><p><strong>Objective:</strong> Apply advanced logic building techniques to solve real-world problems. This lesson focuses on enhancing your problem-solving skills through more challenging scenarios and efficient algorithms.</p><h3>Key Concepts:</h3><p><strong>1. Optimizing Solutions:</strong></p><p>In this lesson, we will focus on optimizing solutions to ensure that they are efficient and scalable. This involves understanding time and space complexity and making appropriate trade-offs.</p><p><strong>Example Problem:</strong> Write a program to find the nth Fibonacci number.</p><p><strong>Steps to Solve:</strong></p><ol><li><strong>Understand the Problem Statement and Sample Test Cases:</strong></li></ol><ul><li class="ql-indent-1">Problem: Calculate the nth Fibonacci number.</li><li class="ql-indent-1">Sample Test Case: Input: 5, Output: 5 (0, 1, 1, 2, 3, 5)</li></ul><ol><li><strong>Generate Examples:</strong></li></ol><ul><li class="ql-indent-1">Input: 3, Output: 2 (0, 1, 1, 2)</li><li class="ql-indent-1">Input: 4, Output: 3 (0, 1, 1, 2, 3)</li></ul><ol><li><strong>Observations / Pattern:</strong></li></ol><ul><li>Fibonacci sequence is defined as: F(0)=0,F(1)=1,F(n)=F(n−1)+F(n−2)F(0) = 0, F(1) = 1, F(n) = F(n-1) + F(n-2)</li><li class="ql-indent-1">F(0)=0,F(1)=1,F(n)=F(n−1)+F(n−2)</li></ul><ol><li><strong>Plan Your Code:</strong></li></ol><ul><li class="ql-indent-1">Use an iterative approach to calculate the nth Fibonacci number to optimize space complexity.</li></ul><ol><li><strong>Learn:</strong></li></ol><ul><li class="ql-indent-1">Understand the difference between recursive and iterative approaches and their impact on performance.</li></ul><ol><li><strong>Write the Code:</strong></li></ol><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter a number:");
        int n = int.Parse(Console.ReadLine());
        int result = Fibonacci(n);
        Console.WriteLine("Fibonacci: " + result);
    }

    static int Fibonacci(int n)
    {
        if (n == 0) return 0;
        if (n == 1) return 1;

        int a = 0, b = 1, c = 0;
        for (int i = 2; i &lt;= n; i++)
        {
            c = a + b;
            a = b;
            b = c;
        }
        return c;
    }
}
</pre><ol><li><strong>Identify Edge Cases:</strong></li></ol><ul><li class="ql-indent-1">Input: 0, Output: 0</li><li class="ql-indent-1">Input: 1, Output: 1</li><li class="ql-indent-1">Large inputs should be handled efficiently</li></ul><p><strong>2. Dynamic Programming:</strong></p><p>Learn how to use dynamic programming to solve problems that can be broken down into overlapping subproblems.</p><p><strong>Example Problem:</strong> Write a program to find the nth Fibonacci number using dynamic programming.</p><p><strong>Steps to Solve:</strong></p><ol><li><strong>Understand the Problem Statement and Sample Test Cases:</strong></li></ol><ul><li class="ql-indent-1">Problem: Calculate the nth Fibonacci number using dynamic programming.</li><li class="ql-indent-1">Sample Test Case: Input: 5, Output: 5</li></ul><ol><li><strong>Generate Examples:</strong></li></ol><ul><li class="ql-indent-1">Input: 3, Output: 2</li><li class="ql-indent-1">Input: 4, Output: 3</li></ul><ol><li><strong>Observations / Pattern:</strong></li></ol><ul><li class="ql-indent-1">Use an array to store previously calculated Fibonacci numbers to avoid redundant calculations.</li></ul><ol><li><strong>Plan Your Code:</strong></li></ol><ul><li class="ql-indent-1">Initialize an array to store Fibonacci numbers up to n.</li><li class="ql-indent-1">Use a loop to fill the array based on the Fibonacci formula.</li></ul><ol><li><strong>Learn:</strong></li></ol><ul><li class="ql-indent-1">Understand how dynamic programming improves efficiency by reusing previously computed values.</li></ul><ol><li><strong>Write the Code:</strong></li></ol><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter a number:");
        int n = int.Parse(Console.ReadLine());
        int result = Fibonacci(n);
        Console.WriteLine("Fibonacci: " + result);
    }

    static int Fibonacci(int n)
    {
        if (n == 0) return 0;
        if (n == 1) return 1;

        int[] fib = new int[n + 1];
        fib[0] = 0;
        fib[1] = 1;

        for (int i = 2; i &lt;= n; i++)
        {
            fib[i] = fib[i - 1] + fib[i - 2];
        }

        return fib[n];
    }
}
</pre><ol><li><strong>Identify Edge Cases:</strong></li></ol><ul><li class="ql-indent-1">Input: 0, Output: 0</li><li class="ql-indent-1">Input: 1, Output: 1</li><li class="ql-indent-1">Ensure the program handles large inputs efficiently</li></ul><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c098acf7-4181-4a89-aa5e-85686efbe9bb', 1, '1c64da87-8cf6-47d9-ad16-b2ea87945562', 'LESSON', 'For loops', NULL, '<h4>Lesson: For Loops</h4><p><strong>Objective:</strong> Learn how to use <code>for</code> loops to execute a block of code a specific number of times.</p><h3>Key Concepts:</h3><p><strong>1. What is a For Loop?</strong></p><p>A <code>for</code> loop is used when you know in advance how many times you want to execute a statement or a block of statements.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">for (initialization; condition; increment)
{
    // Code to be executed
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">csharp
Copy code
for (int i = 0; i &lt; 5; i++)
{
    Console.WriteLine("i: " + i);
}
</pre><p><strong>2. Components of a For Loop:</strong></p><ul><li><strong>Initialization:</strong> Executed once at the beginning of the loop.</li><li><strong>Condition:</strong> Evaluated before each iteration. If true, the loop continues; if false, the loop ends.</li><li><strong>Increment:</strong> Executed at the end of each iteration.</li></ul><p><strong>3. Using Different Data Types:</strong></p><p>You can use different data types in the <code>for</code> loop, not just integers.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">for (char c = ''A''; c &lt;= ''E''; c++)
{
    Console.WriteLine("Char: " + c);
}
</pre><p><strong>4. Nested For Loops:</strong></p><p>You can nest <code>for</code> loops to handle more complex iterations.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">for (int i = 1; i &lt;= 3; i++)
{
    for (int j = 1; j &lt;= 3; j++)
    {
        Console.WriteLine("i: " + i + ", j: " + j);
    }
}
</pre><p>Using <code>for</code> loops allows you to perform repetitive tasks efficiently and with greater control over the number of iterations.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('11fe0109-7912-4ad5-9586-00205c81d42d', 2, '1c64da87-8cf6-47d9-ad16-b2ea87945562', 'LESSON', 'Break, Continue, For each', NULL, '<h4>Lesson: Break, Continue, For Each</h4><p><strong>Objective:</strong> Learn how to use the <code>break</code> and <code>continue</code> statements to control loop execution and explore the <code>foreach</code> loop for iterating over collections.</p><h3>Key Concepts:</h3><p><strong>1. Break Statement:</strong></p><p>The <code>break</code> statement terminates the loop immediately, and control is passed to the statement following the terminated loop.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">for (int i = 0; i &lt; 10; i++)
{
    if (i == 5)
    {
        break;
    }
    Console.WriteLine("i: " + i);
}
</pre><p><strong>2. Continue Statement:</strong></p><p>The <code>continue</code> statement skips the current iteration of the loop and proceeds with the next iteration.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">for (int i = 0; i &lt; 10; i++)
{
    if (i % 2 == 0)
    {
        continue;
    }
    Console.WriteLine("i: " + i);
}
</pre><p><strong>3. Foreach Loop:</strong></p><p>The <code>foreach</code> loop is used to iterate over elements in a collection (such as arrays or lists) without using an explicit counter.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">foreach (type variable in collection)
{
    // Code to be executed
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">string[] fruits = { "Apple", "Banana", "Cherry" };
foreach (string fruit in fruits)
{
    Console.WriteLine(fruit);
}
</pre><p><strong>4. Foreach with Different Data Types:</strong></p><p>You can use the <code>foreach</code> loop with different data types and collections.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">List&lt;int&gt; numbers = new List&lt;int&gt; { 1, 2, 3, 4, 5 };
foreach (int number in numbers)
{
    Console.WriteLine(number);
}
</pre><p>Using the <code>break</code> and <code>continue</code> statements allows you to control the flow within loops more precisely, and the <code>foreach</code> loop simplifies the iteration over collections, making your code more readable and maintainable.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('fb9013c2-17ca-4f89-82d3-42415fa1a8ae', 3, '1c64da87-8cf6-47d9-ad16-b2ea87945562', 'VIDEO', 'C# Loops Tutorial | Loops In C# | Iteration Statements In C#', NULL, '', 'https://www.youtube.com/watch?v=yMOjBupmP2A');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('80e5ee5d-4681-4375-af20-ee2d200ab0e7', 4, '1c64da87-8cf6-47d9-ad16-b2ea87945562', 'CODE', 'Calculate sum of cubes', 'b6484e21-6937-489c-b031-b71767994756', 'Calculate sum of cubes', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('19b85358-2ab8-490b-a506-f6e537386006', 0, '41039a23-f534-44d4-ab43-55b0580d7dc1', 'LESSON', 'Introduction, Outputting & Math Operators in C', NULL, '<h3>Introduction to C Programming</h3><p>C is a powerful and widely-used programming language known for its efficiency and control. It serves as the foundation for many other languages and is crucial for system-level programming. This lesson will introduce you to the basics of C programming, focusing on outputting data and using math operators.</p><h3>Basic Structure of a C Program</h3><p>A C program consists of functions, with the <code>main</code> function being the entry point. The structure of a simple C program is as follows:</p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    // Code to execute
    return 0;
}
</pre><ul><li><code>#include &lt;stdio.h&gt;</code>: This preprocessor directive includes the standard input/output library, allowing you to use functions like <code>printf</code>.</li><li><code>int main()</code>: The <code>main</code> function is where the execution of the program begins.</li><li><code>return 0;</code>: This statement ends the <code>main</code> function and returns a status code to the operating system.</li></ul><h3>Outputting Data</h3><p>In C, the <code>printf</code> function is used to output data to the console. It allows you to display formatted text and variables.</p><p><strong>Basic Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">printf("format string", variables);
</pre><p><strong>Examples:</strong></p><ul><li><strong>Printing Text:</strong></li></ul><pre class="ql-syntax" spellcheck="false">printf("Hello, World!\n");
</pre><ul><li>This will output the text <code>Hello, World!</code> followed by a newline.</li><li><strong>Printing Variables:</strong></li></ul><pre class="ql-syntax" spellcheck="false">int age = 25;
printf("Age: %d\n", age);
</pre><ul><li>The <code>%d</code> format specifier is used to print integers. Other specifiers include <code>%f</code> for floating-point numbers and <code>%s</code> for strings.</li><li><strong>Formatted Output:</strong></li></ul><pre class="ql-syntax" spellcheck="false">float pi = 3.14159;
printf("Value of pi: %.2f\n", pi);
</pre><ul><li>The <code>%.2f</code> format specifier limits the floating-point number to two decimal places.</li></ul><h3>Math Operators in C</h3><p>Math operators in C perform arithmetic operations on variables and constants. They are similar to those used in other programming languages.</p><p><strong>Arithmetic Operators:</strong></p><ul><li><strong>Addition (</strong><code><strong>+</strong></code><strong>):</strong> Adds two values.</li></ul><pre class="ql-syntax" spellcheck="false">int sum = 5 + 3; // sum is 8
</pre><ul><li>Subtraction (-): Subtracts one value from another.</li></ul><pre class="ql-syntax" spellcheck="false">int difference = 10 - 4; // difference is 6
</pre><ul><li><strong>Multiplication (</strong><code><strong>*</strong></code><strong>):</strong> Multiplies two values.</li></ul><pre class="ql-syntax" spellcheck="false">int product = 7 * 6; // product is 42
</pre><ul><li><strong>Division (</strong><code><strong>/</strong></code><strong>):</strong> Divides one value by another. For integer division, the result is an integer.</li></ul><pre class="ql-syntax" spellcheck="false">int quotient = 20 / 4; // quotient is 5
</pre><ul><li><strong>Modulus (</strong><code><strong>%</strong></code><strong>):</strong> Returns the remainder of a division.</li></ul><pre class="ql-syntax" spellcheck="false">int remainder = 10 % 3; // remainder is 1
</pre><p><strong>Example Program:</strong></p><p>Here is a complete example demonstrating output and math operations:</p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    int a = 10;
    int b = 5;
    int sum = a + b;
    int difference = a - b;
    int product = a * b;
    int quotient = a / b;
    int remainder = a % b;

    // Output the results
    printf("a = %d\n", a);
    printf("b = %d\n", b);
    printf("Sum: %d\n", sum);
    printf("Difference: %d\n", difference);
    printf("Product: %d\n", product);
    printf("Quotient: %d\n", quotient);
    printf("Remainder: %d\n", remainder);

    return 0;
}
</pre><p>In this program:</p><ul><li>We declare two integer variables, <code>a</code> and <code>b</code>.</li><li>We perform addition, subtraction, multiplication, division, and modulus operations.</li><li>We use <code>printf</code> to display the results of these operations.</li></ul><h3>Conclusion</h3><p>Understanding how to output data and use basic math operators is fundamental to programming in C. These concepts allow you to perform calculations and display results, forming the basis for more complex programming tasks. With these basics, you can start writing more advanced C programs and explore additional features of the language.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('db7a284b-32d2-407c-a3b8-c3f40cb64e98', 1, '41039a23-f534-44d4-ab43-55b0580d7dc1', 'CODE', 'Check prime number', 'b6484e21-6937-489c-b031-b71767994758', 'Check prime number', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('ae6d230e-bd68-41fd-bc0c-50852baaa1d5', 2, '41039a23-f534-44d4-ab43-55b0580d7dc1', 'VIDEO', 'C Programming Tutorial for Beginners - Hello World', NULL, '', 'https://www.youtube.com/watch?v=KJgsSFOSQv0&t=544s');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6a379a85-1036-4f70-95c0-23a15498f4a6', 1, '0b8d3b3a-1d28-41c1-80d4-19375d5ce114', 'LESSON', 'While loops', NULL, '<h4>Lesson: While Loops</h4><p><strong>Objective:</strong> Understand how to use <code>while</code> loops to execute a block of code repeatedly as long as a specified condition is true.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Basic </strong><code><strong>while</strong></code><strong> Loop:</strong></p><p>A <code>while</code> loop repeatedly executes a block of code as long as the specified condition evaluates to true.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let mut count = 0;
    while count &lt; 5 {
        println!("Count: {}", count);
        count += 1;
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>let mut count = 0;</code> initializes a mutable variable <code>count</code>.</li><li><code>while count &lt; 5 { ... }</code> repeatedly executes the block as long as <code>count</code> is less than 5.</li><li><code>count += 1;</code> increments <code>count</code> by 1 on each iteration.</li></ul><p><strong>2. Infinite Loops:</strong></p><p>An infinite loop occurs if the condition never becomes false. Be cautious to ensure your <code>while</code> loop has a condition that will eventually be met.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let mut count = 0;
    while count &lt; 5 {
        println!("Count: {}", count);
        count += 1;
        if count == 3 {
            break;
        }
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>if count == 3 { break; }</code> exits the loop when <code>count</code> equals 3 to avoid an infinite loop.</li></ul><p><strong>3. Nested </strong><code><strong>while</strong></code><strong> Loops:</strong></p><p>You can nest <code>while</code> loops to handle more complex iterations.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let mut i = 1;
    while i &lt;= 3 {
        let mut j = 1;
        while j &lt;= 3 {
            println!("i: {}, j: {}", i, j);
            j += 1;
        }
        i += 1;
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li>Nested <code>while</code> loops iterate through combinations of <code>i</code> and <code>j</code>.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that prints the first 10 numbers of the Fibonacci sequence using a <code>while</code> loop.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let mut a = 0;
    let mut b = 1;
    let mut count = 0;

    while count &lt; 10 {
        println!("{}", a);
        let temp = a;
        a = b;
        b = temp + b;
        count += 1;
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li>The program initializes <code>a</code> and <code>b</code> to the first two Fibonacci numbers and prints the sequence up to 10 numbers using a <code>while</code> loop.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('7b4e9e3c-d82e-45e5-9a05-886153df077f', 2, '0b8d3b3a-1d28-41c1-80d4-19375d5ce114', 'LESSON', 'For loops', NULL, '<h4>Lesson: For Loops</h4><p><strong>Objective:</strong> Learn how to use <code>for</code> loops to iterate over a range of values or collections.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Basic </strong><code><strong>for</strong></code><strong> Loop:</strong></p><p>A <code>for</code> loop is used to iterate over a range of values.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    for i in 0..5 {
        println!("i: {}", i);
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>for i in 0..5 { ... }</code> iterates from 0 to 4 (the range <code>0..5</code> includes 0 but excludes 5).</li></ul><p><strong>2. Iterating Over Collections:</strong></p><p>You can use a <code>for</code> loop to iterate over elements in a collection like arrays or vectors.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let array = [10, 20, 30, 40, 50];
    for element in array.iter() {
        println!("Element: {}", element);
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>for element in array.iter() { ... }</code> iterates over each element in the array.</li></ul><p><strong>3. Iterating with Indices:</strong></p><p>You can iterate over a collection with access to both indices and elements.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let array = [10, 20, 30, 40, 50];
    for (index, &amp;element) in array.iter().enumerate() {
        println!("Index: {}, Element: {}", index, element);
    }
}
</pre><p><strong>Explanation:</strong></p><ul><li><code>for (index, &amp;element) in array.iter().enumerate() { ... }</code> provides both the index and the element during iteration.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that calculates the factorial of a number using a <code>for</code> loop.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">fn main() {
    let number = 5;
    let mut factorial = 1;

    for i in 1..=number {
        factorial *= i;
    }

    println!("Factorial of {} is {}", number, factorial);
}
</pre><p><strong>Explanation:</strong></p><ul><li>The program calculates the factorial of <code>number</code> by iterating from 1 to <code>number</code> and multiplying the <code>factorial</code> variable by each value.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5dce4f69-d72c-416b-94d0-1cbe13cfadc4', 3, '0b8d3b3a-1d28-41c1-80d4-19375d5ce114', 'VIDEO', 'Rust Programming Tutorial #8 - While Loop', NULL, '', 'https://www.youtube.com/watch?v=OaEXxpELfvw');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b4576abb-e3d5-4775-ba93-04ae912851d8', 4, '0b8d3b3a-1d28-41c1-80d4-19375d5ce114', 'VIDEO', 'Rust Programming Tutorial #9 - For Loop', NULL, '', 'https://www.youtube.com/watch?v=gtoj6vOeb1A');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b4c034c4-a7e9-4c2f-b540-7610c6bb09d6', 0, '8478ca69-d368-4f1e-84c2-e792b694bb68', 'LESSON', 'Pointers and Memory In C', NULL, '<h3>Introduction to Pointers</h3><p>Pointers are a fundamental concept in C programming that allow you to directly interact with memory. Understanding pointers is crucial for managing memory efficiently and for various advanced programming techniques.</p><h3>What is a Pointer?</h3><p>A pointer is a variable that stores the memory address of another variable. Instead of holding a data value, a pointer holds the address where the value is stored in memory.</p><p><strong>Syntax for Pointer Declaration:</strong></p><pre class="ql-syntax" spellcheck="false">dataType *pointerName;
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int *p;
</pre><p>Here, <code>p</code> is a pointer to an integer.</p><h3>Declaring and Initializing Pointers</h3><p>To use a pointer, you need to declare it and then initialize it with the address of a variable.</p><p><strong>Declaration:</strong></p><pre class="ql-syntax" spellcheck="false">int *p;
</pre><p><strong>Initialization:</strong></p><pre class="ql-syntax" spellcheck="false">int x = 10;
p = &amp;x; // &amp;x gives the address of variable x
</pre><p>In this example, <code>p</code> now holds the address of the variable <code>x</code>.</p><h3>Dereferencing Pointers</h3><p>Dereferencing a pointer means accessing the value stored at the address the pointer points to. You use the <code>*</code> operator for dereferencing.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">*pointerName
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int value = *p; // value is now 10, the content of x
</pre><p>Here, <code>*p</code> gives you the value stored at the address held by <code>p</code>.</p><h3>Pointer Arithmetic</h3><p>Pointers can be incremented or decremented to traverse arrays or manipulate data structures.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int arr[] = {1, 2, 3, 4, 5};
int *ptr = arr;

printf("First element: %d\n", *ptr); // Outputs 1
ptr++; // Move to the next integer
printf("Second element: %d\n", *ptr); // Outputs 2
</pre><h3>Memory Allocation</h3><p>In C, dynamic memory allocation is handled using pointers. Functions from the <code>stdlib.h</code> library, such as <code>malloc</code>, <code>calloc</code>, <code>realloc</code>, and <code>free</code>, are used for this purpose.</p><ul><li><code><strong>malloc(size_t size)</strong></code>: Allocates a block of memory of the specified size.</li></ul><pre class="ql-syntax" spellcheck="false">int *arr = (int *)malloc(5 * sizeof(int)); // Allocate memory for 5 integers
</pre><ul><li><code><strong>calloc(size_t num, size_t size)</strong></code>: Allocates memory for an array of <code>num</code> elements of <code>size</code> bytes each, and initializes all bytes to zero.</li></ul><pre class="ql-syntax" spellcheck="false">int *arr = (int *)calloc(5, sizeof(int)); // Allocate memory for 5 integers and initialize to 0
</pre><ul><li><code><strong>realloc(void *ptr, size_t size)</strong></code>: Changes the size of previously allocated memory.</li></ul><pre class="ql-syntax" spellcheck="false">arr = (int *)realloc(arr, 10 * sizeof(int)); // Resize memory to hold 10 integers
</pre><ul><li><code><strong>free(void *ptr)</strong></code>: Deallocates previously allocated memory.</li></ul><pre class="ql-syntax" spellcheck="false">free(arr); // Free the allocated memory
</pre><h3>Example Program</h3><p>Here is an example demonstrating the use of pointers and dynamic memory allocation:</p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int main() {
    int *ptr;
    int size = 5;

    // Allocate memory
    ptr = (int *)malloc(size * sizeof(int));

    // Check if memory allocation was successful
    if (ptr == NULL) {
        printf("Memory allocation failed\n");
        return 1;
    }

    // Initialize and print values
    for (int i = 0; i &lt; size; i++) {
        ptr[i] = i + 1;
    }

    for (int i = 0; i &lt; size; i++) {
        printf("Element %d: %d\n", i, ptr[i]);
    }

    // Free the allocated memory
    free(ptr);

    return 0;
}
</pre><p>In this program:</p><ul><li>We allocate memory for an array of integers.</li><li>Initialize the array with values and print them.</li><li>Finally, we free the allocated memory to prevent memory leaks.</li></ul><h3>Conclusion</h3><p>Pointers are a powerful feature in C programming that provide direct access to memory. Understanding pointers allows you to manage memory more efficiently and perform advanced programming techniques. With knowledge of pointer arithmetic and dynamic memory allocation, you can write more complex and efficient C programs.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('eeb3f9a8-2cc5-4451-8ae0-7a2af67dd58e', 1, '8478ca69-d368-4f1e-84c2-e792b694bb68', 'VIDEO', 'C Programming Tutorial for Beginners - Pointers and Memory', NULL, '', 'https://www.youtube.com/watch?v=KJgsSFOSQv0&t=11350s');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b090e878-bc1a-4d98-b813-6b429f5a0c42', 0, 'd88a276f-b263-4b8e-aaf9-7f8340c6b100', 'LESSON', 'Variables and Data Types In C', NULL, '<h3>Introduction</h3><p>In C programming, variables and data types are fundamental concepts that form the basis of any C program. Understanding how to declare variables and use different data types is essential for writing efficient and effective code.</p><h3>Variables</h3><p>A variable is a named storage location in memory that holds a value. The value of a variable can be changed during the execution of a program.</p><p><strong>Syntax for Variable Declaration:</strong></p><pre class="ql-syntax" spellcheck="false">dataType variableName;
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int age;
float salary;
</pre><p>In this example:</p><ul><li><code>age</code> is an integer variable.</li><li><code>salary</code> is a floating-point variable.</li></ul><h3>Initializing Variables</h3><p>Variables can be initialized at the time of declaration or later in the program.</p><p><strong>Declaration and Initialization:</strong></p><pre class="ql-syntax" spellcheck="false">int age = 25;
float salary = 50000.50;
</pre><p><strong>Initialization after Declaration:</strong></p><pre class="ql-syntax" spellcheck="false">int age;
age = 25;

float salary;
salary = 50000.50;
</pre><h3>Data Types</h3><p>Data types specify the type of data that a variable can hold. C provides several built-in data types, which can be broadly classified into the following categories:</p><h4>1. <strong>Basic Data Types</strong></h4><ul><li><strong>Integer Types (</strong><code><strong>int</strong></code><strong>)</strong></li><li class="ql-indent-1">Used to store whole numbers.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">int count = 10;
</pre><ul><li><strong>Floating-Point Types (</strong><code><strong>float</strong></code><strong>, </strong><code><strong>double</strong></code><strong>)</strong></li><li class="ql-indent-1">Used to store numbers with fractional parts.</li><li class="ql-indent-1"><code>float</code> is used for single-precision floating-point numbers.</li><li class="ql-indent-1"><code>double</code> is used for double-precision floating-point numbers.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">float temperature = 98.6;
double distance = 123456.789;
</pre><ul><li><strong>Character Type (</strong><code><strong>char</strong></code><strong>)</strong></li><li class="ql-indent-1">Used to store single characters.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">char grade = ''A'';
</pre><h4>2. <strong>Derived Data Types</strong></h4><ul><li><strong>Arrays</strong></li><li class="ql-indent-1">Collections of variables of the same type.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">int numbers[5] = {1, 2, 3, 4, 5};
</pre><ul><li><strong>Pointers</strong></li><li class="ql-indent-1">Variables that store memory addresses.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">int *ptr;
</pre><ul><li><strong>Structures</strong></li><li class="ql-indent-1">User-defined data types that group related variables.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">struct Person {
    char name[50];
    int age;
};
</pre><ul><li><strong>Unions</strong></li><li class="ql-indent-1">User-defined data types that can hold different data types but only one at a time.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">union Data {
    int i;
    float f;
    char str[20];
};
</pre><h4>3. <strong>Enumeration Types (</strong><code><strong>enum</strong></code><strong>)</strong></h4><ul><li><strong>Enumeration Types</strong></li><li class="ql-indent-1">Define a variable that can hold a set of predefined constants.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">enum Weekday { Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday };
</pre><h3>Example Program</h3><p>Here is a simple C program that demonstrates the use of different variables and data types:</p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    int age = 25;
    float salary = 50000.50;
    char grade = ''A'';

    // Print variable values
    printf("Age: %d\n", age);
    printf("Salary: %.2f\n", salary);
    printf("Grade: %c\n", grade);

    // Using an array
    int numbers[3] = {10, 20, 30};
    printf("First number: %d\n", numbers[0]);

    // Using a structure
    struct Person {
        char name[50];
        int age;
    };

    struct Person person1;
    person1.age = 30;
    snprintf(person1.name, sizeof(person1.name), "Alice");

    printf("Person''s name: %s\n", person1.name);
    printf("Person''s age: %d\n", person1.age);

    return 0;
}
</pre><p>In this program:</p><ul><li>We declare and initialize variables of different types.</li><li>We use an array to store multiple integers.</li><li>We define and use a structure to group related data.</li></ul><h3>Conclusion</h3><p>Variables and data types are essential components of C programming. Understanding how to declare variables, initialize them, and use different data types allows you to handle various kinds of data efficiently. This knowledge forms the foundation for building more complex programs and algorithms in C.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c873eb27-4493-418e-baef-ca9325608543', 1, 'd88a276f-b263-4b8e-aaf9-7f8340c6b100', 'CODE', 'List divisor', 'b6484e21-6937-489c-b031-b71767994740', 'List divisor', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('e474769d-fc78-4170-9e29-b7ca3b89720e', 2, 'd88a276f-b263-4b8e-aaf9-7f8340c6b100', 'VIDEO', 'C Programming Tutorial for Beginners - Variables And Data Types', NULL, '', 'https://www.youtube.com/watch?v=KJgsSFOSQv0&t=1256s');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b04725b2-97ac-4bcb-ad6f-3c2deaddbf1c', 0, '626aedf8-8a49-42e0-be2d-8f25d146704c', 'LESSON', 'Conditionals In C', NULL, '<h3>Introduction</h3><p>Conditionals in C are used to make decisions in a program based on certain conditions. They allow you to control the flow of execution and execute different blocks of code based on whether a condition is true or false. The main conditional statements in C are <code>if</code>, <code>else</code>, <code>else if</code>, and <code>switch</code>.</p><h3>The <code>if</code> Statement</h3><p>The <code>if</code> statement evaluates a condition and executes a block of code if the condition is true.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">if (condition) {
    // Code to execute if condition is true
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 10;
if (number &gt; 0) {
    printf("The number is positive.\n");
}
</pre><p>In this example, the message will be printed because the condition <code>number &gt; 0</code> is true.</p><h3>The <code>if-else</code> Statement</h3><p>The <code>if-else</code> statement provides an alternative block of code that is executed if the condition in the <code>if</code> statement is false.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">if (condition) {
    // Code to execute if condition is true
} else {
    // Code to execute if condition is false
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = -5;
if (number &gt; 0) {
    printf("The number is positive.\n");
} else {
    printf("The number is not positive.\n");
}
</pre><p>Here, since <code>number</code> is not greater than 0, the second message will be printed.</p><h3>The <code>if-else if-else</code> Statement</h3><p>The <code>if-else if-else</code> statement is used to check multiple conditions in sequence. The first true condition''s block is executed, and the rest are skipped.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">if (condition1) {
    // Code to execute if condition1 is true
} else if (condition2) {
    // Code to execute if condition2 is true
} else {
    // Code to execute if none of the above conditions are true
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 0;
if (number &gt; 0) {
    printf("The number is positive.\n");
} else if (number &lt; 0) {
    printf("The number is negative.\n");
} else {
    printf("The number is zero.\n");
}
</pre><p>In this example, the output will be "The number is zero" because neither of the first two conditions is true.</p><h3>The <code>switch</code> Statement</h3><p>The <code>switch</code> statement is used to select one of many code blocks to be executed based on the value of a variable.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">switch (expression) {
    case constant1:
        // Code to execute if expression equals constant1
        break;
    case constant2:
        // Code to execute if expression equals constant2
        break;
    // More cases...
    default:
        // Code to execute if no case matches
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int day = 3;
switch (day) {
    case 1:
        printf("Monday\n");
        break;
    case 2:
        printf("Tuesday\n");
        break;
    case 3:
        printf("Wednesday\n");
        break;
    case 4:
        printf("Thursday\n");
        break;
    case 5:
        printf("Friday\n");
        break;
    case 6:
        printf("Saturday\n");
        break;
    case 7:
        printf("Sunday\n");
        break;
    default:
        printf("Invalid day\n");
}
</pre><p>In this example, the output will be "Wednesday" because the value of <code>day</code> is 3.</p><h3>Nested Conditional Statements</h3><p>You can nest <code>if</code> and <code>switch</code> statements within each other to handle more complex conditions.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 10;
if (number &gt; 0) {
    if (number % 2 == 0) {
        printf("The number is positive and even.\n");
    } else {
        printf("The number is positive and odd.\n");
    }
} else {
    printf("The number is non-positive.\n");
}
</pre><h3>Conclusion</h3><p>Conditional statements are a key component of control flow in C programming. They allow you to make decisions and execute different parts of your code based on conditions. Mastery of <code>if</code>, <code>else</code>, <code>else if</code>, and <code>switch</code> statements is crucial for creating flexible and robust programs.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('499d3020-1da4-4dce-8a92-1ec8146973b6', 1, '626aedf8-8a49-42e0-be2d-8f25d146704c', 'CODE', 'Check triangle from side length', 'b6484e21-6937-489c-b031-b71767994760', 'Check triangle from side length', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('42b73cb0-9d4c-4171-b813-f3b9aadd89ce', 2, '626aedf8-8a49-42e0-be2d-8f25d146704c', 'VIDEO', 'C Programming Tutorial for Beginners - If Statements', NULL, '', 'https://www.youtube.com/watch?v=KJgsSFOSQv0&t=6801s');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('ef062f54-1b34-41fc-8148-404c0caa2abd', 3, '626aedf8-8a49-42e0-be2d-8f25d146704c', 'VIDEO', 'C Programming Tutorial for Beginners - Switch Statements', NULL, '', 'https://www.youtube.com/watch?v=KJgsSFOSQv0&t=8091s');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('f9cf4339-ba98-49e9-9d36-348e49b134dc', 0, '9e2dfaec-351f-41a1-8cf1-394d5bfe5846', 'LESSON', 'Understanding design patterns', NULL, '<h3>Lesson: Understanding Design Patterns</h3><p><strong>Objective:</strong> Gain an understanding of what design patterns are and why they are essential in software development.</p><p><strong>1. Definition:</strong> Design patterns are reusable solutions to common problems in software design. They represent best practices used by experienced developers.</p><p><strong>2. Benefits:</strong></p><ul><li>Promote code reusability and scalability.</li><li>Improve code readability and maintainability.</li><li>Facilitate communication among developers by providing a common language.</li></ul><p><strong>3. Categories of Design Patterns:</strong></p><ul><li>Creational: Deal with object creation mechanisms (e.g., Singleton, Factory).</li><li>Structural: Deal with object composition (e.g., Module, Revealing Module).</li><li>Behavioral: Deal with object interaction and responsibility (e.g., Observer, Mediator).</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a brief explanation of why design patterns are important in JavaScript development.</p><p><strong>Solution:</strong> Design patterns are essential in JavaScript development as they provide tested, proven development paradigms. They help developers avoid common pitfalls, promote code reuse, and make code more maintainable. By using design patterns, developers can solve complex problems more efficiently and communicate solutions more effectively within a team.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9d8c708a-15f4-44ce-860a-709eb82bf0dc', 1, '9e2dfaec-351f-41a1-8cf1-394d5bfe5846', 'LESSON', 'Module pattern', NULL, '<h3>Lesson: Module Pattern</h3><p><strong>Objective:</strong> Learn how to encapsulate private variables and methods using the module pattern.</p><p><strong>1. Definition:</strong> The module pattern allows you to create a public API while keeping certain variables and methods private.</p><p><strong>2. Implementation:</strong></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const Module = (function() {
    // Private variables and methods
    let privateVar = ''I am private'';

    function privateMethod() {
        console.log(privateVar);
    }

    // Public API
    return {
        publicMethod: function() {
            privateMethod();
        }
    };
})();

Module.publicMethod(); // I am private
// Module.privateMethod(); // Error: privateMethod is not a function
</pre><p><strong>Explanation:</strong></p><ul><li>The <code>Module</code> is an IIFE (Immediately Invoked Function Expression) that returns an object with a public method <code>publicMethod</code>.</li><li><code>privateVar</code> and <code>privateMethod</code> are not accessible from outside the module, ensuring encapsulation.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a module that encapsulates a counter and provides methods to increment, decrement, and get the current value of the counter.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Module Pattern&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Module Pattern Example&lt;/h1&gt;
    &lt;script&gt;
        const CounterModule = (function() {
            let counter = 0;

            function increment() {
                counter++;
            }

            function decrement() {
                counter--;
            }

            function getValue() {
                return counter;
            }

            return {
                increment,
                decrement,
                getValue
            };
        })();

        CounterModule.increment();
        CounterModule.increment();
        console.log(CounterModule.getValue()); // 2
        CounterModule.decrement();
        console.log(CounterModule.getValue()); // 1
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('31422413-6e5c-438d-824a-f16f0f4ecdc9', 2, '9e2dfaec-351f-41a1-8cf1-394d5bfe5846', 'LESSON', 'Revealing module pattern', NULL, '<h3>Lesson: Revealing Module Pattern</h3><p><strong>Objective:</strong> Learn how to create a clear and consistent structure for your modules using the revealing module pattern.</p><p><strong>1. Definition:</strong> The revealing module pattern is a variation of the module pattern that explicitly defines which methods and variables are public and which are private.</p><p><strong>2. Implementation:</strong></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const RevealingModule = (function() {
    let privateVar = ''I am private'';

    function privateMethod() {
        console.log(privateVar);
    }

    function publicMethod() {
        privateMethod();
    }

    // Explicitly reveal public methods
    return {
        publicMethod: publicMethod
    };
})();

RevealingModule.publicMethod(); // I am private
// RevealingModule.privateMethod(); // Error: privateMethod is not a function
</pre><p><strong>Explanation:</strong></p><ul><li>The <code>RevealingModule</code> pattern explicitly reveals the public API by returning an object that maps public methods to private functions.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a revealing module pattern that manages a collection of items with methods to add, remove, and list items.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Revealing Module Pattern&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Revealing Module Pattern Example&lt;/h1&gt;
    &lt;script&gt;
        const ItemManager = (function() {
            let items = [];

            function addItem(item) {
                items.push(item);
            }

            function removeItem(item) {
                items = items.filter(i =&gt; i !== item);
            }

            function listItems() {
                return items;
            }

            return {
                addItem: addItem,
                removeItem: removeItem,
                listItems: listItems
            };
        })();

        ItemManager.addItem(''Item 1'');
        ItemManager.addItem(''Item 2'');
        console.log(ItemManager.listItems()); // [''Item 1'', ''Item 2'']
        ItemManager.removeItem(''Item 1'');
        console.log(ItemManager.listItems()); // [''Item 2'']
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('edde1b09-00b1-4673-ace6-289cdbc5581c', 3, '9e2dfaec-351f-41a1-8cf1-394d5bfe5846', 'LESSON', 'Singleton pattern', NULL, '<h3>Lesson: Singleton Pattern</h3><p><strong>Objective:</strong> Learn how to ensure a class has only one instance and provide a global point of access to it using the singleton pattern.</p><p><strong>1. Definition:</strong> The singleton pattern restricts the instantiation of a class to a single instance and provides a global point of access to it.</p><p><strong>2. Implementation:</strong></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const Singleton = (function() {
    let instance;

    function createInstance() {
        const object = new Object(''I am the instance'');
        return object;
    }

    return {
        getInstance: function() {
            if (!instance) {
                instance = createInstance();
            }
            return instance;
        }
    };
})();

const instance1 = Singleton.getInstance();
const instance2 = Singleton.getInstance();
console.log(instance1 === instance2); // true
</pre><p><strong>Explanation:</strong></p><ul><li>The <code>Singleton</code> pattern uses a closure to store a single instance of the object.</li><li>The <code>getInstance</code> method returns the existing instance if it exists or creates a new one if it doesn''t.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a singleton pattern that manages a database connection object, ensuring only one connection is created.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Singleton Pattern&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Singleton Pattern Example&lt;/h1&gt;
    &lt;script&gt;
        const DatabaseConnection = (function() {
            let instance;

            function createConnection() {
                const connection = new Object(''Database connection'');
                return connection;
            }

            return {
                getConnection: function() {
                    if (!instance) {
                        instance = createConnection();
                    }
                    return instance;
                }
            };
        })();

        const connection1 = DatabaseConnection.getConnection();
        const connection2 = DatabaseConnection.getConnection();
        console.log(connection1 === connection2); // true
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('cbfe16ea-b5b7-4856-98b8-f568aa8fda5b', 4, '9e2dfaec-351f-41a1-8cf1-394d5bfe5846', 'LESSON', 'Factory pattern', NULL, '<h3>Lesson: Factory Pattern</h3><p><strong>Objective:</strong> Learn how to create objects without specifying the exact class of the object that will be created using the factory pattern.</p><p><strong>1. Definition:</strong> The factory pattern provides a way to create objects without specifying the exact class of the object that will be created.</p><p><strong>2. Implementation:</strong></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function Car(type) {
    this.type = type;
    this.drive = function() {
        console.log(`Driving a ${this.type}`);
    };
}

function CarFactory() {
    this.createCar = function(type) {
        return new Car(type);
    };
}

const factory = new CarFactory();
const sedan = factory.createCar(''Sedan'');
const suv = factory.createCar(''SUV'');

sedan.drive(); // Driving a Sedan
suv.drive(); // Driving a SUV
</pre><p><strong>Explanation:</strong></p><ul><li>The <code>CarFactory</code> class provides a <code>createCar</code> method that creates a new car object based on the provided type.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a factory pattern that creates different types of shapes (circle, square) with a method to calculate their area.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Factory Pattern&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Factory Pattern Example&lt;/h1&gt;
    &lt;script&gt;
        function Circle(radius) {
            this.radius = radius;
            this.area = function() {
                return Math.PI * this.radius * this.radius;
            };
        }

        function Square(side) {
            this.side = side;
            this.area = function() {
                return this.side * this.side;
            };
        }

        function ShapeFactory() {
            this.createShape = function(type, size) {
                switch (type) {
                    case ''circle'':
                        return new Circle(size);
                    case ''square'':
                        return new Square(size);
                    default:
                        throw new Error(''Invalid shape type'');
                }
            };
        }

        const shapeFactory = new ShapeFactory();
        const circle = shapeFactory.createShape(''circle'', 5);
        const square = shapeFactory.createShape(''square'', 4);

        console.log(`Circle area: ${circle.area()}`); // Circle area: 78.53981633974483
        console.log(`Square area: ${square.area()}`); // Square area: 16
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering these JavaScript design patterns, you will be able to create more robust, maintainable, and scalable applications. These lessons provide a strong foundation for building well-structured and efficient code in your JavaScript projects.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('f14381ba-655d-4c45-8049-6ad93d1a3220', 0, '20c10331-48be-401e-a923-fd6fe734176a', 'LESSON', 'Loops In C', NULL, '<h3>Introduction</h3><p>Loops are essential in C programming for repeating a block of code multiple times based on a condition. They help automate repetitive tasks and process data efficiently. C provides several types of loops: <code>for</code>, <code>while</code>, and <code>do-while</code>.</p><h3>The <code>for</code> Loop</h3><p>The <code>for</code> loop is used when the number of iterations is known beforehand. It includes three parts: initialization, condition, and increment/decrement.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">for (initialization; condition; increment/decrement) {
    // Code to execute
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    for (int i = 1; i &lt;= 5; i++) {
        printf("Iteration %d\n", i);
    }
    return 0;
}
</pre><p>In this example, the loop initializes <code>i</code> to 1, checks if <code>i</code> is less than or equal to 5, and increments <code>i</code> by 1 each time. The loop prints the current iteration number from 1 to 5.</p><h3>The <code>while</code> Loop</h3><p>The <code>while</code> loop is used when the number of iterations is not known beforehand and depends on a condition being true.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">while (condition) {
    // Code to execute
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    int i = 1;
    while (i &lt;= 5) {
        printf("Iteration %d\n", i);
        i++;
    }
    return 0;
}
</pre><p>In this example, the loop starts with <code>i</code> set to 1. As long as <code>i</code> is less than or equal to 5, the loop prints the current iteration number and increments <code>i</code>.</p><h3>The <code>do-while</code> Loop</h3><p>The <code>do-while</code> loop is similar to the <code>while</code> loop but guarantees that the loop body will execute at least once before the condition is tested.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">do {
    // Code to execute
} while (condition);
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    int i = 1;
    do {
        printf("Iteration %d\n", i);
        i++;
    } while (i &lt;= 5);
    return 0;
}
</pre><p>In this example, the loop prints the current iteration number and increments <code>i</code>, and it checks the condition after executing the loop body.</p><h3>Loop Control Statements</h3><p>C provides control statements to alter the flow of loops:</p><ul><li><code><strong>break</strong></code><strong>:</strong> Exits the loop immediately, regardless of the condition.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">for (int i = 1; i &lt;= 10; i++) {
    if (i == 6) {
        break;
    }
    printf("Iteration %d\n", i);
}
</pre><ul><li>This loop will print iteration numbers from 1 to 5 and then exit when <code>i</code> equals 6.</li><li><code><strong>continue</strong></code><strong>:</strong> Skips the rest of the code in the current iteration and proceeds to the next iteration of the loop.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">for (int i = 1; i &lt;= 10; i++) {
    if (i % 2 == 0) {
        continue;
    }
    printf("Odd number %d\n", i);
}
</pre><ul><li>This loop prints only the odd numbers between 1 and 10, skipping the even numbers.</li></ul><h3>Nested Loops</h3><p>You can nest loops within each other to handle more complex scenarios.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    for (int i = 1; i &lt;= 3; i++) {
        for (int j = 1; j &lt;= 3; j++) {
            printf("i = %d, j = %d\n", i, j);
        }
    }
    return 0;
}
</pre><p>In this example, the outer loop iterates three times, and for each iteration of the outer loop, the inner loop also iterates three times, printing the values of <code>i</code> and <code>j</code>.</p><h3>Conclusion</h3><p>Loops are powerful constructs in C programming that allow you to repeat actions and process data efficiently. Understanding how to use <code>for</code>, <code>while</code>, and <code>do-while</code> loops, as well as loop control statements, is essential for writing effective and efficient C code.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('92f33928-0e2b-46b8-b5db-8b3362f3fc20', 1, '20c10331-48be-401e-a923-fd6fe734176a', 'CODE', 'Calculate sum of cubes', 'b6484e21-6937-489c-b031-b71767994756', 'Calculate sum of cubes', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1c8f689c-7af9-40a0-b255-4e61cae78a28', 2, '20c10331-48be-401e-a923-fd6fe734176a', 'VIDEO', 'C Programming Tutorial for Beginners - While Loops', NULL, '', 'https://www.youtube.com/watch?v=KJgsSFOSQv0&t=8983s');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d451bbce-04e4-4e5c-ae0f-294cd8a946d4', 0, 'b3557f99-e402-4d5a-8574-058fafe5fa28', 'LESSON', 'Understanding functional programming principles', NULL, '<h3>Lesson: Understanding Functional Programming Principles</h3><p><strong>Objective:</strong> Gain a foundational understanding of the principles of functional programming and their importance in JavaScript.</p><p><strong>1. Definition:</strong> Functional programming is a programming paradigm that treats computation as the evaluation of mathematical functions and avoids changing state and mutable data.</p><p><strong>2. Key Principles:</strong></p><ul><li><strong>First-Class Functions:</strong> Functions are treated as first-class citizens. They can be assigned to variables, passed as arguments, and returned from other functions.</li><li><strong>Higher-Order Functions:</strong> Functions that take other functions as arguments or return functions as results.</li><li><strong>Pure Functions:</strong> Functions that always produce the same output for the same input and have no side effects.</li><li><strong>Immutability:</strong> Data is never modified after it is created. Instead, new data structures are created.</li><li><strong>Function Composition:</strong> Combining simple functions to build more complex ones.</li></ul><p><strong>3. Benefits:</strong></p><ul><li><strong>Predictable Code:</strong> Pure functions and immutability make code more predictable and easier to debug.</li><li><strong>Reusable Functions:</strong> Higher-order functions and function composition promote code reuse.</li><li><strong>Scalability:</strong> Functional programming can lead to more scalable and maintainable code.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a brief explanation of functional programming principles using a simple example.</p><p><strong>Solution:</strong> Functional programming emphasizes the use of pure functions, immutability, and first-class functions. For example, instead of modifying an array in place, you create a new array with the desired changes:</p><pre class="ql-syntax" spellcheck="false">const numbers = [1, 2, 3, 4, 5];

function addOne(num) {
    return num + 1;
}

const newNumbers = numbers.map(addOne);
console.log(newNumbers); // [2, 3, 4, 5, 6]
console.log(numbers); // [1, 2, 3, 4, 5]
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('3d281bbd-fe35-43f1-9722-c1dc3bc0c309', 1, 'b3557f99-e402-4d5a-8574-058fafe5fa28', 'LESSON', 'Pure functions', NULL, '<h3>Lesson: Pure Functions</h3><p><strong>Objective:</strong> Understand what pure functions are and how to write them in JavaScript.</p><p><strong>1. Definition:</strong> A pure function is a function that:</p><ul><li>Returns the same result given the same arguments.</li><li>Does not cause any observable side effects.</li></ul><p><strong>2. Characteristics of Pure Functions:</strong></p><ul><li>No reliance on external state.</li><li>No modifications to external state.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function pureAdd(a, b) {
    return a + b;
}

console.log(pureAdd(2, 3)); // 5
console.log(pureAdd(2, 3)); // 5
</pre><p><strong>3. Non-Pure Functions:</strong> A function that depends on or modifies external state is not pure.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let count = 0;

function impureAdd(a) {
    count += a;
    return count;
}

console.log(impureAdd(2)); // 2
console.log(impureAdd(2)); // 4
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a pure function that multiplies two numbers and demonstrate its purity.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Pure Functions&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Pure Functions Example&lt;/h1&gt;
    &lt;script&gt;
        function pureMultiply(a, b) {
            return a * b;
        }

        console.log(pureMultiply(2, 3)); // 6
        console.log(pureMultiply(2, 3)); // 6
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('44f19644-4433-43f8-8337-33d483ea449b', 3, '20c10331-48be-401e-a923-fd6fe734176a', 'VIDEO', 'C Programming Tutorial for Beginners - For Loops', NULL, '', 'https://www.youtube.com/watch?v=KJgsSFOSQv0&t=10211s');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1d7d2b61-1905-47ed-89e0-609a32550724', 0, '0a02f0ef-03fd-4621-88b2-872d7536bba0', 'LESSON', 'Arrays In C', NULL, '<h3>Introduction</h3><p>Arrays in C are a data structure that allows you to store multiple values of the same type in a single variable. They are useful for managing collections of data, such as lists or tables, where each element is accessed using an index. This lesson covers the basics of arrays, including declaration, initialization, and manipulation.</p><h3>Declaring Arrays</h3><p>To use an array, you first need to declare it by specifying the type of its elements and the number of elements it will hold.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">dataType arrayName[arraySize];
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int numbers[5];
</pre><p>In this example, <code>numbers</code> is an array of integers capable of holding 5 elements.</p><h3>Initializing Arrays</h3><p>After declaring an array, you can initialize it with values either at the time of declaration or later in the code.</p><ul><li><strong>Initialization at Declaration:</strong></li><li>You can initialize an array with specific values when you declare it.</li><li><strong>Syntax:</strong></li></ul><pre class="ql-syntax" spellcheck="false">dataType arrayName[] = {value1, value2, value3, ...};
</pre><ul><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">int numbers[] = {1, 2, 3, 4, 5};
</pre><ul><li>Here, <code>numbers</code> is initialized with five values. The size of the array is automatically determined by the number of values provided.</li><li><strong>Initialization After Declaration:</strong></li><li>You can also initialize an array after declaring it by assigning values to each element individually.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">int numbers[5];
numbers[0] = 1;
numbers[1] = 2;
numbers[2] = 3;
numbers[3] = 4;
numbers[4] = 5;
</pre><h3>Accessing Array Elements</h3><p>Array elements are accessed using their index, which starts from 0. You can read or modify elements using their index.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">arrayName[index]
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int numbers[] = {1, 2, 3, 4, 5};
int firstNumber = numbers[0]; // Access the first element
numbers[2] = 10; // Modify the third element
</pre><p>In this example, <code>firstNumber</code> is assigned the value <code>1</code>, and the third element of the <code>numbers</code> array is updated to <code>10</code>.</p><h3>Array Length</h3><p>The length of an array (i.e., the number of elements it holds) can be determined using the <code>sizeof</code> operator. This approach calculates the total size of the array and divides it by the size of an individual element.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">int length = sizeof(arrayName) / sizeof(arrayName[0]);
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int numbers[] = {1, 2, 3, 4, 5};
int length = sizeof(numbers) / sizeof(numbers[0]);
printf("Array length: %d\n", length);
</pre><p>In this example, <code>length</code> will be <code>5</code>, representing the number of elements in the <code>numbers</code> array.</p><h3>Iterating Through Arrays</h3><p>You can use loops to iterate through all elements of an array. This is useful for performing operations on each element.</p><ul><li><strong>Using a </strong><code><strong>for</strong></code><strong> Loop:</strong></li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">int numbers[] = {1, 2, 3, 4, 5};
for (int i = 0; i &lt; sizeof(numbers) / sizeof(numbers[0]); i++) {
    printf("%d\n", numbers[i]);
}
</pre><ul><li>This loop prints each element of the <code>numbers</code> array.</li><li><strong>Using an Enhanced </strong><code><strong>for</strong></code><strong> Loop (C99 Standard):</strong></li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">int numbers[] = {1, 2, 3, 4, 5};
for (int i : numbers) {
    printf("%d\n", i);
}
</pre><ul><li>This loop is more concise and iterates over each element of the array directly.</li></ul><h3>Multidimensional Arrays</h3><p>C also supports multidimensional arrays, such as 2D arrays, which can be thought of as arrays of arrays.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">dataType arrayName[rowSize][columnSize];
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int matrix[3][3] = {
    {1, 2, 3},
    {4, 5, 6},
    {7, 8, 9}
};
</pre><p>In this example, <code>matrix</code> is a 3x3 array.</p><ul><li><strong>Accessing Elements:</strong></li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">int value = matrix[1][2]; // Access the element in the second row, third column
</pre><ul><li><strong>Iterating Through a 2D Array:</strong></li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">for (int i = 0; i &lt; 3; i++) {
    for (int j = 0; j &lt; 3; j++) {
        printf("%d ", matrix[i][j]);
    }
    printf("\n");
}
</pre><ul><li>This loop prints each element of the 2D array in matrix form.</li></ul><h3>Conclusion</h3><p>Arrays are fundamental to C programming, allowing you to store and manage multiple values efficiently. Understanding how to declare, initialize, access, and manipulate arrays is crucial for working with collections of data. Multidimensional arrays further extend this concept, enabling the handling of more complex data structures.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('26bcdd4e-5326-4406-b770-2dc6023e6ee2', 1, '0a02f0ef-03fd-4621-88b2-872d7536bba0', 'CODE', 'List odd divisor', 'b6484e21-6937-489c-b031-b71767994741', 'List odd divisor', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1c52a4c0-0c3c-4850-b89f-39cf2967a75f', 2, '0a02f0ef-03fd-4621-88b2-872d7536bba0', 'VIDEO', 'C Programming Tutorial for Beginners - Arrays', NULL, '', 'https://www.youtube.com/watch?v=KJgsSFOSQv0&t=5189s');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('7e5142cd-977d-4241-aba9-a2396cdd71c7', 0, '470ed176-4da4-4337-bc24-de5c20719293', 'LESSON', 'Strings In C', NULL, '<h3>Introduction</h3><p>In C programming, strings are sequences of characters stored in an array. Unlike some other programming languages, C does not have a built-in string data type. Instead, strings are handled as arrays of characters, terminated by a special null character <code>''\0''</code>. This null terminator indicates the end of the string.</p><h3>Declaring Strings</h3><p>To declare a string in C, you create an array of characters. The size of the array should be sufficient to hold all characters, including the null terminator.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">char stringName[size];
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">char greeting[6];
</pre><p>In this example, <code>greeting</code> can hold up to 5 characters plus the null terminator.</p><h3>Initializing Strings</h3><p>You can initialize a string at the time of declaration using double quotes. The compiler automatically includes the null terminator.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">char stringName[] = "initialValue";
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">char greeting[] = "Hello";
</pre><p>In this example, <code>greeting</code> is initialized to "Hello", and the array size is automatically set to 6 (5 characters + 1 null terminator).</p><h3>Accessing String Characters</h3><p>You can access individual characters in a string using array indexing. Remember that the index starts from 0.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    char greeting[] = "Hello";
    printf("First character: %c\n", greeting[0]); // H
    printf("Third character: %c\n", greeting[2]); // l
    return 0;
}
</pre><h3>String Functions</h3><p>C provides a standard library <code>&lt;string.h&gt;</code> with functions to manipulate strings. Here are some commonly used functions:</p><ul><li><code><strong>strlen()</strong></code>: Computes the length of a string (excluding the null terminator).</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

int main() {
    char str[] = "Hello";
    printf("Length of string: %zu\n", strlen(str));
    return 0;
}
</pre><ul><li><code><strong>strcpy()</strong></code>: Copies a string from one location to another.</li><li><strong>Syntax:</strong></li></ul><pre class="ql-syntax" spellcheck="false">char *strcpy(char *dest, const char *src);
</pre><ul><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

int main() {
    char source[] = "Hello";
    char destination[6];
    strcpy(destination, source);
    printf("Destination string: %s\n", destination);
    return 0;
}
</pre><ul><li><code><strong>strcat()</strong></code>: Concatenates (appends) one string to the end of another.</li><li><strong>Syntax:</strong></li></ul><pre class="ql-syntax" spellcheck="false">char *strcat(char *dest, const char *src);
</pre><ul><li>Example:</li></ul><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

int main() {
    char str1[20] = "Hello";
    char str2[] = " World";
    strcat(str1, str2);
    printf("Concatenated string: %s\n", str1);
    return 0;
}
</pre><ul><li><code><strong>strcmp()</strong></code>: Compares two strings.</li><li><strong>Syntax:</strong></li></ul><pre class="ql-syntax" spellcheck="false">int strcmp(const char *str1, const char *str2);
</pre><ul><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

int main() {
    char str1[] = "Hello";
    char str2[] = "Hello";
    int result = strcmp(str1, str2);
    if (result == 0) {
        printf("Strings are equal.\n");
    } else if (result &lt; 0) {
        printf("String 1 is less than String 2.\n");
    } else {
        printf("String 1 is greater than String 2.\n");
    }
    return 0;
}
</pre><h3>Reading Strings</h3><p>You can read strings from the user using <code>scanf()</code> or <code>fgets()</code>. <code>fgets()</code> is generally preferred because it handles input safely, preventing buffer overflow.</p><ul><li><strong>Using </strong><code><strong>scanf()</strong></code><strong>:</strong></li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    char name[50];
    printf("Enter your name: ");
    scanf("%49s", name); // Reads up to 49 characters
    printf("Hello, %s!\n", name);
    return 0;
}
</pre><ul><li><strong>Using </strong><code><strong>fgets()</strong></code><strong>:</strong></li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    char name[50];
    printf("Enter your name: ");
    fgets(name, sizeof(name), stdin); // Reads up to sizeof(name) - 1 characters
    printf("Hello, %s", name);
    return 0;
}
</pre><h3>String Literals</h3><p>String literals are constant strings used in your code. They are automatically null-terminated.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main() {
    printf("This is a string literal.\n");
    return 0;
}
</pre><h3>Conclusion</h3><p>Strings in C are handled as arrays of characters, terminated by a null character. Understanding how to declare, initialize, and manipulate strings, along with using standard library functions, is essential for managing textual data in C programs.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('8b4a69f1-4c01-4ce2-8b32-de39309ae5b1', 1, '470ed176-4da4-4337-bc24-de5c20719293', 'VIDEO', 'Strings in C', NULL, '', 'https://youtu.be/5TzFNouc0PE?si=VAJZKM9oetwPwgeh');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('450c5bae-3e1f-49e1-a793-b03544bf9fba', 0, 'afec063e-fa7e-424d-9ca1-0ea52810da18', 'LESSON', 'Functions and Structures In C', NULL, '<h3>Functions</h3><p>In C programming, functions are blocks of code designed to perform a specific task. They help in organizing code, promoting reusability, and reducing redundancy. Functions can be called from other functions, allowing you to break down complex problems into simpler, manageable tasks.</p><h4>Defining Functions</h4><p>To define a function, you specify the return type, function name, and parameters (if any). The function body contains the code to be executed.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">returnType functionName(parameters) {
    // Code to execute
    return value; // if returnType is not void
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

// Function declaration
int add(int a, int b);

// Function definition
int add(int a, int b) {
    return a + b;
}

int main() {
    int result = add(5, 3);
    printf("Sum: %d\n", result);
    return 0;
}
</pre><h4>Calling Functions</h4><p>You can call a function by using its name followed by parentheses. If the function requires parameters, pass them inside the parentheses.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int result = add(10, 20);
</pre><h4>Function Parameters and Return Types</h4><p>Functions can accept parameters to provide input values and return a value to the caller. The return type can be any valid data type, including <code>int</code>, <code>float</code>, <code>char</code>, etc. If a function does not return a value, use <code>void</code>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">float multiply(float x, float y) {
    return x * y;
}

void printMessage() {
    printf("This function does not return a value.\n");
}
</pre><h4>Function Overloading</h4><p>C does not support function overloading directly, meaning you cannot have multiple functions with the same name but different parameters. Instead, you can achieve similar functionality by using different names for functions.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int addInt(int a, int b) {
    return a + b;
}

float addFloat(float a, float b) {
    return a + b;
}
</pre><h3>Structures</h3><p>Structures (<code>struct</code>) in C are used to group related variables of different types into a single unit. They are useful for creating complex data types that model real-world entities.</p><h4>Defining Structures</h4><p>To define a structure, use the <code>struct</code> keyword followed by the structure name and its members enclosed in curly braces.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">struct StructureName {
    dataType member1;
    dataType member2;
    // Additional members
};
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

// Structure definition
struct Person {
    char name[50];
    int age;
    float height;
};

int main() {
    // Structure variable declaration and initialization
    struct Person person1 = {"Alice", 30, 5.5};

    // Accessing structure members
    printf("Name: %s\n", person1.name);
    printf("Age: %d\n", person1.age);
    printf("Height: %.2f\n", person1.height);

    return 0;
}
</pre><h4>Accessing Structure Members</h4><p>Structure members are accessed using the dot operator (<code>.</code>) with the structure variable.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">person1.age = 35; // Modify age
printf("Updated Age: %d\n", person1.age);
</pre><h4>Pointers to Structures</h4><p>You can use pointers to structures to handle large amounts of data more efficiently. Access structure members through a pointer using the arrow operator (<code>-&gt;</code>).</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

// Structure definition
struct Person {
    char name[50];
    int age;
};

int main() {
    // Structure variable and pointer declaration
    struct Person person1 = {"Bob", 25};
    struct Person *ptr = &amp;person1;

    // Accessing members via pointer
    printf("Name: %s\n", ptr-&gt;name);
    printf("Age: %d\n", ptr-&gt;age);

    return 0;
}
</pre><h3>Functions with Structures</h3><p>Functions can accept structures as parameters or return structures. This allows you to pass complex data types to functions for processing.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

// Structure definition
struct Rectangle {
    int length;
    int width;
};

// Function to calculate area
int calculateArea(struct Rectangle r) {
    return r.length * r.width;
}

int main() {
    // Structure variable declaration
    struct Rectangle rect = {10, 5};

    // Function call
    int area = calculateArea(rect);
    printf("Area of Rectangle: %d\n", area);

    return 0;
}
</pre><h3>Conclusion</h3><p>Functions and structures are fundamental in C programming, helping to organize code and manage complex data. Functions promote modularity and reuse, while structures allow for the grouping of related data into cohesive units. Mastering both concepts will enable you to write more efficient and maintainable C programs.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5470ed20-b787-42d4-889b-76d9d437c013', 1, 'afec063e-fa7e-424d-9ca1-0ea52810da18', 'VIDEO', 'Structures and Functions (Part 1)', NULL, '', 'https://www.youtube.com/watch?v=16P51olKuzk');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('23d095b5-c326-4519-95bc-28b74a5d72c7', 2, 'afec063e-fa7e-424d-9ca1-0ea52810da18', 'CODE', 'Finding maximum sum k less than n', 'b6484e21-6937-489c-b031-b71767994744', 'Finding maximum sum k less than n', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('f72224cf-d0c9-4917-8e32-9a872156e83e', 2, '5df4c2b2-7be2-43f1-a7c7-924a4b542027', 'LESSON', 'Useful math functions', NULL, '<h4>Lesson: Useful Math Functions</h4><p>C provides a range of useful mathematical functions through the <code>&lt;math.h&gt;</code> library, which can help solve more complex problems.</p><p><strong>Common Math Functions:</strong></p><ul><li><code><strong>pow(base, exponent)</strong></code>: Calculates the power of a number.</li></ul><pre class="ql-syntax" spellcheck="false">#include &lt;math.h&gt;
double result = pow(2, 3); // result is 8.0
</pre><ul><li><code><strong>sqrt(number)</strong></code>: Computes the square root of a number.</li></ul><pre class="ql-syntax" spellcheck="false">double result = sqrt(16); // result is 4.0
</pre><ul><li><code><strong>abs(number)</strong></code>: Returns the absolute value of an integer.</li></ul><pre class="ql-syntax" spellcheck="false">int result = abs(-5); // result is 5
</pre><ul><li><code><strong>ceil(number)</strong></code><strong> and </strong><code><strong>floor(number)</strong></code>: Rounds a number up or down to the nearest integer.</li></ul><pre class="ql-syntax" spellcheck="false">double up = ceil(3.7); // up is 4.0
double down = floor(3.7); // down is 3.0
</pre><p>Using these functions can simplify the process of performing complex mathematical operations in your programs.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5a6f9508-ec37-475f-b7e9-c2411e5f1548', 3, '5df4c2b2-7be2-43f1-a7c7-924a4b542027', 'CODE', 'Sum of two integer', 'b6484e21-6937-489c-b031-b71767994221', 'Sum of two integer', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d27b84d5-a52a-464d-9284-69a60d769316', 4, '5df4c2b2-7be2-43f1-a7c7-924a4b542027', 'VIDEO', 'Arithmetic Operators in C', NULL, '', 'https://www.youtube.com/watch?v=5JXcX0IqRUo');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1f2f3c36-07a4-4041-bc2a-5dbe38b36141', 0, '0296d1de-6b5d-4b7b-8997-bf5bdc140e16', 'LESSON', 'Conditional statements in C', NULL, '<h3>Lesson: Conditional Statements in C</h3><p>Conditional statements are fundamental in programming, allowing the execution of code blocks based on certain conditions. Mastering these statements is crucial for developing dynamic and responsive programs.</p><p><br></p><h3>Introduction to Conditional Statements</h3><p>Conditional statements enable your program to make decisions and execute specific code based on whether certain conditions are true or false. The most common conditional statements in C are <code>if</code>, <code>else if</code>, and <code>else</code>.</p><p><br></p><h3>The <code>if</code> Statement</h3><p>The <code>if</code> statement allows you to execute a block of code only if a specified condition is true.</p><p><br></p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">if (condition) {
    // Code to execute if condition is true
}
</pre><p><br></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 10;
if (number &gt; 5) {
    printf("The number is greater than 5\n");
}
</pre><p>In this example, the message "The number is greater than 5" will be printed because the condition <code>number &gt; 5</code> is true.</p><p><br></p><h3>The <code>else</code> Statement</h3><p>The <code>else</code> statement follows an <code>if</code> statement and executes a block of code if the <code>if</code> condition is false.</p><p><br></p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">if (condition) {
    // Code to execute if condition is true
} else {
    // Code to execute if condition is false
}
</pre><p><br></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 3;
if (number &gt; 5) {
    printf("The number is greater than 5\n");
} else {
    printf("The number is not greater than 5\n");
}
</pre><p>In this example, the message "The number is not greater than 5" will be printed because the condition <code>number &gt; 5</code> is false.</p><p><br></p><h3>The <code>else if</code> Statement</h3><p>The <code>else if</code> statement allows you to check multiple conditions. If the first condition is false, it moves to the next <code>else if</code> condition, and so on.</p><p><br></p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">if (condition1) {
    // Code to execute if condition1 is true
} else if (condition2) {
    // Code to execute if condition2 is true
} else {
    // Code to execute if none of the conditions are true
}
</pre><p><br></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 7;
if (number &gt; 10) {
    printf("The number is greater than 10\n");
} else if (number &gt; 5) {
    printf("The number is greater than 5 but less than or equal to 10\n");
} else {
    printf("The number is 5 or less\n");
}
</pre><p>In this example, the message "The number is greater than 5 but less than or equal to 10" will be printed because the first condition is false, but the second condition is true.</p><p><br></p><h3>Nested <code>if</code> Statements</h3><p>You can nest <code>if</code> statements within other <code>if</code> statements to create more complex decision-making structures.</p><p><br></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 8;
if (number &gt; 5) {
    if (number &lt; 10) {
        printf("The number is between 6 and 9\n");
    } else {
        printf("The number is 10 or greater\n");
    }
} else {
    printf("The number is 5 or less\n");
}
</pre><p>In this example, the message "The number is between 6 and 9" will be printed because the nested conditions <code>number &gt; 5</code> and <code>number &lt; 10</code> are both true.</p><p><br></p><h3>The <code>switch</code> Statement</h3><p>The <code>switch</code> statement provides a way to execute one code block out of many based on the value of a variable. It is often used as an alternative to multiple <code>else if</code> statements.</p><p><br></p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">switch (expression) {
    case constant1:
        // Code to execute if expression equals constant1
        break;
    case constant2:
        // Code to execute if expression equals constant2
        break;
    // More cases...
    default:
        // Code to execute if expression does not match any case
}
</pre><p><br></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int day = 3;
switch (day) {
    case 1:
        printf("Monday\n");
        break;
    case 2:
        printf("Tuesday\n");
        break;
    case 3:
        printf("Wednesday\n");
        break;
    default:
        printf("Other day\n");
}
</pre><p>In this example, the message "Wednesday" will be printed because the value of <code>day</code> matches the case <code>3</code>.</p><h3><br></h3><h3>Conclusion</h3><p>Understanding and effectively using conditional statements is crucial for controlling the flow of your programs. Practice using <code>if</code>, <code>else if</code>, <code>else</code>, and <code>switch</code> statements to make your programs more dynamic and responsive to different conditions.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5566615e-8859-44be-abc8-f85bd44faaf0', 1, '0296d1de-6b5d-4b7b-8997-bf5bdc140e16', 'VIDEO', 'Conditionals (if-else, Nested if and else if)', NULL, '', 'https://www.youtube.com/watch?v=Led5aHdLoT4&list=PLBlnK6fEyqRgZq4a-SMViZr-V8jlvCioJ');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('3fd0146a-3408-4926-9901-167e9ebdb558', 2, '0296d1de-6b5d-4b7b-8997-bf5bdc140e16', 'CODE', 'Determine the Day of the Week from a Given Date', 'b6484e21-6937-489c-b031-b71767994763', 'Determine the Day of the Week from a Given Date', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('f869761f-e2d6-40d9-a69c-ee3c2bf3fc1c', 0, 'de140ad6-3454-40ad-a9db-12ba171f969d', 'LESSON', 'Recap - Logic building', NULL, '<h3>Solve programming problems with C - Part 2</h3><p>Welcome to&nbsp;<strong>Part-2</strong>&nbsp;of the Beginner''s guide to solving programming problems using C.</p><p><br></p><p>A quick re-cap of what was covered in&nbsp;<a href="https://codedynamite.site/#/certificate-courses/2d2ebd9e-2829-495e-87f7-4f050a8f3628/introduction" rel="noopener noreferrer" target="_blank" style="color: rgb(87, 128, 176);">Part-1</a>.</p><ul><li>Getting started with programming problems</li><li>Basic math functions</li><li>Conditional statements</li><li>Logic building / Approach</li></ul><p>Let''s begin! Click on ''Next'' to proceed with&nbsp;<strong>Part-2</strong></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9fc08169-c5d6-476a-b5d2-c93bedade55e', 0, 'a35521fa-847b-4ddf-a75a-0c416adec848', 'LESSON', ' Array operations part-1', NULL, '<h4>Lesson: Array Operations Part-1</h4><p><strong>Introduction to the Module on Array Operations</strong></p><p>All right - things are now getting serious! In this module on Array Operations, we will learn the concepts required to successfully perform beginner-level array construction and manipulation required in programming problems.</p><p>Let''s revise some basic syntax about arrays in the IDE that we came across in "Learn C++":</p><ul><li><strong>Arrays</strong> are used to store multiple items in a single variable.</li><li>Array items can be accessed by referring to their index.</li><li><code>array[3]</code> refers to the 4th item of the array.</li></ul><pre class="ql-syntax" spellcheck="false">// Click on ''Submit'' to view the results
// Click on ''Next'' to proceed


#include &lt;stdio.h&gt;


int main()&nbsp;
{
&nbsp; &nbsp; int sample_array[5]= {5, 3, 2, 4, 1};
&nbsp; &nbsp;&nbsp;
&nbsp; &nbsp; // command for displaying the elements of the array
&nbsp; &nbsp; for(int i=0;i&lt;5;i++)
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; printf("%d", sample_array[i]);
&nbsp; &nbsp; }
&nbsp; &nbsp; printf("\n");


&nbsp; &nbsp; // output specific index from the array
&nbsp; &nbsp; printf("%d", sample_array[3]);
&nbsp; &nbsp;&nbsp;
&nbsp; &nbsp; return 0;
}
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1ac6c7b9-38dd-4445-8cfd-20a88c2fc0f6', 1, 'a35521fa-847b-4ddf-a75a-0c416adec848', 'LESSON', ' Array operations part-2', NULL, '<h4>Lesson: Array Operations Part-2</h4><p><strong>Advanced Array Manipulation</strong></p><p>Building on the foundational knowledge from Part-1, this lesson will cover more advanced techniques for array operations in C.</p><h3>Initializing and Accessing Arrays</h3><p>In C, arrays can be initialized in several ways. Here are some examples:</p><ol><li><strong>Static Initialization</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">int numbers[5] = {1, 2, 3, 4, 5};
</pre><ol><li>This initializes an array of size 5 with values from 1 to 5.</li><li><strong>Dynamic Initialization</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">int size;
printf("Enter the size of the array: ");
scanf("%d", &amp;size);
int numbers[size];
</pre><ol><li>This initializes an array with a size specified by the user at runtime.</li></ol><h3>Common Array Operations</h3><ol><li><strong>Traversing an Array</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">for (int i = 0; i &lt; 5; i++) {
    printf("%d ", numbers[i]);
}
</pre><ol><li>This loop prints all elements of the <code>numbers</code> array.</li><li><strong>Inserting an Element</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">int position = 2; // Position where the new element is to be inserted
int newValue = 10;
for (int i = size - 1; i &gt;= position; i--) {
    numbers[i + 1] = numbers[i];
}
numbers[position] = newValue;
size++;
</pre><ol><li>This inserts <code>newValue</code> at the specified <code>position</code> in the array.</li><li><strong>Deleting an Element</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">int position = 3; // Position of the element to be deleted
for (int i = position; i &lt; size - 1; i++) {
    numbers[i] = numbers[i + 1];
}
size--;
</pre><ol><li>This deletes the element at the specified <code>position</code> in the array.</li></ol><h3>Advanced Array Manipulations</h3><ol><li><strong>Reversing an Array</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">int start = 0, end = size - 1;
while (start &lt; end) {
    int temp = numbers[start];
    numbers[start] = numbers[end];
    numbers[end] = temp;
    start++;
    end--;
}
</pre><ol><li>This code snippet reverses the elements of the array.</li><li><strong>Searching for an Element</strong>:</li></ol><ul><li><strong>Linear Search</strong>:</li></ul><pre class="ql-syntax" spellcheck="false">int key = 4;
int found = 0;
for (int i = 0; i &lt; size; i++) {
    if (numbers[i] == key) {
        printf("Element found at index %d\n", i);
        found = 1;
        break;
    }
}
if (!found) {
    printf("Element not found\n");
}
</pre><ul><li class="ql-indent-1">This performs a linear search to find <code>key</code> in the array.</li><li><strong>Binary Search</strong> (Array must be sorted):</li></ul><pre class="ql-syntax" spellcheck="false">int low = 0, high = size - 1, mid;
int key = 4;
while (low &lt;= high) {
    mid = (low + high) / 2;
    if (numbers[mid] == key) {
        printf("Element found at index %d\n", mid);
        break;
    } else if (numbers[mid] &lt; key) {
        low = mid + 1;
    } else {
        high = mid - 1;
    }
}
if (low &gt; high) {
    printf("Element not found\n");
}
</pre><ul><li class="ql-indent-1">This performs a binary search to find <code>key</code> in the array.</li></ul><h3>Sorting Arrays</h3><ol><li><strong>Bubble Sort</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">for (int i = 0; i &lt; size - 1; i++) {
    for (int j = 0; j &lt; size - i - 1; j++) {
        if (numbers[j] &gt; numbers[j + 1]) {
            int temp = numbers[j];
            numbers[j] = numbers[j + 1];
            numbers[j + 1] = temp;
        }
    }
}
</pre><ol><li>This sorts the array using the bubble sort algorithm.</li><li><strong>Selection Sort</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">for (int i = 0; i &lt; size - 1; i++) {
    int min_idx = i;
    for (int j = i + 1; j &lt; size; j++) {
        if (numbers[j] &lt; numbers[min_idx]) {
            min_idx = j;
        }
    }
    int temp = numbers[min_idx];
    numbers[min_idx] = numbers[i];
    numbers[i] = temp;
}
</pre><ol><li>This sorts the array using the selection sort algorithm.</li></ol><h3>Conclusion</h3><p>By mastering these array operations, you will be able to handle more complex data structures and algorithms efficiently. Practice these operations in the IDE to solidify your understanding and improve your problem-solving skills.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('79c70aa2-e5b6-4994-9745-eef107a95d7b', 2, 'a35521fa-847b-4ddf-a75a-0c416adec848', 'CODE', 'English alphabet printing', 'b6484e21-6937-489c-b031-b71767994757', 'English alphabet printing', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('48c927d3-d059-4b96-afaa-f4ec2634b476', 3, 'a35521fa-847b-4ddf-a75a-0c416adec848', 'VIDEO', 'Array Operations - Traversal, Insertion | Explanation with C Program | DSA Course', NULL, '', 'https://www.youtube.com/watch?v=Bnjbun-hiBk');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('320c7e35-f8f7-4b17-9ad0-ae2f189644ef', 0, '21d7c27b-83ff-4715-b290-02e34c5cd70b', 'LESSON', ' String operations part-1', NULL, '<h3>Introduction to the module on Strings</h3><p>So far, we have focused on logic, integers, math.</p><p>The module on logic building and problem solving primarily covered number operations.</p><p>It is time to add ''Strings'' to our arsenal for solving programming problems.</p><p>Lets revise some basic syntax of strings.</p><ul><li>Strings are a&nbsp;<strong>datatype</strong>.</li><li class="ql-indent-1">A string is composed of characters. A single character can be any letter, any digit, symbol, etc.</li><li class="ql-indent-1">A&nbsp;<strong>binary string</strong>&nbsp;is one which has only ''0'' and ''1'' as component characters</li><li class="ql-indent-1">The character in the&nbsp;<span class="ql-formula" data-value="i^{th}">﻿<span contenteditable="false"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>i</mi><mrow><mi>t</mi><mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.8491em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8491em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span></span>﻿</span>&nbsp;index of a string is represented as&nbsp;<strong>S[i]</strong></li></ul><p>Click in&nbsp;<strong>Next</strong>&nbsp;to proceed.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('823989d7-bd13-43fd-bb9a-20f2d3a73469', 0, '236a5c83-3d52-4a4e-9f59-7101fe603889', 'LESSON', 'Learn about tuples', NULL, '<h4>Lesson: Learn About Tuples</h4><p>Tuples are an essential data structure in Python, providing a way to store a fixed collection of items. Tuples are similar to lists, but with a key difference: tuples are immutable, meaning their elements cannot be changed after they are created. This immutability makes tuples useful for storing data that should not be modified.</p><h3>What is a Tuple?</h3><p>A tuple is a collection of ordered, immutable elements. Tuples can store items of different types, including integers, floats, strings, and even other tuples.</p><h3>Defining and Accessing Tuples</h3><ol><li><strong>Defining a Tuple</strong>: Tuples are defined by enclosing the elements in parentheses <code style="background-color: rgb(240, 240, 240);">()</code> and separating them with commas.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">my_tuple = (1, 2, 3)
another_tuple = ("apple", "banana", "cherry")
</pre><ol><li><strong>Accessing Tuple Elements</strong>: Elements in a tuple can be accessed using indexing, similar to lists. The index of the first element is 0.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">print(my_tuple[0])  # Prints: 1
print(another_tuple[1])  # Prints: banana
</pre><h3>Tuple Operations</h3><ol><li><strong>Tuple Concatenation</strong>: You can concatenate two or more tuples using the <code style="background-color: rgb(240, 240, 240);">+</code> operator.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">tuple1 = (1, 2, 3)
tuple2 = (4, 5, 6)
combined_tuple = tuple1 + tuple2
print(combined_tuple)  # Prints: (1, 2, 3, 4, 5, 6)
</pre><ol><li><strong>Tuple Slicing</strong>: Tuples can be sliced to create a new tuple containing a subset of the elements.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">sliced_tuple = my_tuple[1:3]
print(sliced_tuple)  # Prints: (2, 3)
</pre><ol><li><strong>Tuple Unpacking</strong>: You can unpack a tuple into individual variables.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">a, b, c = my_tuple
print(a)  # Prints: 1
print(b)  # Prints: 2
print(c)  # Prints: 3
</pre><h3>Immutability of Tuples</h3><p>Because tuples are immutable, you cannot change, add, or remove elements once the tuple is created. Attempting to do so will result in an error.</p><p><strong>Example</strong>:</p><pre class="ql-syntax" spellcheck="false">my_tuple[0] = 10  # This will cause a TypeError
</pre><h3>Practical Example</h3><p><strong>Problem</strong>: Write a function that takes a tuple of numbers and returns a new tuple with each number squared.</p><p><strong>Solution</strong>:</p><pre class="ql-syntax" spellcheck="false">def square_elements(numbers):
    return tuple(x ** 2 for x in numbers)

numbers = (1, 2, 3, 4, 5)
squared_numbers = square_elements(numbers)
print(squared_numbers)  # Prints: (1, 4, 9, 16, 25)
</pre><h3>Conclusion</h3><p>Tuples are a powerful tool in Python for storing collections of items that should not be modified. They are simple to use and understand, making them a valuable addition to your programming toolkit. Practice using tuples to get comfortable with their syntax and capabilities.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('3673db49-9d37-47d7-9bba-fe2d85af33f3', 1, '21d7c27b-83ff-4715-b290-02e34c5cd70b', 'LESSON', ' String operations part-2', NULL, '<h3>Lesson: String Operations Part-2</h3><p><br></p><h4><strong>Advanced String Manipulation</strong></h4><p>Building on the basics from Part-1, this lesson will delve into more advanced string operations and manipulations in C.</p><h4>String Initialization and Access</h4><p>In C, strings can be initialized and accessed in various ways. Here are some examples:</p><ol><li><strong>Static Initialization</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char str[] = "Hello, World!";
</pre><ol><li>This initializes a string with the value "Hello, World!".</li><li><strong>Dynamic Initialization</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char str[50];
printf("Enter a string: ");
scanf("%s", str);
</pre><ol><li>This initializes a string with user input.</li></ol><h4>Common String Operations</h4><ol><li><strong>String Length</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">int length = strlen(str);
</pre><ol><li>This function returns the length of the string <code>str</code>.</li><li><strong>String Copy</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char destination[50];
strcpy(destination, str);
</pre><ol><li>This copies the contents of <code>str</code> to <code>destination</code>.</li><li><strong>String Concatenation</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char str1[50] = "Hello, ";
char str2[] = "World!";
strcat(str1, str2);
</pre><ol><li>This concatenates <code>str2</code> to the end of <code>str1</code>.</li></ol><h4>Advanced String Manipulations</h4><ol><li><strong>String Comparison</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">if (strcmp(str1, str2) == 0) {
    printf("The strings are equal.\n");
} else {
    printf("The strings are not equal.\n");
}
</pre><ol><li>This compares two strings lexicographically.</li><li><strong>Substring Extraction</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char substring[20];
strncpy(substring, str + start, length);
substring[length] = ''\0'';
</pre><ol><li>This extracts a substring from <code>str</code> starting at index <code>start</code> with a specified <code>length</code>.</li><li><strong>String Reversal</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">int len = strlen(str);
for (int i = 0; i &lt; len / 2; i++) {
    char temp = str[i];
    str[i] = str[len - i - 1];
    str[len - i - 1] = temp;
}
</pre><ol><li>This reverses the string <code>str</code>.</li></ol><h4>Complex String Operations</h4><ol><li><strong>Finding a Substring</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">if (strstr(str, "World") != NULL) {
    printf("Substring found.\n");
} else {
    printf("Substring not found.\n");
}
</pre><ol><li>This checks if "World" is a substring of <code>str</code>.</li><li><strong>Tokenizing a String</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char str[] = "Hello, World! Welcome to C programming.";
char *token = strtok(str, " ");
while (token != NULL) {
    printf("%s\n", token);
    token = strtok(NULL, " ");
}
</pre><ol><li>This splits the string <code>str</code> into tokens based on the delimiter " ".</li><li><strong>Replacing a Substring</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">void replaceSubstring(char *str, const char *oldSub, const char *newSub) {
    char buffer[100];
    char *pos;
    int index = 0;
    int oldLen = strlen(oldSub);

    while ((pos = strstr(str, oldSub)) != NULL) {
        strncpy(buffer + index, str, pos - str);
        index += pos - str;
        strcpy(buffer + index, newSub);
        index += strlen(newSub);
        str = pos + oldLen;
    }
    strcpy(buffer + index, str);
    strcpy(str, buffer);
}

replaceSubstring(str, "World", "C Programming");
</pre><ol><li>This replaces occurrences of <code>oldSub</code> with <code>newSub</code> in the string <code>str</code>.</li></ol><p><br></p><h4>Conclusion</h4><p>By mastering these advanced string operations, you will be able to handle more complex data manipulation tasks efficiently. Practice these operations in the IDE to solidify your understanding and enhance your problem-solving skills in string manipulation.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('8f8dc59c-18ff-49e8-9f75-6afc82a9a13d', 2, '21d7c27b-83ff-4715-b290-02e34c5cd70b', 'VIDEO', 'String literals and string initializations', NULL, '', 'https://www.youtube.com/watch?v=gTXRfETK3z4&list=PLfqABt5AS4FmSwyvP5a3mYsaksq6yR3-Z');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5f3c95f6-5978-48d5-b3ad-541638c704c7', 0, 'dffe4b22-0465-48fe-8de0-6d846d5cb08c', 'LESSON', ' Flow of control and Key Variables', NULL, '<h3>Flow of control introduction</h3><p><br></p><p>In this module we are going to learn the "Flow of control" ,"Tracing key variable" ,"Checkpoint" and "Unit testing".</p><p>First, we are going to learn the flow of control.</p><p>Do you have any understanding of the concept of "flow of control"?</p><p>Whenever you compile your program in C or any other language, how your compiler reads the program determines the program''s flow of control.</p><p>Generally the compiler first searches for the main function and then reads line by line in the main function until there is a breakpoint or function calling which changes the flow of control.</p><p>Review the code below carefully to understand the flow of control.</p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

void name()
{
    printf("My name is Krish\n");
}

void reply()
{
    printf("Doing great\n");
}

int main()
{
    printf("Hello bro, What is your name\n");
    name();
    printf("How you doing Krish\n");
    reply();
    return 0;
}
</pre><p>Let''s see how the flow of control is working in the above program and how our compiler reads it.</p><ul><li>We start from the main function.</li><li>The first line of the main function conatins print statement so we print&nbsp;<code><strong>Hello bro, What is your name</strong></code>.</li><li>The second line calls a function name(), so we need to stop reading the main function for now until we completely read the name function.</li><li>The first line of the name function contains print statement so we print&nbsp;<code><strong>My name is Krish</strong></code>.</li><li>The name function gets finished so we move back to the main function.</li><li>The third line of the main function is a print statement so we again printed&nbsp;<code><strong>How you doing Krish</strong></code></li><li>In the fourth line of the main function there is a function call so now we will read the reply function first then continue our main function.</li><li>The first line of the reply function is a print statement so we printed&nbsp;<code><strong>Doing great</strong></code>.</li><li>The reply function gets executed so we move back to the main function.</li><li>The main function is also terminated.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('7bf602fd-c576-4d24-8133-a5a4a3fa68b7', 1, 'dffe4b22-0465-48fe-8de0-6d846d5cb08c', 'LESSON', ' Check-points', NULL, '<h3>Introduction to checkpoints</h3><p>In the previous module, we learned about the flow of control and key variables which are essential for debugging. Now we are going to learn about checkpoints.</p><p><br></p><p>While tracing your program using the flow of control and figuring out the key variables we need to print the the key variables to check whether the program is working correctly till this point or not so those points in which we print our key variables to check whether the program is working correctly till this point is termed as checkpoints.</p><p>There can be multiple checkpoints according to the programmer''s requirement. But it''s important not to create unnecessary checkpoints as it may make your debugging harder. A relevant checkpoint is one which may arrive after a certain number of operations to check whether those operations get performed correctly or not.</p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;

int main()
{
    {
        // major chunk of code
    }
    // checkpoint1
    {
        // major chunk of code
    }
    // checkpoint2
    {
        // major chunk of code
    }
    // checkpoint3

    return 0;
}
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('12b1b171-6254-41b3-b796-d28a4e84032f', 0, '6b703088-5f16-405c-869f-2f3ecd4445ae', 'LESSON', 'Logic Building part-1', NULL, '<h3>How to solve programming problems</h3><p>In the previous modules - we solved simple programming problems that had a direct approach.</p><p>In this module, we will cover problems that focus on logic building. Some suggestions for this module:</p><ul><li>Use a pen and paper to work out solutions.</li><li>The logic / algorithm first has to be clear in your mind before you decide to code it out.</li><li>Don''t spend more than 30 minutes on any problem. While the objective is to learn - if you don''t know the approach, it''s best to learn the concept / review the solution.</li></ul><p>For Beginner''s level programming problems - we think the following works best</p><ul><li><strong>Step 1</strong>: Understand the problem statement and the sample test cases</li><li><strong>Step 2</strong>: Generate examples - Create 10 input and output cases of your own</li><li><strong>Step 3</strong>: Observations / Pattern - Observe your examples to identify the logic</li><li><strong>Step 4</strong>: Plan your code - Modularise and solve sub-components of your problem</li><li><strong>Step 5</strong>: Learn - You may come across components of you logic where you don''t know how to execute the code.</li><li>In such cases, ask Google or ChatGPT or your friends and learn!</li><li><strong>Step 6</strong>: Write the code - For simpler programming problems - C++ solutions will be less than 20 lines in more than 95% of the cases.</li><li><strong>Step 7</strong>: Identify edge cases - If your code still fails - try and and come up with corner cases where your code may fail</li></ul><p>Click on&nbsp;<strong>Next</strong>&nbsp;to continue.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('10dd8be7-1f07-433e-abdb-111b8667257c', 1, '6b703088-5f16-405c-869f-2f3ecd4445ae', 'LESSON', 'Logic Building part-2', NULL, '<h4>Lesson: Logic Building Part-2</h4><p><strong>Advanced Logic Construction</strong></p><p>Building on the foundational steps from Part-1, this lesson focuses on advanced strategies and practices to enhance your problem-solving skills.</p><ol><li><strong>Break Down Complex Problems</strong>: Divide a complex problem into smaller, manageable parts. Address each part individually before combining them into a complete solution.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: If solving a maze problem, first focus on pathfinding, then incorporate checks for dead ends.</li></ul><ol><li><strong>Pseudocode</strong>: Before writing actual code, outline your logic in pseudocode. This helps in visualizing the solution without worrying about syntax.</li></ol><ul><li><strong>Example</strong>:</li></ul><pre class="ql-syntax" spellcheck="false">Start
Initialize variables
Loop through input
Check conditions
Store results
Output results
End
</pre><ol><li><strong>Flowcharts and Diagrams</strong>: Create flowcharts to map out the steps of your algorithm visually. This can make complex logic more understandable.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Draw a flowchart for a sorting algorithm to see the flow of data and operations.</li></ul><ol><li><strong>Test-Driven Development (TDD)</strong>: Write test cases before implementing the solution. This ensures your code meets the requirements and handles edge cases effectively.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: For a function that calculates factorial, write tests for typical inputs, zero, and negative numbers.</li></ul><ol><li><strong>Optimization</strong>: After getting a working solution, look for ways to optimize your code for better performance. Consider time and space complexity.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Use efficient data structures like hash maps for quick lookups instead of linear searches.</li></ul><ol><li><strong>Code Reviews and Pair Programming</strong>: Collaborate with peers to review each other’s code. This helps in identifying potential issues and learning different approaches.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Pair up with a classmate and take turns coding and reviewing a solution to a challenging problem.</li></ul><ol><li><strong>Iterative Improvement</strong>: Continuously refine your logic and approach. Reflect on solved problems and think of better or alternative solutions.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Revisit an old problem and try solving it with a different algorithm or a more efficient method.</li></ul><p>By following these advanced strategies, you can tackle more complex problems with confidence and improve your programming skills further.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('92920a7b-a117-4dc8-94bc-ce323dcfa6f4', 2, 'b3557f99-e402-4d5a-8574-058fafe5fa28', 'LESSON', 'Immutability', NULL, '<h3>Lesson: Immutability</h3><p><strong>Objective:</strong> Learn the concept of immutability and how to apply it in JavaScript to create immutable data structures.</p><p><strong>1. Definition:</strong> Immutability means that once a data structure is created, it cannot be changed. Instead, new data structures are created with the desired changes.</p><p><strong>2. Benefits:</strong></p><ul><li><strong>Predictability:</strong> Immutable data structures lead to more predictable and easier-to-debug code.</li><li><strong>Concurrency:</strong> Immutability helps in concurrent programming by avoiding race conditions.</li></ul><p><strong>3. Techniques for Immutability:</strong></p><ul><li><strong>Object.assign:</strong> Create copies of objects with new properties.</li><li><strong>Spread Operator:</strong> Use the spread operator to create new arrays or objects with modifications.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const person = { name: ''John'', age: 25 };

// Using Object.assign
const updatedPerson = Object.assign({}, person, { age: 26 });
console.log(updatedPerson); // { name: ''John'', age: 26 }
console.log(person); // { name: ''John'', age: 25 }

// Using Spread Operator
const newPerson = { ...person, age: 27 };
console.log(newPerson); // { name: ''John'', age: 27 }
console.log(person); // { name: ''John'', age: 25 }
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that demonstrates immutability by creating a new array with an added element without modifying the original array.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Immutability&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Immutability Example&lt;/h1&gt;
    &lt;script&gt;
        const originalArray = [1, 2, 3];

        // Using Spread Operator
        const newArray = [...originalArray, 4];

        console.log(newArray); // [1, 2, 3, 4]
        console.log(originalArray); // [1, 2, 3]
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('cd125e97-c909-4e9d-9de0-41bd89f58e0c', 3, 'b3557f99-e402-4d5a-8574-058fafe5fa28', 'LESSON', 'Map, reduce, and filter', NULL, '<h3>Lesson: Map, Reduce, and Filter</h3><p><strong>Objective:</strong> Learn how to use the <code>map</code>, <code>reduce</code>, and <code>filter</code> methods to process and transform arrays in a functional programming style.</p><p><strong>1. Map:</strong> The <code>map</code> method creates a new array by applying a function to each element of the original array.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">javascript
Copy code
const numbers = [1, 2, 3, 4, 5];
const doubled = numbers.map(num =&gt; num * 2);
console.log(doubled); // [2, 4, 6, 8, 10]
</pre><p><strong>2. Filter:</strong> The <code>filter</code> method creates a new array with all elements that pass the test implemented by the provided function.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const numbers = [1, 2, 3, 4, 5];
const evens = numbers.filter(num =&gt; num % 2 === 0);
console.log(evens); // [2, 4]
</pre><p><strong>3. Reduce:</strong> The <code>reduce</code> method applies a function against an accumulator and each element in the array to reduce it to a single value.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const numbers = [1, 2, 3, 4, 5];
const sum = numbers.reduce((acc, num) =&gt; acc + num, 0);
console.log(sum); // 15
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that uses <code>map</code>, <code>filter</code>, and <code>reduce</code> to process an array of numbers.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Map, Filter, and Reduce&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Map, Filter, and Reduce Example&lt;/h1&gt;
    &lt;script&gt;
        const numbers = [1, 2, 3, 4, 5];

        // Using map to double each number
        const doubled = numbers.map(num =&gt; num * 2);
        console.log(doubled); // [2, 4, 6, 8, 10]

        // Using filter to get even numbers
        const evens = numbers.filter(num =&gt; num % 2 === 0);
        console.log(evens); // [2, 4]

        // Using reduce to sum the numbers
        const sum = numbers.reduce((acc, num) =&gt; acc + num, 0);
        console.log(sum); // 15
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1d75c53b-bcc7-433f-a82b-c34c4353eba3', 4, 'b3557f99-e402-4d5a-8574-058fafe5fa28', 'LESSON', 'Functional libraries (e.g., Lodash)', NULL, '<h3>Lesson: Functional Libraries (e.g., Lodash)</h3><p><strong>Objective:</strong> Explore functional programming libraries like Lodash that provide utility functions to enhance your functional programming capabilities in JavaScript.</p><p><strong>1. Introduction to Lodash:</strong> Lodash is a JavaScript library that provides utility functions for common programming tasks, including functional programming operations.</p><p><strong>2. Using Lodash:</strong></p><ul><li><strong>Installation:</strong> Install Lodash using npm or include it via a CDN.</li><li><strong>Basic Usage:</strong> Use Lodash functions to manipulate data.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">// Using npm
const _ = require(''lodash'');

// Using a CDN
// &lt;script src="https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js"&gt;&lt;/script&gt;

const numbers = [1, 2, 3, 4, 5];

// Using Lodash map
const doubled = _.map(numbers, num =&gt; num * 2);
console.log(doubled); // [2, 4, 6, 8, 10]

// Using Lodash filter
const evens = _.filter(numbers, num =&gt; num % 2 === 0);
console.log(evens); // [2, 4]

// Using Lodash reduce
const sum = _.reduce(numbers, (acc, num) =&gt; acc + num, 0);
console.log(sum); // 15
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that uses Lodash to perform <code>map</code>, <code>filter</code>, and <code>reduce</code> operations on an array of numbers.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Functional Libraries (Lodash)&lt;/title&gt;
    &lt;script src="https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Functional Libraries (Lodash) Example&lt;/h1&gt;
    &lt;script&gt;
        const numbers = [1, 2, 3, 4, 5];

        // Using Lodash map to double each number
        const doubled = _.map(numbers, num =&gt; num * 2);
        console.log(doubled); // [2, 4, 6, 8, 10]

        // Using Lodash filter to get even numbers
        const evens = _.filter(numbers, num =&gt; num % 2 === 0);
        console.log(evens); // [2, 4]

        // Using Lodash reduce to sum the numbers
        const sum = _.reduce(numbers, (acc, num) =&gt; acc + num, 0);
        console.log(sum); // 15
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering these functional programming concepts, including pure functions, immutability, higher-order functions like <code>map</code>, <code>reduce</code>, and <code>filter</code>, and using functional libraries like Lodash, you will be able to write more predictable, maintainable, and reusable JavaScript code. These lessons provide the foundation for building robust functional applications in JavaScript.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('dc66eeca-aa87-4147-ac50-1d34a5647ce0', 0, 'b7d4d279-925b-42a6-b198-134b74efa721', 'LESSON', ' Learn about functions', NULL, '<h4>Lesson: Learn About Functions</h4><p>Functions are fundamental building blocks in programming that allow you to encapsulate code into reusable blocks. By using functions, you can organize your code more efficiently, reduce redundancy, and make your programs more modular and easier to manage.</p><h3>What is a Function?</h3><p>A function is a named block of code designed to perform a specific task. Functions can take input in the form of parameters, execute a series of statements, and return a result. Functions help in breaking down complex problems into smaller, more manageable pieces.</p><h3>Defining and Calling Functions</h3><ol><li><strong>Defining a Function</strong>: In Python, you define a function using the <code>def</code> keyword, followed by the function name, parentheses, and a colon. Inside the function, you write the code that performs the task.</li><li><strong>Syntax</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">def function_name(parameters):
    # Code to execute
    return result
</pre><ol><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">def greet(name):
    print(f"Hello, {name}!")
</pre><ol><li><strong>Calling a Function</strong>: To execute the code inside a function, you call the function by its name and pass any required arguments.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">greet("Alice")  # Prints: Hello, Alice!
</pre><h3>Function Parameters and Arguments</h3><p>Functions can take multiple parameters, which are variables that hold the values passed to the function. These values are called arguments when you call the function.</p><p><strong>Example</strong>:</p><pre class="ql-syntax" spellcheck="false">def add(a, b):
    return a + b

result = add(3, 5)  # result is 8
print(result)
</pre><h3>Return Statement</h3><p>The <code>return</code> statement is used to send a result back to the caller of the function. Once the return statement is executed, the function terminates.</p><p><strong>Example</strong>:</p><pre class="ql-syntax" spellcheck="false">def square(x):
    return x * x

print(square(4))  # Prints: 16
</pre><h3>Default Parameters</h3><p>Python allows you to define default values for parameters, which are used if no argument is passed for that parameter.</p><p><strong>Example</strong>:</p><pre class="ql-syntax" spellcheck="false">def greet(name="World"):
    print(f"Hello, {name}!")

greet()         # Prints: Hello, World!
greet("Alice")  # Prints: Hello, Alice!
</pre><h3>Variable Scope</h3><p>Variables defined inside a function are local to that function and cannot be accessed outside of it. Conversely, variables defined outside of any function are global and can be accessed anywhere in the program.</p><p><strong>Example</strong>:</p><pre class="ql-syntax" spellcheck="false">def print_message():
    message = "Hello from inside the function"
    print(message)

print_message()
# print(message)  # This will cause an error because ''message'' is not defined outside the function
</pre><h3>Lambda Functions</h3><p>Lambda functions are small anonymous functions defined using the <code>lambda</code> keyword. They can have any number of parameters but only one expression.</p><p><strong>Example</strong>:</p><pre class="ql-syntax" spellcheck="false">square = lambda x: x * x
print(square(5))  # Prints: 25
</pre><h3>Practical Example</h3><p><strong>Problem</strong>: Write a function that calculates the factorial of a given number.</p><p><strong>Solution</strong>:</p><pre class="ql-syntax" spellcheck="false">def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

print(factorial(5))  # Prints: 120
</pre><p>This function uses recursion to calculate the factorial of a number.</p><h3>Conclusion</h3><p>Understanding functions is essential for writing efficient and organized code in Python. Functions enable code reusability, improve readability, and make debugging easier. Practice defining and using functions to enhance your problem-solving skills and programming proficiency.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a0d25613-1308-48fb-8e62-79ec9a0c7cb8', 1, 'b7d4d279-925b-42a6-b198-134b74efa721', 'VIDEO', 'Python Functions | Python Tutorial for Absolute Beginners', NULL, '', 'https://www.youtube.com/watch?v=u-OmVr_fT4s');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('2b43130c-61f5-4826-adcb-92dc8b0e57d3', 2, 'b7d4d279-925b-42a6-b198-134b74efa721', 'CODE', 'Check prime number', 'b6484e21-6937-489c-b031-b71767994758', 'Check prime number', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('4f1706b9-ef5b-4763-8f27-53c69b1fbd83', 3, 'b1f13eaf-9fd1-4b93-8bab-71cc3b1ee9b0', 'LESSON', 'Recursion', NULL, '<h4>Lesson: Recursion</h4><p><strong>Objective:</strong> Understand recursion and how to use it to solve problems that can be broken down into simpler sub-problems.</p><p><strong>1. Definition:</strong> Recursion is a technique where a function calls itself in order to solve a problem.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function factorial(n) {
    if (n === 0) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

console.log(factorial(5)); // 120
</pre><p><strong>Explanation:</strong></p><ul><li><code>factorial</code> is a recursive function that calculates the factorial of a number.</li><li>The base case is <code>n === 0</code>, and the recursive case is <code>n * factorial(n - 1)</code>.</li></ul><p><strong>2. Common Recursive Problems:</strong></p><ul><li>Calculating Fibonacci numbers</li><li>Traversing tree structures</li></ul><p><strong>Example (Fibonacci):</strong></p><pre class="ql-syntax" spellcheck="false">function fibonacci(n) {
    if (n &lt;= 1) {
        return n;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

console.log(fibonacci(6)); // 8
</pre><p><strong>Explanation:</strong></p><ul><li><code>fibonacci</code> is a recursive function that calculates the nth Fibonacci number.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that uses recursion to find the greatest common divisor (GCD) of two numbers.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Recursion Example&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;GCD Calculation&lt;/h1&gt;
    &lt;script&gt;
        function gcd(a, b) {
            if (b === 0) {
                return a;
            } else {
                return gcd(b, a % b);
            }
        }

        console.log(gcd(48, 18)); // 6
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering these advanced function concepts, you will be able to write more powerful, reusable, and efficient JavaScript code. These lessons provide the foundation for tackling complex programming challenges and building sophisticated applications.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('145d96d8-f057-4f15-bb05-049f465c2bcc', 0, '0f72faae-00c0-49d7-ad43-9cfa2e42a51b', 'LESSON', 'Input and Output', NULL, '<h3>Getting started with programming problems</h3><p>If you are here - then you already know the basic syntax of C.</p><p>Let''s now take it up a notch and train you to solve programming problems. Before that, let us do a quick recap of what we had learned about C in&nbsp;<a href="https://codedynamite.site/#/certificate-courses/2d2ebd9e-2829-495e-87f7-4f050a8f3628/introduction" rel="noopener noreferrer" target="_blank" style="color: rgb(87, 128, 176);">Learn C Path</a>.</p><p><br></p><p>On Codedynamite and other platforms, you will come across programming problems.</p><ul><li>Each programming problem has a&nbsp;<strong>problem statement</strong></li><li>You write a&nbsp;<strong>solution code</strong>&nbsp;which will solve the problem</li><li>Your code is run, does some computation and generates&nbsp;<strong>your output</strong></li><li><strong>Your output</strong>&nbsp;is compared with the&nbsp;<strong>Expected output</strong>.</li><li class="ql-indent-1">If they match - then your code is correct!</li><li class="ql-indent-1">If they don''t match - then there is some error in your code.</li></ul><p>Click on&nbsp;<strong>Next</strong>&nbsp;to proceed!</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('e6648888-407f-455d-8da5-4e463be042fc', 1, '0f72faae-00c0-49d7-ad43-9cfa2e42a51b', 'LESSON', 'What are test cases?', NULL, '<h3><strong>What are Test Cases?</strong></h3><p><br></p><p>In the previous module, we practiced simple methods of input and output used in programming problems. Now, let''s take the next small step and learn about test cases.</p><p><br></p><p>You will find the concept of ''test cases'' on various programming platforms such as Leetcode, Codeforces, CodeChef, and Hackerrank.&nbsp;</p><p><br></p><h4><strong>What are test cases?</strong></h4><p><br></p><p>Test cases involve multiple inputs—multiple instances of the same problem—that your code must solve correctly.</p><p><br></p><h4><strong>Example 1:</strong></h4><p><br></p><p>Consider 5 test cases or 5 inputs:</p><p>- 11</p><p>- 13</p><p>- 2</p><p>- 4</p><p>- 9</p><p><br></p><h3>Task</h3><p><br></p><p>Let''s solve a simple problem.</p><p><br></p><p>Write a program in the IDE which does the following:</p><p><br></p><p>1. Accepts 5 inputs given on 5 separate lines. Each input is an integer \( N \).</p><p>2. For each test case, prints out the integer \( N \) to the console on a separate line (our Input mirror problem).</p><p><br></p><h4>Sample 1:</h4><p><br></p><p><strong>Input:</strong></p><pre class="ql-syntax" spellcheck="false">11
13
2
4
9
</pre><p><br></p><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">11
13
2
4
9
</pre><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>Since the count of test cases is 5, we accept 5 inputs and print 5 outputs.</p><p><br></p><h3>Solutions:</h3><pre class="ql-syntax" spellcheck="false">//Solution as follows

#include &lt;stdio.h&gt;

int main() {
    int A, B, C, D, E;
    scanf("%d \n", &amp;A );
    scanf("%d \n", &amp;B );
    scanf("%d \n", &amp;C );
    scanf("%d \n", &amp;D );
    scanf("%d \n", &amp;E );
    printf("%d \n", A );
    printf("%d \n", B );
    printf("%d \n", C );
    printf("%d \n", D );
    printf("%d \n", E );
}
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('417e227a-e003-41d8-9421-0e52edfb8887', 0, '19419e58-966b-4ae9-8c4a-330100c76166', 'LESSON', 'Introducing output / printing', NULL, '<h3>Welcome!</h3><p>Welcome to the course on learning Python!</p><p><br></p><p>What will you learn here?</p><ul><li>All the basic concepts of Python programming language like -&nbsp;<code>Variables, Strings, Conditions, Lists, Loops, Functions</code>&nbsp;etc</li><li>By the end of this course, you will be able to write code in Python to solve logical real world problems.</li></ul><p>Let the fun begin!</p><p><strong>Click on Next on the right hand side to start</strong>.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('3d3ec0e5-d22b-4522-b8b1-026c3cb2539a', 1, '19419e58-966b-4ae9-8c4a-330100c76166', 'LESSON', ' Printing on multiple lines', NULL, '<h3>Multiple Outputs</h3><p>You can add as many print statements as you want to your program. Each print statement outputs its content on a new line.</p><pre class="ql-syntax" spellcheck="false">print("99")
print(100)
</pre><p>Output:</p><pre class="ql-syntax" spellcheck="false">99
100
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b3a8d353-12bd-4d00-b621-8605e08eccc0', 2, '19419e58-966b-4ae9-8c4a-330100c76166', 'LESSON', 'Print text and numbers using single print', NULL, '<h3>Inserting text Between Outputs</h3><p>Remember that to print multiple values on same line, we have to use comma inside print statement.</p><p><br></p><p>We can also combine text and numbers in a single print statement by comma separating them.</p><p>For example, check the below code:</p><pre class="ql-syntax" spellcheck="false">print("My favorite number is", 10)
</pre><p>The code will output:</p><pre class="ql-syntax" spellcheck="false">My favorite number is 10
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c975b04e-7f6c-4e44-a124-f2325dcfab31', 3, '19419e58-966b-4ae9-8c4a-330100c76166', 'VIDEO', 'Câu Lệnh Print Trong Python | In ra màn hình trong Python', NULL, '', 'https://www.youtube.com/watch?v=XMeYyJfbgpY');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9b5f6a7c-6280-4eef-ba90-8ab60e189bca', 4, '19419e58-966b-4ae9-8c4a-330100c76166', 'CODE', 'Sum of two integer', 'b6484e21-6937-489c-b031-b71767994221', 'Sum of two integer', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('cf1f3dda-b8fb-4b59-9705-c6d63052a43f', 0, '94c250f7-7f2c-4cd8-a41f-5d05bbabedf6', 'LESSON', 'Introduction to variables and datatypes', NULL, '<h3>Variables in Python</h3><p>A&nbsp;<strong>variable</strong>&nbsp;is like a labelled box where you can store data. Imagine you have a box labeled "age" and you put the number 25 in it. In Python, you would do this by writing:</p><pre class="ql-syntax" spellcheck="false">age = 25
</pre><p>When you write this, python creates a box(variable) with name&nbsp;age</p><p><br></p><p>age&nbsp;and stores 25 in that box(variable).</p><ul><li>This process of creating a variable to store a value is called&nbsp;<strong>Declaration</strong>&nbsp;and</li><li>The process of setting its value for the first time is called&nbsp;<strong>Initialization</strong>.</li></ul><p>Here''s the cool part: whenever you use&nbsp;<code>age</code>&nbsp;in your code, Python will remember it is 25. For example, if you write&nbsp;<code>print(age)</code>, Python will show 25.</p><pre class="ql-syntax" spellcheck="false">print(age) # Output: 25
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('0e8a6f51-f43c-487b-8ed1-5b3d7bf1b89e', 1, '94c250f7-7f2c-4cd8-a41f-5d05bbabedf6', 'VIDEO', 'Variables in Python', NULL, '', 'https://www.youtube.com/watch?v=X6TcB0DNLE8');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6cc920c6-6d4b-4ed0-8606-d567b20a49ff', 2, '94c250f7-7f2c-4cd8-a41f-5d05bbabedf6', 'CODE', 'Check square number', 'b6484e21-6937-489c-b031-b71767994748', 'Check square number', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d0eb0d5d-bbe3-49fb-8bb3-2e40efc2b435', 0, '6afaf653-6486-4ffb-b2d0-1460e629933f', 'LESSON', 'Arithmetic Operators', NULL, '<h4>Lesson: Arithmetic Operators</h4><p>In Python, you can perform various basic mathematical operations with numbers. Let''s explore some commonly used arithmetic operators with examples.</p><ol><li><strong>Addition (+)</strong> You can use the plus sign (+) to add two numbers.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
a = 6
b = 3
print(a + b)  # prints 9
</pre><ol><li><strong>Subtraction (-)</strong> You can use the minus sign (-) to subtract one number from another.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a - b)  # prints 3
</pre><ol><li><strong>Multiplication (*)</strong> You can use the asterisk (*) to multiply two numbers.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a * b)  # prints 18
</pre><ol><li><strong>Division (/)</strong> You can use the forward slash (/) to divide one number by another. This will give you a float (decimal number) as a result.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a / b)  # prints 2.0
</pre><ol><li><strong>Integer Division (//)</strong> You can use the double forward slash (//) to perform integer division. This will divide the numbers and return the whole number part of the result, discarding the remainder.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
result = 10 // 3
print(result)  # prints 3
</pre><ol><li>In this example, 10 divided by 3 equals 3.333.... The integer division returns only the whole number part, which is 3.</li><li><strong>Modulo (%)</strong> You can use the percent symbol (%), known as the modulo operator, to get the remainder of a division.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a % b)  # prints 0
</pre><ol><li>Here, <code>6 modulo 3</code> is <code>0</code> because <code>6</code> divided by <code>3</code> leaves no remainder.</li><li><strong>Exponentiation (</strong>)** You can use the double asterisk (**) to raise a number to the power of another number.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a ** b)  # prints 216
</pre><ol><li>In this example, <code>6 to the power of 3</code> is <code>216</code> (<code>6 * 6 * 6</code>).</li></ol><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('4f1a0770-17e6-4373-9ac3-61bea61d2c69', 2, '6b703088-5f16-405c-869f-2f3ecd4445ae', 'LESSON', 'Logic Building part-3', NULL, '<h4>Lesson: Logic Building Part-3</h4><p><strong>Mastering Problem Solving</strong></p><p>In this final part, we focus on mastering problem-solving techniques and preparing for competitive programming.</p><ol><li><strong>Recursive Thinking</strong>: Learn to solve problems using recursion, where a function calls itself to solve smaller instances of the same problem.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Solve problems like the Fibonacci sequence or tree traversals using recursion.</li></ul><ol><li><strong>Dynamic Programming (DP)</strong>: Understand the principles of DP to solve problems that involve overlapping subproblems and optimal substructure.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Implement DP solutions for problems like the knapsack problem or longest common subsequence.</li></ul><ol><li><strong>Graph Theory</strong>: Explore graph algorithms to solve problems involving networks, such as shortest path, connectivity, and traversals.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Use algorithms like Dijkstra''s or BFS/DFS for pathfinding in graphs.</li></ul><ol><li><strong>Backtracking</strong>: Practice backtracking techniques to solve problems that require exploring all possible solutions, such as puzzles and combinatorial problems.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Implement a backtracking solution for the N-Queens problem or Sudoku solver.</li></ul><ol><li><strong>Greedy Algorithms</strong>: Apply greedy algorithms to make locally optimal choices with the hope of finding a global optimum.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Solve problems like coin change or activity selection using greedy strategies.</li></ul><ol><li><strong>Complex Data Structures</strong>: Learn to use advanced data structures like heaps, segment trees, and tries to solve specific types of problems efficiently.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Use a segment tree for range query problems or a trie for efficient string matching.</li></ul><ol><li><strong>Competitive Programming Practice</strong>: Engage in competitive programming platforms to practice and improve your problem-solving speed and accuracy.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Regularly participate in contests on platforms like Codeforces, LeetCode, or HackerRank.</li></ul><ol><li><strong>Review and Reflect</strong>: After solving problems, review your solutions and compare them with others. Reflect on different approaches and learn from mistakes.</li></ol><ul><li class="ql-indent-1"><strong>Example</strong>: Analyze top solutions from coding competitions to understand different strategies and optimizations.</li></ul><p>By mastering these advanced techniques, you will be well-prepared for tackling complex programming challenges and excelling in competitive programming environments. Keep practicing, stay curious, and continue learning to enhance your problem-solving abilities.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('3427a94d-c991-43e0-9bf2-61de2b898e86', 3, '6b703088-5f16-405c-869f-2f3ecd4445ae', 'VIDEO', 'Logic Building with C', NULL, '', 'https://www.youtube.com/watch?v=NqJScDluqKI&list=PL7ersPsTyYt1I2qKWkVT8L4521MmEHdeQ');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('72c106ed-7b7f-4c32-a4f4-49d58d29f62a', 4, '6b703088-5f16-405c-869f-2f3ecd4445ae', 'CODE', 'Finding maximum sum k less than n', 'b6484e21-6937-489c-b031-b71767994744', 'Finding maximum sum k less than n', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('43438d32-5069-4a5f-b7e5-732c5f6513e8', 1, '6afaf653-6486-4ffb-b2d0-1460e629933f', 'LESSON', 'Relational Operators', NULL, '<h4>Lesson: Relational Operators</h4><p>Relational operators are used to compare two values. They return a Boolean value: <code>True</code> or <code>False</code>. Let''s explore some commonly used relational operators with examples.</p><ol><li><strong>Equal to (==)</strong> Checks if two values are equal.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a == b)  # prints False
</pre><ol><li><strong>Not equal to (!=)</strong> Checks if two values are not equal.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a != b)  # prints True
</pre><ol><li><strong>Greater than (&gt;)</strong> Checks if the left value is greater than the right value.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a &gt; b)  # prints True
</pre><ol><li><strong>Less than (&lt;)</strong> Checks if the left value is less than the right value.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a &lt; b)  # prints False
</pre><ol><li><strong>Greater than or equal to (&gt;=)</strong> Checks if the left value is greater than or equal to the right value.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a &gt;= b)  # prints True
</pre><ol><li><strong>Less than or equal to (&lt;=)</strong> Checks if the left value is less than or equal to the right value.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(a &lt;= b)  # prints False
</pre><p>Relational operators are essential for making comparisons in your programs, enabling decision-making processes based on different conditions.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5778eb72-93d4-43f9-a930-6caed7dadd11', 2, '6afaf653-6486-4ffb-b2d0-1460e629933f', 'LESSON', 'Logical Operators', NULL, '<h4>Lesson: Logical Operators</h4><p>Logical operators are used to combine multiple conditions. They return <code>True</code> or <code>False</code> based on the logical relationship between the conditions. Let''s explore some commonly used logical operators with examples.</p><ol><li><strong>AND (and)</strong> Returns <code>True</code> if both conditions are <code>True</code>.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print((a &gt; b) and (b &gt; 0))  # prints True
</pre><ol><li><strong>OR (or)</strong> Returns <code>True</code> if at least one of the conditions is <code>True</code>.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print((a &gt; b) or (b &lt; 0))  # prints True
</pre><ol><li><strong>NOT (not)</strong> Returns <code>True</code> if the condition is <code>False</code>.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
print(not(a &gt; b))  # prints False
</pre><p>Logical operators are crucial for constructing complex conditions and controlling the flow of your programs based on multiple criteria.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('04d2a14d-4d33-4be7-9935-7c23d99eb46e', 3, '6afaf653-6486-4ffb-b2d0-1460e629933f', 'LESSON', 'Precedence and Associativity', NULL, '<h4>Lesson: Precedence and Associativity</h4><p>Operator precedence determines the order in which operations are performed in an expression. Associativity determines the order in which operators of the same precedence are processed. Let''s explore these concepts with examples.</p><ol><li><strong>Operator Precedence</strong> Operators with higher precedence are evaluated before operators with lower precedence.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
result = a + b * 2
print(result)  # prints 12
</pre><ol><li>In this example, multiplication has higher precedence than addition, so <code>b * 2</code> is evaluated first.</li><li><strong>Operator Associativity</strong> Associativity defines the order in which operators of the same precedence are evaluated. Most operators are left-associative, meaning they are evaluated from left to right.</li></ol><pre class="ql-syntax" spellcheck="false">python
Copy code
result = a - b + 2
print(result)  # prints 5
</pre><ol><li>In this example, both subtraction and addition have the same precedence and are left-associative, so <code>a - b</code> is evaluated first, followed by adding 2.</li></ol><p>Understanding operator precedence and associativity is essential for writing correct and efficient expressions in your programs. Use parentheses <code>()</code> to explicitly specify the order of operations when necessary.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('f44de59f-a053-4bde-9c72-2ad2cd4efdf5', 4, '6afaf653-6486-4ffb-b2d0-1460e629933f', 'VIDEO', 'Arithmetic Operators in Python', NULL, '', 'https://www.youtube.com/watch?v=GEMZpw7ug-k&list=PLBlnK6fEyqRjdKzSsGiBpr6fAxawT9WWb');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6517cccd-0805-482a-8047-50ddc97a7b15', 5, '6afaf653-6486-4ffb-b2d0-1460e629933f', 'CODE', 'List odd divisor', 'b6484e21-6937-489c-b031-b71767994741', 'List odd divisor', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('13182de4-4078-44fe-8ffb-c9a5ca59f3fa', 0, 'ebc43b1c-2c83-4d5d-8f8d-c940bc5cc4b2', 'LESSON', 'Introduction to strings', NULL, '<h4>Lesson: Introduction to Strings</h4><p>In this lesson, we will explore the concept of strings in C programming. Strings are an essential data type used to represent and manipulate sequences of characters. Understanding strings and their operations is crucial for solving a wide range of programming problems.</p><h3>What are Strings?</h3><ul><li><strong>Definition</strong>: A string is a sequence of characters, including letters, digits, symbols, and whitespace characters.</li><li><strong>Representation</strong>: In C, strings are represented as arrays of characters terminated by a null character (<code>''\0''</code>).</li></ul><h3>Basic String Syntax</h3><ol><li><strong>String Declaration</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char str[50]; // Declares a string of size 50
</pre><ol><li><strong>String Initialization</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char str1[] = "Hello, World!"; // String initialized with a value
char str2[20] = "Programming"; // String with a specified size
</pre><ol><li><strong>Accessing Characters</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char firstChar = str1[0]; // Accessing the first character ''H''
char lastChar = str1[12]; // Accessing the last character ''!''
</pre><h3>Common String Operations</h3><ol><li><strong>String Length</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">int length = strlen(str1); // Calculates the length of str1
</pre><ol><li><strong>String Copy</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char dest[50];
strcpy(dest, str1); // Copies str1 into dest
</pre><ol><li><strong>String Concatenation</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char str3[50] = "Hello, ";
strcat(str3, "World!"); // Concatenates "World!" to str3
</pre><ol><li><strong>String Comparison</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">if (strcmp(str1, str2) == 0) {
    printf("The strings are equal.\n");
} else {
    printf("The strings are not equal.\n");
}
</pre><h3>String Input and Output</h3><ol><li><strong>Reading a String</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char input[100];
printf("Enter a string: ");
scanf("%s", input); // Reads a string from user input
</pre><ol><li><strong>Printing a String</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">printf("You entered: %s\n", input); // Prints the user input
</pre><h3>String Manipulation Functions</h3><ol><li><strong>Finding a Substring</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char *substr = strstr(str1, "World");
if (substr != NULL) {
    printf("Substring found: %s\n", substr);
} else {
    printf("Substring not found.\n");
}
</pre><ol><li><strong>String Tokenization</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">char str4[] = "Hello, World! Welcome to C programming.";
char *token = strtok(str4, " ");
while (token != NULL) {
    printf("%s\n", token);
    token = strtok(NULL, " ");
}
</pre><h3><br></h3><h3>Practical Example</h3><p><strong>Problem</strong>: Write a program that reverses a given string.</p><p><strong>Solution</strong>:</p><pre class="ql-syntax" spellcheck="false">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

void reverseString(char str[]) {
    int n = strlen(str);
    for (int i = 0; i &lt; n / 2; i++) {
        char temp = str[i];
        str[i] = str[n - i - 1];
        str[n - i - 1] = temp;
    }
}

int main() {
    char str[100];
    printf("Enter a string: ");
    scanf("%s", str);
    reverseString(str);
    printf("Reversed string: %s\n", str);
    return 0;
}
</pre><p>This program reads a string from the user, reverses it, and prints the reversed string.</p><p><br></p><h3>Conclusion</h3><p>Understanding strings and their operations is fundamental for effective programming in C. Strings are versatile and powerful tools for handling text and character data. By mastering string operations, you will be well-equipped to tackle a variety of programming challenges.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9bd2a076-a832-4831-b69f-b2c686dbd7e5', 1, 'ebc43b1c-2c83-4d5d-8f8d-c940bc5cc4b2', 'VIDEO', 'Strings In Python', NULL, '', 'https://www.youtube.com/watch?v=iYCiWadRZ8I');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('18d0cf88-47e6-4ea9-9213-fcb70f7c3b77', 0, '80ddc21d-f973-498a-a213-c70f6a6df53a', 'LESSON', 'Taking user input', NULL, '<h3>Taking user input</h3><p>You have already learned that ''print'' is used to output values.</p><p>Now we will use ''input()'' to get user input. View this image to understand how input() function works in Python</p><p><img src="https://i.ibb.co/SyVm9Gt/image.png"></p><p>So you understood from the image the different ways in which input can be read. Let''s take another example - the following commands will be used to get the name and age from user.</p><p>The program then prints out the greeting using the variables <em>name</em>&nbsp;and&nbsp;<em>age</em>.</p><pre class="ql-syntax" spellcheck="false">name = input()
print("Hello, " + name + "!")

age = input()
print("You are " + age + " years old.")
</pre><p><code><strong>input()</strong></code>&nbsp;assumes that the input is a string.</p><p>You can convert it to an integer or numerical value using&nbsp;<code><strong>int()</strong></code></p><pre class="ql-syntax" spellcheck="false">age = int(input())
print("You are", age, "years old.")
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('37028b2b-5bbf-49d5-a781-954c2d6c80ed', 1, '80ddc21d-f973-498a-a213-c70f6a6df53a', 'VIDEO', 'Python user input ⌨️', NULL, '', 'https://www.youtube.com/watch?v=DB9Cq6TSTuQ');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('4da5dea4-bfe9-45cd-8927-0198a1d542ce', 2, '80ddc21d-f973-498a-a213-c70f6a6df53a', 'CODE', 'Sum of two integer', 'b6484e21-6937-489c-b031-b71767994221', 'Sum of two integer', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('ed4da262-2ebf-4635-b448-b5962d39aacb', 0, 'f72f8157-1b3e-4de0-acf3-7da9760b9352', 'LESSON', ' Intro to if / else', NULL, '<h3>Need of If-Else</h3><p>Many times our program needs to take different actions based on some conditions.</p><p><br></p><p>For example, Let''s suppose we have to write a program that takes the user''s age and tells us if the user is old enough to vote or not. In this case our program will behave differently if the age entered by the user is below 18 and if the age is above 18.</p><p>If it is above 18, our program will print "Old enough to vote!". Otherwise, it will print "Not old enough to vote!".</p><p><img src="https://i.ibb.co/NCYKP4Q/image.png"></p><p>This different behavior in the program can be achieved through something called "If/Else" Statements in Python.</p><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('fe5d8eea-6710-428d-b7fc-40e9a60faac6', 1, 'f72f8157-1b3e-4de0-acf3-7da9760b9352', 'VIDEO', 'Python If Statements | Python Tutorial #10', NULL, '', 'https://www.youtube.com/watch?v=wKQRmXR3jhc');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('369439b7-524e-4ec7-a5b6-4415becb0c3e', 2, 'f72f8157-1b3e-4de0-acf3-7da9760b9352', 'CODE', 'Check prime number', 'b6484e21-6937-489c-b031-b71767994758', 'Check prime number', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('be8efb5d-3cab-48e0-a10d-09378525f8fa', 0, '33526918-26be-4fe4-8c92-9cc7bc0d53fd', 'LESSON', 'Introduction to arrays', NULL, '<h3>Creating Arrays</h3><p><code><strong>Arrays</strong></code>&nbsp;in Python are commonly referred to as&nbsp;<code>lists</code>.</p><p><code>Arrays</code>&nbsp;are used to store multiple values in a single variable, instead of declaring separate variables for each value.</p><p>In Python,&nbsp;<code>list</code>&nbsp;is denoted by square brackets&nbsp;<strong>[]</strong></p><ul><li>It can hold elements of different data types, such as numbers, strings, or even other lists.</li><li><code>Lists</code>&nbsp;are mutable, which means you can modify them by adding, removing, or changing elements.</li></ul><pre class="ql-syntax" spellcheck="false"># Consider the list  ''fruits''  and  ''numbers''  below
fruits = ["apple", "banana", "orange", "grape"]

numbers = [20, 10, 0, -5]
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6da25459-c869-48e1-9ac5-5492a2559b83', 1, '33526918-26be-4fe4-8c92-9cc7bc0d53fd', 'VIDEO', 'ARRAYS in Python - Start Here!', NULL, '', 'https://www.youtube.com/watch?v=Rldzskbnjgo');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('3cb71d1f-199e-42b4-95df-69f5d3d069d4', 2, '33526918-26be-4fe4-8c92-9cc7bc0d53fd', 'CODE', 'Check 2^k', 'b6484e21-6937-489c-b031-b71767994745', 'Check 2^k', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5ae43565-7fb7-4866-9613-c0f17d85de06', 0, '685c9fe2-e6e1-4ebc-bb1f-251a2822ca2e', 'LESSON', 'While loops', NULL, '<h4>Lesson: While Loops</h4><p><strong>While Loops</strong> allow you to execute a block of code repeatedly as long as a certain condition is true. This is useful when the number of iterations is not known beforehand.</p><p><strong>Syntax</strong>:</p><pre class="ql-syntax" spellcheck="false">while condition:
    # Code to execute
</pre><p><strong>Example</strong>:</p><pre class="ql-syntax" spellcheck="false">i = 1
while i &lt;= 10:
    print(i)
    i += 1
</pre><p>This loop prints numbers from 1 to 10.</p><p><strong>Key Points</strong>:</p><ul><li>Ensure the condition will eventually become false, otherwise, you might create an infinite loop.</li><li>Use while loops when the number of iterations is not predetermined.</li></ul><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('65f4995b-5191-4fa3-bf08-84ec22056687', 1, '685c9fe2-e6e1-4ebc-bb1f-251a2822ca2e', 'LESSON', 'For loops', NULL, '<h4>Lesson: For Loops</h4><p><strong>For Loops</strong> are used to iterate over a sequence (like a list, tuple, or string) or a range of numbers. This is useful when the number of iterations is known beforehand.</p><p><strong>Syntax</strong>:</p><pre class="ql-syntax" spellcheck="false">for item in sequence:
    # Code to execute
</pre><p><strong>Example</strong>:</p><pre class="ql-syntax" spellcheck="false">for i in range(1, 11):
    print(i)
</pre><p>This loop prints numbers from 1 to 10.</p><p><strong>Key Points</strong>:</p><ul><li>Use for loops when you need to iterate over a sequence or a known range of numbers.</li><li>The <code>range()</code> function is commonly used to generate a sequence of numbers.</li></ul><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1804c24e-f56b-42bb-9d40-00c4a2f5b2f4', 2, '685c9fe2-e6e1-4ebc-bb1f-251a2822ca2e', 'LESSON', 'Break/Continue', NULL, '<h4>Lesson: Break / Continue</h4><p>The <code>break</code> and <code>continue</code> statements are used to control the flow of loops.</p><ol><li><strong>Break Statement</strong>: The <code>break</code> statement is used to exit a loop prematurely when a certain condition is met.</li></ol><pre class="ql-syntax" spellcheck="false">for i in range(1, 11):
    if i == 5:
        break
    print(i)
</pre><ol><li>This loop prints numbers from 1 to 4 and then stops.</li><li><strong>Continue Statement</strong>: The <code>continue</code> statement is used to skip the rest of the code inside a loop for the current iteration only and continue with the next iteration.</li></ol><pre class="ql-syntax" spellcheck="false">for i in range(1, 11):
    if i % 2 == 0:
        continue
    print(i)
</pre><ol><li>This loop prints all odd numbers from 1 to 10.</li></ol><p><strong>Key Points</strong>:</p><ul><li>Use <code>break</code> to exit a loop when a specific condition is met.</li><li>Use <code>continue</code> to skip the current iteration and proceed with the next one.</li></ul><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('996951d8-78de-4e01-8a45-03f1fd280b59', 3, '685c9fe2-e6e1-4ebc-bb1f-251a2822ca2e', 'LESSON', 'Nested loops', NULL, '<h4>Lesson: Nested Loops</h4><p><strong>Nested Loops</strong> are loops inside other loops. This is useful for working with multi-dimensional data structures, such as matrices.</p><p><strong>Syntax</strong>:</p><pre class="ql-syntax" spellcheck="false">for i in range(1, 4):
    for j in range(1, 4):
        print(i, j)
</pre><p><strong>Example</strong>:</p><pre class="ql-syntax" spellcheck="false">for i in range(1, 4):
    for j in range(1, 4):
        print(f''({i}, {j})'')
</pre><p>This nested loop prints pairs of numbers from (1, 1) to (3, 3).</p><p><strong>Key Points</strong>:</p><ul><li>The inner loop runs completely for each iteration of the outer loop.</li><li>Nested loops can be used for tasks like matrix multiplication, printing patterns, and more.</li></ul><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c8a05f67-1688-4afc-b132-ec49e05e5428', 4, '685c9fe2-e6e1-4ebc-bb1f-251a2822ca2e', 'VIDEO', 'Loops in Python | While & For Loops | Python Full Course', NULL, '', 'https://www.youtube.com/watch?v=S73thl0AyFU');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('88ccc96a-3743-4925-af9e-8fb1916c7a23', 0, '2eaa7791-da93-45fe-b20c-20e86379d8a1', 'LESSON', 'Advanced techniques for manipulating the DOM', NULL, '<h3>Lesson: Advanced Techniques for Manipulating the DOM</h3><p><strong>Objective:</strong> Explore advanced methods for manipulating the DOM to create dynamic and interactive web applications.</p><p><strong>1. Inserting Elements:</strong> Learn various methods to insert elements into the DOM.</p><p><strong>Examples:</strong></p><ul><li><code>insertAdjacentHTML()</code>: Insert HTML directly adjacent to an element.</li></ul><pre class="ql-syntax" spellcheck="false">document.getElementById(''myDiv'').insertAdjacentHTML(''beforeend'', ''&lt;p&gt;New Paragraph&lt;/p&gt;'');
</pre><ul><li><code>insertBefore()</code>: Insert a new node before an existing node.</li></ul><pre class="ql-syntax" spellcheck="false">const newElement = document.createElement(''p'');
newElement.textContent = ''Inserted Paragraph'';
document.getElementById(''myDiv'').insertBefore(newElement, document.getElementById(''myDiv'').firstChild);
</pre><p><strong>2. Replacing Elements:</strong> Replace an existing element with a new one.</p><pre class="ql-syntax" spellcheck="false">const newElement = document.createElement(''p'');
newElement.textContent = ''Replacement Paragraph'';
const oldElement = document.getElementById(''oldElement'');
oldElement.parentNode.replaceChild(newElement, oldElement);
</pre><p><strong>3. Cloning Elements:</strong> Clone an existing element, optionally including its child nodes.</p><pre class="ql-syntax" spellcheck="false">const original = document.getElementById(''myDiv'');
const clone = original.cloneNode(true); // true for deep clone
document.body.appendChild(clone);
</pre><p><strong>4. Working with Collections:</strong> Efficiently manipulate groups of elements using collections like <code>NodeList</code> or <code>HTMLCollection</code>.</p><pre class="ql-syntax" spellcheck="false">const items = document.getElementsByClassName(''item'');
Array.from(items).forEach(item =&gt; {
    item.style.color = ''blue'';
});
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that inserts, replaces, and clones elements in the DOM.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Advanced DOM Manipulation&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Advanced DOM Manipulation Example&lt;/h1&gt;
    &lt;div id="myDiv"&gt;
        &lt;p id="oldElement"&gt;Old Paragraph&lt;/p&gt;
    &lt;/div&gt;
    &lt;script&gt;
        // Insert new element
        document.getElementById(''myDiv'').insertAdjacentHTML(''beforeend'', ''&lt;p&gt;New Paragraph&lt;/p&gt;'');

        // Replace element
        const newElement = document.createElement(''p'');
        newElement.textContent = ''Replacement Paragraph'';
        const oldElement = document.getElementById(''oldElement'');
        oldElement.parentNode.replaceChild(newElement, oldElement);

        // Clone element
        const original = document.getElementById(''myDiv'');
        const clone = original.cloneNode(true);
        document.body.appendChild(clone);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('25cdef6f-a440-4263-a645-2cee8aed1961', 1, '2eaa7791-da93-45fe-b20c-20e86379d8a1', 'LESSON', 'Virtual DOM', NULL, '<h3>Lesson: Virtual DOM</h3><p><strong>Objective:</strong> Understand the concept of the Virtual DOM and how it enhances the performance of web applications.</p><p><strong>1. Definition:</strong> The Virtual DOM is an abstraction of the real DOM. It is a lightweight copy of the real DOM that allows for efficient updates and rendering.</p><p><strong>2. How It Works:</strong></p><ul><li><strong>Diffing:</strong> The Virtual DOM computes the differences between the current and previous states.</li><li><strong>Batch Updates:</strong> Changes are applied to the Virtual DOM, and then the real DOM is updated in a single operation.</li><li><strong>Reconciliation:</strong> The process of updating the real DOM to match the Virtual DOM.</li></ul><p><strong>3. Benefits:</strong></p><ul><li><strong>Performance:</strong> Minimizes direct manipulation of the real DOM, reducing costly reflows and repaints.</li><li><strong>Efficiency:</strong> Efficiently updates only the parts of the DOM that have changed.</li></ul><p><strong>Example with React:</strong></p><pre class="ql-syntax" spellcheck="false">class App extends React.Component {
    constructor() {
        super();
        this.state = { count: 0 };
    }

    increment = () =&gt; {
        this.setState({ count: this.state.count + 1 });
    }

    render() {
        return (
            &lt;div&gt;
                &lt;p&gt;Count: {this.state.count}&lt;/p&gt;
                &lt;button onClick={this.increment}&gt;Increment&lt;/button&gt;
            &lt;/div&gt;
        );
    }
}

ReactDOM.render(&lt;App /&gt;, document.getElementById(''root''));
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Demonstrate the use of the Virtual DOM by creating a simple React application that updates the state efficiently.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Virtual DOM&lt;/title&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/17.0.2/umd/react.production.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/17.0.2/umd/react-dom.production.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Virtual DOM Example&lt;/h1&gt;
    &lt;div id="root"&gt;&lt;/div&gt;
    &lt;script type="text/javascript"&gt;
        class App extends React.Component {
            constructor() {
                super();
                this.state = { count: 0 };
            }

            increment = () =&gt; {
                this.setState({ count: this.state.count + 1 });
            }

            render() {
                return (
                    &lt;div&gt;
                        &lt;p&gt;Count: {this.state.count}&lt;/p&gt;
                        &lt;button onClick={this.increment}&gt;Increment&lt;/button&gt;
                    &lt;/div&gt;
                );
            }
        }

        ReactDOM.render(&lt;App /&gt;, document.getElementById(''root''));
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('22f74f9b-b776-438b-a3f5-c084f70cb70b', 2, '2eaa7791-da93-45fe-b20c-20e86379d8a1', 'LESSON', 'Performance optimization', NULL, '<h3>Lesson: Performance Optimization</h3><p><strong>Objective:</strong> Learn techniques to optimize DOM manipulation for better performance and responsiveness.</p><p><strong>1. Minimize Reflows and Repaints:</strong></p><ul><li><strong>Batch DOM Updates:</strong> Group multiple DOM updates together.</li><li><strong>Use Document Fragments:</strong> Update elements in a <code>DocumentFragment</code> and append it to the DOM in a single operation.</li></ul><pre class="ql-syntax" spellcheck="false">const fragment = document.createDocumentFragment();
for (let i = 0; i &lt; 1000; i++) {
    const div = document.createElement(''div'');
    div.textContent = `Item ${i}`;
    fragment.appendChild(div);
}
document.body.appendChild(fragment);
</pre><p><strong>2. Efficient Event Handling:</strong></p><ul><li><strong>Event Delegation:</strong> Use event delegation to handle events efficiently.</li></ul><pre class="ql-syntax" spellcheck="false">document.getElementById(''parent'').addEventListener(''click'', function(event) {
    if (event.target &amp;&amp; event.target.matches(''button'')) {
        console.log(''Button clicked:'', event.target.textContent);
    }
});
</pre><p><strong>3. Optimize CSS:</strong></p><ul><li><strong>Avoid Layout Thrashing:</strong> Minimize layout calculations by reading and writing to the DOM separately.</li></ul><pre class="ql-syntax" spellcheck="false">const el = document.getElementById(''myElement'');
const height = el.offsetHeight; // Read
el.style.height = `${height + 10}px`; // Write
</pre><p><strong>4. Use requestAnimationFrame:</strong> Optimize animations by using <code>requestAnimationFrame</code> to ensure smooth rendering.</p><pre class="ql-syntax" spellcheck="false">function animate() {
    // Perform animation logic
    requestAnimationFrame(animate);
}
requestAnimationFrame(animate);
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that optimizes DOM manipulation using document fragments and efficient event handling.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Performance Optimization&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Performance Optimization Example&lt;/h1&gt;
    &lt;div id="parent"&gt;
        &lt;!-- Buttons will be added here --&gt;
    &lt;/div&gt;
    &lt;script&gt;
        // Efficiently add 1000 buttons using a document fragment
        const fragment = document.createDocumentFragment();
        for (let i = 0; i &lt; 1000; i++) {
            const button = document.createElement(''button'');
            button.textContent = `Button ${i}`;
            fragment.appendChild(button);
        }
        document.getElementById(''parent'').appendChild(fragment);

        // Efficient event handling using event delegation
        document.getElementById(''parent'').addEventListener(''click'', function(event) {
            if (event.target &amp;&amp; event.target.matches(''button'')) {
                console.log(''Button clicked:'', event.target.textContent);
            }
        });
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering these advanced DOM manipulation techniques, understanding the Virtual DOM, and learning performance optimization strategies, you will be able to create highly efficient and responsive web applications. These lessons provide the foundation for building sophisticated and performant user interfaces in JavaScript.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('4ea45817-6925-448b-859f-4da157f76c72', 0, 'c982460d-a9d0-4a2c-919c-5a2dace33050', 'LESSON', ' Recap - Logic building', NULL, '<h3>Solve programming problems with Python - Part 2</h3><p>Welcome to&nbsp;<strong>Part-2</strong>&nbsp;of the Beginner''s guide to solving programming problems using Python.</p><p><br></p><p>A quick re-cap of what was covered in&nbsp;<a href="https://codedynamite.site/#/certificate-courses/d215b5f8-0249-4dc5-89a3-51fd148cfb16/introduction" rel="noopener noreferrer" target="_blank" style="color: rgb(87, 128, 176);">Part-1</a>.</p><ul><li>Getting started with programming problems</li><li>Basic math functions</li><li>Conditional statements</li><li>Logic building / Approach</li></ul><p>Let''s begin! Click on ''Next'' to proceed with&nbsp;<strong>Part-2</strong></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('3bdf38b1-de0e-4ade-a7fe-b13f2302a8d5', 0, '0b8f86c2-ceb5-4849-be55-196ee65c07fe', 'LESSON', ' Array operations part-1', NULL, '<h3>Introduction to the module on Array Operations</h3><p>All right - things are now getting serious!</p><p>In this module on&nbsp;<strong>Array Operations</strong>&nbsp;- we will learn the concepts required to successfully perform beginner level array construction and manipulation required in programming problems.</p><p>Let''s revise some basic syntax about lists / arrays in the IDE that we came across in "Learn Python".</p><ul><li>Lists are used to store multiple items in a single variable</li><li>List items can be accessed by referring to their index. List items can also have negative index </li><li class="ql-indent-1">list[3]&nbsp;refers to the&nbsp;<span class="ql-formula" data-value="4^{th}">﻿<span contenteditable="false"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>4</mn><mrow><mi>t</mi><mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">4^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.8491em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8491em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span></span>﻿</span>  item of the list</li><li class="ql-indent-1">list[−2]&nbsp;refers to the&nbsp;<span class="ql-formula" data-value="2^{nd}">﻿<span contenteditable="false"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mi>d</mi></mrow></msup></mrow><annotation encoding="application/x-tex">2^{nd}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8491em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span></span>﻿</span> last item of the list</li><li>You can slice a list to retrieve multiple items from the list</li><li class="ql-indent-1">If&nbsp;list=[4,3,5,2,1], then&nbsp;list[1:3]&nbsp;will return the values [3, 5]</li><li>append() function allows us to add items to the list</li><li class="ql-indent-1">if If&nbsp;list=[4,3,5,2,1], then&nbsp;list.append(6) will update as&nbsp;list=[4,3,5,2,1,6] </li><li>sort() function sorts the list in an ascending order</li><li class="ql-indent-1">If&nbsp;list=[4,3,5,2,1], then&nbsp;list.sort() will update as&nbsp;list=[1,2,3,4,5]</li><li class="ql-indent-1">If the list contains strings, then&nbsp;list.sort() will sort the list lexicographically</li><li class="ql-indent-1">sort() function will not work if the list contains both strings and integers</li><li>Two lists can be combined by using the&nbsp;′+′&nbsp;operator</li><li>pop() function allows us to remove an item at the defined index in the list</li><li>If&nbsp;list=[4,3,5,2,1], then&nbsp;list.pop(3)&nbsp;will update as&nbsp;list=[4,3,5,1]</li></ul><p><br></p><p>Example:</p><pre class="ql-syntax" spellcheck="false"># Click on ''Submit'' to view the results
# Click on ''Next'' to proceed


sample_list = [5, 3, 2, 4, 1]


print(sample_list)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # print command for a list displays the list
print(sample_list[2])&nbsp; &nbsp; &nbsp; &nbsp;# output specific index from the list
print(sample_list[-3])&nbsp; &nbsp; &nbsp; # negative indexing of the list
print(sample_list[1:4])&nbsp; &nbsp; &nbsp;# slice a list between two indices


sample_list.append(6)&nbsp; &nbsp; &nbsp; &nbsp;# update the list by adding an element
print(sample_list)


sample_list.sort()&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # sort the list in an ascending order
print(sample_list)


sample_list.pop(2)
print(sample_list)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # remove the item at the index 2


print(sample_list + sample_list)&nbsp; &nbsp; # view the result of list concatenation
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d9ea9aa2-8c0a-44b2-b4aa-8128be23213e', 0, '9f4635ae-bdb4-4ce8-954f-fe7905cf3619', 'LESSON', 'Introduction to frameworks (React, Angular, Vue)', NULL, '<h3>Lesson: Introduction to Frameworks (React, Angular, Vue)</h3><p><strong>Objective:</strong> Get an overview of the most popular JavaScript frameworks and libraries: React, Angular, and Vue. Understand their core concepts and when to use each one.</p><p><strong>1. React:</strong></p><ul><li><strong>Developed by Facebook:</strong> A library for building user interfaces.</li><li><strong>Component-Based:</strong> UI is divided into reusable components.</li><li><strong>Virtual DOM:</strong> Efficient updates and rendering.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function App() {
    return &lt;h1&gt;Hello, React!&lt;/h1&gt;;
}
</pre><p><strong>2. Angular:</strong></p><ul><li><strong>Developed by Google:</strong> A full-fledged framework for building web applications.</li><li><strong>Two-Way Data Binding:</strong> Synchronizes data between the model and the view.</li><li><strong>Dependency Injection:</strong> Manages the dependencies of components.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">@Component({
  selector: ''app-root'',
  template: ''&lt;h1&gt;Hello, Angular!&lt;/h1&gt;''
})
export class AppComponent {}
</pre><p><strong>3. Vue:</strong></p><ul><li><strong>Developed by Evan You:</strong> A progressive framework for building user interfaces.</li><li><strong>Reactive Data Binding:</strong> Updates the DOM when the data changes.</li><li><strong>Single-File Components:</strong> Combines HTML, JavaScript, and CSS in a single file.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const app = new Vue({
    el: ''#app'',
    data: {
        message: ''Hello, Vue!''
    }
});
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a brief introduction to React, Angular, and Vue, explaining their core features.</p><p><strong>Solution:</strong> React is a library developed by Facebook for building user interfaces with a component-based architecture and a virtual DOM for efficient updates. Angular, developed by Google, is a comprehensive framework with features like two-way data binding and dependency injection. Vue, created by Evan You, is a progressive framework that offers reactive data binding and single-file components.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('2d8b3003-948b-42d5-81c7-a576fda2a447', 1, '9f4635ae-bdb4-4ce8-954f-fe7905cf3619', 'LESSON', 'Setting up a development environment', NULL, '<h3>Lesson: Setting Up a Development Environment</h3><p><strong>Objective:</strong> Learn how to set up a development environment for building JavaScript applications with frameworks like React, Angular, and Vue.</p><p><strong>1. Install Node.js and npm:</strong></p><ul><li>Node.js is a JavaScript runtime that allows you to run JavaScript on the server.</li><li>npm (Node Package Manager) is used to manage dependencies.</li></ul><p><strong>2. Install a Code Editor:</strong></p><ul><li>Popular code editors include Visual Studio Code, Sublime Text, and Atom.</li></ul><p><strong>3. Create a New React Project:</strong></p><ul><li>Use Create React App to set up a new React project quickly.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">npx create-react-app my-react-app
cd my-react-app
npm start
</pre><p><strong>4. Create a New Angular Project:</strong></p><ul><li>Use Angular CLI to set up a new Angular project.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">npm install -g @angular/cli
ng new my-angular-app
cd my-angular-app
ng serve
</pre><p><strong>5. Create a New Vue Project:</strong></p><ul><li>Use Vue CLI to set up a new Vue project.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">npm install -g @vue/cli
vue create my-vue-app
cd my-vue-app
npm run serve
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write instructions to set up a new React project using Create React App.</p><p><strong>Solution:</strong></p><ol><li>Install Node.js and npm from <a href="https://nodejs.org/" rel="noopener noreferrer" target="_blank">nodejs.org</a>.</li><li>Open a terminal and run the following commands:</li></ol><pre class="ql-syntax" spellcheck="false">npx create-react-app my-react-app
cd my-react-app
npm start
</pre><ol><li>Open <code>http://localhost:3000</code> in your browser to see the new React application.</li></ol><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('0fcc3e4b-fbfd-4335-babb-2e34795a40ac', 2, '9f4635ae-bdb4-4ce8-954f-fe7905cf3619', 'LESSON', 'Building a simple application with React', NULL, '<h3>Lesson: Building a Simple Application with React</h3><p><strong>Objective:</strong> Build a simple React application to understand the core concepts of React, including components, props, and state.</p><p><strong>1. Create a New React Component:</strong></p><ul><li>Define a new component using a function or a class.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function Welcome(props) {
    return &lt;h1&gt;Hello, {props.name}!&lt;/h1&gt;;
}
</pre><p><strong>2. Use Props to Pass Data:</strong></p><ul><li>Props are used to pass data from parent to child components.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function App() {
    return &lt;Welcome name="Alice" /&gt;;
}
</pre><p><strong>3. Manage State in a Component:</strong></p><ul><li>Use the <code>useState</code> hook to manage state in functional components.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function Counter() {
    const [count, setCount] = React.useState(0);

    return (
        &lt;div&gt;
            &lt;p&gt;Count: {count}&lt;/p&gt;
            &lt;button onClick={() =&gt; setCount(count + 1)}&gt;Increment&lt;/button&gt;
        &lt;/div&gt;
    );
}
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a simple React application with a counter component that increments the count when a button is clicked.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;React Application&lt;/title&gt;
    &lt;script src="https://unpkg.com/react/umd/react.development.js"&gt;&lt;/script&gt;
    &lt;script src="https://unpkg.com/react-dom/umd/react-dom.development.js"&gt;&lt;/script&gt;
    &lt;script src="https://unpkg.com/@babel/standalone/babel.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id="root"&gt;&lt;/div&gt;
    &lt;script type="text/babel"&gt;
        function Counter() {
            const [count, setCount] = React.useState(0);

            return (
                &lt;div&gt;
                    &lt;p&gt;Count: {count}&lt;/p&gt;
                    &lt;button onClick={() =&gt; setCount(count + 1)}&gt;Increment&lt;/button&gt;
                &lt;/div&gt;
            );
        }

        function App() {
            return (
                &lt;div&gt;
                    &lt;h1&gt;My React App&lt;/h1&gt;
                    &lt;Counter /&gt;
                &lt;/div&gt;
            );
        }

        ReactDOM.render(&lt;App /&gt;, document.getElementById(''root''));
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('08eac43d-fff0-4340-a91c-82783f3119c9', 0, '736ddfc6-cf8b-4a9c-825e-f6529410f492', 'LESSON', ' Recap - Logic building', NULL, '<h3>Solve programming problems with CPP - Part 2</h3><p>Welcome to&nbsp;<strong>Part-2</strong>&nbsp;of the Beginner''s guide to solving programming problems using C#.</p><p><br></p><p>A quick re-cap of what was covered in&nbsp;<a href="https://codedynamite.site/#/certificate-courses/0c1a30e7-97f9-4b5d-8d35-b500e7a57f82/introduction" rel="noopener noreferrer" target="_blank" style="color: rgb(87, 128, 176);">Part-1</a>.</p><ul><li>Getting started with programming problems</li><li>Basic math functions</li><li>Conditional statements</li><li>Logic building / Approach</li></ul><p>Let''s begin! Click on ''Next'' to proceed with&nbsp;<strong>Part-2</strong></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a0dc102d-53c8-4a5b-b0c1-9f10a5d3d31d', 1, '0b8f86c2-ceb5-4849-be55-196ee65c07fe', 'LESSON', ' Important array functions', NULL, '<h4>Lesson: Important Array Functions</h4><p>Building on the basics from Part-1, this lesson will introduce additional important functions for manipulating arrays (lists) in Python. These functions are essential for effective data manipulation and will enhance your problem-solving toolkit.</p><h3>Key Array Functions</h3><ol><li><strong>insert()</strong>: Insert an element at a specific position.</li></ol><pre class="ql-syntax" spellcheck="false">sample_list = [1, 2, 3]
sample_list.insert(1, 4)  # Insert 4 at index 1
print(sample_list)  # Prints: [1, 4, 2, 3]
</pre><ol><li><strong>remove()</strong>: Remove the first occurrence of a specific element.</li></ol><pre class="ql-syntax" spellcheck="false">sample_list = [1, 2, 3, 2, 4]
sample_list.remove(2)  # Removes the first occurrence of 2
print(sample_list)  # Prints: [1, 3, 2, 4]
</pre><ol><li><strong>reverse()</strong>: Reverse the elements of the list.</li></ol><pre class="ql-syntax" spellcheck="false">sample_list = [1, 2, 3, 4, 5]
sample_list.reverse()  # Reverses the list
print(sample_list)  # Prints: [5, 4, 3, 2, 1]
</pre><ol><li><strong>extend()</strong>: Add all elements of another list to the current list.</li></ol><pre class="ql-syntax" spellcheck="false">list1 = [1, 2, 3]
list2 = [4, 5, 6]
list1.extend(list2)  # Adds all elements of list2 to list1
print(list1)  # Prints: [1, 2, 3, 4, 5, 6]
</pre><ol><li><strong>index()</strong>: Return the index of the first occurrence of a specific element.</li></ol><pre class="ql-syntax" spellcheck="false">sample_list = [1, 2, 3, 4, 3]
index = sample_list.index(3)  # Finds the first occurrence of 3
print(index)  # Prints: 2
</pre><ol><li><strong>count()</strong>: Return the number of times a specific element appears in the list.</li></ol><pre class="ql-syntax" spellcheck="false">sample_list = [1, 2, 2, 3, 2, 4]
count = sample_list.count(2)  # Counts the occurrences of 2
print(count)  # Prints: 3
</pre><h3>Practical Example</h3><p><strong>Problem</strong>: Write a program that uses these functions to manipulate a list of numbers.</p><pre class="ql-syntax" spellcheck="false">numbers = [10, 20, 30, 40, 50]

# Insert 25 at index 2
numbers.insert(2, 25)
print(numbers)  # Prints: [10, 20, 25, 30, 40, 50]

# Remove the first occurrence of 40
numbers.remove(40)
print(numbers)  # Prints: [10, 20, 25, 30, 50]

# Reverse the list
numbers.reverse()
print(numbers)  # Prints: [50, 30, 25, 20, 10]

# Extend the list with [60, 70, 80]
numbers.extend([60, 70, 80])
print(numbers)  # Prints: [50, 30, 25, 20, 10, 60, 70, 80]

# Find the index of 25
index = numbers.index(25)
print(index)  # Prints: 2

# Count the occurrences of 20
count = numbers.count(20)
print(count)  # Prints: 1
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('2a9cfd12-610e-41e6-a0e0-5ec9d8d32c31', 2, '0b8f86c2-ceb5-4849-be55-196ee65c07fe', 'LESSON', 'Array operations part-2', NULL, '<h4>Lesson: Array Operations Part-2</h4><p>Continuing from Part-1, this lesson will cover more advanced array operations and techniques to further enhance your ability to manipulate and work with lists in Python.</p><h3>Advanced Array Techniques</h3><ol><li><strong>List Comprehensions</strong>: Create new lists based on existing lists in a concise way.</li></ol><pre class="ql-syntax" spellcheck="false">numbers = [1, 2, 3, 4, 5]
squares = [x ** 2 for x in numbers]
print(squares)  # Prints: [1, 4, 9, 16, 25]
</pre><ol><li><strong>Filtering Lists</strong>: Use list comprehensions to filter elements based on a condition.</li></ol><pre class="ql-syntax" spellcheck="false">numbers = [1, 2, 3, 4, 5, 6]
even_numbers = [x for x in numbers if x % 2 == 0]
print(even_numbers)  # Prints: [2, 4, 6]
</pre><ol><li><strong>Nested Lists</strong>: Work with lists within lists (multi-dimensional arrays).</li></ol><pre class="ql-syntax" spellcheck="false">matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]
print(matrix[1][2])  # Prints: 6
</pre><ol><li><strong>Flattening Nested Lists</strong>: Convert a multi-dimensional list into a single-dimensional list.</li></ol><pre class="ql-syntax" spellcheck="false">matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]
flat_list = [item for sublist in matrix for item in sublist]
print(flat_list)  # Prints: [1, 2, 3, 4, 5, 6, 7, 8, 9]
</pre><ol><li><strong>Copying Lists</strong>: Understand the difference between shallow and deep copies.</li></ol><ul><li><strong>Shallow Copy</strong>:</li></ul><pre class="ql-syntax" spellcheck="false">list1 = [1, 2, 3]
list2 = list1.copy()
list2.append(4)
print(list1)  # Prints: [1, 2, 3]
print(list2)  # Prints: [1, 2, 3, 4]
</pre><ul><li><strong>Deep Copy</strong>:</li></ul><pre class="ql-syntax" spellcheck="false">import copy
list1 = [[1, 2], [3, 4]]
list2 = copy.deepcopy(list1)
list2[0][0] = 9
print(list1)  # Prints: [[1, 2], [3, 4]]
print(list2)  # Prints: [[9, 2], [3, 4]]
</pre><h3>Practical Example</h3><p><strong>Problem</strong>: Write a program that performs advanced operations on a list of numbers.</p><pre class="ql-syntax" spellcheck="false">numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]

# Create a list of squares of even numbers
squares = [x ** 2 for x in numbers if x % 2 == 0]
print(squares)  # Prints: [4, 16, 36, 64]

# Create a nested list (matrix) and flatten it
matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]
flat_list = [item for sublist in matrix for item in sublist]
print(flat_list)  # Prints: [1, 2, 3, 4, 5, 6, 7, 8, 9]

# Demonstrate shallow copy
list1 = [1, 2, 3]
list2 = list1.copy()
list2.append(4)
print(list1)  # Prints: [1, 2, 3]
print(list2)  # Prints: [1, 2, 3, 4]

# Demonstrate deep copy
import copy
list1 = [[1, 2], [3, 4]]
list2 = copy.deepcopy(list1)
list2[0][0] = 9
print(list1)  # Prints: [[1, 2], [3, 4]]
print(list2)  # Prints: [[9, 2], [3, 4]]
</pre><p>By mastering these advanced array operations, you will enhance your ability to manipulate and analyze data effectively, making your Python programming skills more robust and versatile.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('84ecfa93-9ff0-42e3-a174-09c22620cd7c', 3, '0b8f86c2-ceb5-4849-be55-196ee65c07fe', 'VIDEO', 'Arrays In Python | Python Array Operations | Python Tutorial For Beginners | Edureka', NULL, '', 'https://www.youtube.com/watch?v=phRshQSU-xA');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b55daaed-980b-4f97-8227-b33535ddc628', 4, '0b8f86c2-ceb5-4849-be55-196ee65c07fe', 'CODE', 'Palindrome integer', 'b6484e21-6937-489c-b031-b71767994743', 'Palindrome integer', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('8a11ecb6-d246-45c4-9839-30477d56b9a9', 0, '6b6031db-d128-40da-b3d4-4d6e8d346c5b', 'LESSON', ' String operations part-1', NULL, '<h4>Lesson: String Operations Part-1</h4><p><strong>Introduction to the Module on Strings</strong></p><p>So far, we have focused on logic, integers, and math. The module on logic building and problem-solving primarily covered number operations. It is time to add ''Strings'' to our arsenal for solving programming problems.</p><p>Let''s revise some basic syntax of strings:</p><ul><li><strong>Strings</strong> are a datatype in Python.</li><li>We can check the datatype of any variable using the <code>type()</code> function.</li><li>A string can be composed of both characters and numbers.</li><li>A <strong>binary string</strong> is one which has only ''0'' and ''1'' as component characters.</li><li>String operations can be performed on any string stored in the variable <code>S</code>.</li><li>The character at the <code>ith</code> index of a string is represented as <code>S[i]</code>.</li><li>Strings can be concatenated by addition (<code>+</code>).</li><li>A substring of <code>S</code> between the <code>ith</code> and the <code>jth</code> indices is fetched using the ''slice'' syntax <code>S[i:j]</code>, but without including <code>S[j]</code>.</li></ul><h3>Examples and Basic Operations</h3><ol><li><strong>Defining and Printing Strings</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">S = "Hello, World!"
print(S)  # Prints: Hello, World!
print(type(S))  # Prints: &lt;class ''str''&gt;
</pre><ol><li><strong>Accessing Characters</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">print(S[0])  # Prints: H
print(S[-1])  # Prints: !
</pre><ol><li><strong>String Concatenation</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">greeting = "Hello"
name = "Alice"
message = greeting + ", " + name + "!"
print(message)  # Prints: Hello, Alice!
</pre><ol><li><strong>String Slicing</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">substring = S[7:12]
print(substring)  # Prints: World
</pre><h3>Practical Example</h3><p><strong>Problem</strong>: Write a program that extracts the first and last characters of a given string and concatenates them.</p><pre class="ql-syntax" spellcheck="false">S = "Programming"
first_char = S[0]
last_char = S[-1]
result = first_char + last_char
print(result)  # Prints: Pg
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('0b5af7f6-256f-4c90-92e2-9010d6a19b40', 1, '6b6031db-d128-40da-b3d4-4d6e8d346c5b', 'LESSON', ' String operations part-2', NULL, '<h4>Lesson: String Operations Part-2</h4><p><strong>Advanced String Manipulations</strong></p><p>Building on the basics from Part-1, this lesson will cover more advanced string operations and methods available in Python. These functions and methods will help you manipulate and analyze strings more effectively.</p><h3>Advanced String Methods</h3><ol><li><strong>String Length</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">length = len(S)
print(length)  # Prints: 13
</pre><ol><li><strong>String Methods</strong>:</li></ol><ul><li><strong>Upper and Lower Case</strong>:</li></ul><pre class="ql-syntax" spellcheck="false">print(S.upper())  # Prints: HELLO, WORLD!
print(S.lower())  # Prints: hello, world!
</pre><ul><li><strong>Strip Whitespace</strong>:</li></ul><pre class="ql-syntax" spellcheck="false">S = "   Hello, World!   "
print(S.strip())  # Prints: Hello, World!
</pre><ul><li><strong>Replace Substring</strong>:</li></ul><pre class="ql-syntax" spellcheck="false">S = "Hello, World!"
new_S = S.replace("World", "Python")
print(new_S)  # Prints: Hello, Python!
</pre><ul><li><strong>Split and Join</strong>:</li></ul><pre class="ql-syntax" spellcheck="false">S = "apple,banana,cherry"
fruits = S.split(",")
print(fruits)  # Prints: [''apple'', ''banana'', ''cherry'']
new_S = "-".join(fruits)
print(new_S)  # Prints: apple-banana-cherry
</pre><h3>Practical Example</h3><p><strong>Problem</strong>: Write a program that counts the number of vowels in a given string.</p><pre class="ql-syntax" spellcheck="false">def count_vowels(S):
    vowels = "aeiouAEIOU"
    count = 0
    for char in S:
        if char in vowels:
            count += 1
    return count

S = "Learn Python Programming"
vowel_count = count_vowels(S)
print(vowel_count)  # Prints: 7
</pre><h3>Additional String Techniques</h3><ol><li><strong>Check if Substring</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">S = "Hello, World!"
substring = "World"
if substring in S:
    print(f"''{substring}'' is in ''{S}''")  # Prints: ''World'' is in ''Hello, World!''
else:
    print(f"''{substring}'' is not in ''{S}''")
</pre><ol><li><strong>String Formatting</strong>:</li></ol><ul><li><strong>Using Format Method</strong>:</li></ul><pre class="ql-syntax" spellcheck="false">age = 25
name = "Alice"
message = "My name is {} and I am {} years old.".format(name, age)
print(message)  # Prints: My name is Alice and I am 25 years old.
</pre><ul><li><strong>Using f-Strings (Python 3.6+)</strong>:</li></ul><pre class="ql-syntax" spellcheck="false">message = f"My name is {name} and I am {age} years old."
print(message)  # Prints: My name is Alice and I am 25 years old.
</pre><h3><br></h3><h3>Conclusion</h3><p>Understanding and mastering string operations is essential for effective programming in Python. Strings are a versatile and powerful datatype that you will frequently use in various programming scenarios. By learning these advanced operations and methods, you''ll be able to manipulate and analyze strings more efficiently, enhancing your problem-solving capabilities.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('fd19aab6-dfec-417c-88f1-44f89fea0392', 0, '20035541-a9c7-488a-8cad-346841600648', 'LESSON', ' Modules', NULL, '<h3>Modules in Python</h3><p>Modules in Python are simply Python files with a&nbsp;<code>.py</code>&nbsp;extension that contain Python code. These files can define functions, classes, and variables that can be used in other Python scripts.</p><p><br></p><p>Here''s how you can create and use a module:</p><ol><li><strong>Create a Module</strong>: Write your Python code in a&nbsp;<code>.py</code>&nbsp;file. For example, let''s say you have a file named&nbsp;<code>mymodule.py</code>:</li></ol><pre class="ql-syntax" spellcheck="false"># mymodule.py

def greet(name):
    print("Hello, " + name)
</pre><ol><li><strong>Using a Module</strong>: You can use the functions, classes, and variables defined in your module in another Python script by importing it.</li></ol><pre class="ql-syntax" spellcheck="false"># main.py

import mymodule
</pre><ol><li><strong>Accessing Module Members</strong>: You can access functions, classes, and variables defined in the module using the dot notation.</li></ol><pre class="ql-syntax" spellcheck="false"># main.py

mymodule.greet("Bob")
</pre><ol><li><strong>Importing Specific Members</strong>: If you only need specific members of a module, you can import them individually.</li></ol><pre class="ql-syntax" spellcheck="false"># main.py

from mymodule import greet

greet("Charlie")
</pre><ol><li><strong>Module Aliasing</strong>: You can give a module a different alias when importing it.</li></ol><pre class="ql-syntax" spellcheck="false"># main.py

import mymodule as mm

mm.greet("David")
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('f7176266-1ba1-4586-8642-f44fdd1e8934', 2, '6b6031db-d128-40da-b3d4-4d6e8d346c5b', 'VIDEO', 'String methods in Python are easy 🧵', NULL, '', 'https://www.youtube.com/watch?v=tb6EYiHtcXU');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('35ee05e4-4586-4df9-87df-a8047fcaaa58', 1, '236a5c83-3d52-4a4e-9f59-7101fe603889', 'LESSON', 'Dictionary', NULL, '<h4>Lesson: Dictionary</h4><p>Dictionaries are a fundamental data structure in Python, providing a way to store data in key-value pairs. They are highly versatile and allow for efficient data retrieval, making them essential for many programming tasks.</p><h3>What is a Dictionary?</h3><p>A dictionary is an unordered collection of key-value pairs, where each key is unique. Dictionaries are mutable, meaning you can change, add, or remove key-value pairs after the dictionary is created.</p><h3>Defining and Accessing Dictionaries</h3><ol><li><strong>Defining a Dictionary</strong>: Dictionaries are defined using curly braces <code>{}</code> with key-value pairs separated by colons <code>:</code>.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">my_dict = {
    "name": "Alice",
    "age": 25,
    "city": "New York"
}
</pre><ol><li><strong>Accessing Dictionary Values</strong>: Values can be accessed by using their corresponding keys.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">print(my_dict["name"])  # Prints: Alice
print(my_dict["age"])  # Prints: 25
</pre><h3>Dictionary Operations</h3><ol><li><strong>Adding and Updating Key-Value Pairs</strong>: You can add a new key-value pair or update an existing key-value pair.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">my_dict["email"] = "alice@example.com"  # Adding a new key-value pair
my_dict["age"] = 26  # Updating an existing key-value pair
</pre><ol><li><strong>Removing Key-Value Pairs</strong>: Key-value pairs can be removed using the <code>del</code> statement or the <code>pop()</code> method.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">del my_dict["city"]  # Removes the key "city"
email = my_dict.pop("email")  # Removes the key "email" and returns its value
</pre><ol><li><strong>Checking for Keys</strong>: You can check if a key exists in a dictionary using the <code>in</code> keyword.</li><li><strong>Example</strong>:</li></ol><pre class="ql-syntax" spellcheck="false">if "name" in my_dict:
    print("Name exists in the dictionary")
</pre><h3>Iterating Over Dictionaries</h3><p>You can iterate over the keys, values, or key-value pairs in a dictionary.</p><p><strong>Example</strong>:</p><pre class="ql-syntax" spellcheck="false">for key in my_dict:
    print(key, my_dict[key])

for key, value in my_dict.items():
    print(key, value)
</pre><h3>Practical Example</h3><p><strong>Problem</strong>: Write a function that counts the frequency of each character in a given string and returns a dictionary with the character counts.</p><p><strong>Solution</strong>:</p><pre class="ql-syntax" spellcheck="false">def char_frequency(s):
    freq_dict = {}
    for char in s:
        if char in freq_dict:
            freq_dict[char] += 1
        else:
            freq_dict[char] = 1
    return freq_dict

string = "hello world"
frequency = char_frequency(string)
print(frequency)  # Prints: {''h'': 1, ''e'': 1, ''l'': 3, ''o'': 2, '' '': 1, ''w'': 1, ''r'': 1, ''d'': 1}
</pre><h3>Conclusion</h3><p>Dictionaries are a versatile and powerful data structure in Python, allowing you to efficiently store and retrieve data using key-value pairs. By mastering dictionaries, you''ll be able to handle more complex data manipulation tasks with ease. Practice using dictionaries to become proficient in their use and capabilities.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a6889c0e-4339-4607-8902-0fe73662608d', 2, '236a5c83-3d52-4a4e-9f59-7101fe603889', 'VIDEO', 'Python Lists, Tuples And Dictionaries', NULL, '', 'https://www.youtube.com/watch?v=fXRxHrDhQuI');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('93d74a79-d69d-478e-852f-d723006eedf0', 0, '5157a1ed-4393-4d91-9d3c-f9e94589620f', 'LESSON', 'Basic math continued part-1', NULL, '<h3>Continuation of basic math</h3><p>We have covered various modules so far - Basic math, Logic building and Array operations.</p><p>These will be helpful in our current module.</p><p>Let us start with a simple problem.</p><p>You are given an integer&nbsp;N.</p><p><br></p><p>You need to create and output to the console all the&nbsp;<strong>divisors</strong>&nbsp;of this integer in an&nbsp;<strong>ascending order</strong>.</p><h3>Input Format</h3><ul><li>The first line of input will contain a single integer&nbsp;T, denoting the number of test cases.</li><li>Each test case consists of a single line of input - the integer&nbsp;N.</li></ul><h3>Sample 1:</h3><p>Input</p><pre class="ql-syntax" spellcheck="false">2
12
21
</pre><p>Output</p><pre class="ql-syntax" spellcheck="false">1 2 3 4 6 12
1 3 7 21
</pre><h3>Code:</h3><pre class="ql-syntax" spellcheck="false"># Update the ''_'' in the code below to solve the problem


t = int(input())
for i in range(t):
&nbsp; &nbsp; n = int(input())
&nbsp; &nbsp;&nbsp;
&nbsp; &nbsp; #declare an empty list to hold all divisors
&nbsp; &nbsp; divisors = []&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; i = _
&nbsp; &nbsp; while i &lt;= n:
&nbsp; &nbsp; &nbsp; &nbsp; #check if n is divisible by each i
&nbsp; &nbsp; &nbsp; &nbsp; if ___ == 0:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #append each i to the list which meets this condition
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; divisors.______(i)&nbsp;&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; i = i + 1
&nbsp; &nbsp;&nbsp;
&nbsp; &nbsp; print(*divisors)
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('bfec5aec-f86c-421d-81c9-f618590ee6b5', 1, '5157a1ed-4393-4d91-9d3c-f9e94589620f', 'LESSON', 'Basic math continued part-2', NULL, '<h4>Lesson: Basic Math Continued Part-2</h4><p>Building on the concepts from Part-1, this lesson will explore more advanced problems and techniques in basic math operations.</p><h3>Advanced Problem</h3><p><strong>Problem</strong>: Write a program that finds the greatest common divisor (GCD) of two given integers.</p><p><strong>Input Format</strong>:</p><ul><li>The first line of input will contain a single integer T, denoting the number of test cases.</li><li>Each test case consists of two integers A and B.</li></ul><p><strong>Sample 1</strong>:</p><pre class="ql-syntax" spellcheck="false">Input:
2
12 15
100 25

Output:
3
25
</pre><p><strong>Code</strong>:</p><pre class="ql-syntax" spellcheck="false"># Function to compute GCD using the Euclidean algorithm
def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

t = int(input())
for _ in range(t):
    a, b = map(int, input().split())
    print(gcd(a, b))
</pre><h3>Another Problem</h3><p><strong>Problem</strong>: Write a program to calculate the least common multiple (LCM) of two given integers.</p><p><strong>Input Format</strong>:</p><ul><li>The first line of input will contain a single integer TT</li><li>T, denoting the number of test cases.</li><li>Each test case consists of two integers AA</li><li>A and BB</li><li>B.</li></ul><p><strong>Sample 1</strong>:</p><pre class="ql-syntax" spellcheck="false">Input:
2
12 15
100 25

Output:
60
100
</pre><p><strong>Code</strong>:</p><pre class="ql-syntax" spellcheck="false"># Function to compute GCD using the Euclidean algorithm
def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

# Function to compute LCM
def lcm(a, b):
    return (a * b) // gcd(a, b)

t = int(input())
for _ in range(t):
    a, b = map(int, input().split())
    print(lcm(a, b))
</pre><h3>Practical Example</h3><p><strong>Problem</strong>: Write a program that finds all prime numbers up to a given integer NN</p><p>N.</p><p><strong>Input Format</strong>:</p><ul><li>The first line of input will contain a single integer NN</li><li>N.</li></ul><p><strong>Sample 1</strong>:</p><pre class="ql-syntax" spellcheck="false">Input:
10

Output:
2 3 5 7
</pre><p><strong>Code</strong>:</p><pre class="ql-syntax" spellcheck="false">def is_prime(n):
    if n &lt;= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

n = int(input())
primes = []
for i in range(2, n + 1):
    if is_prime(i):
        primes.append(i)

print(*primes)
</pre><h3>Conclusion</h3><p>By mastering these advanced basic math operations, you will enhance your ability to solve a wider range of programming problems efficiently. Practice these concepts to solidify your understanding and improve your problem-solving skills in Python.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('3b0e758d-2bc2-4458-a4eb-fc8fb2dd6e30', 2, '5157a1ed-4393-4d91-9d3c-f9e94589620f', 'CODE', 'Check 2^k', 'b6484e21-6937-489c-b031-b71767994745', 'Check 2^k', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('bf235e23-1457-4457-aeba-d236bb49c6de', 3, '5157a1ed-4393-4d91-9d3c-f9e94589620f', 'VIDEO', 'Python - Basic Math Tutorial', NULL, '', 'https://www.youtube.com/watch?v=JTW43OZFsZU');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('2d2edb6b-a7c1-4358-a0c6-365103db7415', 1, '20035541-a9c7-488a-8cad-346841600648', 'LESSON', 'Namespaces and Scope', NULL, '<h3>Scope in Python</h3><p>In Python, the term "scope" refers to the region of a program where a particular variable is accessible. Python has three levels of variable scope:</p><ol><li><strong>Local scope:</strong>&nbsp;Variables defined within a function are local to that function and cannot be accessed from outside the function. When the function is called, the local variables are created, and when the function exits, those variables are destroyed. Example:</li></ol><pre class="ql-syntax" spellcheck="false">def my_function():
    x = 10
    print("Inside the function:", x)

my_function()
# Trying to access x outside the function will result in an error
</pre><ol><li><strong>Enclosing (non-local) scope:</strong>&nbsp;This scope applies to nested functions. A variable defined in the enclosing function can be accessed by the inner functions. However, the reverse is not true; the inner function''s variables are not accessible in the outer function. Example:</li></ol><pre class="ql-syntax" spellcheck="false">def outer_function():
    x = 10
    def inner_function():
        print("Inside the inner function:", x)
    inner_function()

outer_function()
</pre><ol><li><strong>Global scope:</strong>&nbsp;Variables defined outside of any function or class have global scope and can be accessed from anywhere within the module. Example:</li></ol><pre class="ql-syntax" spellcheck="false">x = 10

def my_function():
    print("Inside the function:", x)

my_function()
print("Outside the function:", x)
</pre><p>In this example, when&nbsp;<code>my_function()</code>&nbsp;is called, it prints the value of the local variable&nbsp;<code>x</code>&nbsp;(which is 20). Outside the function, the global variable&nbsp;<code>x</code>&nbsp;(which is 10) is accessed.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('48bf2e87-bacc-4b83-8e7a-d5c8d9fa298c', 2, '20035541-a9c7-488a-8cad-346841600648', 'LESSON', 'Generators', NULL, '<h3>Generators in Python</h3><p>In Python, a generator is a special type of iterator that can be used to generate a sequence of values. Unlike normal functions that return a single value using the&nbsp;<code>return</code>&nbsp;statement, generators use the&nbsp;<code>yield</code>&nbsp;statement to produce a series of values, one at a time.</p><p><br></p><p>Generators are useful for generating large sequences of values without storing them all in memory at once, which can be memory-efficient. They are also used for lazy evaluation, where values are generated only when needed.</p><p>In this example:</p><ul><li>The&nbsp;<code>my_generator</code>&nbsp;function is defined with three&nbsp;<code>yield</code>&nbsp;statements. Each&nbsp;<code>yield</code>&nbsp;statement produces a value when the generator is iterated over.</li><li>A generator object&nbsp;<code>gen</code>&nbsp;is created by calling the&nbsp;<code>my_generator</code>&nbsp;function. This does not execute the function; instead, it returns a generator object.</li><li>The&nbsp;<code>next()</code>&nbsp;function is used to retrieve values from the generator one at a time. Each call to&nbsp;<code>next()</code>&nbsp;executes the generator function until the next&nbsp;<code>yield</code>&nbsp;statement is encountered, at which point it pauses and returns the value.</li><li>When there are no more values to yield, attempting to retrieve more values will raise a&nbsp;<code>StopIteration</code>&nbsp;exception, indicating that the generator has been exhausted.</li></ul><pre class="ql-syntax" spellcheck="false">def my_generator():
&nbsp; &nbsp; yield 1
&nbsp; &nbsp; yield 2
&nbsp; &nbsp; yield 3


# Create a generator object
gen = my_generator()


# Iterate over the generator to retrieve values
print(next(gen))&nbsp; # Output: 1
print(next(gen))&nbsp; # Output: 2
print(next(gen))&nbsp; # Output: 3


# Attempting to retrieve more values will raise a StopIteration exception
# print(next(gen))&nbsp; # Uncommenting this line will raise StopIteration
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('23622543-d15c-47f9-b799-148a8b17c852', 0, '9877a522-d634-4866-b9ba-159d9952d139', 'LESSON', ' Iterators', NULL, '<h3>Iterators in Python</h3><p>In Python, an iterator is an object that allows iteration over a sequence of elements. It provides a way to access elements of a container one by one without needing to know the underlying structure of the container.</p><p><br></p><p>Here''s a simple example of iterators in Python:</p><ul><li>We have a list&nbsp;<code>my_list</code>&nbsp;containing integers.</li><li>We create an iterator&nbsp;<code>my_iter</code>&nbsp;using the&nbsp;<code>iter()</code>&nbsp;function.</li><li>We use the&nbsp;<code>next()</code>&nbsp;function to access each element of the list sequentially.</li></ul><p>Each time&nbsp;<code>next()</code>&nbsp;is called on the iterator, it returns the next element of the sequence. If there are no more elements, it raises a&nbsp;<code>StopIteration</code>&nbsp;exception.</p><pre class="ql-syntax" spellcheck="false"># Define a list
my_list = [1, 2, 3, 4, 5]


# Get an iterator for the list
my_iter = iter(my_list)


# Print each element of the list using the iterator
print(next(my_iter))&nbsp; # Output: 1
print(next(my_iter))&nbsp; # Output: 2
print(next(my_iter))&nbsp; # Output: 3
print(next(my_iter))&nbsp; # Output: 4
print(next(my_iter))&nbsp; # Output: 5
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('185c3609-b6d6-4cdd-961a-324f4afcc5e6', 1, '9877a522-d634-4866-b9ba-159d9952d139', 'LESSON', ' Regular Expressions', NULL, '<h3>RegEx in Python</h3><p>Regular expressions (regex) are powerful tools for pattern matching and text manipulation. In Python, the&nbsp;<code>re</code>&nbsp;module provides support for working with regular expressions. Here are some common functions and methods provided by the&nbsp;<code>re</code>&nbsp;module:</p><ol><li><code><strong>re.findall(pattern, string, flags=0)</strong></code>: Finds all occurrences of the pattern in the string and returns them as a list of strings.</li><li><code><strong>re.search(pattern, string, flags=0)</strong></code>: Searches the entire string for a match to the pattern. Returns a match object if found, None otherwise.</li><li><code><strong>re.split(pattern, string, maxsplit=0, flags=0)</strong></code>: Splits the string by occurrences of the pattern and returns a list of substrings.</li><li><code><strong>re.sub(pattern, replacement, string, count=0, flags=0)</strong></code>: Replaces all occurrences of the pattern in the string with the replacement string. Returns the modified string.</li></ol><p>These are some of the key functions and methods provided by the&nbsp;<code>re</code>&nbsp;module in Python for working with regular expressions. They allow you to perform various operations such as pattern matching, searching, substitution, and splitting on strings using regex patterns.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('df9cd2e6-4f7d-457f-823c-ee9d66353266', 2, '9877a522-d634-4866-b9ba-159d9952d139', 'LESSON', ' Decorators', NULL, '<h3>Decorators in Python</h3><p>Decorators in Python are a powerful feature that allow you to modify or extend the behavior of functions or methods without changing their code. Decorators are functions themselves that wrap other functions or methods to provide additional functionality. Here''s an overview of decorators in Python:</p><p><br></p><ol><li><strong>Syntax</strong>: Decorators are written using the&nbsp;<code>@decorator_name</code>&nbsp;syntax above the function definition. When a function is decorated, it is passed to the decorator function as an argument.</li><li><br></li><li><strong>Decorator Function</strong>: A decorator function is a regular Python function that takes another function as its argument and returns a new function.</li><li><br></li><li><strong>Multiple Decorators</strong>: Multiple decorators can be applied to a single function or method, and they are applied in the order they are listed.</li></ol><p>Here''s a simple example to demonstrate the usage of decorators. In this example:</p><ul><li><code>my_decorator</code>&nbsp;is a decorator function that takes another function&nbsp;<code>func</code>&nbsp;as its argument and returns a new function&nbsp;<code>wrapper</code>.</li><li><code>say_hello</code>&nbsp;is a function decorated with&nbsp;<code>my_decorator</code>. When&nbsp;<code>say_hello</code>&nbsp;is called, it actually invokes the&nbsp;<code>wrapper</code>&nbsp;function returned by&nbsp;<code>my_decorator</code>, which in turn calls the original&nbsp;<code>say_hello</code>&nbsp;function.</li><li>The output of running this code will be:</li></ul><pre class="ql-syntax" spellcheck="false">Something is happening before the function is called.
Hello!
Something is happening after the function is called.
</pre><p>This demonstrates how the decorator&nbsp;<code>my_decorator</code>&nbsp;extends the behavior of the&nbsp;<code>say_hello</code>&nbsp;function by adding some functionality before and after calling it.</p><pre class="ql-syntax" spellcheck="false"># Decorator function
def my_decorator(func):
&nbsp; &nbsp; def wrapper():
&nbsp; &nbsp; &nbsp; &nbsp; print("Something is happening before the function is called.")
&nbsp; &nbsp; &nbsp; &nbsp; func()
&nbsp; &nbsp; &nbsp; &nbsp; print("Something is happening after the function is called.")
&nbsp; &nbsp; return wrapper


# Function decorated with the decorator
@my_decorator
def say_hello():
&nbsp; &nbsp; print("Hello!")


# Call the decorated function
say_hello()
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a53e79b8-c685-4f5a-aca7-f8c841bc52c2', 0, '22f8b1cd-bfff-4989-8a83-9a4cd46e3870', 'LESSON', 'What is OOPs / Features of OOPs', NULL, '<h3>Introduction</h3><p>Welcome to your first journey on learning Object Oriented Programming in Python!</p><p><br></p><p>What will you learn here?</p><p>By the end of this course, you''ll not only be well-versed in the principles of object-oriented programming but also proficient in applying them to solve real-world programming challenges using Python.</p><p>This course will equip you with the knowledge and skills to elevate your programming prowess to new heights. Let''s embark on this journey to master the world of object-oriented programming in Python!</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('71b84d7e-1909-4d71-812f-cb690d6f4b67', 1, '22f8b1cd-bfff-4989-8a83-9a4cd46e3870', 'LESSON', 'Constructors, static members', NULL, '<h3>Introduction to Constructors</h3><p>In Python, a constructor is a special method that gets called when an object is created. Constructors are used to initialize the attributes of an object. In Python, there are two types of constructors:</p><p><br></p><ol><li><strong>Default Constructor (or&nbsp;</strong><code><strong>__init__</strong></code><strong>&nbsp;method):</strong></li><li class="ql-indent-1">The default constructor is the most common type in Python.</li><li class="ql-indent-1">It is automatically called when an object is created.</li><li class="ql-indent-1">It is defined using the&nbsp;<code>__init__</code>&nbsp;method.</li><li>Example:</li></ol><pre class="ql-syntax" spellcheck="false">class MyClass:
    def __init__(self):
        # Code

# Creating an object of MyClass
obj = MyClass()
</pre><ol><li>In this example, the&nbsp;<code>__init__</code>&nbsp;method is the constructor that initializes the&nbsp;<code>attribute1</code>&nbsp;and&nbsp;<code>attribute2</code>&nbsp;of the&nbsp;<code>MyClass</code>&nbsp;object.</li><li><strong>Parameterized Constructor:</strong></li><li class="ql-indent-1">A parameterized constructor allows you to pass values to the constructor when creating an object.</li><li class="ql-indent-1">It allows you to initialize the attributes with the values provided during object creation.</li><li>Example:</li></ol><pre class="ql-syntax" spellcheck="false">class MyClass:
    def __init__(self, attribute1, attribute2):
        self.attribute1 = attribute1
        self.attribute2 = attribute2

# Creating an object of MyClass with values
obj = MyClass("value1", "value2")
</pre><p>In this example, the constructor takes parameters&nbsp;<code>attribute1</code>&nbsp;and&nbsp;<code>attribute2</code>, and you can pass values to them when creating an object.</p><p><br></p><p>These are the two main types of constructors in Python. The default constructor is more common, but parameterized constructors provide more flexibility when you need to initialize the object with specific values.</p><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('93860a9a-ff4c-427d-a34e-dc8c34748dd1', 0, 'fcbeaffe-82c1-4535-aa2a-246ba99adc7e', 'LESSON', 'Inheritance', NULL, '<h4>Lesson: Inheritance</h4><p>Inheritance is a fundamental concept in object-oriented programming that allows a class to inherit attributes and methods from another class. This mechanism promotes code reuse and establishes a natural hierarchy between classes.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Base Class (Super Class):</strong> The class whose attributes and methods are inherited.</li><li><strong>Derived Class (Sub Class):</strong> The class that inherits from the base class.</li></ol><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">class Animal:
    def __init__(self, name):
        self.name = name

    def speak(self):
        pass

class Dog(Animal):
    def speak(self):
        return f"{self.name} says Woof!"

class Cat(Animal):
    def speak(self):
        return f"{self.name} says Meow!"
</pre><p>In this example, <code>Dog</code> and <code>Cat</code> classes inherit from the <code>Animal</code> class. They override the <code>speak</code> method to provide specific implementations.</p><p>Inheritance allows for hierarchical classification, where common functionality is encapsulated in the base class, and specialized behavior is defined in derived classes.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('68bced98-e6d3-4610-bf46-22449838338e', 1, 'fcbeaffe-82c1-4535-aa2a-246ba99adc7e', 'LESSON', 'Objects as parameters & Aggregation', NULL, '<h4>Lesson: Objects as Parameters &amp; Aggregation</h4><p>In object-oriented programming, objects can be passed as parameters to functions and methods, enabling complex interactions between objects. Aggregation refers to a relationship where one class is composed of one or more objects of another class.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Objects as Parameters:</strong></li></ol><pre class="ql-syntax" spellcheck="false">class Circle:
    def __init__(self, radius):
        self.radius = radius

def print_area(circle):
    area = 3.14 * circle.radius ** 2
    print(f"Area: {area}")

c = Circle(5)
print_area(c)
</pre><ol><li><strong>Aggregation:</strong></li></ol><pre class="ql-syntax" spellcheck="false">class Engine:
    def __init__(self, horsepower):
        self.horsepower = horsepower

class Car:
    def __init__(self, make, engine):
        self.make = make
        self.engine = engine

engine = Engine(300)
car = Car("Toyota", engine)
</pre><p>In aggregation, the <code>Car</code> class contains an <code>Engine</code> object, illustrating a "has-a" relationship. This promotes modular design and reusability of classes.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d2d4c2ce-3cc8-4c1e-92cf-cdef6786f4a0', 2, 'fcbeaffe-82c1-4535-aa2a-246ba99adc7e', 'LESSON', 'Polymorphism - Overloading', NULL, '<h4>Lesson: Polymorphism - Overloading</h4><p>Polymorphism is the ability of different objects to respond to the same method in different ways. Overloading is a form of polymorphism where multiple methods have the same name but differ in the number or type of parameters.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Method Overloading:</strong></li></ol><pre class="ql-syntax" spellcheck="false">class Math:
    def add(self, a, b, c=0):
        return a + b + c

math = Math()
print(math.add(2, 3))      # Output: 5
print(math.add(2, 3, 4))   # Output: 9
</pre><p>In this example, the <code>add</code> method is overloaded to handle two or three parameters. Python does not natively support method overloading, but default parameter values can achieve similar functionality.</p><p>Polymorphism through overloading allows methods to handle different types and numbers of inputs, enhancing flexibility and robustness.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5cfa5fdb-a175-49f2-af1d-e13b766d09fd', 3, 'fcbeaffe-82c1-4535-aa2a-246ba99adc7e', 'LESSON', 'Method overriding', NULL, '<h4>Lesson: Method Overriding</h4><p>Method overriding occurs when a derived class provides a specific implementation of a method already defined in its base class. This enables a derived class to customize or completely replace the behavior of the base class method.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Method Overriding:</strong></li></ol><pre class="ql-syntax" spellcheck="false">class Animal:
    def speak(self):
        return "Some sound"

class Dog(Animal):
    def speak(self):
        return "Woof!"

animal = Animal()
dog = Dog()
print(animal.speak())  # Output: Some sound
print(dog.speak())     # Output: Woof!
</pre><p>In this example, the <code>Dog</code> class overrides the <code>speak</code> method of the <code>Animal</code> class. When <code>speak</code> is called on a <code>Dog</code> object, the overridden method is executed, demonstrating polymorphic behavior.</p><p>Method overriding is essential for implementing polymorphism, allowing derived classes to modify or extend the behavior of base class methods.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6eb3f523-8e00-470d-ba3d-22b2a2bc8f88', 4, 'fcbeaffe-82c1-4535-aa2a-246ba99adc7e', 'LESSON', 'Interfaces & Abstract classes', NULL, '<h4>Lesson: Interfaces &amp; Abstract Classes</h4><p>Interfaces and abstract classes define methods that must be implemented by derived classes. They provide a way to enforce certain behaviors without dictating the exact implementation.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Abstract Classes:</strong></li></ol><pre class="ql-syntax" spellcheck="false">from abc import ABC, abstractmethod

class Animal(ABC):
    @abstractmethod
    def speak(self):
        pass

class Dog(Animal):
    def speak(self):
        return "Woof!"
</pre><ul><li><strong>Interfaces:</strong> In Python, interfaces can be simulated using abstract base classes. The <code>Animal</code> class above serves as an interface, requiring the <code>speak</code> method to be implemented by derived classes.</li></ul><p>Abstract classes and interfaces ensure that certain methods are implemented by derived classes, promoting consistency and adherence to a specific contract.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('4735a8b4-4752-4b0c-a0d3-cc436a7b9420', 5, 'fcbeaffe-82c1-4535-aa2a-246ba99adc7e', 'LESSON', 'Returning objects - Static, nested and inner classes', NULL, '<h4>Lesson: Returning Objects - Static, Nested and Inner Classes</h4><p>Returning objects from methods allows for dynamic object creation and interaction. Static, nested, and inner classes help organize code and encapsulate related functionality.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Returning Objects:</strong></li></ol><pre class="ql-syntax" spellcheck="false">class Circle:
    def __init__(self, radius):
        self.radius = radius

    def clone(self):
        return Circle(self.radius)
</pre><ol><li><strong>Static Classes:</strong></li></ol><pre class="ql-syntax" spellcheck="false">class Math:
    @staticmethod
    def add(a, b):
        return a + b
</pre><ol><li><strong>Nested and Inner Classes:</strong></li></ol><pre class="ql-syntax" spellcheck="false">class Outer:
    class Inner:
        def display(self):
            print("Inner class")

outer = Outer()
inner = Outer.Inner()
inner.display()
</pre><p>Static methods belong to the class rather than instances, allowing them to be called on the class itself. Nested and inner classes help logically group related classes, promoting encapsulation and modular design.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('16caf201-71bd-4aa4-a151-92c82bec1e7a', 6, 'fcbeaffe-82c1-4535-aa2a-246ba99adc7e', 'LESSON', 'Upcasting & Dynamic method dispatch', NULL, '<h4>Lesson: Upcasting &amp; Dynamic Method Dispatch</h4><p>Upcasting allows treating a derived class object as an instance of its base class, facilitating polymorphism. Dynamic method dispatch ensures that the correct method implementation is called at runtime based on the actual object type.</p><p><strong>Key Concepts:</strong></p><ul><li><strong>Upcasting:</strong></li></ul><pre class="ql-syntax" spellcheck="false">class Animal:
    def speak(self):
        return "Some sound"

class Dog(Animal):
    def speak(self):
        return "Woof!"

animal = Dog()  # Upcasting
print(animal.speak())  # Output: Woof!
</pre><ul><li><strong>Dynamic Method Dispatch:</strong></li></ul><pre class="ql-syntax" spellcheck="false">class Animal:
    def speak(self):
        return "Some sound"

class Cat(Animal):
    def speak(self):
        return "Meow!"

def make_animal_speak(animal):
    print(animal.speak())

animal = Cat()
make_animal_speak(animal)  # Output: Meow!
</pre><p>Upcasting and dynamic method dispatch allow for flexible and dynamic behavior in object-oriented programming, enabling polymorphism and efficient code reuse.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('cd5d1a2d-c9eb-4524-9b66-fb53c9f14a3f', 7, 'fcbeaffe-82c1-4535-aa2a-246ba99adc7e', 'VIDEO', 'Inheritance in Python | Types of Inheritance in Python', NULL, '', 'https://www.youtube.com/watch?v=DJqWNfu0guk');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('ad86bdcd-677d-41ca-95c3-1bc6d2ff2a69', 0, '55192438-8e60-4f3c-a8cb-a6e3e2dd164b', 'LESSON', 'Exception handling basics', NULL, '<h4>Lesson: Exception Handling Basics</h4><p>Exception handling is a crucial aspect of robust software development. It enables a program to deal with unexpected conditions and errors gracefully, maintaining normal program flow and providing meaningful feedback to users.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Try-Except Block:</strong> The <code>try</code> block allows you to test a block of code for errors. The <code>except</code> block lets you handle the error.</li></ol><pre class="ql-syntax" spellcheck="false">try:
    x = 1 / 0
except ZeroDivisionError:
    print("Cannot divide by zero!")
</pre><ol><li><strong>Finally Block:</strong> The finally block lets you execute code, regardless of whether an exception was raised or not</li></ol><pre class="ql-syntax" spellcheck="false">try:
    x = 1 / 0
except ZeroDivisionError:
    print("Cannot divide by zero!")
finally:
    print("This will always execute.")
</pre><ol><li><strong>Raising Exceptions:</strong> You can raise exceptions using the <code>raise</code> keyword.</li></ol><pre class="ql-syntax" spellcheck="false">if not isinstance(x, int):
    raise TypeError("Only integers are allowed")
</pre><p>Exception handling helps in writing clean and fault-tolerant code by managing potential runtime errors effectively.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d8a7e8a6-6ce6-47e4-b418-d05aedaaaf9b', 1, '55192438-8e60-4f3c-a8cb-a6e3e2dd164b', 'LESSON', ' Multiple catch clauses', NULL, '<h4>Lesson: Multiple Catch Clauses</h4><p>Handling different types of exceptions separately allows for more precise error management. Python supports multiple <code>except</code> blocks to handle various exceptions.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Multiple Except Blocks:</strong></li></ol><pre class="ql-syntax" spellcheck="false">try:
    x = int(input("Enter a number: "))
    y = 1 / x
except ValueError:
    print("Invalid input. Please enter a number.")
except ZeroDivisionError:
    print("Cannot divide by zero!")
</pre><ol><li><strong>Catching Multiple Exceptions in a Single Block:</strong></li></ol><pre class="ql-syntax" spellcheck="false">try:
    x = int(input("Enter a number: "))
    y = 1 / x
except (ValueError, ZeroDivisionError) as e:
    print(f"An error occurred: {e}")
</pre><p>By using multiple <code>except</code> clauses, you can handle specific errors more appropriately, providing tailored responses and maintaining better control over program behavior.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('17c18b4c-6c47-4d68-8290-7d29ad968a09', 2, '55192438-8e60-4f3c-a8cb-a6e3e2dd164b', 'LESSON', 'Nested try statements', NULL, '<h4>Lesson: Nested Try Statements</h4><p>Nested <code>try</code> statements allow for more granular error handling by embedding one <code>try</code> block within another. This is useful when different parts of a code block require distinct exception handling.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Nested Try-Except Blocks:</strong></li></ol><pre class="ql-syntax" spellcheck="false">try:
    x = int(input("Enter a number: "))
    try:
        y = 1 / x
    except ZeroDivisionError:
        print("Inner block: Cannot divide by zero!")
except ValueError:
    print("Outer block: Invalid input. Please enter a number.")
</pre><ol><li><strong>Nested Try-Finally Blocks:</strong></li></ol><pre class="ql-syntax" spellcheck="false">try:
    file = open("test.txt", "r")
    try:
        content = file.read()
    finally:
        file.close()
except FileNotFoundError:
    print("File not found.")
</pre><p>Nested <code>try</code> statements enable localized error handling within different scopes of your code, making your programs more robust and easier to debug.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6b90ccb8-5f0b-4890-a09c-3c73d473658b', 3, '55192438-8e60-4f3c-a8cb-a6e3e2dd164b', 'LESSON', 'Multithreaded programming', NULL, '<h4>Lesson: Multithreaded Programming</h4><p>Multithreading allows a program to execute multiple threads concurrently, enabling efficient use of resources and improved performance, especially in I/O-bound and high-latency operations.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Creating and Starting Threads:</strong></li></ol><pre class="ql-syntax" spellcheck="false">import threading

def print_numbers():
    for i in range(10):
        print(i)

thread = threading.Thread(target=print_numbers)
thread.start()
thread.join()  # Wait for the thread to complete
</pre><ol><li><strong>Threading with Classes:</strong></li></ol><pre class="ql-syntax" spellcheck="false">class MyThread(threading.Thread):
    def run(self):
        for i in range(10):
            print(i)

thread = MyThread()
thread.start()
thread.join()
</pre><p>Multithreading improves program responsiveness and efficiency by allowing multiple operations to run simultaneously.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('77a5e801-5ad5-47b0-b1a6-dc8006c0908b', 4, '55192438-8e60-4f3c-a8cb-a6e3e2dd164b', 'LESSON', ' Yield method and Interupting a thread', NULL, '<h4>Lesson: Yield Method and Interrupting a Thread</h4><p>The <code>yield</code> method and interrupting threads are advanced multithreading concepts that provide more control over thread execution.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Yield Method:</strong> The <code>yield</code> method in generators allows a function to return a value and resume from where it left off.</li></ol><pre class="ql-syntax" spellcheck="false">def generator():
    yield 1
    yield 2
    yield 3

for value in generator():
    print(value)
</pre><ol><li><strong>Interrupting Threads:</strong> Threads can be interrupted or stopped using flags.</li></ol><pre class="ql-syntax" spellcheck="false">import threading
import time

class MyThread(threading.Thread):
    def __init__(self):
        super().__init__()
        self._stop_event = threading.Event()

    def run(self):
        while not self._stop_event.is_set():
            print("Running...")
            time.sleep(1)

    def stop(self):
        self._stop_event.set()

thread = MyThread()
thread.start()
time.sleep(5)
thread.stop()
thread.join()
</pre><p>Using the <code>yield</code> method and managing thread interruptions effectively ensures smooth and controlled multithreaded execution.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('f6b08c74-165b-46e9-a707-242b300ec852', 5, '55192438-8e60-4f3c-a8cb-a6e3e2dd164b', 'LESSON', ' Priorities / synchronisation', NULL, '<h4>Lesson: Priorities and Synchronization</h4><p>Managing thread priorities and synchronization is essential for ensuring threads execute in a coordinated manner without conflicts or resource contention.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Thread Priorities:</strong> Python does not support explicit thread priorities, but you can manage execution order using synchronization mechanisms.</li><li><strong>Synchronization with Locks:</strong></li></ol><pre class="ql-syntax" spellcheck="false">import threading

lock = threading.Lock()

def thread_task():
    with lock:
        for i in range(5):
            print(i)

thread1 = threading.Thread(target=thread_task)
thread2 = threading.Thread(target=thread_task)

thread1.start()
thread2.start()

thread1.join()
thread2.join()
</pre><ol><li><strong>Synchronization with Semaphores:</strong></li></ol><pre class="ql-syntax" spellcheck="false">semaphore = threading.Semaphore(2)

def thread_task():
    with semaphore:
        for i in range(5):
            print(i)

for _ in range(5):
    thread = threading.Thread(target=thread_task)
    thread.start()
</pre><ol><li><strong>Synchronization with Condition Variables:</strong></li></ol><pre class="ql-syntax" spellcheck="false">condition = threading.Condition()

def consumer():
    with condition:
        condition.wait()
        print("Consumer consumed")

def producer():
    with condition:
        print("Producer produced")
        condition.notify()

consumer_thread = threading.Thread(target=consumer)
producer_thread = threading.Thread(target=producer)

consumer_thread.start()
producer_thread.start()

consumer_thread.join()
producer_thread.join()
</pre><p>Effective use of synchronization mechanisms ensures thread-safe operations, preventing race conditions and ensuring coordinated execution in multithreaded programs.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('8f94ef68-cbdf-440a-9ffc-099b159470bd', 0, '8a4e420d-46d5-4eb2-b801-2136ad54c0fa', 'LESSON', 'Reading and writing files', NULL, '<h4>Lesson: Reading and Writing Files</h4><p>File handling is a crucial aspect of programming, enabling programs to read from and write to files. This allows for data persistence, which is essential for applications that need to store user data, configurations, logs, and more.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Opening a File:</strong></li></ol><ul><li class="ql-indent-1">The <code>open()</code> function is used to open a file.</li></ul><pre class="ql-syntax" spellcheck="false">file = open(''example.txt'', ''r'')  # Opens the file in read mode
</pre><ol><li><strong>Reading from a File:</strong></li></ol><ul><li><strong>Read Entire File:</strong></li></ul><pre class="ql-syntax" spellcheck="false">content = file.read()
print(content)
</pre><ul><li><strong>Read Line by Line:</strong></li></ul><pre class="ql-syntax" spellcheck="false">for line in file:
    print(line, end='''')
</pre><ul><li><strong>Read Specific Number of Characters:</strong></li></ul><pre class="ql-syntax" spellcheck="false">content = file.read(10)
print(content)
</pre><ol><li><strong>Writing to a File:</strong></li></ol><ul><li><strong>Write String:</strong></li></ul><pre class="ql-syntax" spellcheck="false">file = open(''example.txt'', ''w'')  # Opens the file in write mode
file.write("Hello, World!\n")
file.write("This is a test.")
file.close()
</pre><ul><li><strong>Write Lines:</strong></li></ul><pre class="ql-syntax" spellcheck="false">lines = ["First line\n", "Second line\n", "Third line\n"]
file = open(''example.txt'', ''w'')
file.writelines(lines)
file.close()
</pre><ol><li><strong>Appending to a File:</strong></li></ol><ul><li class="ql-indent-1">The <code>append</code> mode (<code>''a''</code>) is used to add data to the end of the file without overwriting existing content.</li></ul><pre class="ql-syntax" spellcheck="false">file = open(''example.txt'', ''a'')
file.write("Appending a new line.\n")
file.close()
</pre><ol><li><strong>Closing a File:</strong></li></ol><ul><li class="ql-indent-1">Always close a file after performing operations to free up system resources.</li></ul><pre class="ql-syntax" spellcheck="false">file.close()
</pre><ol><li><strong>Using Context Manager (</strong><code><strong>with</strong></code><strong> statement):</strong></li></ol><ul><li class="ql-indent-1">The <code>with</code> statement is used to handle file operations more cleanly, ensuring that the file is properly closed after the block of code is executed.</li></ul><pre class="ql-syntax" spellcheck="false">with open(''example.txt'', ''r'') as file:
    content = file.read()
    print(content)
</pre><p><strong>Practical Example:</strong></p><pre class="ql-syntax" spellcheck="false"># Writing to a file
with open(''example.txt'', ''w'') as file:
    file.write("Hello, World!\n")
    file.write("This is a test.\n")

# Reading from the file
with open(''example.txt'', ''r'') as file:
    content = file.read()
    print(content)
</pre><p>File handling is essential for managing data input and output in applications, enabling you to store and retrieve information as needed.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('26519060-af61-45a9-a38c-66557d82743c', 1, '8a4e420d-46d5-4eb2-b801-2136ad54c0fa', 'LESSON', 'Generic programming: classes, methods', NULL, '<h4>Lesson: Generic Programming: Classes, Methods</h4><p>Generic programming allows you to write flexible and reusable code that can operate on different data types. This is particularly useful in scenarios where the exact data type is not known in advance.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Generic Classes:</strong></li></ol><ul><li class="ql-indent-1">In Python, generic classes can be simulated using class templates that work with any data type.</li></ul><pre class="ql-syntax" spellcheck="false">from typing import TypeVar, Generic

T = TypeVar(''T'')

class Box(Generic[T]):
    def __init__(self, content: T):
        self.content = content

    def get_content(self) -&gt; T:
        return self.content

# Example usage
int_box = Box(123)
print(int_box.get_content())  # Prints: 123

str_box = Box("Hello")
print(str_box.get_content())  # Prints: Hello
</pre><ol><li><strong>Generic Methods:</strong></li></ol><ul><li class="ql-indent-1">Methods within classes can also be made generic to handle different types.</li></ul><pre class="ql-syntax" spellcheck="false">from typing import TypeVar

T = TypeVar(''T'')

class Utility:
    @staticmethod
    def print_twice(item: T) -&gt; None:
        print(item)
        print(item)

# Example usage
Utility.print_twice(42)
Utility.print_twice("Generic Method")
</pre><ol><li><strong>Type Annotations and Type Hints:</strong></li></ol><ul><li class="ql-indent-1">Using type annotations and type hints can help in defining generic classes and methods more clearly.</li></ul><pre class="ql-syntax" spellcheck="false">from typing import List, TypeVar

T = TypeVar(''T'')

def generic_function(items: List[T]) -&gt; T:
    return items[0]

# Example usage
numbers = [1, 2, 3]
print(generic_function(numbers))  # Prints: 1

words = ["apple", "banana", "cherry"]
print(generic_function(words))  # Prints: apple
</pre><p><strong>Practical Example:</strong></p><pre class="ql-syntax" spellcheck="false">from typing import TypeVar, Generic

T = TypeVar(''T'')

class Pair(Generic[T]):
    def __init__(self, first: T, second: T):
        self.first = first
        self.second = second

    def get_first(self) -&gt; T:
        return self.first

    def get_second(self) -&gt; T:
        return self.second

# Example usage
pair = Pair(1, 2)
print(pair.get_first())  # Prints: 1
print(pair.get_second())  # Prints: 2

str_pair = Pair("Hello", "World")
print(str_pair.get_first())  # Prints: Hello
print(str_pair.get_second())  # Prints: World
</pre><p>Generic programming enhances code reusability and flexibility, allowing you to create versatile and efficient programs that can handle various data types with ease.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('f8f52a34-bc82-42bd-95e2-4c7ed20d3b1b', 3, '9f4635ae-bdb4-4ce8-954f-fe7905cf3619', 'LESSON', 'State management with Redux', NULL, '<h3>Lesson: State Management with Redux</h3><p><strong>Objective:</strong> Understand how to manage state in a React application using Redux.</p><p><strong>1. Introduction to Redux:</strong></p><ul><li>Redux is a state management library for JavaScript applications.</li><li>It centralizes the state in a single store and uses actions to update the state.</li></ul><p><strong>2. Core Concepts:</strong></p><ul><li><strong>Store:</strong> Holds the state of the application.</li><li><strong>Actions:</strong> Describe the changes to the state.</li><li><strong>Reducers:</strong> Specify how the state changes in response to actions.</li></ul><p><strong>3. Setting Up Redux:</strong></p><ul><li>Install Redux and React-Redux.</li></ul><pre class="ql-syntax" spellcheck="false">npm install redux react-redux
</pre><p><strong>4. Creating a Redux Store:</strong></p><ul><li>Create a store with a reducer.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">import { createStore } from ''redux'';

const initialState = { count: 0 };

function counterReducer(state = initialState, action) {
    switch (action.type) {
        case ''INCREMENT'':
            return { count: state.count + 1 };
        default:
            return state;
    }
}

const store = createStore(counterReducer);
</pre><p><strong>5. Connecting Redux to React:</strong></p><ul><li>Use the <code>Provider</code> component to pass the store to the React application.</li><li>Use <code>useSelector</code> to access the state and <code>useDispatch</code> to dispatch actions.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">import React from ''react'';
import ReactDOM from ''react-dom'';
import { Provider, useSelector, useDispatch } from ''react-redux'';

function Counter() {
    const count = useSelector(state =&gt; state.count);
    const dispatch = useDispatch();

    return (
        &lt;div&gt;
            &lt;p&gt;Count: {count}&lt;/p&gt;
            &lt;button onClick={() =&gt; dispatch({ type: ''INCREMENT'' })}&gt;Increment&lt;/button&gt;
        &lt;/div&gt;
    );
}

function App() {
    return (
        &lt;Provider store={store}&gt;
            &lt;Counter /&gt;
        &lt;/Provider&gt;
    );
}

ReactDOM.render(&lt;App /&gt;, document.getElementById(''root''));
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a React application with Redux to manage the state of a counter.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;React with Redux&lt;/title&gt;
    &lt;script src="https://unpkg.com/react/umd/react.development.js"&gt;&lt;/script&gt;
    &lt;script src="https://unpkg.com/react-dom/umd/react-dom.development.js"&gt;&lt;/script&gt;
    &lt;script src="https://unpkg.com/redux/dist/redux.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://unpkg.com/react-redux/dist/react-redux.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://unpkg.com/@babel/standalone/babel.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id="root"&gt;&lt;/div&gt;
    &lt;script type="text/babel"&gt;
        const { createStore } = Redux;
        const { Provider, useSelector, useDispatch } = ReactRedux;

        const initialState = { count: 0 };

        function counterReducer(state = initialState, action) {
            switch (action.type) {
                case ''INCREMENT'':
                    return { count: state.count + 1 };
                default:
                    return state;
            }
        }

        const store = createStore(counterReducer);

        function Counter() {
            const count = useSelector(state =&gt; state.count);
            const dispatch = useDispatch();

            return (
                &lt;div&gt;
                    &lt;p&gt;Count: {count}&lt;/p&gt;
                    &lt;button onClick={() =&gt; dispatch({ type: ''INCREMENT'' })}&gt;Increment&lt;/button&gt;
                &lt;/div&gt;
            );
        }

        function App() {
            return (
                &lt;Provider store={store}&gt;
                    &lt;Counter /&gt;
                &lt;/Provider&gt;
            );
        }

        ReactDOM.render(&lt;App /&gt;, document.getElementById(''root''));
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering these JavaScript frameworks and libraries, including setting up development environments, building simple applications with React, and managing state with Redux, you will be equipped to create powerful and maintainable web applications. These lessons provide the foundation for leveraging modern JavaScript</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('98ae9492-3ddd-4326-8e46-0b3665868a18', 0, '807a912f-1d50-4aa0-9a65-cc3869ec70c9', 'LESSON', 'Understanding web components', NULL, '<h3>Lesson: Understanding Web Components</h3><p><strong>Objective:</strong> Get an overview of Web Components and their importance in modern web development.</p><p><strong>1. Definition:</strong> Web Components are a set of web platform APIs that allow you to create custom, reusable HTML tags to use in web pages and web apps. They encapsulate functionality, which ensures that they work independently of the rest of the code.</p><p><strong>2. Key Technologies:</strong></p><ul><li><strong>Custom Elements:</strong> Define new HTML elements.</li><li><strong>Shadow DOM:</strong> Encapsulate the internal structure and styling of web components.</li><li><strong>HTML Templates:</strong> Define reusable HTML templates.</li></ul><p><strong>3. Benefits:</strong></p><ul><li><strong>Reusability:</strong> Create components that can be reused across different projects.</li><li><strong>Encapsulation:</strong> Encapsulate styles and scripts to prevent conflicts with other components.</li><li><strong>Maintainability:</strong> Simplify the structure of your applications, making them easier to maintain.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Explain the concept of Web Components with a simple analogy.</p><p><strong>Solution:</strong> Web Components are like custom LEGO bricks. Just as you can create new shapes and structures with LEGO bricks, you can create new HTML elements with Web Components. Each component is self-contained, ensuring it doesn''t interfere with other components.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('ee61d8fe-60b2-450c-8ba7-8dbecd3b1dc5', 1, '807a912f-1d50-4aa0-9a65-cc3869ec70c9', 'LESSON', 'Custom elements', NULL, '<h3>Lesson: Custom Elements</h3><p><strong>Objective:</strong> Learn how to define and use custom elements in your web applications.</p><p><strong>1. Definition:</strong> Custom elements allow you to define your own HTML tags.</p><p><strong>2. Creating a Custom Element:</strong></p><ul><li>Use the <code>class</code> keyword to create a class that extends <code>HTMLElement</code>.</li><li>Define a constructor to initialize the element.</li><li>Use <code>customElements.define</code> to register the custom element.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">class MyElement extends HTMLElement {
    constructor() {
        super();
        this.innerHTML = ''&lt;p&gt;Hello, World!&lt;/p&gt;'';
    }
}

customElements.define(''my-element'', MyElement);
</pre><p><strong>Usage:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;my-element&gt;&lt;/my-element&gt;
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a custom element that displays "Hello, World!" when added to the HTML.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Custom Elements&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Custom Elements Example&lt;/h1&gt;
    &lt;my-element&gt;&lt;/my-element&gt;
    &lt;script&gt;
        class MyElement extends HTMLElement {
            constructor() {
                super();
                this.innerHTML = ''&lt;p&gt;Hello, World!&lt;/p&gt;'';
            }
        }

        customElements.define(''my-element'', MyElement);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('be04b601-bb45-42d2-a589-065ac3344e18', 2, '807a912f-1d50-4aa0-9a65-cc3869ec70c9', 'LESSON', 'Shadow DOM', NULL, '<h3>Lesson: Shadow DOM</h3><p><strong>Objective:</strong> Understand the concept of the Shadow DOM and how to use it to encapsulate styles and structure within a web component.</p><p><strong>1. Definition:</strong> The Shadow DOM allows you to create a separate DOM tree for your web component, which is encapsulated from the main document DOM.</p><p><strong>2. Benefits:</strong></p><ul><li><strong>Encapsulation:</strong> Ensures that styles and scripts within the Shadow DOM do not affect the main document, and vice versa.</li><li><strong>Scoped Styles:</strong> Apply styles to the component without worrying about global CSS conflicts.</li></ul><p><strong>3. Creating a Shadow DOM:</strong></p><ul><li>Use <code>attachShadow</code> to create a shadow root.</li><li>Add HTML and CSS to the shadow root.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">class MyShadowElement extends HTMLElement {
    constructor() {
        super();
        const shadow = this.attachShadow({ mode: ''open'' });
        shadow.innerHTML = `
            &lt;style&gt;
                p {
                    color: blue;
                }
            &lt;/style&gt;
            &lt;p&gt;Shadow DOM Content&lt;/p&gt;
        `;
    }
}

customElements.define(''my-shadow-element'', MyShadowElement);
</pre><p><strong>Usage:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;my-shadow-element&gt;&lt;/my-shadow-element&gt;
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a custom element that uses the Shadow DOM to encapsulate its styles.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Shadow DOM&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Shadow DOM Example&lt;/h1&gt;
    &lt;my-shadow-element&gt;&lt;/my-shadow-element&gt;
    &lt;script&gt;
        class MyShadowElement extends HTMLElement {
            constructor() {
                super();
                const shadow = this.attachShadow({ mode: ''open'' });
                shadow.innerHTML = `
                    &lt;style&gt;
                        p {
                            color: blue;
                        }
                    &lt;/style&gt;
                    &lt;p&gt;Shadow DOM Content&lt;/p&gt;
                `;
            }
        }

        customElements.define(''my-shadow-element'', MyShadowElement);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('8626977c-7944-4917-bc45-a2660c162814', 3, '807a912f-1d50-4aa0-9a65-cc3869ec70c9', 'LESSON', 'HTML templates', NULL, '<h3>Lesson: HTML Templates</h3><p><strong>Objective:</strong> Learn how to use HTML templates to define reusable HTML snippets that can be used within your web components.</p><p><strong>1. Definition:</strong> HTML templates allow you to define chunks of HTML that are not rendered when the page loads. They can be reused and stamped into the document later.</p><p><strong>2. Creating an HTML Template:</strong></p><ul><li>Use the <code>&lt;template&gt;</code> tag to define the HTML structure.</li><li>Use JavaScript to clone and insert the template content.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;template id="my-template"&gt;
    &lt;style&gt;
        p {
            color: green;
        }
    &lt;/style&gt;
    &lt;p&gt;Template Content&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
    class MyTemplateElement extends HTMLElement {
        constructor() {
            super();
            const template = document.getElementById(''my-template'').content;
            const shadow = this.attachShadow({ mode: ''open'' });
            shadow.appendChild(template.cloneNode(true));
        }
    }

    customElements.define(''my-template-element'', MyTemplateElement);
&lt;/script&gt;
</pre><p><strong>Usage:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;my-template-element&gt;&lt;/my-template-element&gt;
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a custom element that uses an HTML template to define its structure and styles.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;HTML Templates&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;HTML Templates Example&lt;/h1&gt;
    &lt;template id="my-template"&gt;
        &lt;style&gt;
            p {
                color: green;
            }
        &lt;/style&gt;
        &lt;p&gt;Template Content&lt;/p&gt;
    &lt;/template&gt;
    &lt;my-template-element&gt;&lt;/my-template-element&gt;
    &lt;script&gt;
        class MyTemplateElement extends HTMLElement {
            constructor() {
                super();
                const template = document.getElementById(''my-template'').content;
                const shadow = this.attachShadow({ mode: ''open'' });
                shadow.appendChild(template.cloneNode(true));
            }
        }

        customElements.define(''my-template-element'', MyTemplateElement);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering these Web Components concepts, including custom elements, the Shadow DOM, and HTML templates, you will be able to create modular, encapsulated, and reusable components for your web applications. These lessons provide the foundation for building modern and maintainable web interfaces in JavaScript.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c16ad1c0-386b-4298-9dc8-a03ce2d1da58', 0, 'f646e38b-8dd6-4cc6-a17a-187415ee8ba2', 'LESSON', ' Array operations part-1', NULL, '<h3>Introduction to the module on Array Operations</h3><p>All right - things are now getting serious!</p><p>In this module on&nbsp;<strong>Array Operations</strong>&nbsp;- we will learn the concepts required to successfully perform beginner level array construction and manipulation required in programming problems.</p><p>Let''s revise some basic syntax about arrays in the IDE that we came across in "Learn C#".</p><ul><li>Arrays are used to store multiple items in a single variable</li><li>Array items can be accessed by referring to their index.</li><li>array[3] refers to the&nbsp;<span class="ql-formula" data-value="4^{th}">﻿<span contenteditable="false"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>4</mn><mrow><mi>t</mi><mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">4^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.8491em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8491em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span></span>﻿</span>&nbsp;item of the array</li></ul><pre class="ql-syntax" spellcheck="false">// Click on ''Submit'' to view the results
// Click on ''Next'' to proceed
using System;


namespace MyApplication
{
&nbsp; &nbsp; class Program
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; static void Main(string[] args)
&nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int[] sample_array= {5, 3, 2, 4, 1};
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // command for displaying the elements of the array
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(int i=0;i&lt;5;i++)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console.Write(sample_array[i]);
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine();
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // output specific index from the array
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine(sample_array[3]);
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; }
}
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d3a97f97-cc90-4551-b8f1-1587db8b4c7e', 0, '9f6e63e8-a037-4b51-911d-cc4da22189f1', 'LESSON', 'Understanding asynchronous programming', NULL, '<h4>Lesson: Asynchronous JavaScript</h4><p><strong>Objective:</strong> Understand the fundamental concepts of asynchronous programming in JavaScript. Learn about callbacks, promises, and the async/await syntax to handle asynchronous operations effectively.</p><p><br></p><h3>Key Concepts:</h3><h4>Understanding Asynchronous Programming</h4><p><strong>Objective:</strong> Learn the basics of asynchronous programming and understand why it is essential in JavaScript.</p><p><strong>1. Definition:</strong> Asynchronous programming allows your program to initiate potentially long-running tasks and still be able to respond to other events while awaiting results.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">console.log(''Start'');

setTimeout(() =&gt; {
    console.log(''This is an asynchronous message'');
}, 2000);

console.log(''End'');
</pre><p><strong>Explanation:</strong></p><ul><li><code>console.log(''Start'')</code> is executed first.</li><li><code>setTimeout</code> schedules an asynchronous operation to print a message after 2 seconds.</li><li><code>console.log(''End'')</code> is executed immediately after the first log, without waiting for the <code>setTimeout</code> operation.</li></ul><p><strong>2. Why Asynchronous Programming is Important:</strong></p><ul><li>Enhances performance by preventing blocking operations.</li><li>Allows multiple operations to be handled concurrently.</li><li>Essential for operations like network requests, file I/O, and timers.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Demonstrate asynchronous behavior using a simple timer.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Asynchronous Programming&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Asynchronous Example&lt;/h1&gt;
    &lt;script&gt;
        console.log(''Start'');
        setTimeout(() =&gt; {
            console.log(''This is an asynchronous message'');
        }, 2000);
        console.log(''End'');
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('736310b9-cd2f-45b8-afbd-77be269931ae', 0, '4710e388-7569-4d36-ac26-4588d0da9643', 'LESSON', 'What is JavaScript?', NULL, '<h4>Lesson: What is JavaScript?</h4><p><strong>Objective:</strong> Understand the fundamental concepts of JavaScript, its history, and its role in modern web development. This lesson provides a comprehensive overview of what JavaScript is and why it is an essential tool for web developers.</p><h3>Key Concepts:</h3><p><strong>1. Introduction to JavaScript:</strong></p><p>JavaScript is a high-level, interpreted programming language that is primarily used to create interactive and dynamic content on web pages. It is one of the core technologies of the World Wide Web, alongside HTML and CSS.</p><p><strong>Key Points:</strong></p><ul><li><strong>High-Level Language:</strong> JavaScript abstracts away most of the complex details of the computer, making it easier to write and understand.</li><li><strong>Interpreted Language:</strong> JavaScript code is executed line-by-line by the web browser, without the need for prior compilation.</li><li><strong>Dynamic and Interactive:</strong> JavaScript allows developers to create dynamic web pages that can respond to user input, change content, and interact with external servers.</li></ul><p><strong>2. History of JavaScript:</strong></p><p>JavaScript was created in 1995 by Brendan Eich while he was working at Netscape Communications Corporation. It was originally named Mocha, then renamed to LiveScript, and finally to JavaScript.</p><p><strong>Key Milestones:</strong></p><ul><li><strong>1995:</strong> Creation of JavaScript by Brendan Eich.</li><li><strong>1996:</strong> Adoption by Microsoft, leading to the creation of JScript.</li><li><strong>1997:</strong> Standardization of JavaScript under the name ECMAScript by ECMA International.</li><li><strong>2009:</strong> Introduction of ECMAScript 5 (ES5) with significant improvements.</li><li><strong>2015:</strong> Release of ECMAScript 6 (ES6), also known as ECMAScript 2015, introducing major features like classes, modules, and arrow functions.</li></ul><p><strong>3. Role of JavaScript in Web Development:</strong></p><p>JavaScript is a versatile language used for both client-side and server-side development.</p><p><strong>Client-Side Development:</strong></p><ul><li>JavaScript runs in the web browser, providing interactivity to web pages.</li><li>It can manipulate HTML and CSS to update the content and style of a web page dynamically.</li><li>Common uses include form validation, creating animations, and handling events like clicks and key presses.</li></ul><p><strong>Server-Side Development:</strong></p><ul><li>With the advent of Node.js, JavaScript can also run on the server, allowing developers to build entire web applications using JavaScript alone.</li><li>Server-side JavaScript can handle database operations, user authentication, and server logic.</li></ul><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9fc1ede2-8417-4780-9634-6b16d999efe1', 0, '76fc9f87-6f51-4416-a1f7-ee1426e46688', 'LESSON', 'Declaring Variables with `var`, `let`, and `const`', NULL, '<h4>Lesson: Declaring Variables with <code>var</code>, <code>let</code>, and <code>const</code></h4><p><strong>Objective:</strong> Understand how to declare variables in JavaScript using <code>var</code>, <code>let</code>, and <code>const</code>. Learn the differences between these three keywords and when to use each.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Declaring Variables with </strong><code><strong>var</strong></code><strong>:</strong></p><p>The <code>var</code> keyword is used to declare a variable. It has function scope, meaning it is scoped to the function in which it is declared. If declared outside any function, it is globally scoped.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function exampleVar() {
    var x = 10;
    if (true) {
        var x = 20; // Same variable!
        console.log(x); // 20
    }
    console.log(x); // 20
}

exampleVar();
</pre><p><strong>Explanation:</strong></p><ul><li>The variable <code>x</code> is declared with <code>var</code> inside the function.</li><li>The inner <code>var x = 20</code> statement re-declares and updates the same <code>x</code> variable.</li></ul><p><strong>2. Declaring Variables with </strong><code><strong>let</strong></code><strong>:</strong></p><p>The <code>let</code> keyword is used to declare a block-scoped variable, meaning it is only available within the block it is defined in.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function exampleLet() {
    let y = 10;
    if (true) {
        let y = 20; // Different variable
        console.log(y); // 20
    }
    console.log(y); // 10
}

exampleLet();
</pre><p><strong>Explanation:</strong></p><ul><li>The variable <code>y</code> is declared with <code>let</code> inside the function.</li><li>The inner <code>let y = 20</code> statement declares a new <code>y</code> variable scoped to the <code>if</code> block.</li></ul><p><strong>3. Declaring Variables with </strong><code><strong>const</strong></code><strong>:</strong></p><p>The <code>const</code> keyword is used to declare a block-scoped, read-only constant. Once declared, its value cannot be reassigned.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function exampleConst() {
    const z = 10;
    console.log(z); // 10
    // z = 20; // Error: Assignment to constant variable
}

exampleConst();
</pre><p><strong>Explanation:</strong></p><ul><li>The variable <code>z</code> is declared with <code>const</code> and cannot be reassigned.</li></ul><p><strong>When to Use </strong><code><strong>var</strong></code><strong>, </strong><code><strong>let</strong></code><strong>, and </strong><code><strong>const</strong></code><strong>:</strong></p><ul><li><code><strong>var</strong></code>: Use for variables that need to be function-scoped and when you are working in older JavaScript codebases.</li><li><code><strong>let</strong></code>: Use for variables that need block-scoping and can be reassigned.</li><li><code><strong>const</strong></code>: Use for variables that should not be reassigned after their initial value is set.</li></ul><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('74bd863e-51f4-4d30-adc2-d40a56bb05e4', 1, '76fc9f87-6f51-4416-a1f7-ee1426e46688', 'LESSON', 'Understanding Data Types: Number, String, Boolean, Null, Undefined, Symbol', NULL, '<h4>Lesson: Understanding Data Types: Number, String, Boolean, Null, Undefined, Symbol</h4><p><strong>Objective:</strong> Learn about the different data types available in JavaScript, including Number, String, Boolean, Null, Undefined, and Symbol. Understand how to use each data type in your code.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Number:</strong></p><p>The <code>Number</code> data type represents both integer and floating-point numbers.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let integer = 42;
let float = 3.14;

console.log(integer); // 42
console.log(float);   // 3.14
</pre><p><strong>2. String:</strong></p><p>The <code>String</code> data type represents text. Strings can be created using single quotes, double quotes, or backticks.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let singleQuoteString = ''Hello, World!'';
let doubleQuoteString = "Hello, World!";
let backtickString = `Hello, World!`;

console.log(singleQuoteString); // Hello, World!
console.log(doubleQuoteString); // Hello, World!
console.log(backtickString);    // Hello, World!
</pre><p><strong>3. Boolean:</strong></p><p>The <code>Boolean</code> data type represents a logical entity and can have two values: <code>true</code> and <code>false</code>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let isJavaScriptFun = true;
let isCoffeeHot = false;

console.log(isJavaScriptFun); // true
console.log(isCoffeeHot);     // false
</pre><p><strong>4. Null:</strong></p><p>The <code>null</code> value represents the intentional absence of any object value.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let emptyValue = null;

console.log(emptyValue); // null
</pre><p><strong>5. Undefined:</strong></p><p>A variable that has been declared but has not yet been assigned a value is <code>undefined</code>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let notAssigned;

console.log(notAssigned); // undefined
</pre><p><strong>6. Symbol:</strong></p><p>A <code>Symbol</code> is a unique and immutable primitive value and may be used as the key of an object property.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let symbol1 = Symbol(''description'');
let symbol2 = Symbol(''description'');

console.log(symbol1 === symbol2); // false
</pre><p><strong>Explanation:</strong></p><ul><li>Each symbol is unique, even if created with the same description.</li></ul><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('98f68857-e7dd-4542-84b2-a228a492ba09', 2, '76fc9f87-6f51-4416-a1f7-ee1426e46688', 'LESSON', 'Type Conversion and Coercion', NULL, '<h4>Lesson: Type Conversion and Coercion</h4><p><strong>Objective:</strong> Understand how to convert between different data types in JavaScript and how type coercion works. Learn the differences between explicit and implicit conversion.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Explicit Conversion:</strong></p><p>Explicit conversion involves using functions to convert values from one type to another.</p><p><strong>Examples:</strong></p><pre class="ql-syntax" spellcheck="false">// String to Number
let str = "123";
let num = Number(str);

console.log(num); // 123
console.log(typeof num); // "number"

// Number to String
let number = 456;
let string = String(number);

console.log(string); // "456"
console.log(typeof string); // "string"

// Boolean to String
let bool = true;
let boolString = String(bool);

console.log(boolString); // "true"
console.log(typeof boolString); // "string"
</pre><p><strong>2. Implicit Conversion:</strong></p><p>Implicit conversion, or type coercion, is performed automatically by JavaScript.</p><p><strong>Examples:</strong></p><pre class="ql-syntax" spellcheck="false">// Number to String
let result1 = "The answer is " + 42;
console.log(result1); // "The answer is 42"

// String to Number
let result2 = "10" - 5;
console.log(result2); // 5

// Boolean to Number
let result3 = true + 1;
console.log(result3); // 2

// Undefined to Number
let result4 = undefined * 10;
console.log(result4); // NaN
</pre><p><strong>3. Checking Data Types:</strong></p><p>Use the <code>typeof</code> operator to check the type of a value.</p><p><strong>Examples:</strong></p><pre class="ql-syntax" spellcheck="false">console.log(typeof 42);           // "number"
console.log(typeof "hello");      // "string"
console.log(typeof true);         // "boolean"
console.log(typeof undefined);    // "undefined"
console.log(typeof null);         // "object" (this is a known quirk in JavaScript)
console.log(typeof Symbol());     // "symbol"
console.log(typeof {});           // "object"
console.log(typeof []);           // "object"
console.log(typeof function(){}); // "function"
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that takes a user input, converts it to a number, and performs an arithmetic operation.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Type Conversion Example&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Type Conversion in JavaScript&lt;/h1&gt;
    &lt;input type="text" id="userInput" placeholder="Enter a number"&gt;
    &lt;button onclick="performOperation()"&gt;Submit&lt;/button&gt;
    &lt;p id="result"&gt;&lt;/p&gt;

    &lt;script&gt;
        function performOperation() {
            let input = document.getElementById(''userInput'').value;
            let number = Number(input);
            let result = number + 10;
            document.getElementById(''result'').innerText = `The result is: ${result}`;
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><strong>Explanation:</strong></p><ul><li>The HTML page contains an input field and a button.</li><li>When the button is clicked, the <code>performOperation</code> function converts the input to a number, adds 10 to it, and displays the result.</li></ul><p>By mastering variables, data types, and type conversion in JavaScript, you will be able to handle a wide range of programming tasks with ease and precision. These lessons provide the foundation for writing robust and efficient JavaScript code.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d7f54f93-cb6b-4a36-9aad-3d75a67bccdf', 3, '76fc9f87-6f51-4416-a1f7-ee1426e46688', 'VIDEO', 'JavaScript for Beginners #3 - Variables and Data Types', NULL, '', 'https://www.youtube.com/watch?v=XWo3YUblZxk');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('bfbfc990-f0aa-4d95-92e6-d0ee4204bede', 0, 'dbb26f3a-5184-49db-8d89-0e30898a470f', 'LESSON', 'Introduction to One-dimensional Arrays', NULL, '<h3>Lesson: Introduction to One-dimensional Arrays</h3><p><strong>Objective:</strong> Learn the fundamentals of one-dimensional arrays, their importance, and how to use them in programming. Understand the basic syntax and operations that can be performed on arrays.</p><h3>Key Concepts:</h3><h4>What is an Array?</h4><p><strong>1. Definition:</strong> An array is a collection of elements, all of the same type, stored in contiguous memory locations. It allows you to store multiple values in a single variable.</p><p><strong>2. Importance:</strong></p><ul><li><strong>Efficient Storage:</strong> Arrays provide an efficient way to store and access a large number of elements.</li><li><strong>Easy Access:</strong> Elements can be accessed using an index, making it easy to retrieve or update values.</li><li><strong>Memory Management:</strong> Arrays are stored in contiguous memory locations, which can improve performance due to better cache utilization.</li></ul><h4>Basic Syntax</h4><p><strong>1. Declaration and Initialization:</strong> To declare an array, specify the type of elements followed by square brackets and the array name. Arrays can be initialized at the time of declaration.</p><p><strong>Examples:</strong></p><p><strong>In C++:</strong></p><pre class="ql-syntax" spellcheck="false">int numbers[5]; // Declaration
int numbers[5] = {1, 2, 3, 4, 5}; // Declaration and initialization
</pre><p><strong>In Java:</strong></p><pre class="ql-syntax" spellcheck="false">int[] numbers = new int[5]; // Declaration
int[] numbers = {1, 2, 3, 4, 5}; // Declaration and initialization
</pre><p><strong>In Python:</strong></p><pre class="ql-syntax" spellcheck="false">numbers = [1, 2, 3, 4, 5] # Declaration and initialization
</pre><h4>Accessing Array Elements</h4><p><strong>1. Indexing:</strong> Array elements are accessed using their index, which starts from 0. To access the nth element, use the index n-1.</p><p><strong>Examples:</strong></p><p><strong>In C++:</strong></p><pre class="ql-syntax" spellcheck="false">int firstNumber = numbers[0]; // Accessing the first element
</pre><p><strong>In Java:</strong></p><pre class="ql-syntax" spellcheck="false">int firstNumber = numbers[0]; // Accessing the first element
</pre><p><strong>In Python:</strong></p><pre class="ql-syntax" spellcheck="false">first_number = numbers[0] # Accessing the first element
</pre><h4>Common Operations</h4><p><strong>1. Traversing an Array:</strong> Iterate through the array elements using loops.</p><p><strong>Examples:</strong></p><p><strong>In C++:</strong></p><pre class="ql-syntax" spellcheck="false">for(int i = 0; i &lt; 5; i++) {
    cout &lt;&lt; numbers[i] &lt;&lt; " ";
}
</pre><p><strong>In Java:</strong></p><pre class="ql-syntax" spellcheck="false">for(int i = 0; i &lt; numbers.length; i++) {
    System.out.print(numbers[i] + " ");
}
</pre><p><strong>In Python:</strong></p><pre class="ql-syntax" spellcheck="false">for number in numbers:
    print(number, end=" ")
</pre><p><strong>2. Updating Elements:</strong> Change the value of an array element by accessing it via its index.</p><p><strong>Examples:</strong></p><p><strong>In C++:</strong></p><pre class="ql-syntax" spellcheck="false">numbers[0] = 10; // Update the first element to 10
</pre><p><strong>In Java:</strong></p><pre class="ql-syntax" spellcheck="false">numbers[0] = 10; // Update the first element to 10
</pre><p><strong>In Python:</strong></p><pre class="ql-syntax" spellcheck="false">numbers[0] = 10 # Update the first element to 10
</pre><p><strong>3. Finding the Length:</strong> Determine the number of elements in the array.</p><p><strong>Examples:</strong></p><p><strong>In C++:</strong></p><pre class="ql-syntax" spellcheck="false">int length = sizeof(numbers) / sizeof(numbers[0]); // Calculate the length of the array
</pre><p><strong>In Java:</strong></p><pre class="ql-syntax" spellcheck="false">int length = numbers.length; // Get the length of the array
</pre><p><strong>In Python:</strong></p><pre class="ql-syntax" spellcheck="false">length = len(numbers) # Get the length of the array
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program to declare an array, initialize it, and perform the following operations:</p><ol><li>Print all elements.</li><li>Update the second element.</li><li>Print the updated array.</li><li>Print the length of the array.</li></ol><p><strong>Solution:</strong></p><p><strong>In C++:</strong></p><pre class="ql-syntax" spellcheck="false">#include &lt;iostream&gt;
using namespace std;

int main() {
    int numbers[5] = {1, 2, 3, 4, 5};

    // Print all elements
    for(int i = 0; i &lt; 5; i++) {
        cout &lt;&lt; numbers[i] &lt;&lt; " ";
    }
    cout &lt;&lt; endl;

    // Update the second element
    numbers[1] = 10;

    // Print the updated array
    for(int i = 0; i &lt; 5; i++) {
        cout &lt;&lt; numbers[i] &lt;&lt; " ";
    }
    cout &lt;&lt; endl;

    // Print the length of the array
    int length = sizeof(numbers) / sizeof(numbers[0]);
    cout &lt;&lt; "Length of the array: " &lt;&lt; length &lt;&lt; endl;

    return 0;
}
</pre><p><strong>In Java:</strong></p><pre class="ql-syntax" spellcheck="false">public class ArrayExample {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};

        // Print all elements
        for(int i = 0; i &lt; numbers.length; i++) {
            System.out.print(numbers[i] + " ");
        }
        System.out.println();

        // Update the second element
        numbers[1] = 10;

        // Print the updated array
        for(int i = 0; i &lt; numbers.length; i++) {
            System.out.print(numbers[i] + " ");
        }
        System.out.println();

        // Print the length of the array
        System.out.println("Length of the array: " + numbers.length);
    }
}
</pre><p><strong>In Python:</strong></p><pre class="ql-syntax" spellcheck="false"># Declare and initialize the array
numbers = [1, 2, 3, 4, 5]

# Print all elements
for number in numbers:
    print(number, end=" ")
print()

# Update the second element
numbers[1] = 10

# Print the updated array
for number in numbers:
    print(number, end=" ")
print()

# Print the length of the array
print("Length of the array:", len(numbers))
</pre><p>By understanding and mastering one-dimensional arrays, you will be equipped to handle a variety of programming tasks that require efficient data storage and access. This lesson provides a solid foundation for working with arrays in different programming languages.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b36020d5-a183-47df-bc17-677110846414', 1, 'dbb26f3a-5184-49db-8d89-0e30898a470f', 'CODE', 'List odd divisor', 'b6484e21-6937-489c-b031-b71767994741', 'List odd divisor', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c410274a-9454-46a5-ac06-99d74787db7b', 2, 'dbb26f3a-5184-49db-8d89-0e30898a470f', 'CODE', 'Sum of an array', 'b6484e21-6937-489c-b031-b71767994736', 'Sum of an array', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('fc94ef06-4608-4f34-8f3f-696bfef9e00e', 3, 'dbb26f3a-5184-49db-8d89-0e30898a470f', 'CODE', 'Robber', 'b6484e21-6937-489c-b031-b71767994738', 'Robber', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9da77875-d5b0-4f3b-91e1-b7fe20fe4aa7', 4, 'dbb26f3a-5184-49db-8d89-0e30898a470f', 'CODE', 'Three sum closest', 'b6484e21-6937-489c-b031-b71767994739', 'Three sum closest', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a9c1d919-fe8f-4eea-a24c-10ff71372481', 0, '2f316c08-6f46-4fa8-8aa6-c02602556802', 'LESSON', ' Introducing printing - Console.WriteLine()', NULL, '<h4>Lesson: Introducing Printing - Console.WriteLine()</h4><p><strong>Objective:</strong> Learn how to use the <code>Console.WriteLine()</code> method to output text to the console in C#. This is the foundational step for displaying information in a C# application.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Using Console.WriteLine():</strong></li><li class="ql-indent-1">The <code>Console.WriteLine()</code> method is used to print a line of text to the console.</li><li class="ql-indent-1">It automatically appends a newline character at the end of the output.</li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Hello, World!");
    }
}
</pre><ol><li><strong>Printing Variables:</strong></li><li class="ql-indent-1">You can print the value of variables using <code>Console.WriteLine()</code>.</li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int number = 42;
string message = "The answer is";
Console.WriteLine(message);
Console.WriteLine(number);
</pre><ol><li><strong>Formatting Output:</strong></li><li class="ql-indent-1"><strong><span class="ql-cursor">﻿</span></strong>You can format strings using placeholders.</li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int number = 42;
Console.WriteLine("The answer is {0}", number);
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b25818f0-bf60-4614-a1e0-6b5ccedf6b1d', 1, '2f316c08-6f46-4fa8-8aa6-c02602556802', 'LESSON', ' Printing on multiple lines', NULL, '<h4>Lesson: Printing on Multiple Lines</h4><p><strong>Objective:</strong> Learn how to output multiple lines of text using multiple <code>Console.WriteLine()</code> statements and how to handle newline characters within a single <code>Console.WriteLine()</code>.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Multiple Console.WriteLine() Statements:</strong></li><li class="ql-indent-1">Use multiple <code>Console.WriteLine()</code> statements to print text on different lines.</li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">Console.WriteLine("Hello");
Console.WriteLine("World");
</pre><ol><li><strong>Using Newline Characters:</strong></li><li class="ql-indent-1">Use <code>\n</code> to insert a newline character within a single <code>Console.WriteLine()</code> statement.</li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">Console.WriteLine("Hello\nWorld");
</pre><ol><li><strong>Combining Strings:</strong></li><li class="ql-indent-1"><strong><span class="ql-cursor">﻿</span></strong>Concatenate strings with <code>+</code> to create multi-line outputs.</li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">string part1 = "Hello";
string part2 = "World";
Console.WriteLine(part1 + "\n" + part2);
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9ea48423-1c97-4f56-a60a-ed1bdfc5caac', 2, '2f316c08-6f46-4fa8-8aa6-c02602556802', 'LESSON', 'Multiple prints using single Console.WriteLine()', NULL, '<h4>Lesson: Multiple Prints Using Single Console.WriteLine()</h4><p><strong>Objective:</strong> Learn how to print multiple variables or values using a single <code>Console.WriteLine()</code> statement for more concise and readable code.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Using Placeholders:</strong></li><li class="ql-indent-1">Use <code>{}</code> placeholders to include multiple variables in a single <code>Console.WriteLine()</code>.</li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int age = 25;
string name = "Alice";
Console.WriteLine("Name: {0}, Age: {1}", name, age);
</pre><ol><li><strong>String Interpolation (C# 6.0+):</strong></li><li class="ql-indent-1">Use string interpolation for a more readable and concise syntax.</li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int age = 25;
string name = "Alice";
Console.WriteLine($"Name: {name}, Age: {age}");
</pre><ol><li><strong>Combining Strings:</strong></li><li class="ql-indent-1"><strong><span class="ql-cursor">﻿</span></strong>Concatenate multiple strings and variables in a single <code>Console.WriteLine()</code>.</li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">string city = "New York";
string country = "USA";
Console.WriteLine("City: " + city + ", Country: " + country);
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d9382ffd-79e0-483b-9c85-b87684bdfff2', 3, '2f316c08-6f46-4fa8-8aa6-c02602556802', 'LESSON', 'Math Operators and overall code structure', NULL, '<h4>Lesson: Math Operators and Overall Code Structure</h4><p><strong>Objective:</strong> Learn how to use basic math operators in C# and understand the overall structure of a simple C# program.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Basic Math Operators:</strong></li></ol><ul><li class="ql-indent-1">Addition (<code>+</code>), Subtraction (<code>-</code>), Multiplication (<code>*</code>), Division (<code>/</code>), Modulus (<code>%</code>).</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int a = 10;
int b = 5;
Console.WriteLine("Addition: " + (a + b));
Console.WriteLine("Subtraction: " + (a - b));
Console.WriteLine("Multiplication: " + (a * b));
Console.WriteLine("Division: " + (a / b));
Console.WriteLine("Modulus: " + (a % b));
</pre><ol><li><strong>Order of Operations:</strong></li></ol><ul><li class="ql-indent-1">Follow the standard mathematical order of operations (PEMDAS/BODMAS).</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int result = 10 + 5 * 2;
Console.WriteLine("Result: " + result);  // Output: 20
</pre><ol><li><strong>Overall Code Structure:</strong></li></ol><ul><li class="ql-indent-1">Understand the basic structure of a C# program, including the <code>using</code> directives, namespace, class, and <code>Main</code> method.</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">using System;

namespace BasicMathExample
{
    class Program
    {
        static void Main(string[] args)
        {
            int a = 10;
            int b = 5;
            Console.WriteLine("Addition: " + (a + b));
            Console.WriteLine("Subtraction: " + (a - b));
            Console.WriteLine("Multiplication: " + (a * b));
            Console.WriteLine("Division: " + (a / b));
            Console.WriteLine("Modulus: " + (a % b));
        }
    }
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('8e0262a9-2d8c-447b-be19-dd9fd3b9f760', 4, '2f316c08-6f46-4fa8-8aa6-c02602556802', 'VIDEO', 'C# output 💬', NULL, '', 'https://www.youtube.com/watch?v=b8BUFfgyjK4');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('683df3b9-d9ae-4c14-9e45-5cd54000409e', 5, '2f316c08-6f46-4fa8-8aa6-c02602556802', 'CODE', 'Sum of two integer', 'b6484e21-6937-489c-b031-b71767994221', 'Sum of two integer', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('81c7d910-07b3-47fc-ac1f-0293f571b8bd', 0, '266211ad-b8ac-4d99-8618-e5567b467067', 'LESSON', 'Introduction to Variables and Data Types', NULL, '<h4>Lesson: Introduction to Variables and Data Types in C#</h4><p><strong>Objective:</strong> Understand the fundamentals of variables and data types in C#. Learn how to declare, initialize, and use variables, and understand the various data types available in C#.</p><h3>Key Concepts:</h3><p><strong>1. What are Variables?</strong></p><p>Variables are containers for storing data values. Each variable in C# has a specific type, which determines the size and layout of the variable''s memory, the range of values that can be stored, and the set of operations that can be applied.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number;
string name;
</pre><p><strong>2. Declaring and Initializing Variables</strong></p><ul><li><strong>Declaration:</strong> Declaring a variable involves specifying the type and name of the variable.</li><li><strong>Initialization:</strong> Initializing a variable involves assigning a value to the declared variable.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int age = 25;          // Declaration and initialization
string greeting = "Hello, World!";  // Declaration and initialization
</pre><p><strong>3. Data Types in C#</strong></p><p>C# is a strongly typed language, meaning that each variable must be declared with a data type. Here are the main categories of data types:</p><ul><li><strong>Primitive Data Types:</strong></li><li class="ql-indent-1"><code>int</code>: Integer type</li><li class="ql-indent-1"><code>float</code>: Floating-point type</li><li class="ql-indent-1"><code>double</code>: Double-precision floating-point type</li><li class="ql-indent-1"><code>char</code>: Character type</li><li class="ql-indent-1"><code>bool</code>: Boolean type</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int age = 30;
float temperature = 36.6f;
double pi = 3.14159;
char grade = ''A'';
bool isActive = true;
</pre><ul><li><strong>String Data Type:</strong></li><li class="ql-indent-1">Represents a sequence of characters.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">string name = "Alice";
</pre><ul><li><strong>Var Keyword:</strong></li><li class="ql-indent-1"><code>var</code> is used for implicitly typed local variables.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">var count = 10;  // The type of count is inferred as int
</pre><p><strong>4. Type Conversion</strong></p><p>Type conversion is the process of converting a value from one data type to another. There are two types of conversions:</p><ul><li><strong>Implicit Conversion:</strong> Automatically performed by the compiler when there is no risk of data loss.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int num = 10;
double numDouble = num;  // Implicit conversion from int to double
</pre><ul><li><strong>Explicit Conversion:</strong> Requires a cast operator because there might be data loss.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">double pi = 3.14;
int intPi = (int)pi;  // Explicit conversion from double to int
</pre><p><strong>5. Constants</strong></p><p>Constants are variables whose value cannot be changed once assigned. Use the <code>const</code> keyword to declare a constant.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const int maxScore = 100;
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that declares and initializes different types of variables and prints their values.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace VariableExample
{
    class Program
    {
        static void Main(string[] args)
        {
            // Primitive Data Types
            int age = 25;
            float temperature = 36.6f;
            double pi = 3.14159;
            char grade = ''A'';
            bool isActive = true;

            // String Data Type
            string name = "Alice";

            // Var Keyword
            var count = 10;

            // Constants
            const int maxScore = 100;

            // Printing the values
            Console.WriteLine("Age: " + age);
            Console.WriteLine("Temperature: " + temperature);
            Console.WriteLine("Pi: " + pi);
            Console.WriteLine("Grade: " + grade);
            Console.WriteLine("Is Active: " + isActive);
            Console.WriteLine("Name: " + name);
            Console.WriteLine("Count: " + count);
            Console.WriteLine("Max Score: " + maxScore);
        }
    }
}
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9e4402ba-48f9-468e-a8e6-1a6b55d1b70a', 1, '266211ad-b8ac-4d99-8618-e5567b467067', 'VIDEO', 'C# variables ✖️', NULL, '', 'https://www.youtube.com/watch?v=IxBMVztdlr4');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('bf9e8781-17ef-45e7-a0ff-4aa7e78cc636', 2, '266211ad-b8ac-4d99-8618-e5567b467067', 'CODE', 'Calculate sum of cubes', 'b6484e21-6937-489c-b031-b71767994756', 'Calculate sum of cubes', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('e926b98c-ac29-4ac5-91c4-808d428145d2', 0, '1d9b2a8f-e543-4c4d-ae65-b82a22e234b1', 'LESSON', 'Introduction to Strings', NULL, '<h4>Lesson: Introduction to Strings in C#</h4><p><strong>Objective:</strong> Understand the fundamentals of strings in C#. Learn how to declare, initialize, and manipulate strings, and explore common string methods and properties.</p><h3>Key Concepts:</h3><p><strong>1. What are Strings?</strong></p><p>A string is a sequence of characters. In C#, strings are represented by the <code>string</code> data type, which is an alias for the <code>System.String</code> class.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">string greeting = "Hello, World!";
</pre><p><strong>2. Declaring and Initializing Strings</strong></p><p>Strings can be declared and initialized in various ways, including using string literals and concatenation.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">string greeting = "Hello, World!";
string name = "Alice";
string message = greeting + " My name is " + name + ".";
</pre><p><strong>3. String Properties and Methods</strong></p><p>C# provides a rich set of properties and methods for string manipulation. Some commonly used properties and methods include:</p><ul><li><strong>Length Property:</strong></li><li class="ql-indent-1">Returns the number of characters in the string.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">string greeting = "Hello, World!";
int length = greeting.Length;  // Returns 13
</pre><ul><li><strong>Substring Method:</strong></li><li class="ql-indent-1">Extracts a substring from the string.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">string greeting = "Hello, World!";
string sub = greeting.Substring(7, 5);  // Returns "World"
</pre><ul><li><strong>ToUpper and ToLower Methods:</strong></li><li class="ql-indent-1">Converts the string to uppercase or lowercase.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">string greeting = "Hello, World!";
string upper = greeting.ToUpper();  // Returns "HELLO, WORLD!"
string lower = greeting.ToLower();  // Returns "hello, world!"
</pre><ul><li><strong>Trim Method:</strong></li><li class="ql-indent-1">Removes leading and trailing whitespace from the string.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">string message = "  Hello, World!  ";
string trimmed = message.Trim();  // Returns "Hello, World!"
</pre><ul><li><strong>Replace Method:</strong></li><li class="ql-indent-1">Replaces all occurrences of a specified string or character in the original string.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">string greeting = "Hello, World!";
string newGreeting = greeting.Replace("World", "C#");  // Returns "Hello, C#!"
</pre><ul><li><strong>Contains Method:</strong></li><li class="ql-indent-1">Checks if a substring exists within the string.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">string greeting = "Hello, World!";
bool containsWorld = greeting.Contains("World");  // Returns true
</pre><p><strong>4. String Interpolation</strong></p><p>String interpolation provides a convenient way to format strings using embedded expressions.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">string name = "Alice";
int age = 25;
string message = $"My name is {name} and I am {age} years old.";
</pre><p><strong>5. Escape Sequences</strong></p><p>Escape sequences are used to represent special characters within strings.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">string newline = "This is the first line.\nThis is the second line.";
string tabbed = "Name:\tAlice";
string quote = "She said, \"Hello!\"";
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that demonstrates various string operations, including concatenation, substring extraction, case conversion, trimming, replacing, and checking for substrings.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace StringExample
{
    class Program
    {
        static void Main(string[] args)
        {
            // String Declaration and Initialization
            string greeting = "Hello, World!";
            string name = "Alice";
            string message = greeting + " My name is " + name + ".";

            // String Properties and Methods
            Console.WriteLine("Original message: " + message);
            Console.WriteLine("Length: " + message.Length);
            Console.WriteLine("Substring: " + message.Substring(7, 5));
            Console.WriteLine("Uppercase: " + message.ToUpper());
            Console.WriteLine("Lowercase: " + message.ToLower());
            Console.WriteLine("Trimmed: " + message.Trim());
            Console.WriteLine("Replaced: " + message.Replace("World", "C#"));
            Console.WriteLine("Contains ''Alice'': " + message.Contains("Alice"));

            // String Interpolation
            int age = 25;
            string interpolatedMessage = $"My name is {name} and I am {age} years old.";
            Console.WriteLine("Interpolated message: " + interpolatedMessage);

            // Escape Sequences
            string newline = "This is the first line.\nThis is the second line.";
            string tabbed = "Name:\tAlice";
            string quote = "She said, \"Hello!\"";
            Console.WriteLine("Newline:\n" + newline);
            Console.WriteLine("Tabbed: " + tabbed);
            Console.WriteLine("Quote: " + quote);
        }
    }
}
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6aff756e-e634-4bfd-9b68-dc2422ead81d', 1, '1d9b2a8f-e543-4c4d-ae65-b82a22e234b1', 'VIDEO', 'Strings in C#', NULL, '', 'https://www.youtube.com/watch?v=cTY2x8tfYN4');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6c037e21-7a38-4bc7-afd5-c6467442b988', 0, 'aa21ea7c-eee7-482e-80d1-39d3fe5b6da4', 'LESSON', 'Introducing taking inputs - Console.ReadLine()', NULL, '<h4>Lesson: Introducing Taking Inputs - Console.ReadLine()</h4><p><strong>Objective:</strong> Learn how to use the <code>Console.ReadLine()</code> method to take input from the user in a C# program. Understanding how to handle user input is essential for creating interactive applications.</p><h3>Key Concepts:</h3><p><strong>1. What is Console.ReadLine()?</strong></p><p><code>Console.ReadLine()</code> is a method in C# that reads the next line of characters from the standard input stream. It allows you to capture user input as a string.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Please enter your name:");
        string name = Console.ReadLine();
        Console.WriteLine("Hello, " + name + "!");
    }
}
</pre><p><strong>2. Reading Different Data Types</strong></p><p>While <code>Console.ReadLine()</code> reads input as a string, you can convert this input to other data types as needed.</p><ul><li><strong>Reading an Integer:</strong></li></ul><pre class="ql-syntax" spellcheck="false">Console.WriteLine("Please enter your age:");
string input = Console.ReadLine();
int age = int.Parse(input);
Console.WriteLine("You are " + age + " years old.");
</pre><ul><li><strong>Reading a Double:</strong></li></ul><pre class="ql-syntax" spellcheck="false">Console.WriteLine("Please enter the price:");
string input = Console.ReadLine();
double price = double.Parse(input);
Console.WriteLine("The price is " + price);
</pre><ul><li><strong>Handling Conversion Errors:</strong> It''s essential to handle potential errors that may occur during type conversion using <code>TryParse</code>.</li><li><strong>Example:</strong></li></ul><pre class="ql-syntax" spellcheck="false">Console.WriteLine("Please enter your age:");
string input = Console.ReadLine();
if (int.TryParse(input, out int age))
{
    Console.WriteLine("You are " + age + " years old.");
}
else
{
    Console.WriteLine("Invalid input. Please enter a valid number.");
}
</pre><p><strong>3. Using Variables to Store User Input</strong></p><p>You can use variables to store and manipulate the input received from the user.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">Console.WriteLine("Enter your first name:");
string firstName = Console.ReadLine();

Console.WriteLine("Enter your last name:");
string lastName = Console.ReadLine();

string fullName = firstName + " " + lastName;
Console.WriteLine("Your full name is: " + fullName);
</pre><p><strong>4. Combining Inputs and Outputs</strong></p><p>You can combine multiple inputs and outputs to create interactive and dynamic programs.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">Console.WriteLine("Enter the first number:");
string input1 = Console.ReadLine();
int number1 = int.Parse(input1);

Console.WriteLine("Enter the second number:");
string input2 = Console.ReadLine();
int number2 = int.Parse(input2);

int sum = number1 + number2;
Console.WriteLine("The sum of " + number1 + " and " + number2 + " is " + sum);
</pre><p><strong>5. Prompting the User for Input</strong></p><p>It''s good practice to prompt the user for input in a clear and concise manner, ensuring they know what kind of data is expected.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">Console.WriteLine("Enter your favorite color:");
string color = Console.ReadLine();
Console.WriteLine("Your favorite color is " + color + ".");
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that asks the user for their name, age, and favorite color, then prints a summary message.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

class Program
{
    static void Main()
    {
        // Taking user''s name
        Console.WriteLine("What is your name?");
        string name = Console.ReadLine();

        // Taking user''s age
        Console.WriteLine("How old are you?");
        string ageInput = Console.ReadLine();
        int age;
        if (!int.TryParse(ageInput, out age))
        {
            Console.WriteLine("Invalid age input. Please enter a valid number.");
            return;
        }

        // Taking user''s favorite color
        Console.WriteLine("What is your favorite color?");
        string color = Console.ReadLine();

        // Printing the summary
        Console.WriteLine($"Hello, {name}! You are {age} years old and your favorite color is {color}.");
    }
}
</pre><h3>Conclusion</h3><p>Using <code>Console.ReadLine()</code> to take input from the user is a fundamental skill in C#. It enables you to create interactive programs that can respond to user data, making your applications more dynamic and user-friendly. By mastering this method, you will be able to gather and process user inputs effectively, paving the way for more advanced programming techniques.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('87909c34-ee82-4817-b5e4-69b92668eabe', 1, 'aa21ea7c-eee7-482e-80d1-39d3fe5b6da4', 'VIDEO', 'C# user input ⌨️', NULL, '', 'https://www.youtube.com/watch?v=_SXJyA605bI');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('84840b20-cd9f-49c1-9eaf-3e115edfda91', 2, 'aa21ea7c-eee7-482e-80d1-39d3fe5b6da4', 'CODE', 'Replace negative number', 'b6484e21-6937-489c-b031-b71767994759', 'Replace negative number', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('38496181-6dd5-40a6-b272-c95cdf4d6b73', 0, 'b77003f7-a3dd-469b-b2de-99c0700233c3', 'LESSON', 'Comparison operators', NULL, '<h4>Lesson 2: Comparison Operators</h4><p><strong>Objective:</strong> Learn how to use comparison operators to compare values in JavaScript. Understand the use of equality, inequality, greater than, less than, greater than or equal to, and less than or equal to operators.</p><h3>Key Concepts:</h3><p><strong>1. Equality (</strong><code><strong>==</strong></code><strong> and </strong><code><strong>===</strong></code><strong>):</strong></p><p>The equality operator (<code>==</code>) checks if two values are equal, while the strict equality operator (<code>===</code>) checks if two values are equal and of the same type.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 5;
let b = ''5'';

console.log(a == b);  // true (loose equality)
console.log(a === b); // false (strict equality)
</pre><p><strong>2. Inequality (</strong><code><strong>!=</strong></code><strong> and </strong><code><strong>!==</strong></code><strong>):</strong></p><p>The inequality operator (<code>!=</code>) checks if two values are not equal, while the strict inequality operator (<code>!==</code>) checks if two values are not equal or not of the same type.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 5;
let b = ''5'';

console.log(a != b);  // false (loose inequality)
console.log(a !== b); // true (strict inequality)
</pre><p><strong>3. Greater Than (</strong><code><strong>&gt;</strong></code><strong>):</strong></p><p>The greater than operator checks if the left value is greater than the right value.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 5;
let b = 3;

console.log(a &gt; b); // true
</pre><p><strong>4. Less Than (</strong><code><strong>&lt;</strong></code><strong>):</strong></p><p>The less than operator checks if the left value is less than the right value.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 5;
let b = 3;

console.log(a &lt; b); // false
</pre><p><strong>5. Greater Than or Equal To (</strong><code><strong>&gt;=</strong></code><strong>):</strong></p><p>The greater than or equal to operator checks if the left value is greater than or equal to the right value.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 5;
let b = 5;

console.log(a &gt;= b); // true
</pre><p><strong>6. Less Than or Equal To (</strong><code><strong>&lt;=</strong></code><strong>):</strong></p><p>The less than or equal to operator checks if the left value is less than or equal to the right value.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 5;
let b = 5;

console.log(a &lt;= b); // true
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that compares two numbers and prints whether the first number is greater, less, or equal to the second number.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Comparison Operators&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Compare Two Numbers&lt;/h1&gt;
    &lt;script&gt;
        let num1 = 10;
        let num2 = 5;

        if (num1 &gt; num2) {
            console.log(`${num1} is greater than ${num2}`);
        } else if (num1 &lt; num2) {
            console.log(`${num1} is less than ${num2}`);
        } else {
            console.log(`${num1} is equal to ${num2}`);
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('87672bd4-9dc9-4f81-87a5-54ffbd7306d5', 1, 'b77003f7-a3dd-469b-b2de-99c0700233c3', 'LESSON', 'Logical operators', NULL, '<h4>Lesson 3: Logical Operators</h4><p><strong>Objective:</strong> Understand how to use logical operators to combine multiple conditions in JavaScript. Learn about the AND (<code>&amp;&amp;</code>), OR (<code>||</code>), and NOT (<code>!</code>) operators.</p><h3>Key Concepts:</h3><p><strong>1. AND (</strong><code><strong>&amp;&amp;</strong></code><strong>):</strong></p><p>The AND operator returns true if both operands are true.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = true;
let b = false;

console.log(a &amp;&amp; b); // false
</pre><p><strong>2. OR (</strong><code><strong>||</strong></code><strong>):</strong></p><p>The OR operator returns true if at least one operand is true.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = true;
let b = false;

console.log(a || b); // true
</pre><p><strong>3. NOT (</strong><code><strong>!</strong></code><strong>):</strong></p><p>The NOT operator returns the opposite boolean value of its operand.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = true;

console.log(!a); // false
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that checks if a number is between 10 and 20 and if it is even.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Logical Operators&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Check Number Conditions&lt;/h1&gt;
    &lt;script&gt;
        let number = 15;

        if (number &gt;= 10 &amp;&amp; number &lt;= 20 &amp;&amp; number % 2 === 0) {
            console.log(`${number} is between 10 and 20 and is even`);
        } else {
            console.log(`${number} does not meet the conditions`);
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('2ae0b907-12d1-4e3b-ae45-2a0722724e30', 2, 'b77003f7-a3dd-469b-b2de-99c0700233c3', 'LESSON', 'Assignment operators', NULL, '<h4>Lesson 4: Assignment Operators</h4><p><strong>Objective:</strong> Learn about assignment operators in JavaScript. Understand how to use the basic assignment operator as well as compound assignment operators.</p><h3>Key Concepts:</h3><p><strong>1. Basic Assignment (</strong><code><strong>=</strong></code><strong>):</strong></p><p>The basic assignment operator assigns a value to a variable.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let x = 10;
console.log(x); // 10
</pre><p><strong>2. Addition Assignment (</strong><code><strong>+=</strong></code><strong>):</strong></p><p>The addition assignment operator adds a value to a variable and assigns the result to the variable.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let x = 10;
x += 5; // Equivalent to x = x + 5;
console.log(x); // 15
</pre><p><strong>3. Subtraction Assignment (</strong><code><strong>-=</strong></code><strong>):</strong></p><p>The subtraction assignment operator subtracts a value from a variable and assigns the result to the variable.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let x = 10;
x -= 5; // Equivalent to x = x - 5;
console.log(x); // 5
</pre><p><strong>4. Multiplication Assignment (</strong><code><strong>*=</strong></code><strong>):</strong></p><p>The multiplication assignment operator multiplies a variable by a value and assigns the result to the variable.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let x = 10;
x *= 5; // Equivalent to x = x * 5;
console.log(x); // 50
</pre><p><strong>5. Division Assignment (</strong><code><strong>/=</strong></code><strong>):</strong></p><p>The division assignment operator divides a variable by a value and assigns the result to the variable.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let x = 10;
x /= 5; // Equivalent to x = x / 5;
console.log(x); // 2
</pre><p><strong>6. Modulus Assignment (</strong><code><strong>%=</strong></code><strong>):</strong></p><p>The modulus assignment operator divides a variable by a value and assigns the remainder to the variable.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let x = 10;
x %= 3; // Equivalent to x = x % 3;
console.log(x); // 1
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that calculates the total cost of items in a shopping cart using assignment operators.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Assignment Operators&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Calculate Total Cost&lt;/h1&gt;
    &lt;script&gt;
        let totalCost = 0;
        let item1 = 20;
        let item2 = 30;
        let item3 = 50;

        totalCost += item1; // totalCost = totalCost + item1
        totalCost += item2; // totalCost = totalCost + item2
        totalCost += item3; // totalCost = totalCost + item3

        console.log(`Total cost: ${totalCost}`); // Total cost: 100
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('aeecfa4b-00ea-4bc1-8aff-6f2e271bba66', 0, '9dfc1f9e-be04-448d-ae04-16cf3599e861', 'LESSON', ' Introductino to "if", "else"', NULL, '<h4>Lesson: Introduction to "if", "else"</h4><p><strong>Objective:</strong> Understand the basic conditional statements in C#, namely <code>if</code> and <code>else</code>, which allow you to execute code based on specific conditions.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>If Statement:</strong></li></ol><ul><li class="ql-indent-1">The <code>if</code> statement executes a block of code if a specified condition is true.</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int number = 10;
if (number &gt; 5)
{
    Console.WriteLine("The number is greater than 5.");
}
</pre><ol><li><strong>If-Else Statement:</strong></li></ol><ul><li class="ql-indent-1">The <code>else</code> statement executes a block of code if the condition in the <code>if</code> statement is false.</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int number = 3;
if (number &gt; 5)
{
    Console.WriteLine("The number is greater than 5.");
}
else
{
    Console.WriteLine("The number is 5 or less.");
}
</pre><ol><li><strong>Else If Statement:</strong></li></ol><ul><li class="ql-indent-1">The <code>else if</code> statement allows you to check multiple conditions.</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int number = 7;
if (number &gt; 10)
{
    Console.WriteLine("The number is greater than 10.");
}
else if (number &gt; 5)
{
    Console.WriteLine("The number is greater than 5 but less than or equal to 10.");
}
else
{
    Console.WriteLine("The number is 5 or less.");
}
</pre><p>Using <code>if</code>, <code>else if</code>, and <code>else</code> statements, you can control the flow of your program based on different conditions, making your applications more dynamic and responsive.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('f3c9b68d-0738-4cbe-88f3-1392891fb80e', 1, '9dfc1f9e-be04-448d-ae04-16cf3599e861', 'LESSON', 'Review problems', NULL, '<h4>Lesson: Review Problems</h4><p><strong>Objective:</strong> Practice solving problems using the <code>if</code>, <code>else if</code>, and <code>else</code> statements to reinforce your understanding and application of conditional logic.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Problem Solving:</strong></li></ol><ul><li class="ql-indent-1">Apply the concepts learned in the previous lesson to solve various problems involving conditional statements.</li></ul><p><strong>Example Problem:</strong></p><ul><li><strong>Problem:</strong> Write a program that checks if a number is positive, negative, or zero.</li><li><strong>Solution:</strong></li></ul><pre class="ql-syntax" spellcheck="false">Console.WriteLine("Enter a number:");
int number = int.Parse(Console.ReadLine());

if (number &gt; 0)
{
    Console.WriteLine("The number is positive.");
}
else if (number &lt; 0)
{
    Console.WriteLine("The number is negative.");
}
else
{
    Console.WriteLine("The number is zero.");
}
</pre><p>Review problems are designed to reinforce your understanding of conditional statements and help you become proficient in using them to solve real-world problems.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('fd27c78f-8be9-48d3-b646-784377217039', 2, '9dfc1f9e-be04-448d-ae04-16cf3599e861', 'LESSON', 'Different ways to compare elements inside if', NULL, '<h4>Lesson: Different Ways to Compare Elements Inside If</h4><p><strong>Objective:</strong> Learn about the various comparison operators available in C# and how to use them within <code>if</code> statements to compare elements.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Comparison Operators:</strong></li></ol><ul><li class="ql-indent-1"><strong>Equality (</strong><code><strong>==</strong></code><strong>):</strong> Checks if two values are equal.</li><li class="ql-indent-1"><strong>Inequality (</strong><code><strong>!=</strong></code><strong>):</strong> Checks if two values are not equal.</li><li class="ql-indent-1"><strong>Greater Than (</strong><code><strong>&gt;</strong></code><strong>):</strong> Checks if the left value is greater than the right value.</li><li class="ql-indent-1"><strong>Less Than (</strong><code><strong>&lt;</strong></code><strong>):</strong> Checks if the left value is less than the right value.</li><li class="ql-indent-1"><strong>Greater Than or Equal To (</strong><code><strong>&gt;=</strong></code><strong>):</strong> Checks if the left value is greater than or equal to the right value.</li><li class="ql-indent-1"><strong>Less Than or Equal To (</strong><code><strong>&lt;=</strong></code><strong>):</strong> Checks if the left value is less than or equal to the right value.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int a = 5;
int b = 10;

if (a == b)
{
    Console.WriteLine("a is equal to b");
}
else if (a != b)
{
    Console.WriteLine("a is not equal to b");
}

if (a &gt; b)
{
    Console.WriteLine("a is greater than b");
}
else if (a &lt; b)
{
    Console.WriteLine("a is less than b");
}

if (a &gt;= 5)
{
    Console.WriteLine("a is greater than or equal to 5");
}

if (b &lt;= 10)
{
    Console.WriteLine("b is less than or equal to 10");
}
</pre><p>Understanding and using different comparison operators allows you to perform a wide range of conditional checks within your programs.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('8e634e7d-4758-4fa8-8ec0-2df177355f3d', 3, '9dfc1f9e-be04-448d-ae04-16cf3599e861', 'LESSON', ' Combining Conditions - And, Or', NULL, '<h4>Lesson: Combining Conditions - And, Or</h4><p><strong>Objective:</strong> Learn how to combine multiple conditions using logical operators <code>&amp;&amp;</code> (AND) and <code>||</code> (OR) to create more complex conditional statements.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Logical AND (</strong><code><strong>&amp;&amp;</strong></code><strong>):</strong></li></ol><ul><li class="ql-indent-1">Combines two conditions and returns true only if both conditions are true.</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int age = 25;
bool hasLicense = true;

if (age &gt;= 18 &amp;&amp; hasLicense)
{
    Console.WriteLine("You are eligible to drive.");
}
</pre><ol><li><strong>Logical OR (</strong><code><strong>||</strong></code><strong>):</strong></li></ol><ul><li class="ql-indent-1">Combines two conditions and returns true if at least one of the conditions is true.</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">bool isWeekend = true;
bool isHoliday = false;

if (isWeekend || isHoliday)
{
    Console.WriteLine("You have a day off.");
}
</pre><ol><li><strong>Combining Multiple Conditions:</strong></li></ol><ul><li class="ql-indent-1">You can combine multiple conditions using both <code>&amp;&amp;</code> and <code>||</code> to form complex logical expressions.</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int age = 20;
bool hasPermission = false;

if ((age &gt;= 18 &amp;&amp; age &lt;= 21) || hasPermission)
{
    Console.WriteLine("You have limited access.");
}
</pre><p>Combining conditions using logical operators allows you to handle complex decision-making scenarios in your programs, enhancing their functionality and flexibility.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('7d312de7-9ceb-490f-b39a-bb062ef0d4f0', 4, '9dfc1f9e-be04-448d-ae04-16cf3599e861', 'LESSON', ' Switch', NULL, '<h4>Lesson: Switch</h4><p><strong>Objective:</strong> Learn how to use the <code>switch</code> statement in C# to simplify the process of selecting one of many code blocks to be executed.</p><p><strong>Key Concepts:</strong></p><ol><li><strong>Switch Statement:</strong></li></ol><ul><li class="ql-indent-1">The <code>switch</code> statement is used to execute one code block among many based on the value of a variable or expression.</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int day = 3;

switch (day)
{
    case 1:
        Console.WriteLine("Monday");
        break;
    case 2:
        Console.WriteLine("Tuesday");
        break;
    case 3:
        Console.WriteLine("Wednesday");
        break;
    case 4:
        Console.WriteLine("Thursday");
        break;
    case 5:
        Console.WriteLine("Friday");
        break;
    case 6:
        Console.WriteLine("Saturday");
        break;
    case 7:
        Console.WriteLine("Sunday");
        break;
    default:
        Console.WriteLine("Invalid day");
        break;
}
</pre><ol><li><strong>Break Statement:</strong></li></ol><ul><li class="ql-indent-1">The <code>break</code> statement terminates the current case in the <code>switch</code> statement. Without <code>break</code>, the execution will continue to the next case.</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int number = 2;

switch (number)
{
    case 1:
        Console.WriteLine("One");
        break;
    case 2:
        Console.WriteLine("Two");
        break;
    case 3:
        Console.WriteLine("Three");
        break;
    default:
        Console.WriteLine("Other number");
        break;
}
</pre><ol><li><strong>Default Case:</strong></li></ol><ul><li class="ql-indent-1">The <code>default</code> case is executed if none of the other cases match the value of the variable or expression.</li></ul><ol><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">int number = 10;

switch (number)
{
    case 1:
        Console.WriteLine("One");
        break;
    case 2:
        Console.WriteLine("Two");
        break;
    default:
        Console.WriteLine("Other number");
        break;
}
</pre><p>Using the <code>switch</code> statement can simplify complex <code>if-else</code> chains, making your code cleaner and more readable.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1a2b5bc4-be83-4492-b931-aecdfe473074', 5, '9dfc1f9e-be04-448d-ae04-16cf3599e861', 'VIDEO', 'Conditional Statements In C#', NULL, '', 'https://www.youtube.com/watch?v=IzzNzSXkCMM');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a382a3ec-d692-4e14-b211-27809059910a', 6, '9dfc1f9e-be04-448d-ae04-16cf3599e861', 'CODE', 'Check square number', 'b6484e21-6937-489c-b031-b71767994748', 'Check square number', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('47b18eec-1cf2-4492-94fb-112501c49105', 3, 'b77003f7-a3dd-469b-b2de-99c0700233c3', 'LESSON', 'Conditional (ternary) operator', NULL, '<h4>Lesson 5: Conditional (Ternary) Operator</h4><p><strong>Objective:</strong> Learn how to use the conditional (ternary) operator to write concise conditional statements in JavaScript.</p><h3>Key Concepts:</h3><p><strong>1. Conditional (Ternary) Operator:</strong></p><p>The conditional (ternary) operator is a shorthand for the <code>if-else</code> statement. It takes three operands: a condition, an expression to execute if the condition is true, and an expression to execute if the condition is false.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">condition ? expressionIfTrue : expressionIfFalse;
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let age = 18;
let canVote = age &gt;= 18 ? ''Yes'' : ''No'';
console.log(canVote); // Yes
</pre><p><strong>Explanation:</strong></p><ul><li>The condition <code>age &gt;= 18</code> is evaluated.</li><li>If the condition is true, <code>''Yes''</code> is assigned to <code>canVote</code>.</li><li>If the condition is false, <code>''No''</code> is assigned to <code>canVote</code>.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that determines if a student has passed based on their score using the conditional (ternary) operator.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Conditional Operator&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Check Pass or Fail&lt;/h1&gt;
    &lt;script&gt;
        let score = 75;
        let result = score &gt;= 50 ? ''Pass'' : ''Fail'';
        console.log(`Result: ${result}`); // Result: Pass
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering these operators and expressions in JavaScript, you will be able to perform a wide range of tasks, from basic arithmetic to complex logical operations, making your code more powerful and flexible. These lessons provide the foundation for writing effective and efficient JavaScript code.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b0e7e17b-c565-4c1b-831e-e03121db0df8', 4, 'b77003f7-a3dd-469b-b2de-99c0700233c3', 'VIDEO', 'Expressions and Operators || JavaScript tutorial for Beginners', NULL, '', 'https://www.youtube.com/watch?v=i9h4yf7euhs');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1c2cf954-2c1a-470a-96fe-51099f9b2716', 5, 'b77003f7-a3dd-469b-b2de-99c0700233c3', 'LESSON', 'Arithmetic operators', NULL, '<h4>Lesson 1: Arithmetic Operators</h4><p><strong>Objective:</strong> Understand how to use arithmetic operators to perform mathematical operations in JavaScript. Learn how to use addition, subtraction, multiplication, division, modulus, and exponentiation operators.</p><h3>Key Concepts:</h3><p><strong>1. Addition (</strong><code><strong>+</strong></code><strong>):</strong></p><p>The addition operator adds two numbers.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 5;
let b = 3;
let sum = a + b;
console.log(`Sum: ${sum}`); // Sum: 8
</pre><p><strong>2. Subtraction (</strong><code><strong>-</strong></code><strong>):</strong></p><p>The subtraction operator subtracts one number from another.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 5;
let b = 3;
let difference = a - b;
console.log(`Difference: ${difference}`); // Difference: 2
</pre><p><strong>3. Multiplication (</strong><code><strong>*</strong></code><strong>):</strong></p><p>The multiplication operator multiplies two numbers.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 5;
let b = 3;
let product = a * b;
console.log(`Product: ${product}`); // Product: 15
</pre><p><strong>4. Division (</strong><code><strong>/</strong></code><strong>):</strong></p><p>The division operator divides one number by another.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 6;
let b = 3;
let quotient = a / b;
console.log(`Quotient: ${quotient}`); // Quotient: 2
</pre><p><strong>5. Modulus (</strong><code><strong>%</strong></code><strong>):</strong></p><p>The modulus operator returns the remainder of a division operation.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 7;
let b = 3;
let remainder = a % b;
console.log(`Remainder: ${remainder}`); // Remainder: 1
</pre><p><strong>6. Exponentiation (</strong><code><strong>**</strong></code><strong>):</strong></p><p>The exponentiation operator raises a number to the power of another number.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let a = 2;
let b = 3;
let power = a ** b;
console.log(`Power: ${power}`); // Power: 8
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that calculates the area of a rectangle and the volume of a cube.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Arithmetic Operators&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Calculate Area and Volume&lt;/h1&gt;
    &lt;script&gt;
        let length = 5;
        let width = 3;
        let height = 4;

        let area = length * width;
        let volume = length * width * height;

        console.log(`Area of the rectangle: ${area}`); // Area: 15
        console.log(`Volume of the cube: ${volume}`); // Volume: 60
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('24491928-3f4b-47c7-9456-b737fa05f260', 0, '20de1ddc-7dec-4e12-b833-fca267b44a91', 'LESSON', 'If...else statements', NULL, '<h3>Lesson: If...else Statements</h3><p><strong>Objective:</strong> Understand how to use <code>if...else</code> statements to execute code conditionally based on different conditions.</p><h3>Key Concepts:</h3><p><strong>1. Basic </strong><code><strong>if</strong></code><strong> Statement:</strong></p><p>The <code>if</code> statement executes a block of code if a specified condition evaluates to true.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let age = 18;

if (age &gt;= 18) {
    console.log("You are an adult.");
}
</pre><p><strong>Explanation:</strong></p><ul><li>The block inside <code>if</code> is executed because <code>age</code> is greater than or equal to 18.</li></ul><p><strong>2. </strong><code><strong>if...else</strong></code><strong> Statement:</strong></p><p>The <code>if...else</code> statement executes one block of code if the condition is true and another block if the condition is false.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let age = 16;

if (age &gt;= 18) {
    console.log("You are an adult.");
} else {
    console.log("You are not an adult.");
}
</pre><p><strong>Explanation:</strong></p><ul><li>The block inside <code>else</code> is executed because <code>age</code> is less than 18.</li></ul><p><strong>3. </strong><code><strong>if...else if...else</strong></code><strong> Statement:</strong></p><p>The <code>if...else if...else</code> statement checks multiple conditions sequentially and executes the corresponding block of code for the first true condition.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let score = 85;

if (score &gt;= 90) {
    console.log("Grade: A");
} else if (score &gt;= 80) {
    console.log("Grade: B");
} else if (score &gt;= 70) {
    console.log("Grade: C");
} else {
    console.log("Grade: F");
}
</pre><p><strong>Explanation:</strong></p><ul><li>The block inside <code>else if (score &gt;= 80)</code> is executed because <code>score</code> is 85.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that checks the temperature and prints whether it is cold, warm, or hot.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;If...else Statements&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Temperature Check&lt;/h1&gt;
    &lt;script&gt;
        let temperature = 25;

        if (temperature &lt;= 15) {
            console.log("It is cold.");
        } else if (temperature &lt;= 25) {
            console.log("It is warm.");
        } else {
            console.log("It is hot.");
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5b42b1f2-b993-460b-8b1a-d2f111e93534', 0, '3cfbf83b-3d61-4f46-aaa8-6bbd2c07c216', 'LESSON', 'Introduction to Arrays', NULL, '<h3>Creating Arrays</h3><p>Arrays are used to store multiple values in a single variable, instead of declaring separate variables for each value.</p><p><br></p><p>To declare an array,</p><ul><li>Define the variable type,</li><li>Specify the name of the array followed by square brackets</li></ul><p>For eg</p><pre class="ql-syntax" spellcheck="false"> string[] cars = {"Ferrari","Volvo","Lambo","Tesla"}
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('03a59c6d-ac36-45e7-ab2c-a02ab0be5087', 1, '3cfbf83b-3d61-4f46-aaa8-6bbd2c07c216', 'VIDEO', 'C# arrays 🚗', NULL, '', 'https://www.youtube.com/watch?v=IHMmPVEOT64');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('ec078db8-2cba-4edf-8c92-b5fe82156f6a', 2, '3cfbf83b-3d61-4f46-aaa8-6bbd2c07c216', 'CODE', 'Sum of an array', 'b6484e21-6937-489c-b031-b71767994736', 'Sum of an array', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6b134d99-34c5-4c64-9d58-00e7d5f231d2', 0, '1c64da87-8cf6-47d9-ad16-b2ea87945562', 'LESSON', 'While loops', NULL, '<h4>Lesson: While Loops</h4><p><strong>Objective:</strong> Understand how to use <code>while</code> loops to execute a block of code repeatedly as long as a specified condition is true.</p><h3>Key Concepts:</h3><p><strong>1. What is a While Loop?</strong></p><p>A <code>while</code> loop repeatedly executes a block of code as long as the specified condition evaluates to true. It is useful when the number of iterations is not known beforehand.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">while (condition)
{
    // Code to be executed
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int count = 0;
while (count &lt; 5)
{
    Console.WriteLine("Count: " + count);
    count++;
}
</pre><p><strong>2. Infinite Loops:</strong></p><p>An infinite loop occurs if the condition never becomes false. Be cautious to ensure your <code>while</code> loop has a condition that will eventually be met to avoid infinite loops.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">while (true)
{
    Console.WriteLine("This will print forever");
}
</pre><p><strong>3. Using Conditions:</strong></p><p>The condition in a <code>while</code> loop can be any expression that returns a boolean value.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int number = 10;
while (number &gt; 0)
{
    Console.WriteLine("Number: " + number);
    number--;
}
</pre><p>Using <code>while</code> loops, you can control the flow of your program to repeat tasks as long as certain conditions are met.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('863c539a-593f-4ffc-beda-bf66485cec32', 1, 'f646e38b-8dd6-4cc6-a17a-187415ee8ba2', 'LESSON', ' Array operations part-2', NULL, '<h4>Lesson: Array Operations Part-2</h4><p><strong>Objective:</strong> Build upon the foundational concepts of arrays introduced in Part-1 by exploring more advanced array operations and techniques. This lesson will enhance your ability to manipulate arrays and solve complex problems involving arrays.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Array Initialization and Access:</strong></p><p>Revisiting the basics, let''s quickly recap how to declare, initialize, and access elements in an array.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] sample_array = {5, 3, 2, 4, 1};

            // Display elements of the array
            for(int i = 0; i &lt; sample_array.Length; i++)
            {
                Console.Write(sample_array[i] + " ");
            }
            Console.WriteLine();

            // Output specific index from the array
            Console.WriteLine(sample_array[3]);
        }
    }
}
</pre><p><strong>2. Array Sorting:</strong></p><p>Sorting is a common operation performed on arrays. C# provides built-in methods to sort arrays.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] sample_array = {5, 3, 2, 4, 1};

            // Sort the array
            Array.Sort(sample_array);

            // Display sorted elements of the array
            for(int i = 0; i &lt; sample_array.Length; i++)
            {
                Console.Write(sample_array[i] + " ");
            }
            Console.WriteLine();
        }
    }
}
</pre><p><strong>3. Finding Maximum and Minimum Values:</strong></p><p>You can easily find the maximum and minimum values in an array using built-in methods.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] sample_array = {5, 3, 2, 4, 1};

            // Find the maximum value
            int maxValue = sample_array[0];
            for(int i = 1; i &lt; sample_array.Length; i++)
            {
                if(sample_array[i] &gt; maxValue)
                {
                    maxValue = sample_array[i];
                }
            }
            Console.WriteLine("Maximum value: " + maxValue);

            // Find the minimum value
            int minValue = sample_array[0];
            for(int i = 1; i &lt; sample_array.Length; i++)
            {
                if(sample_array[i] &lt; minValue)
                {
                    minValue = sample_array[i];
                }
            }
            Console.WriteLine("Minimum value: " + minValue);
        }
    }
}
</pre><p><strong>4. Reversing an Array:</strong></p><p>Reversing an array is another common operation that can be useful in various scenarios.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] sample_array = {5, 3, 2, 4, 1};

            // Reverse the array
            Array.Reverse(sample_array);

            // Display reversed elements of the array
            for(int i = 0; i &lt; sample_array.Length; i++)
            {
                Console.Write(sample_array[i] + " ");
            }
            Console.WriteLine();
        }
    }
}
</pre><p><strong>5. Searching for an Element:</strong></p><p>Searching for an element within an array can be done using various techniques. The simplest is linear search.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] sample_array = {5, 3, 2, 4, 1};
            int search_element = 4;
            bool found = false;

            // Linear search for the element
            for(int i = 0; i &lt; sample_array.Length; i++)
            {
                if(sample_array[i] == search_element)
                {
                    found = true;
                    Console.WriteLine("Element " + search_element + " found at index " + i);
                    break;
                }
            }

            if(!found)
            {
                Console.WriteLine("Element " + search_element + " not found.");
            }
        }
    }
}
</pre><p><strong>6. Multi-Dimensional Arrays:</strong></p><p>Explore how to work with multi-dimensional arrays for more complex data structures.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            int[,] multi_array = {
                {1, 2, 3},
                {4, 5, 6},
                {7, 8, 9}
            };

            // Display elements of the multi-dimensional array
            for(int i = 0; i &lt; 3; i++)
            {
                for(int j = 0; j &lt; 3; j++)
                {
                    Console.Write(multi_array[i, j] + " ");
                }
                Console.WriteLine();
            }
        }
    }
}
</pre><p>By mastering these advanced array operations, you will be able to handle more complex data manipulations and solve programming problems efficiently using arrays in C#. This lesson provides the building blocks to work with arrays in a sophisticated and effective manner.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('fb1621fd-2793-4c7d-9d87-f98c5f84a353', 2, 'f646e38b-8dd6-4cc6-a17a-187415ee8ba2', 'VIDEO', 'Perform Operations on Array in C#', NULL, '', 'https://www.youtube.com/watch?v=nUVv7SZv3vI');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('26e75891-d4da-4841-b487-4a4dd092de49', 0, '3a57a7e8-9989-498a-beb8-2a5a81774427', 'LESSON', ' String operations part-1', NULL, '<h3>Introduction to the module on Strings</h3><p>So far, we have focused on logic, integers, math.</p><p>The module on logic building and problem solving primarily covered number operations.</p><p>It is time to add ''Strings'' to our arsenal for solving programming problems.</p><p>Lets revise some basic syntax of strings.</p><ul><li>Strings are a&nbsp;<strong>datatype</strong>.</li><li class="ql-indent-1">A string is composed of characters. A single character can be any letter, any digit, symbol, etc.</li><li class="ql-indent-1">A&nbsp;<strong>binary string</strong>&nbsp;is one which has only ''0'' and ''1'' as component characters</li><li>The character in the&nbsp;<span class="ql-formula" data-value="i^{th}">﻿<span contenteditable="false"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>i</mi><mrow><mi>t</mi><mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.8491em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8491em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span></span>﻿</span>  index of a string is represented as&nbsp;<strong>S[i]</strong></li></ul><p>Click in&nbsp;<strong>Next</strong>&nbsp;to proceed.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('77050bd5-c3d8-4e9b-90dd-8e3f9ea681ee', 1, '3a57a7e8-9989-498a-beb8-2a5a81774427', 'LESSON', ' String operations part-2', NULL, '<h4>Lesson: String Operations Part-2</h4><p><strong>Objective:</strong> Build on the foundation of string operations introduced in Part-1 by exploring more advanced string manipulation techniques. This lesson will enhance your ability to work with strings and solve complex problems involving string data.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. String Concatenation:</strong></p><p>String concatenation is the process of combining two or more strings into one. In C#, you can use the <code>+</code> operator or the <code>String.Concat</code> method.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            string firstName = "John";
            string lastName = "Doe";
            string fullName = firstName + " " + lastName;
            Console.WriteLine("Full Name: " + fullName);
        }
    }
}
</pre><p><strong>2. String Interpolation:</strong></p><p>String interpolation is a more readable and convenient way to include variable values inside a string. It uses the <code>$</code> symbol followed by curly braces <code>{}</code> to embed expressions.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            string firstName = "John";
            string lastName = "Doe";
            string fullName = $"{firstName} {lastName}";
            Console.WriteLine($"Full Name: {fullName}");
        }
    }
}
</pre><p><strong>3. String Methods:</strong></p><p>C# provides a rich set of methods to manipulate strings. Some commonly used methods include:</p><ul><li><strong>Length</strong>: Returns the number of characters in a string.</li><li><strong>ToUpper()</strong>: Converts the string to uppercase.</li><li><strong>ToLower()</strong>: Converts the string to lowercase.</li><li><strong>Substring()</strong>: Extracts a substring from the string.</li><li><strong>IndexOf()</strong>: Finds the index of the first occurrence of a substring.</li><li><strong>Replace()</strong>: Replaces all occurrences of a specified substring with another substring.</li></ul><p><strong>Examples:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            string message = "Hello, World!";
            Console.WriteLine("Original: " + message);

            // Length
            Console.WriteLine("Length: " + message.Length);

            // ToUpper
            Console.WriteLine("Uppercase: " + message.ToUpper());

            // ToLower
            Console.WriteLine("Lowercase: " + message.ToLower());

            // Substring
            Console.WriteLine("Substring (0, 5): " + message.Substring(0, 5));

            // IndexOf
            Console.WriteLine("Index of ''World'': " + message.IndexOf("World"));

            // Replace
            Console.WriteLine("Replace ''World'' with ''C#'': " + message.Replace("World", "C#"));
        }
    }
}
</pre><p><strong>4. Splitting and Joining Strings:</strong></p><p>You can split a string into an array of substrings based on a delimiter and join an array of strings into a single string.</p><p><strong>Examples:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            string names = "John, Jane, Bob, Alice";

            // Splitting
            string[] nameArray = names.Split(", ");
            Console.WriteLine("Names after splitting:");
            foreach (string name in nameArray)
            {
                Console.WriteLine(name);
            }

            // Joining
            string joinedNames = string.Join(" | ", nameArray);
            Console.WriteLine("Names after joining: " + joinedNames);
        }
    }
}
</pre><p><strong>5. Trimming Strings:</strong></p><p>The <code>Trim()</code>, <code>TrimStart()</code>, and <code>TrimEnd()</code> methods remove whitespace from the beginning and/or end of a string.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            string message = "  Hello, World!  ";
            Console.WriteLine("Original: ''" + message + "''");
            Console.WriteLine("Trimmed: ''" + message.Trim() + "''");
            Console.WriteLine("Trimmed Start: ''" + message.TrimStart() + "''");
            Console.WriteLine("Trimmed End: ''" + message.TrimEnd() + "''");
        }
    }
}
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that takes a user''s first and last name as input, concatenates them, converts the full name to uppercase, and displays the length of the full name.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter your first name:");
            string firstName = Console.ReadLine();

            Console.WriteLine("Enter your last name:");
            string lastName = Console.ReadLine();

            // Concatenate first name and last name
            string fullName = $"{firstName} {lastName}";

            // Convert full name to uppercase
            string upperFullName = fullName.ToUpper();

            // Display the full name and its length
            Console.WriteLine($"Full Name: {upperFullName}");
            Console.WriteLine($"Length of Full Name: {upperFullName.Length}");
        }
    }
}
</pre><p>By mastering these advanced string operations, you will be able to handle and manipulate string data effectively in your C# programs, solving complex problems with ease. This lesson builds upon the basics and prepares you for more sophisticated string manipulation tasks.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d71c8096-e00c-4a07-a655-316c3dea947d', 2, '3a57a7e8-9989-498a-beb8-2a5a81774427', 'VIDEO', 'Strings and String Manipulation', NULL, '', 'https://www.youtube.com/watch?v=oJLikNznWz8');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('3dc0fd36-9ba6-465d-b9a2-1fa5f04c1835', 0, '4a4d46dd-09d3-403e-8b9c-a42154814e27', 'LESSON', 'Basic math continued part-2', NULL, '<h4>Lesson: Basic Math Continued Part-2</h4><p><strong>Objective:</strong> Extend your mathematical capabilities in C# by exploring trigonometric functions and logarithmic calculations. This lesson will provide a deeper understanding of how to implement and use these functions in programming problems.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Trigonometric Functions:</strong></p><p>C# provides a variety of trigonometric functions through the <code>Math</code> class, including <code>Sin()</code>, <code>Cos()</code>, and <code>Tan()</code>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            double angle = 45;
            double radians = angle * (Math.PI / 180); // Convert degrees to radians

            double sine = Math.Sin(radians);
            double cosine = Math.Cos(radians);
            double tangent = Math.Tan(radians);

            Console.WriteLine("Trigonometric Functions:");
            Console.WriteLine($"Sin({angle} degrees) = {sine}");
            Console.WriteLine($"Cos({angle} degrees) = {cosine}");
            Console.WriteLine($"Tan({angle} degrees) = {tangent}");
        }
    }
}
</pre><p><strong>2. Logarithmic Functions:</strong></p><p>Logarithmic functions are useful in many mathematical calculations. The <code>Math.Log()</code> method provides natural logarithms, and <code>Math.Log10()</code> provides base-10 logarithms.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            double number = 100;

            double naturalLog = Math.Log(number);
            double base10Log = Math.Log10(number);

            Console.WriteLine("Logarithmic Functions:");
            Console.WriteLine($"Natural log of {number} = {naturalLog}");
            Console.WriteLine($"Base-10 log of {number} = {base10Log}");
        }
    }
}
</pre><p><strong>3. Rounding Numbers:</strong></p><p>Rounding numbers to the nearest integer or specified number of decimal places is commonly required in programming. Methods like <code>Math.Round()</code>, <code>Math.Ceiling()</code>, and <code>Math.Floor()</code> are used.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            double number = 12.3456;

            double rounded = Math.Round(number);
            double roundedTo2Decimals = Math.Round(number, 2);
            double ceiling = Math.Ceiling(number);
            double floor = Math.Floor(number);

            Console.WriteLine("Rounding Numbers:");
            Console.WriteLine($"Rounded: {rounded}");
            Console.WriteLine($"Rounded to 2 decimals: {roundedTo2Decimals}");
            Console.WriteLine($"Ceiling: {ceiling}");
            Console.WriteLine($"Floor: {floor}");
        }
    }
}
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that takes an angle in degrees from the user, calculates its sine, cosine, tangent, natural logarithm, and base-10 logarithm, and prints the results.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter an angle in degrees:");
            double angle = double.Parse(Console.ReadLine());
            double radians = angle * (Math.PI / 180); // Convert degrees to radians

            // Calculate trigonometric functions
            double sine = Math.Sin(radians);
            double cosine = Math.Cos(radians);
            double tangent = Math.Tan(radians);

            Console.WriteLine("Trigonometric Functions:");
            Console.WriteLine($"Sin({angle} degrees) = {sine}");
            Console.WriteLine($"Cos({angle} degrees) = {cosine}");
            Console.WriteLine($"Tan({angle} degrees) = {tangent}");

            Console.WriteLine("Enter a number:");
            double number = double.Parse(Console.ReadLine());

            // Calculate logarithmic functions
            double naturalLog = Math.Log(number);
            double base10Log = Math.Log10(number);

            Console.WriteLine("Logarithmic Functions:");
            Console.WriteLine($"Natural log of {number} = {naturalLog}");
            Console.WriteLine($"Base-10 log of {number} = {base10Log}");
        }
    }
}
</pre><p>By mastering these advanced mathematical functions, you will enhance your ability to perform complex calculations and solve a wider range of problems using C#. This lesson builds on your existing knowledge and prepares you for more sophisticated mathematical programming tasks.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1931e081-4270-4fc8-9ac0-7e6f98318b54', 1, '4a4d46dd-09d3-403e-8b9c-a42154814e27', 'LESSON', 'Basic math continued part-1', NULL, '<h4>Lesson: Basic Math Continued Part-1</h4><p><strong>Objective:</strong> Enhance your understanding of basic mathematical operations by exploring more complex problems and implementing additional mathematical functions in C#. This lesson will focus on advanced arithmetic operations and their applications.</p><p><br></p><h3>Key Concepts:</h3><p><strong>1. Modular Arithmetic:</strong></p><p>Modular arithmetic deals with the remainder of division. The modulus operator <code>%</code> is used to find the remainder.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            int a = 10;
            int b = 3;
            int remainder = a % b;

            Console.WriteLine("Modular Arithmetic:");
            Console.WriteLine($"{a} % {b} = {remainder}");
        }
    }
}
</pre><p><strong>2. Exponentiation:</strong></p><p>Exponentiation involves raising a number to a power. In C#, the <code>Math.Pow()</code> method is used for this purpose.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            double baseNumber = 2;
            double exponent = 3;
            double result = Math.Pow(baseNumber, exponent);

            Console.WriteLine("Exponentiation:");
            Console.WriteLine($"{baseNumber} ^ {exponent} = {result}");
        }
    }
}
</pre><p><strong>3. Square Root:</strong></p><p>Finding the square root of a number is a common mathematical operation. In C#, the <code>Math.Sqrt()</code> method is used.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            double number = 16;
            double sqrt = Math.Sqrt(number);

            Console.WriteLine("Square Root:");
            Console.WriteLine($"The square root of {number} is {sqrt}");
        }
    }
}
</pre><p><strong>4. Absolute Value:</strong></p><p>The absolute value of a number is its distance from zero on the number line, regardless of direction. The <code>Math.Abs()</code> method is used in C#.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            int negativeNumber = -10;
            int absValue = Math.Abs(negativeNumber);

            Console.WriteLine("Absolute Value:");
            Console.WriteLine($"The absolute value of {negativeNumber} is {absValue}");
        }
    }
}
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that takes a number from the user, calculates its square, square root, and absolute value, and prints the results.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">using System;

namespace MyApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter a number:");
            double number = double.Parse(Console.ReadLine());

            // Calculate square
            double square = Math.Pow(number, 2);
            // Calculate square root
            double sqrt = Math.Sqrt(number);
            // Calculate absolute value
            double absValue = Math.Abs(number);

            // Display results
            Console.WriteLine($"Square of {number} is {square}");
            Console.WriteLine($"Square root of {number} is {sqrt}");
            Console.WriteLine($"Absolute value of {number} is {absValue}");
        }
    }
}
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('7e0619c2-ba38-44d2-b772-a29ae1085f36', 2, '4a4d46dd-09d3-403e-8b9c-a42154814e27', 'CODE', 'Determine the Quarter of a Given Month', 'b6484e21-6937-489c-b031-b71767994755', 'Determine the Quarter of a Given Month', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('e9ce7649-566a-4d36-9c92-a3ee71a098b7', 1, '20de1ddc-7dec-4e12-b833-fca267b44a91', 'LESSON', 'Switch statements', NULL, '<h3>Lesson: Switch Statements</h3><p><strong>Objective:</strong> Learn how to use <code>switch</code> statements to execute different blocks of code based on different conditions.</p><h3>Key Concepts:</h3><p><strong>1. Basic </strong><code><strong>switch</strong></code><strong> Statement:</strong></p><p>The <code>switch</code> statement evaluates an expression and executes the corresponding case block.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let day = 3;
let dayName;

switch (day) {
    case 1:
        dayName = "Monday";
        break;
    case 2:
        dayName = "Tuesday";
        break;
    case 3:
        dayName = "Wednesday";
        break;
    case 4:
        dayName = "Thursday";
        break;
    case 5:
        dayName = "Friday";
        break;
    case 6:
        dayName = "Saturday";
        break;
    case 7:
        dayName = "Sunday";
        break;
    default:
        dayName = "Invalid day";
}

console.log(dayName); // Wednesday
</pre><p><strong>Explanation:</strong></p><ul><li>The block for <code>case 3</code> is executed because <code>day</code> is 3.</li></ul><p><strong>2. Using </strong><code><strong>default</strong></code><strong> Case:</strong></p><p>The <code>default</code> case executes if none of the specified cases match.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let grade = ''B'';
let feedback;

switch (grade) {
    case ''A'':
        feedback = "Excellent!";
        break;
    case ''B'':
        feedback = "Good job!";
        break;
    case ''C'':
        feedback = "Well done!";
        break;
    case ''D'':
        feedback = "You passed.";
        break;
    case ''F'':
        feedback = "Better luck next time.";
        break;
    default:
        feedback = "Invalid grade.";
}

console.log(feedback); // Good job!
</pre><p><strong>Explanation:</strong></p><ul><li>The block for <code>case ''B''</code> is executed because <code>grade</code> is ''B''.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that takes a number between 1 and 12 and prints the corresponding month name.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Switch Statements&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Month Name&lt;/h1&gt;
    &lt;script&gt;
        let month = 5;
        let monthName;

        switch (month) {
            case 1:
                monthName = "January";
                break;
            case 2:
                monthName = "February";
                break;
            case 3:
                monthName = "March";
                break;
            case 4:
                monthName = "April";
                break;
            case 5:
                monthName = "May";
                break;
            case 6:
                monthName = "June";
                break;
            case 7:
                monthName = "July";
                break;
            case 8:
                monthName = "August";
                break;
            case 9:
                monthName = "September";
                break;
            case 10:
                monthName = "October";
                break;
            case 11:
                monthName = "November";
                break;
            case 12:
                monthName = "December";
                break;
            default:
                monthName = "Invalid month";
        }

        console.log(monthName); // May
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('fb5dd046-edd8-4667-9c26-1b693e2587c8', 2, '20de1ddc-7dec-4e12-b833-fca267b44a91', 'LESSON', 'Loops: for, while, do...while', NULL, '<h3>Lesson: Loops: for, while, do...while</h3><p><strong>Objective:</strong> Learn how to use different types of loops in JavaScript (<code>for</code>, <code>while</code>, <code>do...while</code>) to execute code repeatedly based on a condition.</p><h3>Key Concepts:</h3><p><strong>1. </strong><code><strong>for</strong></code><strong> Loop:</strong></p><p>A <code>for</code> loop is used when the number of iterations is known. It consists of three parts: initialization, condition, and increment.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">for (let i = 0; i &lt; 5; i++) {
    console.log(i); // 0, 1, 2, 3, 4
}
</pre><p><strong>Explanation:</strong></p><ul><li>The loop runs 5 times, incrementing <code>i</code> from 0 to 4.</li></ul><p><strong>2. </strong><code><strong>while</strong></code><strong> Loop:</strong></p><p>A <code>while</code> loop executes as long as the specified condition evaluates to true.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let i = 0;
while (i &lt; 5) {
    console.log(i); // 0, 1, 2, 3, 4
    i++;
}
</pre><p><strong>Explanation:</strong></p><ul><li>The loop runs while <code>i</code> is less than 5.</li></ul><p><strong>3. </strong><code><strong>do...while</strong></code><strong> Loop:</strong></p><p>A <code>do...while</code> loop is similar to a <code>while</code> loop, but it guarantees at least one execution of the loop body.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let i = 0;
do {
    console.log(i); // 0, 1, 2, 3, 4
    i++;
} while (i &lt; 5);
</pre><p><strong>Explanation:</strong></p><ul><li>The loop runs while <code>i</code> is less than 5, but executes the loop body at least once.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that prints numbers from 1 to 10 using <code>for</code>, <code>while</code>, and <code>do...while</code> loops.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Loops in JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Loops Example&lt;/h1&gt;
    &lt;script&gt;
        // For loop
        console.log("For loop:");
        for (let i = 1; i &lt;= 10; i++) {
            console.log(i);
        }

        // While loop
        console.log("While loop:");
        let i = 1;
        while (i &lt;= 10) {
            console.log(i);
            i++;
        }

        // Do...while loop
        console.log("Do...while loop:");
        i = 1;
        do {
            console.log(i);
            i++;
        } while (i &lt;= 10);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5a0afa41-7279-4f28-b5ca-4ddc23b0ecdd', 3, '20de1ddc-7dec-4e12-b833-fca267b44a91', 'LESSON', 'Breaking and continuing loops', NULL, '<h3>Lesson: Breaking and Continuing Loops</h3><p><strong>Objective:</strong> Learn how to use <code>break</code> and <code>continue</code> statements to control the execution of loops.</p><h3>Key Concepts:</h3><p><strong>1. </strong><code><strong>break</strong></code><strong> Statement:</strong></p><p>The <code>break</code> statement exits the loop immediately.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">for (let i = 0; i &lt; 10; i++) {
    if (i === 5) {
        break;
    }
    console.log(i); // 0, 1, 2, 3, 4
}
</pre><p><strong>Explanation:</strong></p><ul><li>The loop exits when <code>i</code> equals 5.</li></ul><p><strong>2. </strong><code><strong>continue</strong></code><strong> Statement:</strong></p><p>The <code>continue</code> statement skips the current iteration and proceeds to the next iteration.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">for (let i = 0; i &lt; 10; i++) {
    if (i === 5) {
        continue;
    }
    console.log(i); // 0, 1, 2, 3, 4, 6, 7, 8, 9
}
</pre><p><strong>Explanation:</strong></p><ul><li>The loop skips the iteration when <code>i</code> equals 5.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that prints numbers from 1 to 10 but skips multiples of 3 and stops when the number is greater than 7.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Break and Continue&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Break and Continue Example&lt;/h1&gt;
    &lt;script&gt;
        for (let i = 1; i &lt;= 10; i++) {
            if (i &gt; 7) {
                break;
            }
            if (i % 3 === 0) {
                continue;
            }
            console.log(i); // 1, 2, 4, 5, 7
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering control structures in JavaScript, you will be able to write more efficient and flexible code, handling complex logic and iterations with ease. These lessons provide the foundation for building robust JavaScript applications.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('cf5a707c-6d32-4c21-84f5-c1d5a5c4843d', 4, '20de1ddc-7dec-4e12-b833-fca267b44a91', 'VIDEO', 'Control Statements | Theory', NULL, '', 'https://www.youtube.com/watch?v=p-JoZ_UxwB8');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d8e7eb2a-74d9-4987-94cd-9ee207d51680', 0, 'e8860811-7ecd-44fc-8719-17b680ac5441', 'LESSON', 'Function declarations and expressions', NULL, '<h4>Lesson: Function Declarations and Expressions</h4><p><strong>Objective:</strong> Understand the differences between function declarations and function expressions in JavaScript. Learn how to define and use both types of functions effectively.</p><h3>Key Concepts:</h3><p><strong>1. Function Declarations:</strong></p><p>A function declaration defines a function with a specified name and can be called before it is defined due to hoisting.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">function functionName(parameters) {
    // function body
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function greet(name) {
    return `Hello, ${name}!`;
}

console.log(greet(''Alice'')); // Hello, Alice!
</pre><p><strong>Explanation:</strong></p><ul><li>The function <code>greet</code> is declared and can be called with an argument.</li></ul><p><strong>2. Function Expressions:</strong></p><p>A function expression defines a function as part of an expression and can be named or anonymous. It is not hoisted.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">const functionName = function(parameters) {
    // function body
};
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const greet = function(name) {
    return `Hello, ${name}!`;
};

console.log(greet(''Bob'')); // Hello, Bob!
</pre><p><strong>Explanation:</strong></p><ul><li>The function <code>greet</code> is defined as an anonymous function expression and assigned to a variable.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that defines a function to add two numbers using both function declarations and expressions.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Function Declarations and Expressions&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Function Examples&lt;/h1&gt;
    &lt;script&gt;
        // Function declaration
        function add(a, b) {
            return a + b;
        }

        // Function expression
        const addExpression = function(a, b) {
            return a + b;
        };

        console.log(add(2, 3)); // 5
        console.log(addExpression(2, 3)); // 5
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c31ad8a3-4cc0-4122-8e1d-65fb5d0885c7', 1, 'e8860811-7ecd-44fc-8719-17b680ac5441', 'LESSON', 'Arrow functions', NULL, '<h4>Lesson: Arrow Functions</h4><p><strong>Objective:</strong> Learn how to define and use arrow functions in JavaScript for more concise function syntax.</p><h3>Key Concepts:</h3><p><strong>1. Arrow Function Syntax:</strong></p><p>Arrow functions provide a shorter syntax for defining functions. They do not have their own <code>this</code> value.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">const functionName = (parameters) =&gt; {
    // function body
};
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const greet = (name) =&gt; {
    return `Hello, ${name}!`;
};

console.log(greet(''Charlie'')); // Hello, Charlie!
</pre><p><strong>Explanation:</strong></p><ul><li>The arrow function <code>greet</code> is defined with a single parameter and a return statement.</li></ul><p><strong>2. Implicit Return:</strong></p><p>If the function body contains only a single expression, you can omit the curly braces and the <code>return</code> keyword.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const greet = name =&gt; `Hello, ${name}!`;

console.log(greet(''Daisy'')); // Hello, Daisy!
</pre><p><strong>Explanation:</strong></p><ul><li>The arrow function <code>greet</code> implicitly returns the string.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that defines an arrow function to multiply two numbers and use implicit return.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Arrow Functions&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Arrow Function Example&lt;/h1&gt;
    &lt;script&gt;
        const multiply = (a, b) =&gt; a * b;

        console.log(multiply(4, 5)); // 20
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('ac266f01-8881-4e78-b732-56f6d4765a22', 2, 'e8860811-7ecd-44fc-8719-17b680ac5441', 'LESSON', 'Parameters and arguments', NULL, '<h4>Lesson: Parameters and Arguments</h4><p><strong>Objective:</strong> Understand how to define parameters in functions and pass arguments to functions in JavaScript.</p><h3>Key Concepts:</h3><p><strong>1. Function Parameters:</strong></p><p>Parameters are variables listed as part of the function definition.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function greet(name, age) {
    return `Hello, ${name}! You are ${age} years old.`;
}

console.log(greet(''Emily'', 30)); // Hello, Emily! You are 30 years old.
</pre><p><strong>Explanation:</strong></p><ul><li>The function <code>greet</code> has two parameters: <code>name</code> and <code>age</code>.</li></ul><p><strong>2. Function Arguments:</strong></p><p>Arguments are the values passed to the function when it is called.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">console.log(greet(''Frank'', 25)); // Hello, Frank! You are 25 years old.
</pre><p><strong>Explanation:</strong></p><ul><li>The function <code>greet</code> is called with arguments <code>''Frank''</code> and <code>25</code>.</li></ul><p><strong>3. Default Parameters:</strong></p><p>You can assign default values to parameters.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function greet(name = ''Guest'', age = ''unknown'') {
    return `Hello, ${name}! Your age is ${age}.`;
}

console.log(greet()); // Hello, Guest! Your age is unknown.
console.log(greet(''Grace'')); // Hello, Grace! Your age is unknown.
</pre><p><strong>Explanation:</strong></p><ul><li>The function <code>greet</code> uses default values if no arguments are provided.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that defines a function with default parameters to calculate the area of a rectangle.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Parameters and Arguments&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Default Parameters Example&lt;/h1&gt;
    &lt;script&gt;
        function calculateArea(length = 1, width = 1) {
            return length * width;
        }

        console.log(calculateArea()); // 1
        console.log(calculateArea(5)); // 5
        console.log(calculateArea(5, 3)); // 15
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('75554fcb-a041-4a46-9d49-c785f14aa138', 3, 'e8860811-7ecd-44fc-8719-17b680ac5441', 'LESSON', 'Return statements', NULL, '<h4>Lesson: Return Statements</h4><p><strong>Objective:</strong> Learn how to use return statements in functions to return values.</p><h3>Key Concepts:</h3><p><strong>1. Returning Values:</strong></p><p>A function can return a value using the <code>return</code> statement.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function add(a, b) {
    return a + b;
}

console.log(add(2, 3)); // 5
</pre><p><strong>Explanation:</strong></p><ul><li>The function <code>add</code> returns the sum of <code>a</code> and <code>b</code>.</li></ul><p><strong>2. Returning Early:</strong></p><p>A function can return early by using the <code>return</code> statement.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function checkNumber(num) {
    if (num &gt; 0) {
        return ''Positive'';
    }
    return ''Non-positive'';
}

console.log(checkNumber(5)); // Positive
console.log(checkNumber(-3)); // Non-positive
</pre><p><strong>Explanation:</strong></p><ul><li>The function <code>checkNumber</code> returns <code>''Positive''</code> if <code>num</code> is greater than 0, otherwise it returns <code>''Non-positive''</code>.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that defines a function to calculate the factorial of a number using return statements.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Return Statements&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Return Statements Example&lt;/h1&gt;
    &lt;script&gt;
        function factorial(n) {
            if (n === 0) {
                return 1;
            }
            return n * factorial(n - 1);
        }

        console.log(factorial(5)); // 120
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('83f44b41-1e34-41c9-847b-4511734a0ace', 4, 'e8860811-7ecd-44fc-8719-17b680ac5441', 'LESSON', 'Scope and closures', NULL, '<h4>Lesson: Scope and Closures</h4><p><strong>Objective:</strong> Understand the concepts of scope and closures in JavaScript, and how they affect variable accessibility and lifetime.</p><h3>Key Concepts:</h3><p><strong>1. Scope:</strong></p><p>Scope determines the accessibility of variables. JavaScript has function scope and block scope.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function outerFunction() {
    let outerVariable = ''I am outside!'';

    function innerFunction() {
        let innerVariable = ''I am inside!'';
        console.log(outerVariable); // Accessible
        console.log(innerVariable); // Accessible
    }

    innerFunction();
    console.log(outerVariable); // Accessible
    // console.log(innerVariable); // Error: innerVariable is not defined
}

outerFunction();
</pre><p><strong>Explanation:</strong></p><ul><li>Variables declared in an outer scope are accessible in inner scopes, but not vice versa.</li></ul><p><strong>2. Closures:</strong></p><p>A closure is a function that retains access to its lexical scope even when the function is executed outside that scope.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function makeCounter() {
    let count = 0;

    return function() {
        count++;
        return count;
    };
}

const counter = makeCounter();
console.log(counter()); // 1
console.log(counter()); // 2
console.log(counter()); // 3
</pre><p><strong>Explanation:</strong></p><ul><li>The returned function retains access to the <code>count</code> variable, demonstrating closure.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that defines a function to create a counter using closures.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Scope and Closures&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Closures Example&lt;/h1&gt;
    &lt;script&gt;
        function createCounter() {
            let count = 0;

            return function() {
                count++;
                return count;
            };
        }

        const myCounter = createCounter();
        console.log(myCounter()); // 1
        console.log(myCounter()); // 2
        console.log(myCounter()); // 3
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering functions in JavaScript, including declarations and expressions, arrow functions, parameters and arguments, return statements, and scope and closures, you will be able to write more modular, reusable, and maintainable code. These lessons provide the foundation for advanced JavaScript programming techniques.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('23c969cd-0dc7-46fc-80d1-aec3fa827a91', 0, '66442f0b-4d4f-4eb4-9d0a-dc0fbe9ae914', 'LESSON', 'Creating and manipulating objects', NULL, '<h4>Lesson: Creating and Manipulating Objects</h4><p><strong>Objective:</strong> Learn how to create and manipulate objects in JavaScript. Understand how to define properties and methods, access and modify object properties, and use built-in object methods.</p><h3>Key Concepts:</h3><p><strong>1. Creating Objects:</strong></p><p>Objects in JavaScript are collections of key-value pairs. They can be created using object literals or the <code>Object</code> constructor.</p><p><strong>Example (Object Literal):</strong></p><pre class="ql-syntax" spellcheck="false">let person = {
    firstName: ''John'',
    lastName: ''Doe'',
    age: 30,
    greet: function() {
        return `Hello, my name is ${this.firstName} ${this.lastName}.`;
    }
};

console.log(person.greet()); // Hello, my name is John Doe.
</pre><p><strong>Example (Object Constructor):</strong></p><pre class="ql-syntax" spellcheck="false">let person = new Object();
person.firstName = ''Jane'';
person.lastName = ''Doe'';
person.age = 25;
person.greet = function() {
    return `Hello, my name is ${this.firstName} ${this.lastName}.`;
};

console.log(person.greet()); // Hello, my name is Jane Doe.
</pre><p><strong>2. Accessing and Modifying Object Properties:</strong></p><p>Object properties can be accessed and modified using dot notation or bracket notation.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let car = {
    make: ''Toyota'',
    model: ''Camry'',
    year: 2020
};

// Accessing properties
console.log(car.make); // Toyota
console.log(car[''model'']); // Camry

// Modifying properties
car.year = 2021;
car[''color''] = ''red'';

console.log(car.year); // 2021
console.log(car.color); // red
</pre><p><strong>3. Deleting Properties:</strong></p><p>Properties can be deleted using the <code>delete</code> keyword.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">delete car.color;
console.log(car.color); // undefined
</pre><p><strong>4. Built-in Object Methods:</strong></p><p>JavaScript provides built-in methods to work with objects, such as <code>Object.keys()</code>, <code>Object.values()</code>, and <code>Object.entries()</code>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let keys = Object.keys(person);
let values = Object.values(person);
let entries = Object.entries(person);

console.log(keys); // ["firstName", "lastName", "age", "greet"]
console.log(values); // ["Jane", "Doe", 25, ƒ]
console.log(entries); // [["firstName", "Jane"], ["lastName", "Doe"], ["age", 25], ["greet", ƒ]]
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that creates a student object and adds a method to calculate the student''s average grade.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Creating and Manipulating Objects&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Student Object Example&lt;/h1&gt;
    &lt;script&gt;
        let student = {
            name: ''Alice'',
            grades: [85, 90, 78, 92],
            calculateAverage: function() {
                let sum = this.grades.reduce((a, b) =&gt; a + b, 0);
                return sum / this.grades.length;
            }
        };

        console.log(`Student Name: ${student.name}`);
        console.log(`Average Grade: ${student.calculateAverage()}`); // Average Grade: 86.25
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('9690419c-e937-4991-a608-7c8ff6456bc8', 1, '66442f0b-4d4f-4eb4-9d0a-dc0fbe9ae914', 'LESSON', 'Array methods and properties', NULL, '<h4>Lesson: Array Methods and Properties</h4><p><strong>Objective:</strong> Understand the various methods and properties available for arrays in JavaScript. Learn how to manipulate arrays using built-in methods.</p><h3>Key Concepts:</h3><p><strong>1. Array Properties:</strong></p><p>Arrays have several properties, the most common being <code>length</code>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let fruits = [''Apple'', ''Banana'', ''Cherry''];
console.log(fruits.length); // 3
</pre><p><strong>2. Common Array Methods:</strong></p><ul><li><code><strong>push()</strong></code><strong>:</strong> Adds one or more elements to the end of an array.</li><li><code><strong>pop()</strong></code><strong>:</strong> Removes the last element from an array.</li><li><code><strong>shift()</strong></code><strong>:</strong> Removes the first element from an array.</li><li><code><strong>unshift()</strong></code><strong>:</strong> Adds one or more elements to the beginning of an array.</li><li><code><strong>splice()</strong></code><strong>:</strong> Adds or removes elements from an array.</li><li><code><strong>slice()</strong></code><strong>:</strong> Returns a shallow copy of a portion of an array.</li><li><code><strong>concat()</strong></code><strong>:</strong> Merges two or more arrays.</li><li><code><strong>indexOf()</strong></code><strong>:</strong> Returns the first index of a specified element.</li><li><code><strong>includes()</strong></code><strong>:</strong> Checks if an array includes a specified element.</li><li><code><strong>forEach()</strong></code><strong>:</strong> Executes a provided function once for each array element.</li><li><code><strong>map()</strong></code><strong>:</strong> Creates a new array with the results of calling a provided function on every element.</li><li><code><strong>filter()</strong></code><strong>:</strong> Creates a new array with all elements that pass the test implemented by the provided function.</li><li><code><strong>reduce()</strong></code><strong>:</strong> Executes a reducer function on each element of the array, resulting in a single output value.</li></ul><p><strong>Examples:</strong></p><pre class="ql-syntax" spellcheck="false">let numbers = [1, 2, 3, 4, 5];

// push
numbers.push(6);
console.log(numbers); // [1, 2, 3, 4, 5, 6]

// pop
numbers.pop();
console.log(numbers); // [1, 2, 3, 4, 5]

// shift
numbers.shift();
console.log(numbers); // [2, 3, 4, 5]

// unshift
numbers.unshift(1);
console.log(numbers); // [1, 2, 3, 4, 5]

// splice
numbers.splice(2, 0, ''a'', ''b'');
console.log(numbers); // [1, 2, ''a'', ''b'', 3, 4, 5]

// slice
let newNumbers = numbers.slice(1, 4);
console.log(newNumbers); // [2, ''a'', ''b'']

// concat
let moreNumbers = newNumbers.concat([6, 7, 8]);
console.log(moreNumbers); // [2, ''a'', ''b'', 6, 7, 8]

// indexOf
console.log(numbers.indexOf(3)); // 4

// includes
console.log(numbers.includes(''a'')); // true

// forEach
numbers.forEach(num =&gt; console.log(num));

// map
let squared = numbers.map(num =&gt; typeof num === ''number'' ? num * num : num);
console.log(squared); // [1, 4, ''a'', ''b'', 9, 16, 25]

// filter
let filtered = numbers.filter(num =&gt; typeof num === ''number'');
console.log(filtered); // [1, 2, 3, 4, 5]

// reduce
let sum = filtered.reduce((acc, num) =&gt; acc + num, 0);
console.log(sum); // 15
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that creates an array of numbers and performs various manipulations using array methods.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Array Methods and Properties&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Array Methods Example&lt;/h1&gt;
    &lt;script&gt;
        let numbers = [10, 20, 30, 40, 50];

        // Add a number to the end
        numbers.push(60);
        console.log(numbers); // [10, 20, 30, 40, 50, 60]

        // Remove the first number
        numbers.shift();
        console.log(numbers); // [20, 30, 40, 50, 60]

        // Find the index of 40
        let index = numbers.indexOf(40);
        console.log(index); // 2

        // Check if 25 is in the array
        let hasTwentyFive = numbers.includes(25);
        console.log(hasTwentyFive); // false

        // Create a new array with squared values
        let squared = numbers.map(num =&gt; num * num);
        console.log(squared); // [400, 900, 1600, 2500, 3600]

        // Filter numbers greater than 1000
        let filtered = squared.filter(num =&gt; num &gt; 1000);
        console.log(filtered); // [1600, 2500, 3600]

        // Calculate the sum of the numbers
        let sum = numbers.reduce((acc, num) =&gt; acc + num, 0);
        console.log(sum); // 200
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('5a3fd787-4c2b-4d30-b0f8-837287651d12', 2, '66442f0b-4d4f-4eb4-9d0a-dc0fbe9ae914', 'LESSON', 'Iterating over arrays', NULL, '<h4>Lesson: Iterating Over Arrays</h4><p><strong>Objective:</strong> Learn how to iterate over arrays using different methods in JavaScript, including <code>for</code>, <code>for...of</code>, and <code>forEach</code>.</p><h3>Key Concepts:</h3><p><strong>1. </strong><code><strong>for</strong></code><strong> Loop:</strong></p><p>The <code>for</code> loop iterates over array elements using an index.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let fruits = [''Apple'', ''Banana'', ''Cherry''];

for (let i = 0; i &lt; fruits.length; i++) {
    console.log(fruits[i]); // Apple, Banana, Cherry
}
</pre><p><strong>2. </strong><code><strong>for...of</strong></code><strong> Loop:</strong></p><p>The <code>for...of</code> loop iterates over array elements directly.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">for (let fruit of fruits) {
    console.log(fruit); // Apple, Banana, Cherry
}
</pre><p><strong>3. </strong><code><strong>forEach</strong></code><strong> Method:</strong></p><p>The <code>forEach</code> method executes a provided function once for each array element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">fruits.forEach(fruit =&gt; console.log(fruit)); // Apple, Banana, Cherry
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that creates an array of numbers and iterates over it using <code>for</code>, <code>for...of</code>, and <code>forEach</code>.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Iterating Over Arrays&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Array Iteration Example&lt;/h1&gt;
    &lt;script&gt;
        let numbers = [1, 2, 3, 4, 5];

        // Using for loop
        console.log(''Using for loop:'');
        for (let i = 0; i &lt; numbers.length; i++) {
            console.log(numbers[i]);
        }

        // Using for...of loop
        console.log(''Using for...of loop:'');
        for (let num of numbers) {
            console.log(num);
        }

        // Using forEach method
        console.log(''Using forEach method:'');
        numbers.forEach(num =&gt; console.log(num));
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('45e0e809-e4d1-4ac3-b13d-3854da307d6a', 3, '66442f0b-4d4f-4eb4-9d0a-dc0fbe9ae914', 'LESSON', 'Nested objects and arrays', NULL, '<h4>Lesson: Nested Objects and Arrays</h4><p><strong>Objective:</strong> Understand how to create and manipulate nested objects and arrays in JavaScript. Learn how to access and modify elements in complex data structures.</p><h3>Key Concepts:</h3><p><strong>1. Nested Objects:</strong></p><p>Objects can contain other objects as properties.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let company = {
    name: ''Tech Corp'',
    address: {
        street: ''123 Main St'',
        city: ''Techville'',
        state: ''TX''
    },
    employees: [
        {
            name: ''Alice'',
            position: ''Developer''
        },
        {
            name: ''Bob'',
            position: ''Designer''
        }
    ]
};

console.log(company.address.city); // Techville
console.log(company.employees[1].name); // Bob
</pre><p><strong>2. Nested Arrays:</strong></p><p>Arrays can contain other arrays as elements.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
];

console.log(matrix[1][2]); // 6
</pre><p><strong>3. Combining Objects and Arrays:</strong></p><p>Objects and arrays can be combined in various ways to create complex data structures.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let school = {
    name: ''Greenwood High'',
    classes: [
        {
            name: ''Math 101'',
            students: [''John'', ''Jane'', ''Jack'']
        },
        {
            name: ''Science 101'',
            students: [''Mary'', ''Mark'', ''Mia'']
        }
    ]
};

console.log(school.classes[0].students[1]); // Jane
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that creates a nested object representing a library and prints the name of the second book''s author.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Nested Objects and Arrays&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Library Example&lt;/h1&gt;
    &lt;script&gt;
        let library = {
            name: ''City Library'',
            books: [
                {
                    title: ''The Great Gatsby'',
                    author: ''F. Scott Fitzgerald''
                },
                {
                    title: ''To Kill a Mockingbird'',
                    author: ''Harper Lee''
                },
                {
                    title: ''1984'',
                    author: ''George Orwell''
                }
            ]
        };

        console.log(`The author of the second book is ${library.books[1].author}.`); // The author of the second book is Harper Lee.
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering the creation and manipulation of objects and arrays in JavaScript, including understanding array methods and properties, iterating over arrays, and working with nested objects and arrays, you will be able to handle complex data structures with ease. These lessons provide the foundation for building sophisticated JavaScript applications.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('ef2f990e-0773-4a89-aa12-9437cdeec8ec', 0, '4487ad9c-6b9d-4002-b1d9-f47ea0b40982', 'LESSON', 'Selecting DOM elements', NULL, '<h4>Lesson: Selecting DOM Elements</h4><p><strong>Objective:</strong> Learn how to select and manipulate DOM (Document Object Model) elements using JavaScript. Understand the different methods available for selecting elements.</p><h3>Key Concepts:</h3><p><strong>1. Selecting Elements by ID:</strong></p><p>Use <code>document.getElementById()</code> to select an element by its ID.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let element = document.getElementById(''myElement'');
console.log(element);
</pre><p><strong>2. Selecting Elements by Class Name:</strong></p><p>Use <code>document.getElementsByClassName()</code> to select elements by their class name. This method returns a live HTMLCollection.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let elements = document.getElementsByClassName(''myClass'');
console.log(elements);
</pre><p><strong>3. Selecting Elements by Tag Name:</strong></p><p>Use <code>document.getElementsByTagName()</code> to select elements by their tag name. This method returns a live HTMLCollection.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let elements = document.getElementsByTagName(''p'');
console.log(elements);
</pre><p><strong>4. Selecting Elements with Query Selector:</strong></p><p>Use <code>document.querySelector()</code> to select the first element that matches a CSS selector.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let element = document.querySelector(''.myClass'');
console.log(element);
</pre><p><strong>5. Selecting Multiple Elements with Query Selector All:</strong></p><p>Use <code>document.querySelectorAll()</code> to select all elements that match a CSS selector. This method returns a static NodeList.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let elements = document.querySelectorAll(''.myClass'');
console.log(elements);
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that selects an element by its ID and changes its text content.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Selecting DOM Elements&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1 id="myElement"&gt;Hello, World!&lt;/h1&gt;
    &lt;script&gt;
        let element = document.getElementById(''myElement'');
        element.textContent = ''Hello, JavaScript!'';
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('1a6fb965-2b88-4d18-9087-5a2b06e522ca', 1, '4487ad9c-6b9d-4002-b1d9-f47ea0b40982', 'LESSON', 'Modifying element content and attributes', NULL, '<h4>Lesson: Modifying Element Content and Attributes</h4><p><strong>Objective:</strong> Learn how to modify the content and attributes of DOM elements using JavaScript.</p><h3>Key Concepts:</h3><p><strong>1. Modifying Text Content:</strong></p><p>Use <code>textContent</code> to change the text content of an element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let element = document.getElementById(''myElement'');
element.textContent = ''New Text Content'';
</pre><p><strong>2. Modifying Inner HTML:</strong></p><p>Use <code>innerHTML</code> to change the HTML content of an element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let element = document.getElementById(''myElement'');
element.innerHTML = ''&lt;strong&gt;Bold Text&lt;/strong&gt;'';
</pre><p><strong>3. Changing Attributes:</strong></p><p>Use <code>setAttribute()</code> to change an attribute of an element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let element = document.getElementById(''myElement'');
element.setAttribute(''class'', ''newClass'');
</pre><p><strong>4. Removing Attributes:</strong></p><p>Use <code>removeAttribute()</code> to remove an attribute from an element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let element = document.getElementById(''myElement'');
element.removeAttribute(''class'');
</pre><p><strong>5. Modifying Style:</strong></p><p>Use the <code>style</code> property to change the CSS style of an element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let element = document.getElementById(''myElement'');
element.style.color = ''blue'';
element.style.fontSize = ''20px'';
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that changes the text content, HTML content, and style of an element.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Modifying Element Content and Attributes&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1 id="myElement"&gt;Hello, World!&lt;/h1&gt;
    &lt;script&gt;
        let element = document.getElementById(''myElement'');

        // Change text content
        element.textContent = ''Hello, JavaScript!'';

        // Change HTML content
        element.innerHTML = ''&lt;strong&gt;Hello, JavaScript!&lt;/strong&gt;'';

        // Change style
        element.style.color = ''green'';
        element.style.fontSize = ''24px'';
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a07e3a44-4daf-45c1-bc29-a87a116251e9', 2, '4487ad9c-6b9d-4002-b1d9-f47ea0b40982', 'LESSON', 'Creating and removing elements', NULL, '<h4>Lesson: Creating and Removing Elements</h4><p><strong>Objective:</strong> Learn how to create and remove DOM elements dynamically using JavaScript.</p><h3>Key Concepts:</h3><p><strong>1. Creating Elements:</strong></p><p>Use <code>document.createElement()</code> to create a new element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let newElement = document.createElement(''p'');
newElement.textContent = ''This is a new paragraph.'';
document.body.appendChild(newElement);
</pre><p><strong>2. Appending Elements:</strong></p><p>Use <code>appendChild()</code> to append a new element as the last child of a parent element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let parentElement = document.getElementById(''parent'');
parentElement.appendChild(newElement);
</pre><p><strong>3. Removing Elements:</strong></p><p>Use <code>removeChild()</code> to remove an element from the DOM.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let elementToRemove = document.getElementById(''myElement'');
elementToRemove.parentNode.removeChild(elementToRemove);
</pre><p><strong>4. Replacing Elements:</strong></p><p>Use <code>replaceChild()</code> to replace an existing element with a new element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let newElement = document.createElement(''div'');
newElement.textContent = ''This is a new div.'';
let oldElement = document.getElementById(''oldElement'');
oldElement.parentNode.replaceChild(newElement, oldElement);
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that creates a new list item and adds it to an existing list. Then remove the first item from the list.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Creating and Removing Elements&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;ul id="myList"&gt;
        &lt;li&gt;Item 1&lt;/li&gt;
        &lt;li&gt;Item 2&lt;/li&gt;
        &lt;li&gt;Item 3&lt;/li&gt;
    &lt;/ul&gt;
    &lt;script&gt;
        let newItem = document.createElement(''li'');
        newItem.textContent = ''Item 4'';

        let list = document.getElementById(''myList'');
        list.appendChild(newItem); // Add new item

        let firstItem = list.getElementsByTagName(''li'')[0];
        list.removeChild(firstItem); // Remove first item
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('c0f99505-f67c-4e32-aa43-00be86727417', 3, '4487ad9c-6b9d-4002-b1d9-f47ea0b40982', 'LESSON', 'Event handling and listeners', NULL, '<h4>Lesson: Event Handling and Listeners</h4><p><strong>Objective:</strong> Understand how to handle events in JavaScript. Learn how to add and remove event listeners to DOM elements.</p><h3>Key Concepts:</h3><p><strong>1. Adding Event Listeners:</strong></p><p>Use <code>addEventListener()</code> to attach an event handler to an element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let button = document.getElementById(''myButton'');
button.addEventListener(''click'', function() {
    alert(''Button clicked!'');
});
</pre><p><strong>2. Removing Event Listeners:</strong></p><p>Use <code>removeEventListener()</code> to remove an event handler from an element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function handleClick() {
    alert(''Button clicked!'');
}

let button = document.getElementById(''myButton'');
button.addEventListener(''click'', handleClick);

// Later in the code
button.removeEventListener(''click'', handleClick);
</pre><p><strong>3. Event Object:</strong></p><p>Event handlers can access the event object, which contains information about the event.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let button = document.getElementById(''myButton'');
button.addEventListener(''click'', function(event) {
    console.log(event.type); // "click"
    console.log(event.target); // The button element
});
</pre><p><strong>4. Event Propagation:</strong></p><p>Understand event propagation phases: capturing, target, and bubbling.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let parent = document.getElementById(''parent'');
let child = document.getElementById(''child'');

parent.addEventListener(''click'', function() {
    console.log(''Parent clicked!'');
}, true); // Capturing phase

child.addEventListener(''click'', function() {
    console.log(''Child clicked!'');
}); // Bubbling phase
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that changes the background color of a div when it is clicked.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Event Handling and Listeners&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id="colorBox" style="width: 100px; height: 100px; background-color: lightgray;"&gt;
        Click me!
    &lt;/div&gt;
    &lt;script&gt;
        let colorBox = document.getElementById(''colorBox'');

        colorBox.addEventListener(''click'', function() {
            this.style.backgroundColor = ''lightblue'';
        });
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering DOM manipulation, including selecting elements, modifying content and attributes, creating and removing elements, and handling events, you will be able to create dynamic and interactive web pages with ease. These lessons provide the foundation for building sophisticated client-side applications in JavaScript.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('61309ec2-01fb-4173-8bae-ac9c9935921a', 1, '9f6e63e8-a037-4b51-911d-cc4da22189f1', 'LESSON', 'Callbacks', NULL, '<h4>Lesson: Callbacks</h4><p><strong>Objective:</strong> Understand how callbacks work and how they are used to handle asynchronous operations.</p><p><strong>1. Definition:</strong> A callback is a function passed into another function as an argument, which is then invoked inside the outer function to complete some kind of routine or action.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function fetchData(callback) {
    setTimeout(() =&gt; {
        const data = { name: ''John'', age: 30 };
        callback(data);
    }, 1000);
}

function displayData(data) {
    console.log(`Name: ${data.name}, Age: ${data.age}`);
}

fetchData(displayData);
</pre><p><strong>Explanation:</strong></p><ul><li><code>fetchData</code> simulates an asynchronous operation using <code>setTimeout</code> and invokes the callback function <code>displayData</code> with the fetched data.</li></ul><p><strong>2. Handling Errors with Callbacks:</strong></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function fetchData(callback) {
    setTimeout(() =&gt; {
        const error = false; // Simulate an error
        if (error) {
            callback(''Error occurred'', null);
        } else {
            const data = { name: ''John'', age: 30 };
            callback(null, data);
        }
    }, 1000);
}

function displayData(err, data) {
    if (err) {
        console.error(err);
    } else {
        console.log(`Name: ${data.name}, Age: ${data.age}`);
    }
}

fetchData(displayData);
</pre><p><strong>Explanation:</strong></p><ul><li><code>fetchData</code> simulates error handling by calling the callback with an error message if an error occurs, or with data if successful.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that fetches data and handles errors using callbacks.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Callbacks&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Callbacks Example&lt;/h1&gt;
    &lt;script&gt;
        function fetchData(callback) {
            setTimeout(() =&gt; {
                const error = false; // Change to true to simulate an error
                if (error) {
                    callback(''Error occurred'', null);
                } else {
                    const data = { name: ''Jane'', age: 25 };
                    callback(null, data);
                }
            }, 1000);
        }

        function displayData(err, data) {
            if (err) {
                console.error(err);
            } else {
                console.log(`Name: ${data.name}, Age: ${data.age}`);
            }
        }

        fetchData(displayData);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('03f49914-b74e-4110-ad02-e89b22eabc8c', 2, '9f6e63e8-a037-4b51-911d-cc4da22189f1', 'LESSON', 'Promises', NULL, '<h4>Lesson: Promises</h4><p><strong>Objective:</strong> Learn about promises, how to create them, and how to use them to handle asynchronous operations more effectively than callbacks.</p><p><strong>1. Definition:</strong> A promise is an object representing the eventual completion or failure of an asynchronous operation.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let promise = new Promise((resolve, reject) =&gt; {
    let success = true; // Change to false to simulate an error
    setTimeout(() =&gt; {
        if (success) {
            resolve(''Operation succeeded'');
        } else {
            reject(''Operation failed'');
        }
    }, 1000);
});

promise
    .then(result =&gt; console.log(result))
    .catch(error =&gt; console.error(error));
</pre><p><strong>Explanation:</strong></p><ul><li>The promise is created with an executor function that performs an asynchronous operation and calls <code>resolve</code> if successful or <code>reject</code> if an error occurs.</li><li>The <code>then</code> method handles the resolved value, and the <code>catch</code> method handles any errors.</li></ul><p><strong>2. Chaining Promises:</strong></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let promise = new Promise((resolve, reject) =&gt; {
    setTimeout(() =&gt; resolve(1), 1000);
});

promise
    .then(result =&gt; {
        console.log(result); // 1
        return result * 2;
    })
    .then(result =&gt; {
        console.log(result); // 2
        return result * 2;
    })
    .then(result =&gt; {
        console.log(result); // 4
    });
</pre><p><strong>Explanation:</strong></p><ul><li>Promises can be chained to handle sequences of asynchronous operations.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that uses promises to fetch data and handle errors.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Promises&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Promises Example&lt;/h1&gt;
    &lt;script&gt;
        function fetchData() {
            return new Promise((resolve, reject) =&gt; {
                setTimeout(() =&gt; {
                    let success = true; // Change to false to simulate an error
                    if (success) {
                        resolve({ name: ''Jake'', age: 28 });
                    } else {
                        reject(''Error occurred'');
                    }
                }, 1000);
            });
        }

        fetchData()
            .then(data =&gt; console.log(`Name: ${data.name}, Age: ${data.age}`))
            .catch(error =&gt; console.error(error));
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('888a20aa-c9a0-41a1-90ce-b8c625fb6376', 3, '9f6e63e8-a037-4b51-911d-cc4da22189f1', 'LESSON', 'Async/await', NULL, '<h4>Lesson: Async/Await</h4><p><strong>Objective:</strong> Understand how to use the async/await syntax to write cleaner and more readable asynchronous code.</p><p><strong>1. Definition:</strong> <code>async</code> functions are functions that return a promise. <code>await</code> pauses the execution of the function, waiting for the promise to resolve.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">async function fetchData() {
    let promise = new Promise((resolve, reject) =&gt; {
        setTimeout(() =&gt; resolve(''Data fetched successfully''), 1000);
    });

    let result = await promise;
    console.log(result); // Data fetched successfully
}

fetchData();
</pre><p><strong>Explanation:</strong></p><ul><li><code>fetchData</code> is an async function that waits for the promise to resolve before logging the result.</li></ul><p><strong>2. Handling Errors with Async/Await:</strong></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">async function fetchData() {
    let promise = new Promise((resolve, reject) =&gt; {
        setTimeout(() =&gt; reject(''Error fetching data''), 1000);
    });

    try {
        let result = await promise;
        console.log(result);
    } catch (error) {
        console.error(error); // Error fetching data
    }
}

fetchData();
</pre><p><strong>Explanation:</strong></p><ul><li>The <code>try...catch</code> block is used to handle errors when using async/await.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that fetches data using async/await and handles errors.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Async/Await&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Async/Await Example&lt;/h1&gt;
    &lt;script&gt;
        async function fetchData() {
            let promise = new Promise((resolve, reject) =&gt; {
                setTimeout(() =&gt; {
                    let success = true; // Change to false to simulate an error
                    if (success) {
                        resolve({ name: ''Lily'', age: 22 });
                    } else {
                        reject(''Error occurred'');
                    }
                }, 1000);
            });

            try {
                let data = await promise;
                console.log(`Name: ${data.name}, Age: ${data.age}`);
            } catch (error) {
                console.error(error);
            }
        }

        fetchData();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering asynchronous JavaScript, including understanding asynchronous programming, using callbacks, promises, and the async/await syntax, you will be able to handle asynchronous operations more effectively and write cleaner, more maintainable code. These lessons provide the foundation for building sophisticated JavaScript applications that can manage multiple tasks concurrently.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('7071345a-70e6-4976-935b-d9ffd3cf5405', 0, 'b1f13eaf-9fd1-4b93-8bab-71cc3b1ee9b0', 'LESSON', 'Higher-order functions', NULL, '<h4>Lesson: Advanced Functions</h4><p><strong>Objective:</strong> Understand advanced concepts of JavaScript functions including higher-order functions, callback functions, function currying, and recursion. These concepts will allow you to write more powerful and flexible code.</p><h3>Key Concepts:</h3><h4>Higher-Order Functions</h4><p><strong>Objective:</strong> Learn what higher-order functions are and how to use them to create more modular and reusable code.</p><p><strong>1. Definition:</strong> A higher-order function is a function that either takes one or more functions as arguments or returns a function as its result.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function higherOrder(fn) {
    return function(value) {
        return fn(value);
    };
}

function greet(name) {
    return `Hello, ${name}!`;
}

const greetUser = higherOrder(greet);
console.log(greetUser(''Alice'')); // Hello, Alice!
</pre><p><strong>Explanation:</strong></p><ul><li><code>higherOrder</code> is a higher-order function because it takes a function (<code>fn</code>) as an argument and returns a new function.</li></ul><p><strong>2. Common Higher-Order Functions:</strong></p><ul><li><code>map()</code>, <code>filter()</code>, <code>reduce()</code> are common higher-order functions used with arrays.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const numbers = [1, 2, 3, 4, 5];

const doubled = numbers.map(num =&gt; num * 2);
console.log(doubled); // [2, 4, 6, 8, 10]

const evens = numbers.filter(num =&gt; num % 2 === 0);
console.log(evens); // [2, 4]

const sum = numbers.reduce((total, num) =&gt; total + num, 0);
console.log(sum); // 15
</pre><p><strong>Explanation:</strong></p><ul><li><code>map</code> transforms each element in the array.</li><li><code>filter</code> creates a new array with elements that pass a condition.</li><li><code>reduce</code> accumulates a single value from the array.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('739c23f1-fbb8-4f82-9eb5-66678c4a7160', 1, 'b1f13eaf-9fd1-4b93-8bab-71cc3b1ee9b0', 'LESSON', 'Callback functions', NULL, '<h4>Lesson: Callback Functions</h4><p><strong>Objective:</strong> Understand what callback functions are and how they are used to handle asynchronous operations.</p><p><strong>1. Definition:</strong> A callback function is a function that is passed as an argument to another function and is executed after some operation has been completed.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function fetchData(callback) {
    setTimeout(() =&gt; {
        const data = { name: ''John'', age: 30 };
        callback(data);
    }, 1000);
}

function displayData(data) {
    console.log(`Name: ${data.name}, Age: ${data.age}`);
}

fetchData(displayData);
</pre><p><strong>Explanation:</strong></p><ul><li><code>fetchData</code> takes a <code>callback</code> function and simulates an asynchronous operation using <code>setTimeout</code>.</li><li><code>displayData</code> is passed as the callback and is executed after the data is fetched.</li></ul><p><strong>2. Using Callbacks with Event Listeners:</strong> Callbacks are commonly used with event listeners.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">document.getElementById(''myButton'').addEventListener(''click'', function() {
    alert(''Button was clicked!'');
});
</pre><p><strong>Explanation:</strong></p><ul><li>The anonymous function is a callback that is executed when the button is clicked.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('6297bafe-9ba4-4445-88ed-e5f69135b6c9', 2, 'b1f13eaf-9fd1-4b93-8bab-71cc3b1ee9b0', 'LESSON', 'Function currying', NULL, '<h4>Lesson: Function Currying</h4><p><strong>Objective:</strong> Learn about function currying and how it helps in creating reusable and configurable functions.</p><p><strong>1. Definition:</strong> Currying is the process of transforming a function that takes multiple arguments into a sequence of functions that each take a single argument.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function multiply(a) {
    return function(b) {
        return a * b;
    };
}

const double = multiply(2);
console.log(double(5)); // 10

const triple = multiply(3);
console.log(triple(5)); // 15
</pre><p><strong>Explanation:</strong></p><ul><li><code>multiply</code> is a curried function that returns another function.</li><li><code>double</code> and <code>triple</code> are functions created by currying that can be reused with different values.</li></ul><p><strong>2. Using Currying with More Arguments:</strong></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function add(a) {
    return function(b) {
        return function(c) {
            return a + b + c;
        };
    };
}

console.log(add(1)(2)(3)); // 6
</pre><p><strong>Explanation:</strong></p><ul><li><code>add</code> is a curried function that takes three arguments in sequence.</li></ul>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('7e57f2f7-52fb-443c-8009-a55f6085150e', 0, '0802330e-801e-4560-837e-ec318192f029', 'LESSON', 'Try...catch statements', NULL, '<h4>Lesson: Error Handling and Debugging</h4><p><strong>Objective:</strong> Learn how to handle errors gracefully and debug your JavaScript code effectively using various techniques and tools. Understand the use of <code>try...catch</code> statements, throwing custom errors, debugging techniques, and console methods for debugging.</p><h3>Key Concepts:</h3><h4>Try...catch Statements</h4><p><strong>Objective:</strong> Understand how to use <code>try...catch</code> statements to handle errors in JavaScript.</p><p><strong>1. Definition:</strong> The <code>try...catch</code> statement allows you to test a block of code for errors and handle them gracefully if they occur.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">try {
    // Block of code to try
} catch (error) {
    // Block of code to handle errors
}
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">try {
    let result = riskyOperation(); // Assume this may throw an error
    console.log(result);
} catch (error) {
    console.error(''An error occurred:'', error.message);
}
</pre><p><strong>Explanation:</strong></p><ul><li>The <code>try</code> block contains code that may throw an error.</li><li>If an error occurs, the code in the <code>catch</code> block is executed, allowing you to handle the error.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that attempts to parse a JSON string and handles any errors that occur.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Try...catch Statements&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;JSON Parsing Example&lt;/h1&gt;
    &lt;script&gt;
        let jsonString = ''{"name": "John", "age": 30}'';

        try {
            let user = JSON.parse(jsonString);
            console.log(user);
        } catch (error) {
            console.error(''Invalid JSON:'', error.message);
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('304c428a-4daa-487b-9beb-2feea4898648', 1, '0802330e-801e-4560-837e-ec318192f029', 'LESSON', 'Throwing custom errors', NULL, '<h4>Lesson: Throwing Custom Errors</h4><p><strong>Objective:</strong> Learn how to throw custom errors in JavaScript to provide more meaningful error messages.</p><p><strong>1. Definition:</strong> You can throw custom errors using the <code>throw</code> statement along with an <code>Error</code> object.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">throw new Error(''Custom error message'');
</pre><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function validateAge(age) {
    if (age &lt; 0 || age &gt; 120) {
        throw new Error(''Invalid age provided'');
    }
    return true;
}

try {
    validateAge(150);
} catch (error) {
    console.error(''Error:'', error.message);
}
</pre><p><strong>Explanation:</strong></p><ul><li>The <code>throw</code> statement is used to throw a custom error with a specific message.</li><li>The <code>catch</code> block handles the custom error.</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that validates user input and throws custom errors if the input is invalid.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Throwing Custom Errors&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Input Validation Example&lt;/h1&gt;
    &lt;script&gt;
        function validateInput(input) {
            if (input === '''') {
                throw new Error(''Input cannot be empty'');
            }
            if (input.length &lt; 5) {
                throw new Error(''Input must be at least 5 characters long'');
            }
            return true;
        }

        try {
            let userInput = ''abc''; // Change this to test different inputs
            validateInput(userInput);
        } catch (error) {
            console.error(''Validation Error:'', error.message);
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('e58654a7-0161-4470-a980-7ff0c33f4a4e', 2, '0802330e-801e-4560-837e-ec318192f029', 'LESSON', 'Debugging techniques and tools', NULL, '<h4>Lesson: Debugging Techniques and Tools</h4><p><strong>Objective:</strong> Learn various techniques and tools for debugging JavaScript code to identify and fix issues effectively.</p><p><strong>1. Using Breakpoints:</strong> Set breakpoints in your code to pause execution and inspect variables and state.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let x = 10;
let y = 20;
let sum = x + y; // Set a breakpoint here
console.log(sum);
</pre><p><strong>2. Debugger Statement:</strong> Use the <code>debugger</code> statement to pause execution and open the debugging tool.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let x = 10;
let y = 20;
debugger;
let sum = x + y;
console.log(sum);
</pre><p><strong>3. Browser Developer Tools:</strong> Most browsers have built-in developer tools that provide a range of debugging features, including:</p><ul><li>Console for logging output</li><li>Sources for viewing and debugging JavaScript code</li><li>Network for inspecting network requests</li><li>Elements for viewing and manipulating the DOM</li></ul><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program and demonstrate using breakpoints and the <code>debugger</code> statement for debugging.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Debugging Techniques&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Debugging Example&lt;/h1&gt;
    &lt;script&gt;
        let numbers = [1, 2, 3, 4, 5];
        let sum = 0;

        numbers.forEach(num =&gt; {
            sum += num;
            debugger; // Pause here to inspect the value of sum
        });

        console.log(''Total Sum:'', sum);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('86b2926a-bdab-4312-a1b3-33e88de972fb', 3, '0802330e-801e-4560-837e-ec318192f029', 'LESSON', 'Console methods for debugging', NULL, '<h4>Lesson: Console Methods for Debugging</h4><p><strong>Objective:</strong> Learn various console methods to output information and debug your code.</p><p><strong>1. </strong><code><strong>console.log()</strong></code><strong>:</strong> Logs a message to the console.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">console.log(''This is a log message'');
</pre><p><strong>2. </strong><code><strong>console.error()</strong></code><strong>:</strong> Logs an error message to the console.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">console.error(''This is an error message'');
</pre><p><strong>3. </strong><code><strong>console.warn()</strong></code><strong>:</strong> Logs a warning message to the console.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">console.warn(''This is a warning message'');
</pre><p><strong>4. </strong><code><strong>console.info()</strong></code><strong>:</strong> Logs an informational message to the console.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">console.info(''This is an info message'');
</pre><p><strong>5. </strong><code><strong>console.table()</strong></code><strong>:</strong> Displays data in a table format.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let users = [
    { name: ''Alice'', age: 25 },
    { name: ''Bob'', age: 30 },
    { name: ''Charlie'', age: 35 }
];
console.table(users);
</pre><p><strong>6. </strong><code><strong>console.group()</strong></code><strong> and </strong><code><strong>console.groupEnd()</strong></code><strong>:</strong> Creates and ends a group of messages.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">console.group(''User Details'');
console.log(''Name: Alice'');
console.log(''Age: 25'');
console.groupEnd();
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that uses various console methods to log messages and display data.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Console Methods for Debugging&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Console Methods Example&lt;/h1&gt;
    &lt;script&gt;
        console.log(''This is a log message'');
        console.error(''This is an error message'');
        console.warn(''This is a warning message'');
        console.info(''This is an info message'');

        let users = [
            { name: ''Alice'', age: 25 },
            { name: ''Bob'', age: 30 },
            { name: ''Charlie'', age: 35 }
        ];
        console.table(users);

        console.group(''User Details'');
        console.log(''Name: Alice'');
        console.log(''Age: 25'');
        console.groupEnd();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering error handling and debugging techniques, including using <code>try...catch</code> statements, throwing custom errors, employing debugging techniques and tools, and leveraging console methods, you will be able to identify and fix issues in your JavaScript code more efficiently. These lessons provide the foundation for building robust and error-free applications.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('d1e4f0e6-b526-4eae-a472-2aa2ff39ad22', 0, '1114db30-77a8-402e-a56f-64de3c93d36d', 'LESSON', 'Classes and modules', NULL, '<h3>Lesson: Classes and Modules</h3><p><strong>Objective:</strong> Understand how to define and use classes and modules to create modular and reusable code.</p><p><strong>1. Classes:</strong></p><ul><li>Define classes with constructor and methods.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">class Person {
    constructor(name, age) {
        this.name = name;
        this.age = age;
    }
    greet() {
        return `Hello, my name is ${this.name} and I am ${this.age} years old.`;
    }
}

const person1 = new Person(''Frank'', 35);
console.log(person1.greet()); // Hello, my name is Frank and I am 35 years old.
</pre><p><strong>2. Modules:</strong></p><ul><li>Use <code>export</code> and <code>import</code> to share code between files.</li></ul><p><strong>Example (module.js):</strong></p><pre class="ql-syntax" spellcheck="false">export const PI = 3.14;
export function calculateCircumference(radius) {
    return 2 * PI * radius;
}
</pre><p><strong>Example (main.js):</strong></p><pre class="ql-syntax" spellcheck="false">import { PI, calculateCircumference } from ''./module.js'';

console.log(`PI is ${PI}`);
console.log(`Circumference: ${calculateCircumference(10)}`);
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that defines a class and uses modules to separate the code.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Classes and Modules&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Classes and Modules Example&lt;/h1&gt;
    &lt;script type="module"&gt;
        class Car {
            constructor(make, model) {
                this.make = make;
                this.model = model;
            }
            getDetails() {
                return `Car: ${this.make} ${this.model}`;
            }
        }

        export { Car };

        import { Car } from ''./car.js'';

        const myCar = new Car(''Toyota'', ''Corolla'');
        console.log(myCar.getDetails()); // Car: Toyota Corolla
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering these ES6+ features, you will be able to write more modern, efficient, and maintainable JavaScript code. These lessons provide the foundation for building sophisticated JavaScript applications that leverage the latest language features.</p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('ccecffa4-1494-4d36-80c3-d57fd25a0e6d', 1, '1114db30-77a8-402e-a56f-64de3c93d36d', 'LESSON', 'Let and const', NULL, '<h3>Lesson: Let and Const</h3><p><strong>Objective:</strong> Understand the differences between <code>let</code>, <code>const</code>, and <code>var</code>, and learn when to use each for variable declarations.</p><p><strong>1. Let:</strong></p><ul><li><strong>Block-scoped:</strong> Variables declared with <code>let</code> are only accessible within the block they are defined.</li><li><strong>Can be updated:</strong> Variables can be reassigned new values.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">let x = 10;
if (true) {
    let x = 20;
    console.log(x); // 20
}
console.log(x); // 10
</pre><p><strong>2. Const:</strong></p><ul><li><strong>Block-scoped:</strong> Similar to <code>let</code>.</li><li><strong>Cannot be updated or re-declared:</strong> Once assigned, the value of a <code>const</code> variable cannot be changed.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const y = 30;
if (true) {
    const y = 40;
    console.log(y); // 40
}
console.log(y); // 30
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that demonstrates the block-scoping nature of <code>let</code> and <code>const</code>.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Let and Const&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Let and Const Example&lt;/h1&gt;
    &lt;script&gt;
        let x = 10;
        const y = 20;

        if (true) {
            let x = 30;
            const y = 40;
            console.log(''Inside block:'', x, y); // 30, 40
        }

        console.log(''Outside block:'', x, y); // 10, 20
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('67a9428a-5913-458d-afa6-430b0cc68125', 2, '1114db30-77a8-402e-a56f-64de3c93d36d', 'LESSON', 'Template literals', NULL, '<h3>Lesson: Template Literals</h3><p><strong>Objective:</strong> Learn how to use template literals to create strings with embedded expressions and multi-line strings.</p><p><strong>1. Basic Syntax:</strong></p><ul><li>Template literals are enclosed by backticks (<code>`</code>).</li><li>Embedded expressions are indicated by <code>${expression}</code>.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const name = ''Alice'';
const greeting = `Hello, ${name}!`;
console.log(greeting); // Hello, Alice!
</pre><p><strong>2. Multi-line Strings:</strong></p><ul><li>Template literals preserve whitespace and new lines.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const multiLine = `This is a
multi-line string.`;
console.log(multiLine);
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that uses template literals to create a multi-line string with embedded expressions.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Template Literals&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Template Literals Example&lt;/h1&gt;
    &lt;script&gt;
        const name = ''Bob'';
        const age = 25;
        const greeting = `Hello, ${name}!
You are ${age} years old.`;
        console.log(greeting);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('31a28ce8-1cff-488b-bd31-7a29e5100a40', 3, '1114db30-77a8-402e-a56f-64de3c93d36d', 'LESSON', 'Destructuring assignment', NULL, '<h3>Lesson: Destructuring Assignment</h3><p><strong>Objective:</strong> Learn how to unpack values from arrays or properties from objects into distinct variables using destructuring assignment.</p><p><strong>1. Array Destructuring:</strong></p><ul><li>Extract values from arrays.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const numbers = [1, 2, 3];
const [a, b, c] = numbers;
console.log(a, b, c); // 1, 2, 3
</pre><p><strong>2. Object Destructuring:</strong></p><ul><li>Extract properties from objects.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const person = { name: ''Carol'', age: 28 };
const { name, age } = person;
console.log(name, age); // Carol, 28
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that uses destructuring to extract values from an array and properties from an object.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Destructuring Assignment&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Destructuring Assignment Example&lt;/h1&gt;
    &lt;script&gt;
        const colors = [''red'', ''green'', ''blue''];
        const [primary, secondary, tertiary] = colors;
        console.log(primary, secondary, tertiary); // red, green, blue

        const student = { name: ''Dave'', grade: ''A'' };
        const { name, grade } = student;
        console.log(name, grade); // Dave, A
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('84394fb5-24fd-46f4-8706-5019964b3819', 4, '1114db30-77a8-402e-a56f-64de3c93d36d', 'LESSON', 'Spread and rest operators', NULL, '<h3>Lesson: Spread and Rest Operators</h3><p><strong>Objective:</strong> Learn how to use the spread (<code>...</code>) and rest (<code>...</code>) operators to work with arrays and function parameters.</p><p><strong>1. Spread Operator:</strong></p><ul><li>Expands an array into individual elements.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">const arr = [1, 2, 3];
const newArr = [...arr, 4, 5];
console.log(newArr); // [1, 2, 3, 4, 5]
</pre><p><strong>2. Rest Operator:</strong></p><ul><li>Collects multiple elements into an array.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function sum(...args) {
    return args.reduce((acc, val) =&gt; acc + val, 0);
}
console.log(sum(1, 2, 3)); // 6
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that uses the spread operator to merge arrays and the rest operator to handle variable function parameters.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Spread and Rest Operators&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Spread and Rest Operators Example&lt;/h1&gt;
    &lt;script&gt;
        const arr1 = [1, 2, 3];
        const arr2 = [4, 5, 6];
        const mergedArr = [...arr1, ...arr2];
        console.log(mergedArr); // [1, 2, 3, 4, 5, 6]

        function multiply(multiplier, ...numbers) {
            return numbers.map(num =&gt; num * multiplier);
        }
        console.log(multiply(2, 1, 2, 3)); // [2, 4, 6]
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('43df0457-1bd8-4903-9c70-3a93ad77779d', 5, '1114db30-77a8-402e-a56f-64de3c93d36d', 'LESSON', 'Default parameters', NULL, '<h3>Lesson: Default Parameters</h3><p><strong>Objective:</strong> Learn how to set default values for function parameters to handle cases where arguments are not provided.</p><p><strong>1. Basic Syntax:</strong></p><ul><li>Assign default values in function parameters.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function greet(name = ''Guest'') {
    return `Hello, ${name}!`;
}
console.log(greet()); // Hello, Guest!
console.log(greet(''Eva'')); // Hello, Eva!
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that uses default parameters in a function to handle missing arguments.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Default Parameters&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Default Parameters Example&lt;/h1&gt;
    &lt;script&gt;
        function calculateArea(width = 10, height = 5) {
            return width * height;
        }
        console.log(calculateArea()); // 50
        console.log(calculateArea(7, 3)); // 21
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('387a4548-d099-477f-9483-fb9f792824ba', 0, '8df85dd0-20a1-42fa-96bb-78cc90ee6187', 'LESSON', 'Understanding events', NULL, '<h3>Lesson: Understanding Events</h3><p><strong>Objective:</strong> Learn the basics of events and how to handle them in JavaScript.</p><p><strong>1. Definition:</strong> Events are actions or occurrences that happen in the browser and can be detected by JavaScript.</p><p><strong>2. Event Types:</strong> Common event types include:</p><ul><li>Mouse events: <code>click</code>, <code>dblclick</code>, <code>mouseover</code>, <code>mouseout</code>, <code>mousemove</code></li><li>Keyboard events: <code>keydown</code>, <code>keyup</code>, <code>keypress</code></li><li>Form events: <code>submit</code>, <code>change</code>, <code>focus</code>, <code>blur</code></li><li>Document events: <code>DOMContentLoaded</code>, <code>scroll</code>, <code>resize</code></li></ul><p><strong>3. Adding Event Listeners:</strong> Use <code>addEventListener</code> to attach an event handler to an element.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">document.getElementById(''myButton'').addEventListener(''click'', function() {
    alert(''Button clicked!'');
});
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that listens for a button click and displays an alert message.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Understanding Events&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Event Listener Example&lt;/h1&gt;
    &lt;button id="myButton"&gt;Click Me&lt;/button&gt;
    &lt;script&gt;
        document.getElementById(''myButton'').addEventListener(''click'', function() {
            alert(''Button clicked!'');
        });
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('a33f08cc-9c09-4d24-8a78-eae90a960e5f', 1, '8df85dd0-20a1-42fa-96bb-78cc90ee6187', 'LESSON', 'Event propagation: capturing and bubbling', NULL, '<h3>Lesson: Event Propagation: Capturing and Bubbling</h3><p><strong>Objective:</strong> Understand the phases of event propagation, including capturing and bubbling, and learn how to control event propagation.</p><p><strong>1. Event Propagation:</strong> Event propagation determines the order in which events are received by the target element and its ancestors.</p><p><strong>2. Phases of Event Propagation:</strong></p><ul><li>Capturing phase: The event travels from the root to the target element.</li><li>Target phase: The event reaches the target element.</li><li>Bubbling phase: The event travels from the target element back to the root.</li></ul><p><strong>3. Controlling Propagation:</strong></p><ul><li><code>stopPropagation()</code>: Stops the event from propagating further.</li><li><code>stopImmediatePropagation()</code>: Stops the event from propagating and prevents other handlers from being called.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">document.getElementById(''parent'').addEventListener(''click'', function() {
    console.log(''Parent clicked!'');
}, true); // Capturing phase

document.getElementById(''child'').addEventListener(''click'', function(event) {
    console.log(''Child clicked!'');
    event.stopPropagation(); // Stops bubbling
});
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that demonstrates event capturing and bubbling.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Event Propagation&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Event Propagation Example&lt;/h1&gt;
    &lt;div id="parent" style="padding: 50px; background-color: lightblue;"&gt;
        Parent
        &lt;div id="child" style="padding: 50px; background-color: lightcoral;"&gt;
            Child
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;script&gt;
        document.getElementById(''parent'').addEventListener(''click'', function() {
            console.log(''Parent clicked!'');
        }, true); // Capturing phase

        document.getElementById(''child'').addEventListener(''click'', function(event) {
            console.log(''Child clicked!'');
            event.stopPropagation(); // Stops bubbling
        });
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('e76fdda4-b4d1-40ac-ae53-ceeed6ed0822', 2, '8df85dd0-20a1-42fa-96bb-78cc90ee6187', 'LESSON', 'Event delegation', NULL, '<h3>Lesson: Event Delegation</h3><p><strong>Objective:</strong> Learn how to use event delegation to handle events efficiently.</p><p><strong>1. Definition:</strong> Event delegation is a technique where you attach a single event listener to a parent element to manage events for multiple child elements.</p><p><strong>2. Benefits:</strong></p><ul><li>Reduces the number of event listeners, improving performance.</li><li>Simplifies code for dynamically added elements.</li></ul><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">document.getElementById(''parent'').addEventListener(''click'', function(event) {
    if (event.target &amp;&amp; event.target.matches(''button'')) {
        console.log(''Button clicked:'', event.target.textContent);
    }
});
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that uses event delegation to handle button clicks within a parent element.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Event Delegation&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Event Delegation Example&lt;/h1&gt;
    &lt;div id="parent"&gt;
        &lt;button&gt;Button 1&lt;/button&gt;
        &lt;button&gt;Button 2&lt;/button&gt;
        &lt;button&gt;Button 3&lt;/button&gt;
    &lt;/div&gt;
    &lt;script&gt;
        document.getElementById(''parent'').addEventListener(''click'', function(event) {
            if (event.target &amp;&amp; event.target.matches(''button'')) {
                console.log(''Button clicked:'', event.target.textContent);
            }
        });
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p><br></p>', '');
INSERT INTO "public"."chapter_resource" ("id", "no", "chapter_id", "resource_type", "title", "question_id", "lesson_html", "youtube_video_url") VALUES ('b4aad3fe-adcb-4c9d-be42-839bdedbc864', 3, '8df85dd0-20a1-42fa-96bb-78cc90ee6187', 'LESSON', 'Debouncing and throttling', NULL, '<h3>Lesson: Debouncing and Throttling</h3><p><strong>Objective:</strong> Learn the techniques of debouncing and throttling to optimize event handling and improve performance.</p><p><strong>1. Debouncing:</strong> Debouncing ensures that a function is only called once after a specified delay.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function debounce(func, delay) {
    let timeoutId;
    return function(...args) {
        clearTimeout(timeoutId);
        timeoutId = setTimeout(() =&gt; func.apply(this, args), delay);
    };
}

const debouncedFunction = debounce(() =&gt; {
    console.log(''Debounced function called'');
}, 300);

window.addEventListener(''resize'', debouncedFunction);
</pre><p><strong>2. Throttling:</strong> Throttling ensures that a function is called at most once in a specified interval.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">function throttle(func, interval) {
    let lastCall = 0;
    return function(...args) {
        const now = Date.now();
        if (now - lastCall &gt;= interval) {
            lastCall = now;
            func.apply(this, args);
        }
    };
}

const throttledFunction = throttle(() =&gt; {
    console.log(''Throttled function called'');
}, 300);

window.addEventListener(''scroll'', throttledFunction);
</pre><h3>Practical Example</h3><p><strong>Problem:</strong> Write a program that demonstrates debouncing for window resize and throttling for window scroll events.</p><p><strong>Solution:</strong></p><pre class="ql-syntax" spellcheck="false">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Debouncing and Throttling&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Debouncing and Throttling Example&lt;/h1&gt;
    &lt;script&gt;
        function debounce(func, delay) {
            let timeoutId;
            return function(...args) {
                clearTimeout(timeoutId);
                timeoutId = setTimeout(() =&gt; func.apply(this, args), delay);
            };
        }

        function throttle(func, interval) {
            let lastCall = 0;
            return function(...args) {
                const now = Date.now();
                if (now - lastCall &gt;= interval) {
                    lastCall = now;
                    func.apply(this, args);
                }
            };
        }

        const debouncedResize = debounce(() =&gt; {
            console.log(''Window resized'');
        }, 300);

        const throttledScroll = throttle(() =&gt; {
            console.log(''Window scrolled'');
        }, 300);

        window.addEventListener(''resize'', debouncedResize);
        window.addEventListener(''scroll'', throttledScroll);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><p>By mastering event-driven programming, including understanding events, event propagation (capturing and bubbling), event delegation, and techniques like debouncing and throttling, you will be able to create interactive and efficient web applications. These lessons provide the foundation for building responsive and performance-optimized user interfaces.</p>', '');


INSERT INTO public.contest(id, name, description, prizes, rules, scoring, thumbnail_url, start_time, end_time, created_by, updated_by, is_public, org_id, is_disabled_forum)
VALUES
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'Weekly Contest 01',
     '<h3>Welcome to the 1st CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb15/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/weekly-default-553ede7bcc8e1b4a44c28a9e4a32068c.png',
     '2024-07-01 09:30:00.000000+07',
     '2024-07-01 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', 'Weekly Contest 02',
     '<h3>Welcome to the 2nd CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-07-08 09:30:00.000000+07',
     '2024-07-08 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', 'Weekly Contest 03',
     '<h3>Welcome to the 3rd CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb17/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://assets.leetcode.com/contest/weekly-contest-291/card_img_1654267951.png',
     '2024-07-15 09:30:00.000000+07',
     '2024-07-15 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'Weekly Contest 04',
     '<h3>Welcome to the 4th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb18/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://assets.leetcode.com/contest/weekly-contest-291/card_img_1654267951.png',
     '2024-07-22 09:30:00.000000+07',
     '2024-07-22 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'Weekly Contest 05',
     '<h3>Welcome to the 5th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb19/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/weekly-default-553ede7bcc8e1b4a44c28a9e4a32068c.png',
     '2024-07-29 09:30:00.000000+07',
     '2024-07-29 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20',  'Weekly Contest 06',
     '<h3>Welcome to the 6th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb20/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 09:30:00.000000+07',
     '2024-08-05 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
     ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'Weekly Contest 07',
     '<h3>Welcome to the 7th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb21/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://assets.leetcode.com/contest/weekly-contest-291/card_img_1654267951.png',
     '2024-08-12 09:30:00.000000+07',
     '2024-08-12 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', 'Weekly Contest 08',
     '<h3>Welcome to the 8th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb22/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://assets.leetcode.com/contest/weekly-contest-291/card_img_1654267951.png',
     '2024-08-19 09:30:00.000000+07',
     '2024-08-19 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     false,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', 'Weekly Contest 09',
     '<h3>Welcome to the 9th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb23/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/weekly-default-553ede7bcc8e1b4a44c28a9e4a32068c.png',
     '2024-08-26 09:30:00.000000+07',
     '2024-08-26 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     false,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', 'Weekly Contest 10',
     '<h3>Welcome to the 10th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb24/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-09-02 09:30:00.000000+07',
     '2024-09-02 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     false,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', 'Weekly Contest 11',
     '<h3>Welcome to the 11th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb25/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://assets.leetcode.com/contest/weekly-contest-291/card_img_1654267951.png',
     '2024-09-09 09:30:00.000000+07',
     '2024-09-09 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     false,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', 'Weekly Contest 12',
     '<h3>Welcome to the 12th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb26/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://assets.leetcode.com/contest/weekly-contest-291/card_img_1654267951.png',
     '2024-09-16 09:30:00.000000+07',
     '2024-09-16 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     false,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', 'Weekly Contest 13',
     '<h3>Welcome to the 13th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb27/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/weekly-default-553ede7bcc8e1b4a44c28a9e4a32068c.png',
     '2024-09-23 09:30:00.000000+07',
     '2024-09-23 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     false,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28',  'Weekly Contest 14',
     '<h3>Welcome to the 14th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb28/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-09-30 09:30:00.000000+07',
     '2024-09-30 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     false,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29',  'Weekly Contest 15',
     '<h3>Welcome to the 15th CodeDynamite Weekly Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb29/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-10-07 09:30:00.000000+07',
     '2024-10-07 10:30:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     false,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30',  'HCMUS Hackathon Contest',
     '<h3>Welcome to the HCMUS Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb30/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '45 minutes',
     CURRENT_TIMESTAMP + INTERVAL '1 hour 45 minutes',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     '08b65a39-394f-4977-a5fa-3fe145b620f8',
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31',  'HCMUS Algorithm Contest',
     '<h3>Welcome to the HCMUS Algorithm Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb31/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '1 hour 20 minutes',
     CURRENT_TIMESTAMP + INTERVAL '2 hours 20 minutes',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     '08b65a39-394f-4977-a5fa-3fe145b620f8',
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32',  'HCMUS Code-A-Thon Contest',
     '<h3>Welcome to the HCMUS Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb32/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '1 hours',
     CURRENT_TIMESTAMP + INTERVAL '2 hours',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     '08b65a39-394f-4977-a5fa-3fe145b620f8',
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33',  'HCMUS Coding Contest',
     '<h3>Welcome to the HCMUS Coding Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb33/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '1 hour 15 minutes',
     CURRENT_TIMESTAMP + INTERVAL '2 hours 15 minutes',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     '08b65a39-394f-4977-a5fa-3fe145b620f8',
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34',  'Asia Hackathon Contest',
     '<h3>Welcome to the Asia Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural Asia Hackathon Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb34/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '30 minutes',
     CURRENT_TIMESTAMP + INTERVAL '1 hour 30 minutes',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35',  'Pacific Algorithm Contest',
     '<h3>Welcome to the Pacific Algorithm Contest</h3><p><br></p><p>We are thrilled to present the inaugural Pacific Algorithm Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb35/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '40 minutes',
     CURRENT_TIMESTAMP + INTERVAL '1 hour 40 minutes',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36',  'Coding Hackathon Contest',
     '<h3>Welcome to the Coding Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb36/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '50 minutes',
     CURRENT_TIMESTAMP + INTERVAL '1 hour 50 minutes',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37',  'Fresher Coding Contest',
     '<h3>Welcome to the Fresher Coding Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb37/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '1 hour',
     CURRENT_TIMESTAMP + INTERVAL '2 hours',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38',  'Junior Coding Contest',
     '<h3>Welcome to the Junior Coding Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb38/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '1 hour 30 minutes',
     CURRENT_TIMESTAMP + INTERVAL '2 hours 30 minutes',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39',  'Senior Coding Contest',
     '<h3>Welcome to the Senior Coding Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb39/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '2 hours',
     CURRENT_TIMESTAMP + INTERVAL '3 hours',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40',  'Tech Coding Contest',
     '<h3>Welcome to the Tech Coding Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb40/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '2 hours 30 minutes',
     CURRENT_TIMESTAMP + INTERVAL '3 hours 30 minutes',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41',  'Code-A-Thon Contest',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     CURRENT_TIMESTAMP + INTERVAL '15 minutes',
     CURRENT_TIMESTAMP + INTERVAL '1 hours 15 minutes',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    -- Create 24 contests in 24 hours (each contests duration is always 1 hour) in date 05 August 2024
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb42',  'Code-A-Thon Contest 02',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
    '2024-08-05 00:00:00.000000+07',
    '2024-08-05 01:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb43',  'Code-A-Thon Contest 03',
        '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
        '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
        '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
        '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
        'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
        '2024-08-05 01:00:00.000000+07',
        '2024-08-05 02:00:00.000000+07',
        'b029f559-52a8-4699-b595-71161498ed8c',
        'b029f559-52a8-4699-b595-71161498ed8c',
        true,
        null,
        true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb44',  'Code-A-Thon Contest 04',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 02:00:00.000000+07',
     '2024-08-05 03:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb45',  'Code-A-Thon Contest 05',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 03:00:00.000000+07',
     '2024-08-05 04:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46',  'Code-A-Thon Contest 06',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 04:00:00.000000+07',
     '2024-08-05 05:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47',  'Code-A-Thon Contest 07',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 05:00:00.000000+07',
     '2024-08-05 06:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48',  'Code-A-Thon Contest 08',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 06:00:00.000000+07',
     '2024-08-05 07:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49',  'Code-A-Thon Contest 09',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 07:00:00.000000+07',
     '2024-08-05 08:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb50',  'Code-A-Thon Contest 10',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 08:00:00.000000+07',
     '2024-08-05 09:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb51',  'Code-A-Thon Contest 11',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 09:00:00.000000+07',
     '2024-08-05 10:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb52',  'Code-A-Thon Contest 12',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 10:00:00.000000+07',
     '2024-08-05 11:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb53',  'Code-A-Thon Contest 13',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 11:00:00.000000+07',
     '2024-08-05 12:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb54',  'Code-A-Thon Contest 14',
       '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
       '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
       '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
       '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
       'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
       '2024-08-05 12:00:00.000000+07',
       '2024-08-05 13:00:00.000000+07',
       'b029f559-52a8-4699-b595-71161498ed8c',
       'b029f559-52a8-4699-b595-71161498ed8c',
       true,
       null,
       true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb55',  'Code-A-Thon Contest 15',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 13:00:00.000000+07',
     '2024-08-05 14:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb56',  'Code-A-Thon Contest 16',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 14:00:00.000000+07',
     '2024-08-05 15:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb57',  'Code-A-Thon Contest 17',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 16:00:00.000000+07',
     '2024-08-05 17:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb58',  'Code-A-Thon Contest 18',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 17:00:00.000000+07',
     '2024-08-05 18:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb59',  'Code-A-Thon Contest 19',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 18:00:00.000000+07',
     '2024-08-05 19:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb60',  'Code-A-Thon Contest 20',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 19:00:00.000000+07',
     '2024-08-05 20:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb61',  'Code-A-Thon Contest 21',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 20:00:00.000000+07',
     '2024-08-05 21:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb62',  'Code-A-Thon Contest 22',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 21:00:00.000000+07',
     '2024-08-05 22:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb63',  'Code-A-Thon Contest 23',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-05 22:00:00.000000+07',
     '2024-08-05 23:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    -- Create 24 contests in 24 hours (each contests duration is always 1 hour) in date 06 August 2024
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64',  'Hack-A-Thon Contest 02',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 00:00:00.000000+07',
     '2024-08-06 01:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb65',  'Hack-A-Thon Contest 03',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 01:00:00.000000+07',
     '2024-08-06 02:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb66',  'Hack-A-Thon Contest 04',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 02:00:00.000000+07',
     '2024-08-06 03:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb67',  'Hack-A-Thon Contest 05',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 03:00:00.000000+07',
     '2024-08-06 04:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb68',  'Hack-A-Thon Contest 06',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 04:00:00.000000+07',
     '2024-08-06 05:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69',  'Hack-A-Thon Contest 07',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 05:00:00.000000+07',
     '2024-08-06 06:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb70',  'Hack-A-Thon Contest 08',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 06:00:00.000000+07',
     '2024-08-06 07:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb71',  'Hack-A-Thon Contest 09',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 07:00:00.000000+07',
     '2024-08-06 08:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb72',  'Hack-A-Thon Contest 10',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 08:00:00.000000+07',
     '2024-08-06 09:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb73',  'Hack-A-Thon Contest 11',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 09:00:00.000000+07',
     '2024-08-06 10:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb74',  'Hack-A-Thon Contest 12',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 10:00:00.000000+07',
     '2024-08-06 11:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb75',  'Hack-A-Thon Contest 13',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 11:00:00.000000+07',
     '2024-08-06 12:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb76',  'Hack-A-Thon Contest 14',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 12:00:00.000000+07',
     '2024-08-06 13:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb77',  'Hack-A-Thon Contest 15',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 13:00:00.000000+07',
     '2024-08-06 14:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb78',  'Hack-A-Thon Contest 16',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 14:00:00.000000+07',
     '2024-08-06 15:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb79',  'Hack-A-Thon Contest 17',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 16:00:00.000000+07',
     '2024-08-06 17:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb80',  'Hack-A-Thon Contest 18',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 17:00:00.000000+07',
     '2024-08-06 18:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb81',  'Hack-A-Thon Contest 19',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 18:00:00.000000+07',
     '2024-08-06 19:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb82',  'Hack-A-Thon Contest 20',
     '<h3>Welcome to the Code-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 19:00:00.000000+07',
     '2024-08-06 20:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb83',  'Hack-A-Thon Contest 21',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 20:00:00.000000+07',
     '2024-08-06 21:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb84',  'Hack-A-Thon Contest 22',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 21:00:00.000000+07',
     '2024-08-06 22:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb85',  'Hack-A-Thon Contest 23',
     '<h3>Welcome to the Hack-A-Thon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-06 22:00:00.000000+07',
     '2024-08-06 23:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    -- Create 24 contests in 24 hours (each contests duration is always 1 hour) in date 07 August 2024
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb86',  'Algorithms Contest 02',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 00:00:00.000000+07',
     '2024-08-07 01:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb87',  'Algorithms Contest 03',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 01:00:00.000000+07',
     '2024-08-07 02:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb88',  'Algorithms Contest 04',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 02:00:00.000000+07',
     '2024-08-07 03:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb89',  'Algorithms Contest 05',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 03:00:00.000000+07',
     '2024-08-07 04:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb90',  'Algorithms Contest 06',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 04:00:00.000000+07',
     '2024-08-07 05:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb91',  'Algorithms Contest 07',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 05:00:00.000000+07',
     '2024-08-07 06:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb92',  'Algorithms Contest 08',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 06:00:00.000000+07',
     '2024-08-07 07:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb93',  'Algorithms Contest 09',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 07:00:00.000000+07',
     '2024-08-07 08:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb94',  'Algorithms Contest 10',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 08:00:00.000000+07',
     '2024-08-07 09:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb95',  'Algorithms Contest 11',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 09:00:00.000000+07',
     '2024-08-07 10:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb96',  'Algorithms Contest 12',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 10:00:00.000000+07',
     '2024-08-07 11:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb97',  'Algorithms Contest 13',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 11:00:00.000000+07',
     '2024-08-07 12:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb98',  'Algorithms Contest 14',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 12:00:00.000000+07',
     '2024-08-07 13:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb99',  'Algorithms Contest 15',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 13:00:00.000000+07',
     '2024-08-07 14:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc01',  'Algorithms Contest 16',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 14:00:00.000000+07',
     '2024-08-07 15:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc02',  'Algorithms Contest 17',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 16:00:00.000000+07',
     '2024-08-07 17:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc03',  'Algorithms Contest 18',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 17:00:00.000000+07',
     '2024-08-07 18:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc04',  'Algorithms Contest 19',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 18:00:00.000000+07',
     '2024-08-07 19:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc05',  'Algorithms Contest 20',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 19:00:00.000000+07',
     '2024-08-07 20:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc06',  'Algorithms Contest 21',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 20:00:00.000000+07',
     '2024-08-07 21:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc07',  'Algorithms Contest 22',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 21:00:00.000000+07',
     '2024-08-07 22:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc08',  'Algorithms Contest 23',
     '<h3>Welcome to the Algorithms Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-07 22:00:00.000000+07',
     '2024-08-07 23:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    -- Create 24 contests in 24 hours (each contests duration is always 1 hour) in date 11 August 2024
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc09',  'Hackathon Contest 02',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 00:00:00.000000+07',
     '2024-08-11 01:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc10',  'Hackathon Contest 03',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 01:00:00.000000+07',
     '2024-08-11 02:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc11',  'Hackathon Contest 04',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 02:00:00.000000+07',
     '2024-08-11 03:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc12',  'Hackathon Contest 05',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 03:00:00.000000+07',
     '2024-08-11 04:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc13',  'Hackathon Contest 06',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 04:00:00.000000+07',
     '2024-08-11 05:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc14',  'Hackathon Contest 07',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 05:00:00.000000+07',
     '2024-08-11 06:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc15',  'Hackathon Contest 08',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 06:00:00.000000+07',
     '2024-08-11 07:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc16',  'Hackathon Contest 09',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 07:00:00.000000+07',
     '2024-08-11 08:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc17',  'Hackathon Contest 10',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 08:00:00.000000+07',
     '2024-08-11 09:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc18',  'Hackathon Contest 11',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 09:00:00.000000+07',
     '2024-08-11 10:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc19',  'Hackathon Contest 12',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 10:00:00.000000+07',
     '2024-08-11 11:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc20',  'Hackathon Contest 13',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 11:00:00.000000+07',
     '2024-08-11 12:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc21',  'Hackathon Contest 14',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 12:00:00.000000+07',
     '2024-08-11 13:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc22',  'Hackathon Contest 15',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 13:00:00.000000+07',
     '2024-08-11 14:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc23',  'Hackathon Contest 16',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 14:00:00.000000+07',
     '2024-08-11 15:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc24',  'Hackathon Contest 17',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 16:00:00.000000+07',
     '2024-08-11 17:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc25',  'Hackathon Contest 18',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 17:00:00.000000+07',
     '2024-08-11 18:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc26',  'Hackathon Contest 19',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 18:00:00.000000+07',
     '2024-08-11 19:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc27',  'Hackathon Contest 20',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 19:00:00.000000+07',
     '2024-08-11 20:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc28',  'Hackathon Contest 21',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 20:00:00.000000+07',
     '2024-08-11 21:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc29',  'Hackathon Contest 22',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 21:00:00.000000+07',
     '2024-08-11 22:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc30',  'Hackathon Contest 23',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-11 22:00:00.000000+07',
     '2024-08-11 23:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    -- Create 24 contests in 24 hours (each contests duration is always 1 hour) in date 12 August 2024
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc31',  'Code Contest 02',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 00:00:00.000000+07',
     '2024-08-12 01:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc32',  'Code Contest 03',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 01:00:00.000000+07',
     '2024-08-12 02:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc33',  'Code Contest 04',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 02:00:00.000000+07',
     '2024-08-12 03:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc34',  'Code Contest 05',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 03:00:00.000000+07',
     '2024-08-12 04:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc35',  'Code Contest 06',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 04:00:00.000000+07',
     '2024-08-12 05:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc36',  'Code Contest 07',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 05:00:00.000000+07',
     '2024-08-12 06:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc37',  'Code Contest 08',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 06:00:00.000000+07',
     '2024-08-12 07:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc38',  'Code Contest 09',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 07:00:00.000000+07',
     '2024-08-12 08:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc39',  'Code Contest 10',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 08:00:00.000000+07',
     '2024-08-12 09:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc40',  'Hackathon Contest 11',
     '<h3>Welcome to the Hackathon Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 09:00:00.000000+07',
     '2024-08-12 10:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc41',  'Code Contest 12',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 10:00:00.000000+07',
     '2024-08-12 11:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc42',  'Code Contest 13',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 11:00:00.000000+07',
     '2024-08-12 12:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc43',  'Code Contest 14',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 12:00:00.000000+07',
     '2024-08-12 13:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc44',  'Code Contest 15',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 13:00:00.000000+07',
     '2024-08-12 14:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc45',  'Code Contest 16',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 14:00:00.000000+07',
     '2024-08-12 15:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc46',  'Code Contest 17',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 16:00:00.000000+07',
     '2024-08-12 17:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc47',  'Code Contest 18',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 17:00:00.000000+07',
     '2024-08-12 18:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc48',  'Code Contest 19',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 18:00:00.000000+07',
     '2024-08-12 19:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc49',  'Code Contest 20',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 19:00:00.000000+07',
     '2024-08-12 20:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc50',  'Code Contest 21',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 20:00:00.000000+07',
     '2024-08-12 21:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc51',  'Code Contest 22',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 21:00:00.000000+07',
     '2024-08-12 22:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc52',  'Code Contest 23',
     '<h3>Welcome to the Code Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-12 22:00:00.000000+07',
     '2024-08-12 23:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    -- Create 24 contests in 24 hours (each contests duration is always 1 hour) in date 13 August 2024
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53',  'DSA Contest 02',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 00:00:00.000000+07',
     '2024-08-13 01:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54',  'DSA Contest 03',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 01:00:00.000000+07',
     '2024-08-13 02:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55',  'DSA Contest 04',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 02:00:00.000000+07',
     '2024-08-13 03:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56',  'DSA Contest 05',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 03:00:00.000000+07',
     '2024-08-13 04:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57',  'DSA Contest 06',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 04:00:00.000000+07',
     '2024-08-13 05:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58',  'DSA Contest 07',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 05:00:00.000000+07',
     '2024-08-13 06:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59',  'DSA Contest 08',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 06:00:00.000000+07',
     '2024-08-13 07:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60',  'DSA Contest 09',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 07:00:00.000000+07',
     '2024-08-13 08:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61',  'DSA Contest 10',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 08:00:00.000000+07',
     '2024-08-13 09:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62',  'DSA Contest 11',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 09:00:00.000000+07',
     '2024-08-13 10:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63',  'DSA Contest 12',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 10:00:00.000000+07',
     '2024-08-13 11:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64',  'DSA Contest 13',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 11:00:00.000000+07',
     '2024-08-13 12:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65',  'DSA Contest 14',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 12:00:00.000000+07',
     '2024-08-13 13:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66',  'DSA Contest 15',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 13:00:00.000000+07',
     '2024-08-13 14:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67',  'DSA Contest 16',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 14:00:00.000000+07',
     '2024-08-13 15:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68',  'DSA Contest 17',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 16:00:00.000000+07',
     '2024-08-13 17:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69',  'DSA Contest 18',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 17:00:00.000000+07',
     '2024-08-13 18:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70',  'DSA Contest 19',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 18:00:00.000000+07',
     '2024-08-13 19:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71',  'DSA Contest 20',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 19:00:00.000000+07',
     '2024-08-13 20:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72',  'DSA Contest 21',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 20:00:00.000000+07',
     '2024-08-13 21:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73',  'DSA Contest 22',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 21:00:00.000000+07',
     '2024-08-13 22:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74',  'DSA Contest 23',
     '<h3>Welcome to the DSA Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-13 22:00:00.000000+07',
     '2024-08-13 23:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    -- Create 24 contests in 24 hours (each contests duration is always 1 hour) in date 14 August 2024
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc75',  'Pacific Contest 02',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 00:00:00.000000+07',
     '2024-08-14 01:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc76',  'Pacific Contest 03',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 01:00:00.000000+07',
     '2024-08-14 02:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc77',  'Pacific Contest 04',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 02:00:00.000000+07',
     '2024-08-14 03:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc78',  'Pacific Contest 05',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 03:00:00.000000+07',
     '2024-08-14 04:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc79',  'Pacific Contest 06',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 04:00:00.000000+07',
     '2024-08-14 05:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc80',  'Pacific Contest 07',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 05:00:00.000000+07',
     '2024-08-14 06:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc81',  'Pacific Contest 08',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 06:00:00.000000+07',
     '2024-08-14 07:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc82',  'Pacific Contest 09',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 07:00:00.000000+07',
     '2024-08-14 08:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc83',  'Pacific Contest 10',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 08:00:00.000000+07',
     '2024-08-14 09:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc84',  'Pacific Contest 11',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 09:00:00.000000+07',
     '2024-08-14 10:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc85',  'Pacific Contest 12',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 10:00:00.000000+07',
     '2024-08-14 11:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc86',  'Pacific Contest 13',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 11:00:00.000000+07',
     '2024-08-14 12:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc87',  'Pacific Contest 14',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 12:00:00.000000+07',
     '2024-08-14 13:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc88',  'Pacific Contest 15',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 13:00:00.000000+07',
     '2024-08-14 14:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc89',  'Pacific Contest 16',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 14:00:00.000000+07',
     '2024-08-14 15:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc90',  'Pacific Contest 17',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 16:00:00.000000+07',
     '2024-08-14 17:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc91',  'Pacific Contest 18',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 17:00:00.000000+07',
     '2024-08-14 18:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc92',  'Pacific Contest 19',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 18:00:00.000000+07',
     '2024-08-14 19:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc93',  'Pacific Contest 20',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 19:00:00.000000+07',
     '2024-08-14 20:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc94',  'Pacific Contest 21',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 20:00:00.000000+07',
     '2024-08-14 21:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc95',  'Pacific Contest 22',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 21:00:00.000000+07',
     '2024-08-14 22:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    ),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96',  'Pacific Contest 23',
     '<h3>Welcome to the Pacific Contest</h3><p><br></p><p>We are thrilled to present the inaugural CodeDynamite Weekly Contest, a premier event designed to challenge your coding skills and ignite your passion for programming. Whether you''re a seasoned developer or a coding enthusiast, this contest offers a unique opportunity to showcase your talents, compete with like-minded individuals, and win exciting prizes.</p><p><br></p><p><strong>About the contest:</strong></p><ul><li><strong>Sponsored by:</strong> CodeDynamite, your go-to platform for cutting-edge coding resources and community support.</li><li><strong>When:</strong> Every week, with fresh and exciting challenges that cater to various skill levels.</li><li><strong>Who Can Participate:</strong> Open to all coding enthusiasts, regardless of experience level.</li></ul><p><br></p><p><strong>Why Join?</strong></p><ul><li><strong>Challenge Yourself:</strong> Tackle a variety of coding problems that will test your creativity and problem-solving abilities.</li><li><strong>Learn and Grow:</strong> Gain new insights and improve your coding skills through hands-on practice and real-time competition.</li><li><strong>Win Prizes:</strong> Stand a chance to win amazing rewards and earn recognition within the coding community.</li></ul><p><br></p><p><strong>How to Register:</strong></p><ul><li>Simply click the registration link below and fill out the required details to secure your spot in the contest.</li><li>Registration is quick, easy, and free!</li></ul><p><br></p><p><strong>Don’t miss out on this fantastic opportunity to connect, compete, and code with the best!</strong></p><p><br></p><p><strong>Register for the contest now and let your coding journey begin!</strong></p><p><a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb41/information" rel="noopener noreferrer" target="_blank">Link to register</a></p><p><br></p><p><br></p>',
     '<p><strong>🎉 Juicy Prizes Await You! 🎉</strong></p><p><br></p><p>Get ready to win some amazing rewards in the 1st CodeDynamite Weekly Contest! Here are the fantastic prizes up for grabs:</p><p><br></p><p><strong>1st Place:</strong></p><ul><li><strong>$500 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite T-Shirt</strong></li><li><strong>Personalized Winner''s Certificate</strong></li></ul><p><br></p><p><strong>2nd Place:</strong></p><ul><li><strong>$250 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Hoodie</strong></li><li><strong>Personalized Runner-Up Certificate</strong></li></ul><p><br></p><p><strong>3rd Place:</strong></p><ul><li><strong>$100 Cash Prize</strong></li><li><strong>Exclusive CodeDynamite Mug</strong></li><li><strong>Personalized Certificate of Achievement</strong></li></ul><p><br></p><p>Don''t miss your chance to win these incredible prizes and gain recognition in the coding community. <a href="https://codedynamite.site/#/contests/d215b5f8-0249-4dc5-89a3-51fd148cfb16/information" rel="noopener noreferrer" target="_blank"><strong>Register now</strong></a> and let the competition begin!</p>',
     '<ol><li>Participants must submit their solutions before the end time.</li><li>Participants must follow the contest rules and guidelines.</li><li>Participants must not cheat or plagiarize.</li></ol>',
     '<p><strong>Pre-determined Challenge Scores:</strong></p><p>Each challenge you conquer has a pre-set score waiting to be claimed. The more complex the challenge, the higher the score you can rack up!</p><p><br></p><p><strong>Test Cases: Your Gateway to Glory:</strong></p><p>Each challenge comes with a battery of test cases designed to put your code through its paces. Every test case you conquer translates into points towards your final score. The more test cases you dominate, the closer you get to scoring supremacy!</p><p><br></p><p><strong>Multiple Submissions? No Problem!</strong></p><p>Feeling creative and tinkering with different solutions? No sweat! We take your highest scoring submission for each challenge into account, so fire away with your best attempts.</p><p><br></p><p><strong>The Leaderboard Beckons: It''s All About the Rank</strong></p><p>Participants are ranked on the glorious leaderboard based on their total score. But what happens when coders achieve the same score? Buckle up, because things get exciting!</p><p><br></p><p><strong>Tie-Breaker Time: Speed Demons Unite!</strong></p><p>In the thrilling case of a tie, the tie-breaker comes down to <strong>speed</strong>. The participant who submitted their highest-scoring solution in the <strong>shortest amount of time</strong> reigns supreme! So, channel your inner coding ninja and blaze through those challenges for ultimate glory.</p>',
     'https://leetcode.com/_next/static/images/biweekly-default-f5a8fc3be85b6c9175207fd8fd855d47.png',
     '2024-08-14 22:00:00.000000+07',
     '2024-08-14 23:00:00.000000+07',
     'b029f559-52a8-4699-b595-71161498ed8c',
     'b029f559-52a8-4699-b595-71161498ed8c',
     true,
     null,
     true
    );

--  add all users to all contests
INSERT INTO public.contest_user(contest_id, user_id)
VALUES
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb15'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb16'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb17'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb18'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb19'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb20'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb21'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb22'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb23'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb24'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb25'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb26'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb27'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb28'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb29'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb30'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb31'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb32'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb33'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb34'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb35'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb36'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb37'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb38'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb39'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb40'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb41'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb42'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb42', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb42', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb42', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb42', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb42', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb42', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb42', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb42', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb42', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb43'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb43', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb43', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb43', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb43', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb43', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb43', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb43', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb43', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb43', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb44'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb44', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb44', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb44', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb44', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb44', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb44', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb44', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb44', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb44', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb45'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb45', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb45', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb45', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb45', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb45', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb45', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb45', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb45', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb45', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb46'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb46', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb47'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb47', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb48'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb48', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb49'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb49', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc96'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc01'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc01', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc01', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc01', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc01', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc01', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc01', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc01', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc01', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc01', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc02'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc02', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc02', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc02', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc02', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc02', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc02', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc02', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc02', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc02', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc03'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc03', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc03', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc03', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc03', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc03', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc03', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc03', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc03', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc03', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc04'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc04', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc04', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc04', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc04', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc04', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc04', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc04', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc04', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc04', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc05'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc05', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc05', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc05', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc05', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc05', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc05', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc05', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc05', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc05', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc06'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc06', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc06', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc06', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc06', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc06', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc06', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc06', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc06', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc06', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc07'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc07', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc07', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc07', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc07', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc07', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc07', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc07', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc07', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc07', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc08'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc08', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc08', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc08', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc08', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc08', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc08', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc08', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc08', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc08', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc09'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc09', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc09', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc09', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc09', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc09', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc09', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc09', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc09', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc09', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc10'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc10', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc10', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc10', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc10', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc10', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc10', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc10', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc10', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc10', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc11'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc11', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc11', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc11', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc11', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc11', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc11', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc11', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc11', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc11', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc12'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc12', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc12', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc12', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc12', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc12', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc12', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc12', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc12', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc12', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc13'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc13', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc13', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc13', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc13', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc13', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc13', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc13', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc13', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc13', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc14'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc14', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc14', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc14', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc14', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc14', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc14', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc14', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc14', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc14', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc15'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc15', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc15', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc15', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc15', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc15', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc15', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc15', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc15', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc15', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc16'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc16', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc16', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc16', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc16', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc16', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc16', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc16', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc16', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc16', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc17'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc17', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc17', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc17', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc17', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc17', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc17', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc17', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc17', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc17', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc18'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc18', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc18', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc18', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc18', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc18', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc18', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc18', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc18', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc18', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc19'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc19', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc19', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc19', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc19', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc19', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc19', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc19', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc19', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc19', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc20'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc20', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc20', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc20', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc20', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc20', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc20', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc20', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc20', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc20', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb64'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb64', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb65'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb65', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb65', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb65', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb65', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb65', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb65', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb65', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb65', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb65', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb66'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb66', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb66', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb66', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb66', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb66', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb66', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb66', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb66', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb66', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb67'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb67', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb67', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb67', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb67', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb67', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb67', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb67', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb67', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb67', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb68'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb68', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb68', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb68', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb68', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb68', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb68', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb68', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb68', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb68', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb69'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb69', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb70'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb70', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb70', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb70', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb70', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb70', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb70', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb70', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb70', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb70', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb71'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb71', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb71', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb71', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb71', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb71', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb71', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb71', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb71', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb71', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb72'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb72', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb72', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb72', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb72', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb72', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb72', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb72', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb72', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb72', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb73'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb73', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb73', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb73', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb73', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb73', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb73', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb73', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb73', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb73', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb74'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb74', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb74', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb74', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb74', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb74', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb74', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb74', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb74', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb74', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb75'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb75', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb75', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb75', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb75', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb75', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb75', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb75', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb75', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb75', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb76'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb76', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb76', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb76', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb76', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb76', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb76', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb76', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb76', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb76', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb77'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb77', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb77', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb77', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb77', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb77', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb77', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb77', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb77', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb77', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb78'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb78', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb78', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb78', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb78', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb78', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb78', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb78', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb78', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb78', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb79'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb79', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb79', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb79', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb79', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb79', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb79', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb79', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb79', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb79', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb80'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb80', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb80', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb80', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb80', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb80', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb80', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb80', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb80', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb80', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb81'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb81', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb81', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb81', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb81', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb81', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb81', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb81', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb81', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb81', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb82'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb82', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb82', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb82', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb82', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb82', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb82', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb82', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb82', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb82', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb83'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb83', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb83', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb83', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb83', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb83', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb83', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb83', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb83', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb83', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb84'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb84', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb84', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb84', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb84', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb84', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb84', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb84', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb84', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb84', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfb85'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb85', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb85', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb85', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb85', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb85', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb85', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb85', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb85', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb85', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc53'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc54'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc55'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc56'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc57'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc58'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc59'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc60'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc61'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc62'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc63'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc64'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc65'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc66'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc67'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc68'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc69'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc70'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc71'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc72'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc73'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', '2d7ed5a0-fb21-4927-9a25-647c17d29668'),
    -- contest id: 'd215b5f8-0249-4dc5-89a3-51fd148cfc74'
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', '9ba179ed-d26d-4828-a0f6-8836c2063992'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', 'b029f559-52a8-4699-b595-71161498ed8c'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', '8c98e9e1-a9e7-49ee-b9fd-0cb5bd7814f7'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', '39328bcf-8af6-44fc-9ae9-247f953ee2a2'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', '8edbc0aa-0b91-480e-a428-23abf2109df9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', '05dbdfde-1eae-47ba-8ebb-6c4cdc4f6510'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', '64412e27-169e-44ea-a101-74ebf8cb82d9'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', 'cb2c22ac-87de-44e4-9638-35979f6af667'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', '2d7ed5a0-fb21-4927-9a25-647c17d29668');


-- Pick Random question type code from public.question and each contest will have at least 4 questions
INSERT INTO public.contest_question(contest_id, question_id)
VALUES
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb15', 'b6484e21-6937-489c-b031-b71767994738'),
    --
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', 'b6484e21-6937-489c-b031-b71767994739'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', 'b6484e21-6937-489c-b031-b71767994740'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', 'b6484e21-6937-489c-b031-b71767994741'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb16', 'b6484e21-6937-489c-b031-b71767994742'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', 'b6484e21-6937-489c-b031-b71767994743'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', 'b6484e21-6937-489c-b031-b71767994744'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', 'b6484e21-6937-489c-b031-b71767994745'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb17', 'b6484e21-6937-489c-b031-b71767994746'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'b6484e21-6937-489c-b031-b71767994747'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'b6484e21-6937-489c-b031-b71767994748'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'b6484e21-6937-489c-b031-b71767994749'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb18', 'b6484e21-6937-489c-b031-b71767994750'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'b6484e21-6937-489c-b031-b71767994754'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'b6484e21-6937-489c-b031-b71767994755'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'b6484e21-6937-489c-b031-b71767994756'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb19', 'b6484e21-6937-489c-b031-b71767994757'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', 'b6484e21-6937-489c-b031-b71767994755'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', 'b6484e21-6937-489c-b031-b71767994756'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', 'b6484e21-6937-489c-b031-b71767994757'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb20', 'b6484e21-6937-489c-b031-b71767994758'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'b6484e21-6937-489c-b031-b71767994759'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'b6484e21-6937-489c-b031-b71767994760'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'b6484e21-6937-489c-b031-b71767994761'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb21', 'b6484e21-6937-489c-b031-b71767994762'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', 'b6484e21-6937-489c-b031-b71767994763'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb22', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', 'b6484e21-6937-489c-b031-b71767994739'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', 'b6484e21-6937-489c-b031-b71767994740'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb23', 'b6484e21-6937-489c-b031-b71767994741'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', 'b6484e21-6937-489c-b031-b71767994742'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', 'b6484e21-6937-489c-b031-b71767994743'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', 'b6484e21-6937-489c-b031-b71767994744'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb24', 'b6484e21-6937-489c-b031-b71767994745'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', 'b6484e21-6937-489c-b031-b71767994746'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', 'b6484e21-6937-489c-b031-b71767994747'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', 'b6484e21-6937-489c-b031-b71767994748'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb25', 'b6484e21-6937-489c-b031-b71767994749'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', 'b6484e21-6937-489c-b031-b71767994750'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', 'b6484e21-6937-489c-b031-b71767994754'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', 'b6484e21-6937-489c-b031-b71767994755'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb26', 'b6484e21-6937-489c-b031-b71767994756'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', 'b6484e21-6937-489c-b031-b71767994754'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', 'b6484e21-6937-489c-b031-b71767994755'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', 'b6484e21-6937-489c-b031-b71767994756'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb27', 'b6484e21-6937-489c-b031-b71767994757'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', 'b6484e21-6937-489c-b031-b71767994758'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', 'b6484e21-6937-489c-b031-b71767994759'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', 'b6484e21-6937-489c-b031-b71767994760'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb28', 'b6484e21-6937-489c-b031-b71767994761'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', 'b6484e21-6937-489c-b031-b71767994762'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', 'b6484e21-6937-489c-b031-b71767994763'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb29', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb30', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', 'b6484e21-6937-489c-b031-b71767994739'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', 'b6484e21-6937-489c-b031-b71767994740'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', 'b6484e21-6937-489c-b031-b71767994741'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb31', 'b6484e21-6937-489c-b031-b71767994742'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', 'b6484e21-6937-489c-b031-b71767994743'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', 'b6484e21-6937-489c-b031-b71767994744'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', 'b6484e21-6937-489c-b031-b71767994745'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb32', 'b6484e21-6937-489c-b031-b71767994746'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', 'b6484e21-6937-489c-b031-b71767994747'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', 'b6484e21-6937-489c-b031-b71767994748'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', 'b6484e21-6937-489c-b031-b71767994749'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb33', 'b6484e21-6937-489c-b031-b71767994750'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', 'b6484e21-6937-489c-b031-b71767994754'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', 'b6484e21-6937-489c-b031-b71767994755'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', 'b6484e21-6937-489c-b031-b71767994756'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb34', 'b6484e21-6937-489c-b031-b71767994757'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', 'b6484e21-6937-489c-b031-b71767994755'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', 'b6484e21-6937-489c-b031-b71767994756'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', 'b6484e21-6937-489c-b031-b71767994757'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb35', 'b6484e21-6937-489c-b031-b71767994758'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', 'b6484e21-6937-489c-b031-b71767994759'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', 'b6484e21-6937-489c-b031-b71767994760'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', 'b6484e21-6937-489c-b031-b71767994761'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb36', 'b6484e21-6937-489c-b031-b71767994762'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', 'b6484e21-6937-489c-b031-b71767994763'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb37', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', 'b6484e21-6937-489c-b031-b71767994739'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', 'b6484e21-6937-489c-b031-b71767994740'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb38', 'b6484e21-6937-489c-b031-b71767994741'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', 'b6484e21-6937-489c-b031-b71767994742'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', 'b6484e21-6937-489c-b031-b71767994743'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', 'b6484e21-6937-489c-b031-b71767994744'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb39', 'b6484e21-6937-489c-b031-b71767994745'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', 'b6484e21-6937-489c-b031-b71767994746'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', 'b6484e21-6937-489c-b031-b71767994747'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', 'b6484e21-6937-489c-b031-b71767994748'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb40', 'b6484e21-6937-489c-b031-b71767994749'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', 'b6484e21-6937-489c-b031-b71767994750'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', 'b6484e21-6937-489c-b031-b71767994754'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', 'b6484e21-6937-489c-b031-b71767994755'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfb41', 'b6484e21-6937-489c-b031-b71767994756'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc42', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc42', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc42', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc42', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc43', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc43', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc43', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc43', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc44', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc44', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc44', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc44', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc45', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc45', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc45', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc45', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc46', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc46', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc46', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc46', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc47', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc47', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc47', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc47', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc48', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc48', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc48', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc48', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc49', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc49', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc49', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc49', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc50', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc50', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc50', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc50', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc51', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc51', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc51', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc51', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc52', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc52', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc52', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc52', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc53', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc54', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc55', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc56', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc57', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc58', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc59', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc60', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc61', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc62', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc63', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc64', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc65', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc66', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc67', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc68', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc69', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc70', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc71', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc72', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc73', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc74', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc75', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc75', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc75', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc75', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc76', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc76', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc76', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc76', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc77', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc77', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc77', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc77', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc78', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc78', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc78', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc78', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc79', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc79', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc79', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc79', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc80', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc80', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc80', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc80', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc81', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc81', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc81', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc81', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc82', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc82', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc82', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc82', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc83', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc83', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc83', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc83', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc84', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc84', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc84', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc84', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc85', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc85', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc85', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc85', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc86', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc86', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc86', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc86', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc87', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc87', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc87', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc87', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc88', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc88', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc88', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc88', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc89', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc89', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc89', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc89', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc90', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc90', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc90', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc90', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc91', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc91', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc91', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc91', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc92', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc92', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc92', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc92', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc93', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc93', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc93', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc93', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc94', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc94', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc94', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc94', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc95', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc95', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc95', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc95', 'b6484e21-6937-489c-b031-b71767994738'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', 'b6484e21-6937-489c-b031-b71767994221'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', 'b6484e21-6937-489c-b031-b71767994736'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', 'b6484e21-6937-489c-b031-b71767994737'),
    ('d215b5f8-0249-4dc5-89a3-51fd148cfc96', 'b6484e21-6937-489c-b031-b71767994738');


INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank)
VALUES('20d06a81-f597-41bc-a60c-480d5c38eb80'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Câu 1', '<p><span style="color: rgb(51, 51, 51);">Hãy cho biết ý tưởng nào sau đây nói về phương pháp sắp xếp chọn tăng dần (select sort)?</span></p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-06-20 21:22:31.589', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-06-20 21:22:31.589', NULL, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank)
VALUES('82a72f33-69d1-417a-bc4a-54e4a3f42a06'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Câu 2', '<h4><a href="https://khoahoc.vietjack.com/question/958165/phuong-phap-nao-sau-day-chinh-la-phuong-phap-sap-xep-nhanh-quick-sort" rel="noopener noreferrer" target="_blank" style="color: rgb(0, 0, 0); background-color: transparent;">Phương pháp nào sau đây chính là phương pháp sắp xếp nhanh (Quick sort)?</a></h4><p><br></p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-06-20 21:24:16.622', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-06-20 21:24:16.622', NULL, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank)
VALUES('fe65d7df-69ac-4a17-805c-f1f2b65b9972'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Câu 3', '<h4><a href="https://khoahoc.vietjack.com/question/958164/hay-cho-biet-y-tuong-nao-sau-day-noi-ve-phuong-phap-sap-xep-nhanh-quick-sort" rel="noopener noreferrer" target="_blank" style="color: rgb(0, 0, 0); background-color: transparent;">Hãy cho biết ý tưởng nào sau đây nói về phương pháp sắp xếp nhanh (Quick sort)?</a></h4><p><br></p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-06-20 21:25:55.996', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-06-20 21:25:55.996', NULL, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank)
VALUES('53ce35a7-9dcf-4741-a4ed-872874daf829'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Câu 4', '<p><a href="https://vietjack.online/cau-hoi/958554/giai-thuat-de-quy-la-a-trong-giai-thuat-cua-no-co-loi-goi-toi-chinh-no" rel="noopener noreferrer" target="_blank" style="color: rgb(0, 0, 0); background-color: transparent;">Giải thuật đệ quy là:</a></p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-06-20 21:28:16.197', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-06-20 21:28:16.197', NULL, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank)
VALUES('0fe5d2ee-6892-4f62-a6e6-83284f2430bc'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Câu 5', '<p>QUEUE hoạt động như thế nào?</p>', '', 1.00, 'SHORT_ANSWER'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-06-20 21:29:18.256', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-06-20 21:29:18.256', NULL, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank)
VALUES('513a7e58-00d0-450b-8f0d-78af23898b81'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Câu 6', '<p>Có thể gán NULL cho con trỏ nhằm chỉ định rằng nó không trỏ tới bất kỳ vùng nhớ nào</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-06-20 21:30:29.529', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-06-20 21:30:29.529', NULL, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank)
VALUES('1168fba1-8391-4294-b1cb-2c108f96af1f'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Câu 7', '<p>%ld là xâu định dạng để in ra một số nguyên dài</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-06-20 21:31:55.692', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-06-20 21:31:55.692', NULL, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank)
VALUES('c4b3219f-9d83-4497-ad15-d46772141bd5'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Câu 8', '<p>STACK hoạt động như nào?</p>', '', 1.00, 'SHORT_ANSWER'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-06-20 21:33:16.328', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-06-20 21:33:16.328', NULL, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank)
VALUES('29a71c20-290b-471d-acc8-4c5c929f96a8'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Câu 9', '<p>* là ký tự dùng để biểu diễn con trỏ trong C/C++</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-06-20 21:34:55.796', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-06-20 21:34:55.796', NULL, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank)
VALUES('1ca8c89a-1bd0-41b2-adf0-4f7b55f8b256'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Câu 10', '<p>Con trỏ là một biến dùng để lưu địa chỉ nhớ của một biến khác</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-06-20 21:35:23.054', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-06-20 21:35:23.054', NULL, false);


INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('43455ada-fee6-4da7-b688-9a044662609f'::uuid, '20d06a81-f597-41bc-a60c-480d5c38eb80'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('f6a3859e-a5b7-4f57-83a1-62bd1d4af10f'::uuid, '82a72f33-69d1-417a-bc4a-54e4a3f42a06'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('a2e49b15-fd74-4911-aa70-bee57cfca69c'::uuid, 'fe65d7df-69ac-4a17-805c-f1f2b65b9972'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('ff9dbd27-698c-438a-bb4d-9572c845e521'::uuid, '53ce35a7-9dcf-4741-a4ed-872874daf829'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('5dd4f23a-e2eb-4dc4-96a1-07285d57a37d'::uuid, '513a7e58-00d0-450b-8f0d-78af23898b81'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('3e9bb601-6109-4a20-b529-1a070282e47f'::uuid, '1168fba1-8391-4294-b1cb-2c108f96af1f'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('0feadb2c-9dfd-4ebb-8a75-beb9d9eed408'::uuid, '29a71c20-290b-471d-acc8-4c5c929f96a8'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('400a2f4d-c880-4e00-94be-d4b4afebccbd'::uuid, '1ca8c89a-1bd0-41b2-adf0-4f7b55f8b256'::uuid, true, false, '', NULL, '', NULL, 1, '1');

INSERT INTO public.qtype_shortanswer_question
(id, question_id, case_sensitive)
VALUES('fa860cec-afa7-4b4d-948c-d8ab1d5a384e'::uuid, '0fe5d2ee-6892-4f62-a6e6-83284f2430bc'::uuid, true);
INSERT INTO public.qtype_shortanswer_question
(id, question_id, case_sensitive)
VALUES('78d62d6f-e323-4a40-bdaf-31b352227f29'::uuid, 'c4b3219f-9d83-4497-ad15-d46772141bd5'::uuid, true);

INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('f13af228-9d17-45b1-b3e5-7a34f590b145'::uuid, '20d06a81-f597-41bc-a60c-480d5c38eb80'::uuid, '<p><span style="color: rgb(63, 63, 63);">Phân đoạn dãy thành nhiều dãy con và lần lượt trộn hai dãy con thành dãy lớn hơn, cho đến khi thu được dãy ban đầu đã được sắp xếp</span></p>', '<p><span style="color: rgb(63, 63, 63);">Phân đoạn dãy thành nhiều dãy con và lần lượt trộn hai dãy con thành dãy lớn hơn, cho đến khi thu được dãy ban đầu đã được sắp xếp</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('da47f572-a86b-4250-9596-fabf92ffb150'::uuid, '20d06a81-f597-41bc-a60c-480d5c38eb80'::uuid, '<p><span style="color: rgb(63, 63, 63);">Lần lượt lấy phần tử của danh sách chèn vị trí thích hợp của nó trong dãy</span></p>', '<p><span style="color: rgb(63, 63, 63);">Lần lượt lấy phần tử của danh sách chèn vị trí thích hợp của nó trong dãy</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('20ba7b11-9b6a-48d6-96e5-5b49a4127bf7'::uuid, '20d06a81-f597-41bc-a60c-480d5c38eb80'::uuid, '<p><span style="color: rgb(63, 63, 63);">Chọn phần tử bé nhất xếp vào vị trí thứ nhất bằng cách đổi chổ phần tử bé nhất với phần tử thứ nhất; Tương tự đối với phần tử nhỏ thứ hai cho đến phần tử cuối cùng</span></p>', '<p><span style="color: rgb(63, 63, 63);">Chọn phần tử bé nhất xếp vào vị trí thứ nhất bằng cách đổi chổ phần tử bé nhất với phần tử thứ nhất; Tương tự đối với phần tử nhỏ thứ hai cho đến phần tử cuối cùng</span></p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('797744cf-8e04-486c-a3ef-778b71ab4303'::uuid, '20d06a81-f597-41bc-a60c-480d5c38eb80'::uuid, '<p><span style="color: rgb(63, 63, 63);">Bắt đầu từ cuối dãy đến đầu dãy, ta lần lượt so sánh hai phần tử kế tiếp nhau, nếu phần tử nào bé hơn được cho lên vị trí trên</span></p>', '<p><span style="color: rgb(63, 63, 63);">Bắt đầu từ cuối dãy đến đầu dãy, ta lần lượt so sánh hai phần tử kế tiếp nhau, nếu phần tử nào bé hơn được cho lên vị trí trên</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('c057f9a7-29f2-4510-bda6-20282e084548'::uuid, '82a72f33-69d1-417a-bc4a-54e4a3f42a06'::uuid, '<p><span style="color: rgb(63, 63, 63);">Phương phap trộn</span></p>', '<p><span style="color: rgb(63, 63, 63);">Phương phap trộn</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('73dce995-e874-4839-a4ed-b024534adb68'::uuid, '82a72f33-69d1-417a-bc4a-54e4a3f42a06'::uuid, '<p><span style="color: rgb(63, 63, 63);">Phương pháp vun đống</span></p>', '<p><span style="color: rgb(63, 63, 63);">Phương pháp vun đống</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('b35e54ea-7b0d-4ed6-a1e5-3a24c1296670'::uuid, '82a72f33-69d1-417a-bc4a-54e4a3f42a06'::uuid, '<p><span style="color: rgb(63, 63, 63);">Phương pháp chèn</span></p>', '<p><span style="color: rgb(63, 63, 63);">Phương pháp chèn</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('1350a0b1-43c6-43c5-a9e1-34bce3e6759e'::uuid, '82a72f33-69d1-417a-bc4a-54e4a3f42a06'::uuid, '<p><span style="color: rgb(63, 63, 63);">Phương pháp phân đoạn</span></p>', '<p><span style="color: rgb(63, 63, 63);">Phương pháp phân đoạn</span></p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('d64eda1d-8a47-4d01-9396-2362d55621d5'::uuid, 'fe65d7df-69ac-4a17-805c-f1f2b65b9972'::uuid, '<p><span style="color: rgb(63, 63, 63);">Chọn phần tử bé nhất xếp vào vị trí thứ nhất bằng cách đổi chổ phần tử bé nhất với phần tử thứ nhất; Tương tự đối với phần tử nhỏ thứ hai cho đến phần tử cuối cùng</span></p>', '<p><span style="color: rgb(63, 63, 63);">Chọn phần tử bé nhất xếp vào vị trí thứ nhất bằng cách đổi chổ phần tử bé nhất với phần tử thứ nhất; Tương tự đối với phần tử nhỏ thứ hai cho đến phần tử cuối cùng</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('a0444c51-ede9-4c42-a821-e9e3b6124761'::uuid, 'fe65d7df-69ac-4a17-805c-f1f2b65b9972'::uuid, '<p><span style="color: rgb(63, 63, 63);">Bắt đầu từ cuối dãy đến đầu dãy, ta lần lượt so sánh hai phần tử kế tiếpnh u, nếu phần tử nào nhỏ hơn được đứng vị trí trên</span></p>', '<p><span style="color: rgb(63, 63, 63);">Bắt đầu từ cuối dãy đến đầu dãy, ta lần lượt so sánh hai phần tử kế tiếpnh u, nếu phần tử nào nhỏ hơn được đứng vị trí trên</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('ca665a4c-0f11-4144-9f52-025fd9887870'::uuid, 'fe65d7df-69ac-4a17-805c-f1f2b65b9972'::uuid, '<p><span style="color: rgb(63, 63, 63);">Phân đoạn dãy thành nhiều dãy con và lần lượt trộn hai dãy con thành dãy lớn hơn, cho đến khi thu được dãy ban đầu đã được sắp xếp</span></p>', '<p><span style="color: rgb(63, 63, 63);">Phân đoạn dãy thành nhiều dãy con và lần lượt trộn hai dãy con thành dãy lớn hơn, cho đến khi thu được dãy ban đầu đã được sắp xếp</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('e7a9f1de-b7bb-48d4-a7d9-c41c805c112a'::uuid, 'fe65d7df-69ac-4a17-805c-f1f2b65b9972'::uuid, '<p><span style="color: rgb(63, 63, 63);">Lần lượt chia dãy phần tử thành hai dãy con bởi một phần tử khoá (dãy con trước khoá gồm các phần tử nhỏ hơn khoá và dãy còn lại gồm các phần tử lớn hơn khoá)</span></p>', '<p><span style="color: rgb(63, 63, 63);">Lần lượt chia dãy phần tử thành hai dãy con bởi một phần tử khoá (dãy con trước khoá gồm các phần tử nhỏ hơn khoá và dãy còn lại gồm các phần tử lớn hơn khoá)</span></p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('7d39a4d4-a392-4929-9e0f-9317aa079a89'::uuid, '53ce35a7-9dcf-4741-a4ed-872874daf829'::uuid, '<p><span style="color: rgb(63, 63, 63);">Trong giải thuật của nó có lời gọi tới chính nó</span></p>', '<p><span style="color: rgb(63, 63, 63);">Trong giải thuật của nó có lời gọi tới chính nó</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('b8eb7450-9483-4b7f-a42c-a74c13db3842'::uuid, '53ce35a7-9dcf-4741-a4ed-872874daf829'::uuid, '<p><span style="color: rgb(63, 63, 63);">Trong giải thuật của nó có lời gọi tới chính nó nhưng với phạm vi lớn hơn</span></p>', '<p><span style="color: rgb(63, 63, 63);">Trong giải thuật của nó có lời gọi tới chính nó nhưng với phạm vi lớn hơn</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('085c69a6-858c-4c79-aa19-2308f04844ce'::uuid, '53ce35a7-9dcf-4741-a4ed-872874daf829'::uuid, '<p><span style="color: rgb(63, 63, 63);">Trong giải thuật của nó có lời gọi tới chính nó nhưng với phạm vi nhỏ hơn</span></p>', '<p><span style="color: rgb(63, 63, 63);">Trong giải thuật của nó có lời gọi tới chính nó nhưng với phạm vi nhỏ hơn</span></p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('8b9b49af-f8da-4df7-b1dc-039dc7d94e2a'::uuid, '53ce35a7-9dcf-4741-a4ed-872874daf829'::uuid, '<p><span style="color: rgb(63, 63, 63);">Trong giải thuật của nó có lời gọi tới một giải thuật khác đã biết kết quả</span></p>', '<p><span style="color: rgb(63, 63, 63);">Trong giải thuật của nó có lời gọi tới một giải thuật khác đã biết kết quả</span></p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('ee0be7d0-c592-4e40-8bba-871b6c9f7272'::uuid, '0fe5d2ee-6892-4f62-a6e6-83284f2430bc'::uuid, '<p>FILO</p>', 'FILO', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('c791aa62-c177-45de-b015-44b0679654d2'::uuid, '513a7e58-00d0-450b-8f0d-78af23898b81'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('80c171ab-25c9-4371-ae3d-f6de0b36c505'::uuid, '1168fba1-8391-4294-b1cb-2c108f96af1f'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('b06ddec2-cbe0-4488-8cde-228c55e43a26'::uuid, 'c4b3219f-9d83-4497-ad15-d46772141bd5'::uuid, '<p>FIFO</p>', 'FIFO', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('022472ef-31ab-4876-8509-8f1108ae9dbb'::uuid, '29a71c20-290b-471d-acc8-4c5c929f96a8'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('c85f2ef4-5cb6-4e4a-a8d0-01947ae1007e'::uuid, '1ca8c89a-1bd0-41b2-adf0-4f7b55f8b256'::uuid, 'Correct', 'true', 1.00);
------------------
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('98abb4e8-94d6-41dc-a960-2f18438ce77d'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Mạng máy tính là gì?', '<p>Mạng máy tính là gì?</p>', '', 1.00, 'ESSAY'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATING'::public."copystate", '2024-07-16 21:09:31.287', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:09:31.287', '94f340b3-fb05-4e3a-8cb5-44ef5d936a9b'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('fe7f0a71-d3c5-4d2b-be25-2faff42c6b5c'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Router có chức năng gì trong mạng máy tính?', '<p>Router có chức năng gì trong mạng máy tính?</p>', '', 1.00, 'SHORT_ANSWER'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:09:58.782', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:09:58.782', '94f340b3-fb05-4e3a-8cb5-44ef5d936a9b'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('e64fc118-1ae3-413d-9524-3e1dd1702ab5'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Giao thức nào sau đây thường được sử dụng cho truyền thông trong mạng Internet?', '<p>Giao thức nào sau đây thường được sử dụng cho truyền thông trong mạng Internet?</p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:10:58.079', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:10:58.079', '94f340b3-fb05-4e3a-8cb5-44ef5d936a9b'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('c434f3a9-986e-4522-bbdc-d9c58e0380ed'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Thiết bị nào được sử dụng để kết nối các thiết bị trong một mạng cục bộ (LAN)?', '<p>Thiết bị nào được sử dụng để kết nối các thiết bị trong một mạng cục bộ (LAN)?</p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:12:26.553', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:12:26.553', '94f340b3-fb05-4e3a-8cb5-44ef5d936a9b'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('514843c5-8814-4406-af5c-9bf55fdf9ec8'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'IP (Internet Protocol) là một giao thức thuộc tầng 4 trong mô hình OSI.', '<p>IP (Internet Protocol) là một giao thức thuộc tầng 4 trong mô hình OSI.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:12:49.093', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:12:49.093', '94f340b3-fb05-4e3a-8cb5-44ef5d936a9b'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('c5e675a1-50a3-400c-a232-968413d0ebf2'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Trong lập trình hướng đối tượng, phương thức khởi tạo (constructor) không thể bị ghi đè (override).', '<p>Trong lập trình hướng đối tượng, phương thức khởi tạo (constructor) không thể bị ghi đè (override).</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:22:13.306', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:22:13.306', 'a69c5276-4f35-469d-94b1-b2df3f3f2707'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('e3ac5475-462e-457a-9e00-f37a6217135c'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'DNS (Domain Name System) giúp ánh xạ tên miền thành địa chỉ IP.', '<p>DNS (Domain Name System) giúp ánh xạ tên miền thành địa chỉ IP.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:13:06.524', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:13:06.524', '94f340b3-fb05-4e3a-8cb5-44ef5d936a9b'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('4a8afa92-ad7c-4bd4-8bfc-d699f616a80d'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Mạng LAN (Local Area Network) chỉ hoạt động trong phạm vi nhỏ như một phòng hoặc tòa nhà.', '<p>Mạng LAN (Local Area Network) chỉ hoạt động trong phạm vi nhỏ như một phòng hoặc tòa nhà.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:15:02.085', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:15:02.085', '94f340b3-fb05-4e3a-8cb5-44ef5d936a9b'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('1592dc84-c95f-45d6-9a65-6c1ac5e2e413'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Tất cả các thiết bị mạng đều phải sử dụng cáp để kết nối với nhau.', '<p>Tất cả các thiết bị mạng đều phải sử dụng cáp để kết nối với nhau.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:15:24.385', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:15:24.385', '94f340b3-fb05-4e3a-8cb5-44ef5d936a9b'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('f6a71b52-bf17-4ac0-b736-fb609e8f84d9'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Lập trình hướng đối tượng là gì?', '<p>Lập trình hướng đối tượng là gì?</p>', '', 1.00, 'ESSAY'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATING'::public."copystate", '2024-07-16 21:18:53.851', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:18:53.851', 'a69c5276-4f35-469d-94b1-b2df3f3f2707'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('9de30d16-41ac-4451-9947-2b2088dd6afa'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Đóng gói (encapsulation) là gì?', '<p>Đóng gói (encapsulation) là gì?</p>', '', 1.00, 'SHORT_ANSWER'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:19:20.751', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:19:20.751', 'a69c5276-4f35-469d-94b1-b2df3f3f2707'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('8de957d4-92df-4f94-997b-1e1275afdc2f'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Khái niệm nào sau đây không thuộc về lập trình hướng đối tượng?', '<p>Khái niệm nào sau đây không thuộc về lập trình hướng đối tượng?</p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:20:18.417', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:20:18.417', 'a69c5276-4f35-469d-94b1-b2df3f3f2707'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('b387b570-5b99-4f82-83be-292c969db99f'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Tính chất nào của lập trình hướng đối tượng cho phép một lớp con kế thừa các thuộc tính và phương thức từ lớp cha?', '<p>Tính chất nào của lập trình hướng đối tượng cho phép một lớp con kế thừa các thuộc tính và phương thức từ lớp cha?</p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:21:16.834', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:21:16.834', 'a69c5276-4f35-469d-94b1-b2df3f3f2707'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('4fa387a6-db86-48bb-85f4-fcbb43c8eeb0'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Lớp trừu tượng (Abstract class) không thể tạo được đối tượng trực tiếp.', '<p>Lớp trừu tượng (Abstract class) không thể tạo được đối tượng trực tiếp.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:21:41.464', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:21:41.464', 'a69c5276-4f35-469d-94b1-b2df3f3f2707'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('b48fbf09-4b3f-4def-bfb8-4cfb65da1f27'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Một lớp con có thể kế thừa nhiều lớp cha trong ngôn ngữ lập trình Java.', '<p>Một lớp con có thể kế thừa nhiều lớp cha trong ngôn ngữ lập trình Java.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:21:56.766', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:21:56.766', 'a69c5276-4f35-469d-94b1-b2df3f3f2707'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('306eaa8b-4054-4ad7-b6ed-b847a2d53b63'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Interface chỉ định nghĩa các phương thức nhưng không cung cấp hiện thực của chúng.', '<p>Interface chỉ định nghĩa các phương thức nhưng không cung cấp hiện thực của chúng.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:22:27.538', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:22:27.538', 'a69c5276-4f35-469d-94b1-b2df3f3f2707'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('18fe1f1b-2d67-4bfa-bdfe-a19fe4daa665'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Cấu trúc dữ liệu là gì?', '<p>Cấu trúc dữ liệu là gì?</p>', '', 1.00, 'ESSAY'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATING'::public."copystate", '2024-07-16 21:23:11.989', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:23:11.989', 'd8fed7b0-bd98-436e-9c4d-36b8fe9f372e'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('1f0daa04-6462-4eb5-9fc4-883f68e78b7c'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Giải thuật (thuật toán) là gì?', '<p>Giải thuật (thuật toán) là gì?</p>', '', 1.00, 'SHORT_ANSWER'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:23:38.839', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:23:38.839', 'd8fed7b0-bd98-436e-9c4d-36b8fe9f372e'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('1c054e46-a127-448d-a6a8-8c9be65cfded'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Cấu trúc dữ liệu nào sau đây là một dạng danh sách liên kết mà mỗi phần tử chứa một con trỏ đến phần tử tiếp theo và phần tử trước đó?', '<p>Cấu trúc dữ liệu nào sau đây là một dạng danh sách liên kết mà mỗi phần tử chứa một con trỏ đến phần tử tiếp theo và phần tử trước đó?</p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:24:30.034', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:24:30.034', 'd8fed7b0-bd98-436e-9c4d-36b8fe9f372e'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('c88dfd4d-b102-4412-9127-17d68ec3a5e1'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Giải thuật tìm kiếm nhị phân yêu cầu cấu trúc dữ liệu đầu vào phải là gì?', '<p>Giải thuật tìm kiếm nhị phân yêu cầu cấu trúc dữ liệu đầu vào phải là gì?</p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:25:38.278', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:25:38.278', 'd8fed7b0-bd98-436e-9c4d-36b8fe9f372e'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('eb74ae25-bfd1-4c3c-8d19-f29872f6b858'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Stack là một cấu trúc dữ liệu theo nguyên tắc LIFO (Last In, First Out).', '<p>Stack là một cấu trúc dữ liệu theo nguyên tắc LIFO (Last In, First Out).</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:26:02.766', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:26:02.766', 'd8fed7b0-bd98-436e-9c4d-36b8fe9f372e'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('9002af16-7252-421a-b8ab-c0f4944a1e89'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Độ phức tạp thời gian trung bình của giải thuật tìm kiếm nhị phân là O(n).', '<p>Độ phức tạp thời gian trung bình của giải thuật tìm kiếm nhị phân là O(n).</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:26:48.714', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:26:48.714', 'd8fed7b0-bd98-436e-9c4d-36b8fe9f372e'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('a411cc44-f924-445c-bd00-f605f7533dcf'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Độ phức tạp thời gian trung bình của giải thuật sắp xếp Quick Sort là O(n log n).', '<p>Độ phức tạp thời gian trung bình của giải thuật sắp xếp Quick Sort là O(n log n).</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:27:05.722', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:27:05.722', 'd8fed7b0-bd98-436e-9c4d-36b8fe9f372e'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('05d5cd7c-968b-49a6-acf3-c839f2d04243'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Trong cấu trúc dữ liệu Heap, phần tử lớn nhất luôn nằm ở gốc (root) trong một Max Heap.', '<p>Trong cấu trúc dữ liệu Heap, phần tử lớn nhất luôn nằm ở gốc (root) trong một Max Heap.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:27:23.647', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:27:23.647', 'd8fed7b0-bd98-436e-9c4d-36b8fe9f372e'::uuid, true, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('fd98f388-0b73-45ec-803f-d27a14773ac6'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Sự khác nhau chính giữa C và C++ là gì?', '<p>Sự khác nhau chính giữa C và C++ là gì?</p>', '', 1.00, 'ESSAY'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATING'::public."copystate", '2024-07-16 21:28:23.112', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:28:23.112', 'a54cf2f7-294c-4b1a-a8c7-6e8c34fb5f51'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('4faf36f7-aa0b-43db-b830-aff5c0337996'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Con trỏ (pointer) trong C/C++ là gì?', '<p>Con trỏ (pointer) trong C/C++ là gì?</p>', '', 1.00, 'SHORT_ANSWER'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:28:46.226', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:28:46.226', 'a54cf2f7-294c-4b1a-a8c7-6e8c34fb5f51'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('175441dd-3023-480a-880a-4b9a93570c1d'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Trong C++, từ khóa nào được sử dụng để khai báo một lớp (class)?', '<p>Trong C++, từ khóa nào được sử dụng để khai báo một lớp (class)?</p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:29:48.846', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:29:48.846', 'a54cf2f7-294c-4b1a-a8c7-6e8c34fb5f51'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('4981ef9b-2355-4ee7-acb6-6f72d549f50d'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Phương thức nào sau đây được sử dụng để giải phóng bộ nhớ đã cấp phát động trong C++?', '<p>Phương thức nào sau đây được sử dụng để giải phóng bộ nhớ đã cấp phát động trong C++?</p>', '', 1.00, 'MULTIPLE_CHOICE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:30:43.688', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:30:43.688', 'a54cf2f7-294c-4b1a-a8c7-6e8c34fb5f51'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('643c9a5f-c96e-4a1a-be18-0c3758002e3d'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Trong C++, bạn có thể sử dụng từ khóa ''new'' để cấp phát bộ nhớ động.', '<p>Trong C++, bạn có thể sử dụng từ khóa <code>new</code> để cấp phát bộ nhớ động.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:31:19.590', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:31:19.590', 'a54cf2f7-294c-4b1a-a8c7-6e8c34fb5f51'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('d0470328-32a5-4b28-8dd6-49a8c3a0b9c4'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Trong C, hàm scanf có thể được sử dụng để nhập dữ liệu từ người dùng.', '<p>Trong C, hàm <code>scanf</code> có thể được sử dụng để nhập dữ liệu từ người dùng.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:31:36.978', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:31:36.978', 'a54cf2f7-294c-4b1a-a8c7-6e8c34fb5f51'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('ce2dda6f-1448-4cf8-932e-17deedee80a6'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Trong C++, hàm bạn định nghĩa bên trong một lớp được gọi là phương thức (method).', '<p>Trong C++, hàm bạn định nghĩa bên trong một lớp được gọi là phương thức (method).</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:31:56.420', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:31:56.420', 'a54cf2f7-294c-4b1a-a8c7-6e8c34fb5f51'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('886e4b8a-6c84-40ee-8b16-d80ffdd06f8b'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Trong C++, bạn không thể nạp chồng (overload) toán tử.', '<p>Trong C++, bạn không thể nạp chồng (overload) toán tử.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:32:10.287', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:32:10.287', 'a54cf2f7-294c-4b1a-a8c7-6e8c34fb5f51'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('8288a841-3fc9-4163-878c-aa382dec8fe5'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'JVM (Java Virtual Machine) là gì?', '<p>JVM (Java Virtual Machine) là gì?</p>', '', 1.00, 'ESSAY'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATING'::public."copystate", '2024-07-16 21:32:52.120', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:32:52.120', 'b8d5995f-0cf9-4ad4-967c-f94f2187deb9'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('bfece9c7-3f02-43e1-bb7e-4317b3658641'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Sự khác biệt giữa == và equals() trong Java là gì?', '<p>Sự khác biệt giữa <code>==</code> và <code>equals()</code> trong Java là gì?</p>', '', 1.00, 'SHORT_ANSWER'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:33:27.427', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:33:27.427', 'b8d5995f-0cf9-4ad4-967c-f94f2187deb9'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('d6b8b467-f21a-4957-a58f-ad58c4015b2e'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Trong Java, một lớp chỉ có thể kế thừa từ một lớp khác.', '<p>Trong Java, một lớp chỉ có thể kế thừa từ một lớp khác.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:34:16.910', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:34:16.910', 'b8d5995f-0cf9-4ad4-967c-f94f2187deb9'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('f1de8ed8-5721-4260-b019-d3ae2852f048'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Trong Java, tất cả các lớp đều là con của lớp Object.', '<p>Trong Java, tất cả các lớp đều là con của lớp Object.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:34:30.027', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:34:30.027', 'b8d5995f-0cf9-4ad4-967c-f94f2187deb9'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('56aa0b87-83b7-42cf-9e90-0f075ad8c53b'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Java hỗ trợ lập trình hàm (functional programming) từ phiên bản Java 8 trở đi với sự ra đời của lambda expressions.', '<p>&nbsp;Java hỗ trợ lập trình hàm (functional programming) từ phiên bản Java 8 trở đi với sự ra đời của lambda expressions.</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:34:46.424', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:34:46.424', 'b8d5995f-0cf9-4ad4-967c-f94f2187deb9'::uuid, false, false);
INSERT INTO public.question
(id, org_id, "difficulty", "name", question_text, general_feedback, default_mark, "qtype", created_by, copy_state, created_at, updated_by, updated_at, question_bank_category_id, is_org_question_bank, is_lecturer_private)
VALUES('b0edc4d7-713a-48df-a9a7-8a8b411c3379'::uuid, '08b65a39-394f-4977-a5fa-3fe145b620f8'::uuid, 'EASY'::public."difficulty", 'Trong Java, bạn có thể tạo một đối tượng từ một lớp trừu tượng (abstract class).', '<p>Trong Java, bạn có thể tạo một đối tượng từ một lớp trừu tượng (abstract class).</p>', '', 1.00, 'TRUE_FALSE'::public."qtype", '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, 'CREATED'::public."copystate", '2024-07-16 21:35:07.187', '64412e27-169e-44ea-a101-74ebf8cb82d9'::uuid, '2024-07-16 21:35:07.187', 'b8d5995f-0cf9-4ad4-967c-f94f2187deb9'::uuid, false, false);


INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('c88f9871-2cc8-476e-afcd-db2c03455ae6'::uuid, 'fe7f0a71-d3c5-4d2b-be25-2faff42c6b5c'::uuid, '<p>Router có chức năng chuyển tiếp gói tin giữa các mạng khác nhau, định tuyến và quản lý luồng dữ liệu.</p>', 'Router có chức năng chuyển tiếp gói tin giữa các mạng khác nhau, định tuyến và quản lý luồng dữ liệu.', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('33d9b3bb-fffc-46b2-9312-1f5d57feaff9'::uuid, 'e64fc118-1ae3-413d-9524-3e1dd1702ab5'::uuid, '<p>HTTP</p>', '<p>HTTP</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('fbdc889c-ea57-48ec-8e59-868cfcc8a472'::uuid, 'e64fc118-1ae3-413d-9524-3e1dd1702ab5'::uuid, '<p>FTP</p>', '<p>FTP</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('32f89200-8f3e-467f-bc77-74aa3ad733db'::uuid, 'e64fc118-1ae3-413d-9524-3e1dd1702ab5'::uuid, '<p>SMTP</p>', '<p>SMTP</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('3890c6c4-2b8a-43e3-a82b-785713f2c6f4'::uuid, 'e64fc118-1ae3-413d-9524-3e1dd1702ab5'::uuid, '<p>TCP/IP</p>', '<p>TCP/IP</p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('3dfd0458-6678-4328-9b4c-3132b8b32382'::uuid, 'c434f3a9-986e-4522-bbdc-d9c58e0380ed'::uuid, '<p>Router</p>', '<p>Router</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('981085a7-ec44-4619-a979-9b3401852fa7'::uuid, 'c434f3a9-986e-4522-bbdc-d9c58e0380ed'::uuid, '<p>Switch</p>', '<p>Switch</p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('b8a262ca-d882-4550-b644-4528ff5efd64'::uuid, 'c434f3a9-986e-4522-bbdc-d9c58e0380ed'::uuid, '<p>Modem</p>', '<p>Modem</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('1d8623ec-c3ee-4ed6-86a2-45f11a0e73f1'::uuid, 'c434f3a9-986e-4522-bbdc-d9c58e0380ed'::uuid, '<p>Hub</p>', '<p>Hub</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('1e15ced7-3b2e-4165-9e84-f17873c12e20'::uuid, '514843c5-8814-4406-af5c-9bf55fdf9ec8'::uuid, 'Correct', 'false', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('d5387266-02bc-4454-b863-2bc6c2c16d6d'::uuid, 'e3ac5475-462e-457a-9e00-f37a6217135c'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('63b158bf-6c48-4c9d-bf58-e237ade8b990'::uuid, '4a8afa92-ad7c-4bd4-8bfc-d699f616a80d'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('29d5f2d0-e448-4687-b6e2-cb068248b263'::uuid, '1592dc84-c95f-45d6-9a65-6c1ac5e2e413'::uuid, 'Correct', 'false', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('fd776b92-4530-4f5c-bd5e-7dcacc6397b8'::uuid, '9de30d16-41ac-4451-9947-2b2088dd6afa'::uuid, '<p>Đóng gói là cơ chế ẩn giấu dữ liệu của một đối tượng và chỉ cho phép truy cập thông qua các phương thức của đối tượng đó.</p>', 'Đóng gói là cơ chế ẩn giấu dữ liệu của một đối tượng và chỉ cho phép truy cập thông qua các phương thức của đối tượng đó.', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('71db4b92-d4c1-4f50-9146-eb2227144723'::uuid, '8de957d4-92df-4f94-997b-1e1275afdc2f'::uuid, '<p>Kế thừa (Inheritance)</p>', '<p>Kế thừa (Inheritance)</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('ae4e6e70-1ffd-46ba-b2fd-cb23a9a25cf6'::uuid, '8de957d4-92df-4f94-997b-1e1275afdc2f'::uuid, '<p>Đa hình (Polymorphism)</p>', '<p>Đa hình (Polymorphism)</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('ecb79aab-c247-4559-aaa4-81adb366543b'::uuid, '8de957d4-92df-4f94-997b-1e1275afdc2f'::uuid, '<p>Biến toàn cục (Global Variable)</p>', '<p>Biến toàn cục (Global Variable)</p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('df670dd3-b304-4de7-9c49-435a5f1bfacf'::uuid, '8de957d4-92df-4f94-997b-1e1275afdc2f'::uuid, '<p>Đóng gói (Encapsulation)</p>', '<p>Đóng gói (Encapsulation)</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('3f6cad54-a123-46a0-a12a-ccf3f5f380c0'::uuid, 'b387b570-5b99-4f82-83be-292c969db99f'::uuid, '<p>Đóng gói (Encapsulation)</p>', '<p>Đóng gói (Encapsulation)</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('c58fb769-3574-44e2-8b88-0291d533df93'::uuid, 'b387b570-5b99-4f82-83be-292c969db99f'::uuid, '<p>Trừu tượng hóa (Abstraction)</p>', '<p>Trừu tượng hóa (Abstraction)</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('2f204fe1-a67f-46e2-9837-0472cd4d6850'::uuid, 'b387b570-5b99-4f82-83be-292c969db99f'::uuid, '<p>Kế thừa (Inheritance)</p>', '<p>Kế thừa (Inheritance)</p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('d02d7a22-6e1a-488e-bb4d-1f3f474ebf3e'::uuid, 'b387b570-5b99-4f82-83be-292c969db99f'::uuid, '<p>Đa hình (Polymorphism)</p>', '<p>Đa hình (Polymorphism)</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('4ae4f038-ec55-410f-b12e-b346941e9e99'::uuid, '4fa387a6-db86-48bb-85f4-fcbb43c8eeb0'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('dce5ee63-4384-4547-a4a7-38236009be0d'::uuid, 'b48fbf09-4b3f-4def-bfb8-4cfb65da1f27'::uuid, 'Correct', 'false', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('dac69827-303a-4a11-b46f-698be40c73b7'::uuid, 'c5e675a1-50a3-400c-a232-968413d0ebf2'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('69e8c753-bf53-42dd-8ae5-68b771fb51f3'::uuid, '306eaa8b-4054-4ad7-b6ed-b847a2d53b63'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('d2c9bb4b-a8d7-4e59-9602-34ea079e4de1'::uuid, '1f0daa04-6462-4eb5-9fc4-883f68e78b7c'::uuid, '<p>Giải thuật là một tập hợp các bước cụ thể và hữu hạn để giải quyết một vấn đề hoặc thực hiện một tác vụ.</p>', 'Giải thuật là một tập hợp các bước cụ thể và hữu hạn để giải quyết một vấn đề hoặc thực hiện một tác vụ.', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('f3d13cab-0d0d-48bf-8c32-a83699bd38c0'::uuid, '1c054e46-a127-448d-a6a8-8c9be65cfded'::uuid, '<p>Danh sách liên kết đơn (Singly Linked List)</p>', '<p>Danh sách liên kết đơn (Singly Linked List)</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('6fbe5289-62a6-49ff-baaa-c524466d8966'::uuid, '1c054e46-a127-448d-a6a8-8c9be65cfded'::uuid, '<p>Danh sách liên kết kép (Doubly Linked List)</p>', '<p>Danh sách liên kết kép (Doubly Linked List)</p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('e0b84f6f-ad13-4016-9bd1-d9938c400673'::uuid, '1c054e46-a127-448d-a6a8-8c9be65cfded'::uuid, '<p>Danh sách liên kết vòng (Circular Linked List)</p>', '<p>Danh sách liên kết vòng (Circular Linked List)</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('2846c9af-6b6d-45ac-8b6a-61bf797df9ef'::uuid, '1c054e46-a127-448d-a6a8-8c9be65cfded'::uuid, '<p>Mảng (Array)</p>', '<p>Mảng (Array)</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('2463db37-999f-49ec-a684-bee2e66aed95'::uuid, 'c88dfd4d-b102-4412-9127-17d68ec3a5e1'::uuid, '<p>Danh sách liên kết đơn</p>', '<p>Danh sách liên kết đơn</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('d4539ec8-38ac-4af1-b8df-b977eac039dd'::uuid, 'c88dfd4d-b102-4412-9127-17d68ec3a5e1'::uuid, '<p>Danh sách liên kết kép</p>', '<p>Danh sách liên kết kép</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('2116d00c-caa5-4ef4-87d7-5021d2c7883b'::uuid, 'c88dfd4d-b102-4412-9127-17d68ec3a5e1'::uuid, '<p>Mảng đã sắp xếp</p>', '<p>Mảng đã sắp xếp</p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('48d6b372-b486-4f09-a89b-cdae884b6a5f'::uuid, 'c88dfd4d-b102-4412-9127-17d68ec3a5e1'::uuid, '<p>Mảng chưa sắp xếp</p>', '<p>Mảng chưa sắp xếp</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('7cbe35b2-8f0e-4131-9ac0-427e583fe88c'::uuid, 'eb74ae25-bfd1-4c3c-8d19-f29872f6b858'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('b4f62a78-805e-4377-9ef5-ba0e54c61355'::uuid, '9002af16-7252-421a-b8ab-c0f4944a1e89'::uuid, 'Correct', 'false', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('166b2711-8d26-4cc3-8ea6-9a8281467b50'::uuid, 'a411cc44-f924-445c-bd00-f605f7533dcf'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('520f3d3a-b639-490f-9ffd-1f4089e30033'::uuid, '05d5cd7c-968b-49a6-acf3-c839f2d04243'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('f7f6b8b7-36df-4d7c-b06c-20abb78b5173'::uuid, '4faf36f7-aa0b-43db-b830-aff5c0337996'::uuid, '<p>Con trỏ là một biến lưu trữ địa chỉ của một biến khác trong bộ nhớ.</p>', 'Con trỏ là một biến lưu trữ địa chỉ của một biến khác trong bộ nhớ.', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('33ae0d75-a406-4ead-b30e-5f07931668b1'::uuid, '175441dd-3023-480a-880a-4b9a93570c1d'::uuid, '<p>struct</p>', '<p>struct</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('66beaffa-b41a-4618-8541-e2cd599c9272'::uuid, '175441dd-3023-480a-880a-4b9a93570c1d'::uuid, '<p>class</p>', '<p>class</p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('188bcd0c-e9ef-4384-affa-48d162f37545'::uuid, '175441dd-3023-480a-880a-4b9a93570c1d'::uuid, '<p>union</p>', '<p>union</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('508df0ac-fd12-4041-9f74-b12966d7a79d'::uuid, '175441dd-3023-480a-880a-4b9a93570c1d'::uuid, '<p>namespace</p>', '<p>namespace</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('532ac08e-800b-493e-b5e6-532070921a8c'::uuid, '4981ef9b-2355-4ee7-acb6-6f72d549f50d'::uuid, '<p>delete</p>', '<p>delete</p>', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('66527d50-7123-436b-9866-9505c9596df5'::uuid, '4981ef9b-2355-4ee7-acb6-6f72d549f50d'::uuid, '<p>free</p>', '<p>free</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('60c2751d-72c5-4fea-b8f9-5f58256ca9dc'::uuid, '4981ef9b-2355-4ee7-acb6-6f72d549f50d'::uuid, '<p>malloc</p>', '<p>malloc</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('230eb79e-3be9-4336-b315-800c7b2a8ee4'::uuid, '4981ef9b-2355-4ee7-acb6-6f72d549f50d'::uuid, '<p>new</p>', '<p>new</p>', 0.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('180f1ed6-3079-469f-a313-f6707220dbb3'::uuid, '643c9a5f-c96e-4a1a-be18-0c3758002e3d'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('687afdf5-90d8-4e74-83ca-d3b0fa2ac68e'::uuid, 'd0470328-32a5-4b28-8dd6-49a8c3a0b9c4'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('9ca6ac06-c9f8-4873-a7ee-9f9dcfc82ff0'::uuid, 'ce2dda6f-1448-4cf8-932e-17deedee80a6'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('d2207c09-ece6-4453-87a6-72a70d947933'::uuid, '886e4b8a-6c84-40ee-8b16-d80ffdd06f8b'::uuid, 'Correct', 'false', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('d87f8b5d-0b39-4a25-96d3-03389e6bfe3b'::uuid, 'bfece9c7-3f02-43e1-bb7e-4317b3658641'::uuid, '<p><code>==</code> so sánh địa chỉ bộ nhớ của hai đối tượng, còn <code>equals()</code> so sánh nội dung của hai đối tượng.</p>', ' == so sánh địa chỉ bộ nhớ của hai đối tượng, còn equals() so sánh nội dung của hai đối tượng.', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('37e75761-3d6d-465a-aadc-ef3f450577b2'::uuid, 'd6b8b467-f21a-4957-a58f-ad58c4015b2e'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('a54485ae-3e69-4c35-80fe-8b378c7b3677'::uuid, 'f1de8ed8-5721-4260-b019-d3ae2852f048'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('0a255d54-c5f6-4845-b712-8aa5674d82c0'::uuid, '56aa0b87-83b7-42cf-9e90-0f075ad8c53b'::uuid, 'Correct', 'true', 1.00);
INSERT INTO public.answer_of_question
(id, question_id, feedback, answer, fraction)
VALUES('43ab2d6b-a60f-4b3b-8a08-7bbab52daf19'::uuid, 'b0edc4d7-713a-48df-a9a7-8a8b411c3379'::uuid, 'Correct', 'false', 1.00);


INSERT INTO public.qtype_essay_question
(id, question_id, response_format, response_required, response_field_lines, min_word_limit, max_word_limit, attachments, attachments_required, grader_info, grader_info_format, response_template, max_bytes, file_types_list)
VALUES('958ec207-dea9-4b9f-9f5b-de54866bb830'::uuid, '98abb4e8-94d6-41dc-a960-2f18438ce77d'::uuid, 'editor', 0, 10, -1, -1, 0, 0, '', NULL, '', 1000, '');
INSERT INTO public.qtype_essay_question
(id, question_id, response_format, response_required, response_field_lines, min_word_limit, max_word_limit, attachments, attachments_required, grader_info, grader_info_format, response_template, max_bytes, file_types_list)
VALUES('b8d4aafd-75a6-41e7-9951-2b50ecdccceb'::uuid, 'f6a71b52-bf17-4ac0-b736-fb609e8f84d9'::uuid, 'editor', 0, 10, -1, -1, 0, 0, '', NULL, '', 1000, '');
INSERT INTO public.qtype_essay_question
(id, question_id, response_format, response_required, response_field_lines, min_word_limit, max_word_limit, attachments, attachments_required, grader_info, grader_info_format, response_template, max_bytes, file_types_list)
VALUES('f436ffbe-2d52-4c73-9602-58ab9712e905'::uuid, '18fe1f1b-2d67-4bfa-bdfe-a19fe4daa665'::uuid, 'editor', 0, 10, -1, -1, 0, 0, '', NULL, '', 1000, '');
INSERT INTO public.qtype_essay_question
(id, question_id, response_format, response_required, response_field_lines, min_word_limit, max_word_limit, attachments, attachments_required, grader_info, grader_info_format, response_template, max_bytes, file_types_list)
VALUES('340843a9-c04f-4af3-8aea-69bd3ebf1e5f'::uuid, 'fd98f388-0b73-45ec-803f-d27a14773ac6'::uuid, 'editor', 0, 10, -1, -1, 0, 0, '', NULL, '', 1000, '');
INSERT INTO public.qtype_essay_question
(id, question_id, response_format, response_required, response_field_lines, min_word_limit, max_word_limit, attachments, attachments_required, grader_info, grader_info_format, response_template, max_bytes, file_types_list)
VALUES('fa221145-465f-4399-ad11-338507ad7089'::uuid, '8288a841-3fc9-4163-878c-aa382dec8fe5'::uuid, 'editor', 0, 10, -1, -1, 0, 0, '', NULL, '', 1000, '');


INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('3c14ff64-cd40-47ba-bf4e-9ff790ee6d74'::uuid, 'e64fc118-1ae3-413d-9524-3e1dd1702ab5'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('51604d22-6532-43fe-b550-6c5389cf369d'::uuid, 'c434f3a9-986e-4522-bbdc-d9c58e0380ed'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('bac127ad-b1e1-46db-90f0-d1a1d4e410bc'::uuid, '514843c5-8814-4406-af5c-9bf55fdf9ec8'::uuid, true, false, '', NULL, '', NULL, 0, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('941504e7-0b49-4f17-b304-ea4ac93f2818'::uuid, 'e3ac5475-462e-457a-9e00-f37a6217135c'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('a4fb455f-c6b9-417e-9e01-d2c1c98de7af'::uuid, '4a8afa92-ad7c-4bd4-8bfc-d699f616a80d'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('d679577e-b6d3-42af-bdf6-4892c66fb9fb'::uuid, '1592dc84-c95f-45d6-9a65-6c1ac5e2e413'::uuid, true, false, '', NULL, '', NULL, 0, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('eaddc978-c6ae-4de8-bddd-2754be4d48cf'::uuid, '8de957d4-92df-4f94-997b-1e1275afdc2f'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('0ea5aabe-5655-40b3-92f4-d02a7bfdedef'::uuid, 'b387b570-5b99-4f82-83be-292c969db99f'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('9fa33dd9-0bb8-48f9-919f-6116fc0283e7'::uuid, '4fa387a6-db86-48bb-85f4-fcbb43c8eeb0'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('85d2bdcb-b7fa-4fb7-a0a1-9ad7a3d52b75'::uuid, 'b48fbf09-4b3f-4def-bfb8-4cfb65da1f27'::uuid, true, false, '', NULL, '', NULL, 0, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('8e4f2622-c14d-4041-b4cb-6bf7ef623b13'::uuid, 'c5e675a1-50a3-400c-a232-968413d0ebf2'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('1baadcb5-ed26-464f-91cd-81adc8c94f6d'::uuid, '306eaa8b-4054-4ad7-b6ed-b847a2d53b63'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('e16dd324-438b-4a75-9e16-00259b501ea6'::uuid, '1c054e46-a127-448d-a6a8-8c9be65cfded'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('fcec7fbc-cb99-4351-912a-3cf59c2d5763'::uuid, 'c88dfd4d-b102-4412-9127-17d68ec3a5e1'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('1c7c461a-5a1a-494b-916b-2c4bcf9e7955'::uuid, 'eb74ae25-bfd1-4c3c-8d19-f29872f6b858'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('c39eed92-2b6a-4d69-888c-9d02dd33e0f3'::uuid, '9002af16-7252-421a-b8ab-c0f4944a1e89'::uuid, true, false, '', NULL, '', NULL, 0, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('69aa5c2f-a0e3-4933-920c-ff57c6173a0e'::uuid, 'a411cc44-f924-445c-bd00-f605f7533dcf'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('c5e8f6c7-8770-44bc-b7cf-d47fd88a4977'::uuid, '05d5cd7c-968b-49a6-acf3-c839f2d04243'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('c3790bb8-9c55-40ca-bf05-b02f47255721'::uuid, '175441dd-3023-480a-880a-4b9a93570c1d'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('668759f1-53ce-47cc-8314-c78f4a9a2002'::uuid, '4981ef9b-2355-4ee7-acb6-6f72d549f50d'::uuid, true, true, '', NULL, '', 'abc', 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('1e27d53a-8568-4322-a458-75616210cc9f'::uuid, '643c9a5f-c96e-4a1a-be18-0c3758002e3d'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('3d1cb811-5a77-4950-9576-380df20ceaa0'::uuid, 'd0470328-32a5-4b28-8dd6-49a8c3a0b9c4'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('863c400b-140e-42c4-843d-421d5cfced67'::uuid, 'ce2dda6f-1448-4cf8-932e-17deedee80a6'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('dc342bec-96a6-4256-8cb2-0f88368ca334'::uuid, '886e4b8a-6c84-40ee-8b16-d80ffdd06f8b'::uuid, true, false, '', NULL, '', NULL, 0, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('0b1b5e54-1ef0-4659-b995-66ff720e9673'::uuid, 'd6b8b467-f21a-4957-a58f-ad58c4015b2e'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('ce5647c3-7a06-4637-9bd8-7d3eb719fdf0'::uuid, 'f1de8ed8-5721-4260-b019-d3ae2852f048'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('80cca57d-ea6b-478d-80b8-8240702196a8'::uuid, '56aa0b87-83b7-42cf-9e90-0f075ad8c53b'::uuid, true, false, '', NULL, '', NULL, 1, '1');
INSERT INTO public.qtype_multichoice_question
(id, question_id, single, shuffle_answers, correct_feedback, partially_correct_feedback, incorrect_feedback, answer_numbering, show_num_correct, show_standard_instruction)
VALUES('3df4fc1b-fe16-4971-aa0c-a6b2a6a63be3'::uuid, 'b0edc4d7-713a-48df-a9a7-8a8b411c3379'::uuid, true, false, '', NULL, '', NULL, 0, '1');


INSERT INTO public.qtype_shortanswer_question
(id, question_id, case_sensitive)
VALUES('08471708-dd88-4dcf-942b-b768e50db7ac'::uuid, 'fe7f0a71-d3c5-4d2b-be25-2faff42c6b5c'::uuid, true);
INSERT INTO public.qtype_shortanswer_question
(id, question_id, case_sensitive)
VALUES('0f8f6af6-07b7-40ab-b626-9c4cbf8c8cb8'::uuid, '9de30d16-41ac-4451-9947-2b2088dd6afa'::uuid, true);
INSERT INTO public.qtype_shortanswer_question
(id, question_id, case_sensitive)
VALUES('3b79fca2-0de6-4810-b487-5c325292082a'::uuid, '1f0daa04-6462-4eb5-9fc4-883f68e78b7c'::uuid, true);
INSERT INTO public.qtype_shortanswer_question
(id, question_id, case_sensitive)
VALUES('126cc3be-bb9c-40f9-85cd-c8a7275ac616'::uuid, '4faf36f7-aa0b-43db-b830-aff5c0337996'::uuid, true);
INSERT INTO public.qtype_shortanswer_question
(id, question_id, case_sensitive)
VALUES('80f079f1-2cc8-4e97-ba08-99064074b20a'::uuid, 'bfece9c7-3f02-43e1-bb7e-4317b3658641'::uuid, true);

-- New Course
-- dsa
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('6301cef7-6c6b-4ff7-97fa-fe41f0c57c6e'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb48'::uuid, 'Computability, Complexity & Algorithms', 'ADVANCED'::public.skill_level, '<p>Learn tools and techniques that will help you recognize when problems you encounter are intractable and when there an efficient solution.</p><p><br></p><p>Prerequisites: No experience required</p>', NULL, '2024-08-02 22:47:13.368', '2027-10-04 08:33:53.368', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 20:17:37.098', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.504');

-- C++ 1
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb93'::uuid, 'C++ for Programmers', 'INTERMEDIATE'::public.skill_level, '<p><span style="color: rgb(11, 11, 11); background-color: rgb(246, 246, 246);">C++ for Programmers is designed for students who are familiar with a programming language and wish to learn C++.</span></p>', NULL, '2024-07-31 00:02:33.634', '2027-10-01 09:49:13.634', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-30 19:24:19.108', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:33.988');

-- Java 1
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('2283e14a-fd56-408c-b83c-c0acc71e6f7d'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb46'::uuid, 'Java Courses for Beginners', 'BASIC'::public.skill_level, '<h2>Java is a popular programming language that has been around for over 25 years¹. If you''re interested in learning Java. Explore the essentials of Java programming in our free beginner Java course. Get a solid grasp of Java''s fundamentals, including syntax, functions, and arrays, and kickstart your Java programming journey.</h2>', NULL, '2024-07-31 18:00:19.652', '2027-10-02 03:46:59.652', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 16:57:44.603', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.718');

-- Java 2
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('31492b43-ebe3-4bc5-bf07-a3c8b5d03f24'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb46'::uuid, 'Java for intermediate programmer', 'INTERMEDIATE'::public.skill_level, '<p>So you''ve mastered the basics of Java are want to deepen your skills? That?s great! This course will give you knowledge you can use to develop mobile apps, web apps, desktop apps, games and much more. You?ll learn how to develop more advanced and powerful Java programs. This course is the perfect follow-on to our Introduction to Java course. We suggest you take a quick look at the outline of that course to make sure you?re comfortable with those concepts. If you are, then dive right into Intermediate Java!</p>', NULL, '2024-07-31 20:07:06.389', '2027-10-02 05:53:46.389', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 19:13:52.618', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.455');

-- Java 3
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('db4bfd55-bc8e-40dc-b07a-6d1de7652a3e'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb46'::uuid, 'Java Toddler', 'INTERMEDIATE'::public.skill_level, '<p>Dive deeper into Java — one of the world’s most popular programming languages.</p>', NULL, '2024-07-31 22:05:51.000', '2027-10-02 07:52:31.000', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 21:01:58.816', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.130');

-- GO 1
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('3856262b-1bb2-4525-aac6-5a406e2de81e'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb49'::uuid, 'Lets GO', 'BASIC'::public.skill_level, '<p>Learn how to use Go (Golang), an open-source programming language supported by Google!</p>', NULL, '2024-07-31 23:58:00.399', '2027-10-02 09:44:40.399', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:21:31.633', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.501');

-- PHP 1
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('61bead66-df47-452b-9fed-17f262dae4bd'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb53'::uuid, 'Introduction to PHP', 'BASIC'::public.skill_level, '<p>Ready to start your journey into the PHP programming language? Learn how PHP is used in modern web development to create dynamic web applications. You’ll build a strong foundation in PHP, upon which you can build an understanding of more complex programming concepts.</p><p><br></p><p>By the end of this course, you will be able to:</p><p><br></p><ul><li>Recognize the overall structure of a working PHP app.</li><li>Read and write basic PHP syntax.</li><li>Declare variables and recognize various data types.</li></ul>', NULL, '2024-08-01 16:40:07.464', '2027-10-03 02:26:47.464', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 16:08:03.290', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 16:40:07.540');

-- PHP 2
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('41c6df55-cb97-449e-87df-3acdf8c5fd8a'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb53'::uuid, 'PHP not for newbie', 'INTERMEDIATE'::public.skill_level, '<h2>About this course</h2><p>Continue your learning journey in PHP, a widely used server-side programming language that’s become increasingly fast and powerful over the years. With Intermediate PHP, you’ll expand your knowledge in PHP to learn how to create dynamic web applications using requests, databases, files, and APIs.</p><p><br></p><h3>Take-Away Skills</h3><p>By the end of this course, you’ll learn how to do the following:</p><p><br></p><ul><li>Work with databases to store and display data.</li><li>Use external APIs</li><li>Perform file handling</li><li>Set up and work with PHP on your own computer using the XAMPP package.</li></ul>', NULL, '2024-08-01 20:07:08.212', '2027-10-03 05:53:48.212', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 19:20:51.249', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 20:07:08.266');

-- PHP 3
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('eef6f7fe-c934-495a-a282-65996166bd97'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb53'::uuid, 'Advanced PHP with videos', 'ADVANCED'::public.skill_level, '<p>Learn how to make web applications in PHP language with LearnVern''s free Advanced PHP tutorial. Our PHP course covers all the advanced features of PHP needed to make dynamic web apps such as OOPS in PHP, JavaScript in PHP, and others!</p><p><br></p><p><strong>Warning: </strong>This course is not for beginner and intermediate</p>', NULL, '2024-08-01 22:51:13.221', '2027-10-03 08:37:53.221', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:18:53.786', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.306');

-- Kotlin 1
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('927cb9d2-0edc-4c6e-8154-e16f15f7947a'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb51'::uuid, 'Learn basics Kotlin', 'BASIC'::public.skill_level, '<h2>About this course</h2><p>Kotlin is a modern, expressive programming language made with developers in mind. Concise, open-source, and safe, Kotlin is a popular language for Android development, web development, and more.</p><p><br></p><h4>Take-Away Skills</h4><p>In this course, you will be introduced to fundamental programming topics, from writing your first print statement to creating your own objects and classes using the Kotlin programming language. Along the way, you’ll hone your knowledge and programming skillset with quizzes and real-world projects.</p>', NULL, '2024-08-02 13:48:09.780', '2027-10-03 23:34:49.780', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 08:43:15.734', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:48:09.848');

-- kotlin 2
INSERT INTO public.certificate_course
(id, topic_id, "name", skill_level, description, avg_rating, start_time, end_time, created_by, created_at, updated_by, updated_at)
VALUES('17c0c958-ff03-4a8c-bce2-929428048db8'::uuid, 'd215b5f8-0249-4dc5-89a3-51fd148cfb51'::uuid, 'Kotlin Bootcamp for Programmers', 'BASIC'::public.skill_level, '<p>Kotlin is known as an official language for Android development. It is one of the most in-demand programming languages among industries and sets up a high salary margin for developers familiar with Kotlin. If you desire to build your career in Kotlin, enroll in free Kotlin courses and get a hold of the free Kotlin certificates.</p>', NULL, '2024-08-02 15:43:23.900', '2027-10-04 01:30:03.900', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 15:09:46.868', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 15:43:23.967');

-- New Chapters
-- C++ 1
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 0, 'Basics', '<p><span style="color: rgb(11, 11, 11);">This lesson will cover C++ Basics: program structure, namespaces, user I/O, file I/O, and header files. It will also cover aspects of Udacity programming quizzes and user I/O.</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.018', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.018');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('4bbac52e-a9e0-45f9-a1aa-8c4dfce2a40a'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 1, 'Compilation and Execution', '<p><span style="color: rgb(11, 11, 11);">Compilation and Execution in a Linux/Unix environment is discussed in this lesson.</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.024', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.024');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('583f02e6-5ce0-4386-a0d7-048762cd4884'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 2, 'Arithmetic Operations', '<p><span style="color: rgb(11, 11, 11);">In this lesson, arithmetic operations (including prefix and postfix) are taught.</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.027', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.027');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 3, 'Control Flow', '<p>This lesson covers: relational operators, logic operators, if, if-else, switch, for, while, and do-while loops.</p><p><br></p><p><br></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.030', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.030');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('58ec2170-9408-4d91-bd95-6b8fb6300bef'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 4, 'Pointers', '<p>This lesson is a quick overview of pointers in C++. The treatment is quick and superficial, with a more detailed treatment discussed in a later lesson.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.037', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.037');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('df61d3e7-668e-4dab-a4ca-3224923c1a32'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 5, 'Arrays', '<p>Single and multi-dimensional arrays are discussed.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.039', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.039');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 6, 'Functions', '<p>Declaring and defining functions is the topic of this course. Passing by reference, including passing arrays to functions are also discussed.</p><p><br></p><p><br></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.041', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.041');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 7, 'Classes', '<p>The basics of classes: defining and using them are discussed in this lesson.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.045', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.045');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('6d79d7cf-feec-446b-b70d-fb720a469d1c'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 8, 'Overloading', '<p>Basic overloading of functions is discussed in this lesson.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.064', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.064');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('1d0997e4-5661-4314-89f4-4ef9c3274783'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 9, 'Templates', '<p>Basic templates for both functions and classes are discussed in this lesson.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.066', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.066');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('309f146a-a038-40b1-8088-7934fd1fee12'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 10, 'Classes and Inheritance', '<p>Inheritance, both singular and multiple are covered in this lesson.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.069', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.069');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('895a6395-1440-417b-8a2f-08413f4034f3'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 11, 'PolyMorphism', '<p>Achieving Polymorphism by defining and implementing Virtual Functions is the purpose of this lesson.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.070', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.070');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('248a19ec-75e4-4f0f-ae0a-3cebca318ccf'::uuid, '09f3e194-7048-4532-8c26-c2a5f268d5ef'::uuid, 12, 'Vectors and Iterators', '<p>Vectors are way better than arrays. Vectors and their iterators are covered in this lesson.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.072', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 00:02:34.072');

-- Chapter Java 1
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, '2283e14a-fd56-408c-b83c-c0acc71e6f7d'::uuid, 0, 'Overview of Java', '<p>4 articles</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.728', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.728');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('7e0279cb-cd7c-4106-8d76-3a2b38a0bdc2'::uuid, '2283e14a-fd56-408c-b83c-c0acc71e6f7d'::uuid, 1, 'Basics of Java', '<p>8 articles</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.743', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.743');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('1a9e783a-b19d-4f53-99fa-1e61a0a396c9'::uuid, '2283e14a-fd56-408c-b83c-c0acc71e6f7d'::uuid, 2, 'Input/Output in Java', '<p>3 articles</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.751', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.751');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('95f03521-4e01-4c42-ba2c-8a03129f0c12'::uuid, '2283e14a-fd56-408c-b83c-c0acc71e6f7d'::uuid, 3, 'Flow control in Java', '<p>5 articles</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.753', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.753');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('32f1f62f-1918-476a-854b-76e204dc83e0'::uuid, '2283e14a-fd56-408c-b83c-c0acc71e6f7d'::uuid, 4, 'Strings in java', '<p>5 articles</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.757', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.757');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('3db00de3-31f0-4e8e-9923-8bc08a5da6c9'::uuid, '2283e14a-fd56-408c-b83c-c0acc71e6f7d'::uuid, 5, 'Arrays in Java', '<p>3 articles</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.762', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 18:00:19.762');


-- Chapter Resources
-- C++ 1
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4b7d20b7-fed0-47df-a96e-8d16c3e70f75'::uuid, 0, 'f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, 'VIDEO'::public.resource_type, 'Introduction to C++', NULL, '', 'https://www.youtube.com/watch?v=tvDxEgQQK28');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3f02b6b1-1d60-458e-92ee-5b4cfac2d099'::uuid, 1, 'f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, 'VIDEO'::public.resource_type, 'Why learn C++', NULL, '', 'https://www.youtube.com/watch?v=3tEf6ulIgvY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ba3146bb-11e0-4a9a-820c-4d90b956b06e'::uuid, 2, 'f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, 'VIDEO'::public.resource_type, 'Where is C++ Used?', NULL, '', 'https://www.youtube.com/watch?v=UdTzHmjMYBc');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('158880ad-c27f-4905-b171-4edd747140a3'::uuid, 3, 'f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, 'VIDEO'::public.resource_type, 'What makes C++ Different', NULL, '', 'https://www.youtube.com/watch?v=vhvDkJscGVQ');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b7ddbe35-a54d-411c-b91d-b8365d078f51'::uuid, 4, 'f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, 'VIDEO'::public.resource_type, 'Course Introduction', NULL, '', 'https://www.youtube.com/watch?v=kVI6Lvm_Tj0');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5f8b7070-ef6e-4063-b7a2-7d318412f932'::uuid, 5, 'f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, 'VIDEO'::public.resource_type, 'Textbook Recommendations', NULL, '', 'https://www.youtube.com/watch?v=sIF4Ax-8n34');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b1415bd4-8324-4755-a058-d573bbd9cf48'::uuid, 6, 'f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, 'VIDEO'::public.resource_type, 'Program Structure', NULL, '', 'https://www.youtube.com/watch?v=16Rp-9rHME4');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f22841fe-91cf-4471-956f-64427dde98d8'::uuid, 7, 'f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, 'VIDEO'::public.resource_type, 'Prog. Quizzes Explained', NULL, '', 'https://www.youtube.com/watch?v=HMY0TasybNE');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('227b1215-b6c3-481b-b041-15e3e215cf45'::uuid, 8, 'f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, 'LESSON'::public.resource_type, 'Style Guide', NULL, '<p>As with all programming languages, there are many different ways to style the code we write. For this course, we are not using a standard style. We are trying to remain consistent throughout the course, while making the codes as readable as possible.</p><p><br></p><p>There are a number of style guides available,&nbsp;<strong>the best one is the one used by the people who are paying you</strong>.</p><p>A straightforward style guide is:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://github.com/Microsoft/AirSim/blob/master/docs/coding_guidelines.md" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Modern C++ Coding Guidelines</strong></a></p><p><a href="https://github.com/Microsoft/AirSim/blob/master/docs/coding_guidelines.md" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></p><p>For a more detailed guideline:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://google.github.io/styleguide/cppguide.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Google C++ Style Guideline</strong></a></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d210e99d-8693-4ebc-9591-34e2ae635fb3'::uuid, 9, 'f77a0d9a-c645-433e-8724-452fc8ba0580'::uuid, 'CODE'::public.resource_type, 'Hello World', 'b6484e21-6937-489c-b031-b71767994755'::uuid, 'Determine the Quarter of a Given Month', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('625d0b44-ff96-405e-83a1-d7967835e439'::uuid, 0, '4bbac52e-a9e0-45f9-a1aa-8c4dfce2a40a'::uuid, 'LESSON'::public.resource_type, 'C++ Outside of Udacity', NULL, '<p>You''ve been writing C++ in the classroom up to this point. Many of the issues often associated with compiling and executing code are not pertinent in this situation.</p><p><br></p><p>For example:</p><p><br></p><ul><li>All your files are already in the correct directory.</li><li>All the libraries are installed.</li><li>When you perform a ''Test Run'' the compilation and execution are done for you.</li></ul><p>Compiling on your own machine is a different challenge altogether.</p><p>In this&nbsp;<strong>optional</strong>&nbsp;lesson, we''ll discuss compilation and execution outside of the Udacity platform.</p><p><br></p><p>Please feel free to skip this lesson, if you like. It will be here when (and if) you need it.</p><p>If you would like to use a free IDE for C++, you might want to check out:&nbsp;<a href="http://www.codeblocks.org/" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Code::Block</strong></a></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('598baffb-2602-47fe-8878-b28826b2eeef'::uuid, 1, '4bbac52e-a9e0-45f9-a1aa-8c4dfce2a40a'::uuid, 'VIDEO'::public.resource_type, 'Compilation', NULL, '', 'https://www.youtube.com/watch?v=m4mS5nwCWfY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('06c53911-abe3-4257-9e15-3833c192aa14'::uuid, 2, '4bbac52e-a9e0-45f9-a1aa-8c4dfce2a40a'::uuid, 'LESSON'::public.resource_type, 'Open a Terminal', NULL, '<h4>References for using C++:</h4><h4><br></h4><p>You may wish to consult these references as you work through this lesson.</p><ul><li><a href="https://www.cs.drexel.edu/~mcs171/Sp07/extras/g++/index.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Using C++ in a Unix Environment</strong></a></li><li><a href="https://www.cs.drexel.edu/~mcs171/Sp07/extras/g++/index.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></li><li><br></li><li><br></li><li><a href="https://arachnoid.com/cpptutor/setup_windows.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Using C++ in a Windows Environment</strong></a></li><li><a href="https://arachnoid.com/cpptutor/setup_windows.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></li></ul><h4>Let''s do a step-by-step example of compiling from the terminal.</h4><h4><br></h4><p>This is the easiest, most direct method.</p><ul><li>Step 1: Open a terminal window</li><li>Step 2: Make sure you have the C++ libraries loaded on your machine.</li><li>Step 3: Go to the directory where you saved your program.</li><li>Step 4: Compile the program.</li></ul><p><strong>Step 1:</strong></p><p><br></p><p>Open a terminal window.</p><p><br></p><p>On my Mac machine I can open a terminal window by going to the menu where all my applications are stored and selecting the terminal application.</p><p><br></p><p>Here is a screenshot of the terminal icon on my computer.</p><p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2017/March/58d40217_screen-shot-2017-03-23-at-10.05.02-am/screen-shot-2017-03-23-at-10.05.02-am.png"></p><p class="ql-align-center">The terminal icon on my computer.</p><p>Now, let''s find out if we have C++ on my computer:</p><p><br></p><ol><li>Open a terminal window - you''ll notice when you open your window it may have a black background with white text. I changed mine to have a white background with black text to make it easier for you to see.</li></ol><p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2017/March/58d403a0_screen-shot-2017-03-23-at-10.19.13-am/screen-shot-2017-03-23-at-10.19.13-am.png"></p><p class="ql-align-center">My terminal.</p><p>Notice the prompt on my terminal.</p><p>It is:</p><pre class="ql-syntax" spellcheck="false"> catherinegamboa ~ $
</pre><p>The ''$'' is the standard shell prompt for Unix/Linux. Yours may be different.</p><p>Check out&nbsp;<a href="https://en.wikibooks.org/wiki/Guide_to_Unix/Explanations/Shell_Prompt" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Shell Prompt Explained</strong></a></p><p><a href="https://en.wikibooks.org/wiki/Guide_to_Unix/Explanations/Shell_Prompt" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></p><p>&nbsp;for more information.</p><p>You can also see my name catherinegamboa ~. This is valuable information. It tells me which directory I''m in. My terminal starts in the top level directory of my computer.</p><p><strong>Step 2:</strong></p><p>Make sure you have the C++ libraries loaded on your machine.</p><p>Let''s find out if we have C++ on our computer.</p><p>At the terminal prompt, type in</p><pre class="ql-syntax" spellcheck="false">g++ -help
</pre><p>For some systems you may have type:</p><pre class="ql-syntax" spellcheck="false">G++ --help
</pre><p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2017/March/58d405ca_screen-shot-2017-03-23-at-10.28.28-am/screen-shot-2017-03-23-at-10.28.28-am.png"></p><p class="ql-align-center">Type g++ -help at the prompt.</p><p>When I enter this command I get a long list of helpful information about the C++ compiler.</p><p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2017/March/58d40604_screen-shot-2017-03-23-at-10.29.25-am/screen-shot-2017-03-23-at-10.29.25-am.png"></p><p class="ql-align-center">A&nbsp;<strong>partial</strong>&nbsp;list of commands after typing ''g++ -help''</p><p>If text like this was printed, you have g++ on your computer and you can access it.</p><p><br></p><p>If you got something saying "no such command" you either don''t have C++ installed on your computer or you have it but it is not properly configured in your pathname.</p><p>You will have to figure out which problem you have and fix it. troubleshooting this problem is beyond the scope of this course</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e88c155b-74a2-4327-9419-28e6f2e54eb0'::uuid, 3, '4bbac52e-a9e0-45f9-a1aa-8c4dfce2a40a'::uuid, 'LESSON'::public.resource_type, 'Compiling in the Terminal', NULL, '<p>We have completed the steps necessary to compile:</p><ul><li>Open a terminal window</li><li>Navigate to the correct directory</li><li>Make sure you file(s) are in the directory</li></ul><p>I am going to compile a program called:</p><pre class="ql-syntax" spellcheck="false">assignment2.cpp
</pre><p>The command to compile this file is:</p><pre class="ql-syntax" spellcheck="false">g++ filename.cpp -o nameOfExecutableCode

For example:
        g++ assignment2.cpp -o a2
</pre><p>g++ is the command to compile</p><p>assignment2.cpp is the file to be compiled</p><p>-o is the command that says you want name of the executable file</p><p>a2 is the name I want to give the executable file.</p><p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2017/March/58d4365a_screen-shot-2017-03-23-at-1.52.31-pm/screen-shot-2017-03-23-at-1.52.31-pm.png"></p><p>The command is executed and I typed ''ls'' to get a list of the files and folders in the directory.</p><p>If you look in the image below you''ll see the file ''a2''.</p><p>We are now ready to execute the program.</p><p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2017/March/58d436c0_screen-shot-2017-03-23-at-1.56.22-pm/screen-shot-2017-03-23-at-1.56.22-pm.png"></p><p class="ql-align-center"><br></p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('af26317f-4081-4f99-939a-5ad5c16ba606'::uuid, 4, '4bbac52e-a9e0-45f9-a1aa-8c4dfce2a40a'::uuid, 'CODE'::public.resource_type, 'Executing in the Terminal', 'b6484e21-6937-489c-b031-b71767994756'::uuid, 'Calculate sum of cubes', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a45623ef-ac52-487d-bfac-a7b95b9383be'::uuid, 5, '4bbac52e-a9e0-45f9-a1aa-8c4dfce2a40a'::uuid, 'LESSON'::public.resource_type, 'Summation', NULL, '<p>In summary to compile in a terminal:</p><ul><li>Open a terminal window</li><li>change the working directory to the directory of the program</li><li>Make sure names of folders and files do not have spaces in them</li><li>To compile the program: g++ filename.cpp -o executableName</li><li>To execute the program: ./executableName</li></ul><p>Common mistakes when executing in the terminal:</p><ul><li>Make sure there are no spaces in filenames</li><li>Make sure all the files you need are in the working directory (including header files), use ''ls'' to check</li></ul>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('18601fa9-058a-458d-ab5e-d85cdfeafd90'::uuid, 0, '583f02e6-5ce0-4386-a0d7-048762cd4884'::uuid, 'VIDEO'::public.resource_type, 'C++ Learning Strategy', NULL, '', 'https://www.youtube.com/watch?v=V9FtqV2GS_A');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('68330012-5321-44f1-920c-c087c1f0062a'::uuid, 1, '583f02e6-5ce0-4386-a0d7-048762cd4884'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=prUIFWpxz9M');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('73262a0d-c21c-4412-9ee8-01e7b682352d'::uuid, 2, '583f02e6-5ce0-4386-a0d7-048762cd4884'::uuid, 'VIDEO'::public.resource_type, 'Arithmetic Operations', NULL, '', 'https://www.youtube.com/watch?v=WfhxIGmG2rM');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2c150074-7fa1-4d33-952f-2a15b3d8293b'::uuid, 3, '583f02e6-5ce0-4386-a0d7-048762cd4884'::uuid, 'CODE'::public.resource_type, 'Arithmetic Operations Programming Quiz', 'b6484e21-6937-489c-b031-b71767994749'::uuid, 'Find the nax number from the set of float number a, b, c', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f09ad767-10d2-4278-ac01-8b0eb2945d90'::uuid, 4, '583f02e6-5ce0-4386-a0d7-048762cd4884'::uuid, 'VIDEO'::public.resource_type, 'Variable Assignment', NULL, '', 'https://www.youtube.com/watch?v=2r9FLwMuN9Y');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('adc8672b-a9b2-4e2a-9d47-c3b8daf6ced8'::uuid, 5, '583f02e6-5ce0-4386-a0d7-048762cd4884'::uuid, 'VIDEO'::public.resource_type, 'PreFix and PostFix', NULL, '', 'https://www.youtube.com/watch?v=Kwk2rjur8MY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4801be6a-75fe-41a1-a799-6b9eaedb263f'::uuid, 6, '583f02e6-5ce0-4386-a0d7-048762cd4884'::uuid, 'CODE'::public.resource_type, 'PreFix and PostFix Program Example', 'b6484e21-6937-489c-b031-b71767994221'::uuid, 'Sum of two integer', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('36238e52-fe19-4e4c-a049-1e1ddb9f0daa'::uuid, 7, '583f02e6-5ce0-4386-a0d7-048762cd4884'::uuid, 'VIDEO'::public.resource_type, 'PreFix and PostFix Program Example', NULL, '', 'https://www.youtube.com/watch?v=ZH8XF5NILXM');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5bc2ab7a-c19d-4906-a10b-6785333ff244'::uuid, 0, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'VIDEO'::public.resource_type, 'Intro to Control Flow', NULL, '', 'https://www.youtube.com/watch?v=h2SS_VGqQww');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('12cd8aee-c71f-450f-92fd-b1c72ac72e60'::uuid, 1, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'VIDEO'::public.resource_type, 'Relational Operators', NULL, '', 'https://www.youtube.com/watch?v=3dimd5c0OzI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('899f9bd5-ed15-4d02-bf06-c5834ee75ca7'::uuid, 2, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'VIDEO'::public.resource_type, 'Logic Operators', NULL, '', 'https://www.youtube.com/watch?v=X_HO4ecLUrk');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e4f65e27-3cfe-44e9-825a-da880e09abc9'::uuid, 3, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'CODE'::public.resource_type, 'Truth Table Programming Quiz', 'b6484e21-6937-489c-b031-b71767994758'::uuid, 'Check prime number', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7f80bcba-61eb-4e85-93fc-c3154d109eaf'::uuid, 4, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'VIDEO'::public.resource_type, 'if statements', NULL, '', 'https://www.youtube.com/watch?v=chNQTnJSIH8');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f2d00677-286e-4496-86d3-5b3130f40f2c'::uuid, 5, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'LESSON'::public.resource_type, 'switch Statements', NULL, '<p>Now that we have talked about if-else statements, this may be a good time to talk about the king of ''if'' statements, the switch statement.</p><p><strong>Switch Statements</strong></p><p>Switch statements in C++ are similar to switch statements in other languages.</p><p>The format for a switch statement:</p><pre class="ql-syntax" spellcheck="false">switch(expression)
{
     case constant-expression : statements;
                               break; (this is optional);
     case constant-expression : statements;
                               break; (this is optional);
     ...

     default : //optional
        statements;
}
</pre><p>For reference:&nbsp;<a href="http://en.cppreference.com/w/cpp/language/switch" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Switch Statments</strong></a></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2762a893-eb5f-46b6-88f1-af3b34320394'::uuid, 6, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'LESSON'::public.resource_type, 'switch Programming Quiz', NULL, '<p>Now I would like you to do a switch statement with breaks between the cases. Create a program that asks the user for two float numbers. Then asks the user if they would like to:</p><ol><li>add the numbers</li><li>subtract the numbers</li><li>multiply the numbers</li><li>divide the numbers</li></ol><p><br></p><p>ANSWER</p><p><br></p><pre class="ql-syntax" spellcheck="false">/*Now I would like you to do a switch statement with breaks
**between the cases. Create a program that asks the user for
**two float numbers. Then asks the user if they would like to:
**add the numbers, subtract the numbers, multiply the numbers,
**divide the numbers.
**The program should then print the numbers with the chosen
**operation and the solution.
*/

#include &lt;iostream&gt;

int main()
{
    float in1, in2;
    char operation;
    float answer;

    std::cout&lt;&lt;"Enter two numbers:\n";
    std::cin&gt;&gt;in1;
    std::cin&gt;&gt;in2;
    std::cout&lt;&lt;"Enter the operation ''+'',''-'',''*'',''/'':\n";
    std::cin&gt;&gt;operation;

    switch(operation)
    {
        case(''+''):  {
                    answer=in1 + in2;
                    break;
                    }
         case(''-''):  {
                    answer=in1 - in2;
                    break;
                    }
        case(''*''):  {
                    answer=in1 * in2;
                    break;
                    }
        case(''/''):  {
                    answer=in1 / in2;
                    break;
                    }
        default:
                    std::cout&lt;&lt;"Illegal operation";
    }

    std::cout&lt;&lt;in1&lt;&lt;operation&lt;&lt;in2&lt;&lt;" = "&lt;&lt;answer&lt;&lt;"\n";

    return 0;
}
</pre><p>The program shown above will generate an output similar to the one shown below.</p><p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2017/February/58b47f8b_screen-shot-2017-02-27-at-11.35.23-am/screen-shot-2017-02-27-at-11.35.23-am.png"></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('52e0f597-fbda-44c1-ae1e-dbbf681418d1'::uuid, 7, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'LESSON'::public.resource_type, 'for Loops', NULL, '<p>for loops in C++ have the following form:</p><pre class="ql-syntax" spellcheck="false">for ( declaration : range ) statement;

for (initialization; condition; increase) statement;
</pre><p>We will not cover for loops with ranges at this time. We will focus more on the ''initialization, condition, increase'' for loop. We will revisit for loops with ranges later in the course.</p><p>Let''s look at a simple program that will illustrate the use of the for loop.</p><p><br></p><pre class="ql-syntax" spellcheck="false">/*Goal: examine a for loop example. */


#include &lt;iostream&gt;


int main()
{
&nbsp; &nbsp; for(int i=0; i&lt; 10;i++)
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; std::cout&lt;&lt;"i = "&lt;&lt;i&lt;&lt;"\n";
&nbsp; &nbsp; }
&nbsp; &nbsp; return 0;
}
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8099e415-94b8-47a8-92bf-d0c3ca425f01'::uuid, 8, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'LESSON'::public.resource_type, 'while Loops', NULL, '<p><strong>C++ has two forms of the while loop:</strong></p><ul><li>while loops</li><li>do .. while loops</li></ul><p><strong>C++ while loops syntax is:</strong>&nbsp;<code style="color: var(--chakra-colors-black);">while(condition) { statements; }</code></p><p>If the condition is true, the statements within the curly brackets are executed. If the condition is false, the statements are not executed.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('afc6d217-cc4a-44e4-878b-2760cf4d038e'::uuid, 9, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'VIDEO'::public.resource_type, 'do while Loops', NULL, '', 'https://www.youtube.com/watch?v=1b7A4_AcolI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9e9c7b9b-ef05-41c1-8c3b-aa5ad9691bd6'::uuid, 10, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'LESSON'::public.resource_type, 'Infinite Loops', NULL, '<p>Sometimes it is desired to create an infinite loop. For example, in embedded systems a infinite loop is often used for the main task.</p><p><strong>To create an infinite loop using a for loop:</strong>&nbsp;<code style="color: var(--chakra-colors-black);">for( ; ;) { std::cout&lt;&lt;"This for loop will run forever\n"; }</code></p><p><strong>To create an infinite loop using a while loop:</strong>&nbsp;<code style="color: var(--chakra-colors-black);">while(1) { std::cout&lt;&lt;"This while loop will run forever\n"; }</code></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6aa1accd-05ad-4d48-a7a2-799961235bb9'::uuid, 11, '3061b6f8-3cf7-4a47-bde2-0c5f7706c4f4'::uuid, 'LESSON'::public.resource_type, 'Exiting Loops', NULL, '<p>To exit a loop before it completes its normal sequence, we need to use control statements.</p><p>The two most commonly used are:</p><ul><li>break</li><li>continue</li><li>For additional reference :<a href="https://msdn.microsoft.com/en-us/library/37zc9d2w.aspx" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Break</strong></a></li><li><a href="https://msdn.microsoft.com/en-us/library/37zc9d2w.aspx" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></li><li>&nbsp;and&nbsp;<a href="https://msdn.microsoft.com/en-us/library/6e3dc2z3.aspx" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Continue</strong></a></li><li><a href="https://msdn.microsoft.com/en-us/library/6e3dc2z3.aspx" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></li></ul><p><strong>The break statement:</strong></p><p>The break statement will end the loop and begin executing the first statement that comes AFTER the end of the loop.</p><p><strong>The continue statement:</strong>&nbsp;The continue statement will force the next iteration to be executed.</p><p><br></p><pre class="ql-syntax" spellcheck="false">/*Goal: understand the break and conitnue statements*/


#include&lt;iostream&gt;




int main()
{
&nbsp; &nbsp; int a = 0;
&nbsp; &nbsp; while(a &lt; 5)
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; std::cout&lt;&lt;"a = "&lt;&lt;a&lt;&lt;"\n";&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; a++;
&nbsp; &nbsp; &nbsp; &nbsp; if(a == 3)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;
&nbsp; &nbsp; }
&nbsp; &nbsp; std::cout&lt;&lt;"The first statement after the first while loop\n\n";
&nbsp; &nbsp;&nbsp;
&nbsp; &nbsp;&nbsp;
&nbsp; &nbsp; while(a &lt; 15)
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; a++;
&nbsp; &nbsp; &nbsp; &nbsp; if(a == 10)
&nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; std::cout&lt;&lt;"\tWhen a=10, go back to the top of the loop";
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; std::cout&lt;&lt;"\n\tThis means a=10 is skipped.\n";
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; &nbsp; std::cout&lt;&lt;"After continue a = "&lt;&lt;a&lt;&lt;"\n";&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; }
&nbsp; &nbsp; return 0;
}
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('860605a3-a105-4cbb-a329-2963c0ad3f8a'::uuid, 0, '58ec2170-9408-4d91-bd95-6b8fb6300bef'::uuid, 'VIDEO'::public.resource_type, 'Why Learn Pointers', NULL, '', 'https://www.youtube.com/watch?v=egXLylrJeic');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('03192911-387d-4280-aed3-bb57ee7e4879'::uuid, 1, '58ec2170-9408-4d91-bd95-6b8fb6300bef'::uuid, 'VIDEO'::public.resource_type, 'How are pointers used?', NULL, '', 'https://www.youtube.com/watch?v=UCWWObpNUZw');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('175fb058-5242-45da-a374-ca7abb8b3a2d'::uuid, 2, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'CODE'::public.resource_type, 'Func. Prog.Quiz 1', 'b6484e21-6937-489c-b031-b71767994759'::uuid, 'Replace negative number', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a627fc89-5b16-44b7-b34b-ec1306965daf'::uuid, 3, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'LESSON'::public.resource_type, 'Functions w Parameters', NULL, '<p>I have called a function named printProduct in the following program.</p><p><br></p><p>The function printProgram accepts m1, m2, product as inputs.</p><p><br></p><p>It prints the message:</p><pre class="ql-syntax" spellcheck="false">"m1 * m2 = product"
</pre><p>using the variable values.</p><p>Write the declaration and definition of the function.</p><p>The output should look something like this:</p><pre class="ql-syntax" spellcheck="false">4 * 5 = 20
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4ea9fc06-21a1-44b0-b26a-4e57cd1ae210'::uuid, 4, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'LESSON'::public.resource_type, 'Func. in Header Files', NULL, '<p><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">It is quite common to put functions into a header file. It makes your main program look cleaner. On this programming quiz, move the function declaration and function definition to the header file called main.cpp.</span></p><p><br></p><p><span class="ql-cursor">﻿</span>We moved the include statements and the function declaration and the function definition to the header file.</p><p>Then we added an include statement to the main.cpp:</p><pre class="ql-syntax" spellcheck="false">#include "main.hpp"
</pre><p>This is the main.cpp file</p><pre class="ql-syntax" spellcheck="false"> /*GOAL: Practice writing functions

 /*Write a function that prints the results of the multiplication
 **of two integers.
 */

 #include "main.hpp"

 int main()
 {
    int m1 = 4;
     int m2 = 5;
     int product;

     product = m1 * m2;

     //call the function
     printProduct(m1, m2, product);
     return 0;
 }
</pre><p>The header file&nbsp;<code style="color: var(--chakra-colors-black);">main.hpp</code>&nbsp;- note that we need to&nbsp;<code style="color: var(--chakra-colors-black);">#include &lt;iostream&gt;</code>&nbsp;here to use&nbsp;<code style="color: var(--chakra-colors-black);">std::cout</code>&nbsp;within&nbsp;<code style="color: var(--chakra-colors-black);">printProduct</code>.</p><pre class="ql-syntax" spellcheck="false"> #include &lt;iostream&gt;

 /*The function declaration can be omitted in the header file.
 **As long as the function is defined before it is used,
 **the declaration is optional.
**It is often considered good practice to list the declarations
**at the top of the header file.
*/
 void printProduct(int m1, int m2, int product);

 void printProduct(int m1, int m2, int product)
 {
     std::cout &lt;&lt; m1 &lt;&lt;"*"&lt;&lt; m2 &lt;&lt;" = "&lt;&lt;product &lt;&lt; " \n";
 }
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b5eab37c-1e49-4206-a375-069c533f2efd'::uuid, 5, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'LESSON'::public.resource_type, 'Func. w Return Values', NULL, '<p>Functions with return values require the declaration and definition state the variable type of the return.</p><p>The syntax is:</p><pre class="ql-syntax" spellcheck="false">returnVariableType functionName(parameter1, parameter2, ..., parameterN)
{
     variarble type returnVariable;
     statement(s);
     return variable;
}
</pre><p>For example:</p><pre class="ql-syntax" spellcheck="false">int calculateSum(int m1, int m2)
{
     int sum;
     sum = m1 + m2;
     return sum;
}
</pre><p>We can, of course, shorten this to the more succinct:</p><pre class="ql-syntax" spellcheck="false">int calculateSum(int m1, int m2)
{
     return m1 + m2;
}
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d5313eb1-9429-4111-934c-286f0169e58f'::uuid, 6, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'LESSON'::public.resource_type, 'Pass Variable by Reference', NULL, '<h3>The second method for effecting variables outside of their scope, is to pass by reference.</h3><p><br></p><p><br></p><p>Passing by reference refers to passing the **address of the variable** rather than the variable. Then when we make a change in a function, we are changing the value at the address, not the variable. Once the value is changed at its address, any access to that address will retrieve the new value.</p><p><br></p><p>We know how to access the address of any variable. We learned it in our Pointers lesson.</p><p><br></p><p>So, now we can use that knowledge. In the program below, we''ll pass the variable by reference.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('18875463-7a64-4e00-8e25-3886bf6adb29'::uuid, 7, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'LESSON'::public.resource_type, 'Function best practice', NULL, '<h3>The second method for effecting variables outside of their scope, is to pass by reference.</h3><p><br></p><p><br></p><p>Passing by reference refers to passing the **address of the variable** rather than the variable. Then when we make a change in a function, we are changing the value at the address, not the variable. Once the value is changed at its address, any access to that address will retrieve the new value.</p><p><br></p><p>We know how to access the address of any variable. We learned it in our Pointers lesson.</p><p><br></p><p>So, now we can use that knowledge. In the program below, we''ll pass the variable by reference.</p><pre class="ql-syntax" spellcheck="false">/*Goal: Learn to pass variables by reference.&nbsp;
**Once we learn this, we can modify variables in functions,
**and the change will be available outside the scope of the&nbsp;
**modification.
*/


#include&lt;iostream&gt;


void increment(int &amp;input); //Note the addition of ''&amp;''


int main()
{
&nbsp; &nbsp; int a = 34;
&nbsp; &nbsp; std::cout&lt;&lt;"Before the function call a = "&lt;&lt;a&lt;&lt;"\n";
&nbsp; &nbsp; increment(a);
&nbsp; &nbsp; std::cout&lt;&lt;"After the function call a = "&lt;&lt;a&lt;&lt;"\n";
&nbsp; &nbsp; return 0;
}
void increment(int &amp;input)//Note the addition of ''&amp;''
{
&nbsp; &nbsp; input++; //**Note the LACK OF THE addition of ''&amp;''**
&nbsp; &nbsp; std::cout&lt;&lt;"In the function call a = "&lt;&lt;input&lt;&lt;"\n";
}
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('06a66c7f-237c-4a79-b4b7-048a42a26e74'::uuid, 8, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'LESSON'::public.resource_type, 'Func. Pass by Reference', NULL, '<p>Now write a program that uses passing variables by reference.</p><p><br></p><p>Write a program that uses two functions:</p><ul><li>calculate(input1, input2, operation, result);</li><li>printEquation(input1, input2, operation, result);</li></ul><p>Input, input2, and result are floats.</p><p>Operation is a char. The choices are ''+'', ''-'', ''*'', ''/''</p><p>The result is modified by the function called calculate.</p><p><br></p><pre class="ql-syntax" spellcheck="false">/*Goal: Use ''pass by reference'' to a function
**to write this program.
**There are two functions that you need to write&nbsp;
**for this program:
**calculate(input1, input2, operation, result);
**printEquation(input1, input2, operation, result);
**Pass by reference any value that is modified
**in the function.
**
**Put the declaration and the definitions of the&nbsp;
**functions in the header file.
*/


#include "main.hpp"


int main()
{
&nbsp; &nbsp; char operation = ''*'';
&nbsp; &nbsp; float input1 = 9.8;
&nbsp; &nbsp; float input2 = 2.3;
&nbsp; &nbsp; float result;
&nbsp; &nbsp;&nbsp;
&nbsp; &nbsp; calculate(input1, input2, operation, result);
&nbsp; &nbsp; printEquation(input1, input2, operation, result);
&nbsp; &nbsp; return 0;
}
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8ec9f119-acb4-4da7-88f3-bd4c5b264675'::uuid, 9, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'LESSON'::public.resource_type, 'Arrays as Parameters', NULL, '<p>C++ does not allow arrays to be passed to functions, but, as we have seen, it does allow pointers to be passed.</p><p><br></p><p>There are three methods for passing an array by reference to a function:</p><ul><li>void functionName(variableType *arrayName)</li><li>void functionName(variableType arrayName[length of array])</li><li>void functionName(variableType arrayName[])</li></ul><p>Let''s look at each method in the program below.</p><p><br></p><pre class="ql-syntax" spellcheck="false">/*Goal: Learn to pass arrays to functions*/


#include&lt;iostream&gt;
#include&lt;iomanip&gt;


//Pass the array as a pointer
void arrayAsPointer(int *array, int size);
//Pass the array as a sized array
void arraySized(int array[3], int size);
//Pass the array as an unsized array
void arrayUnSized(int array[], int size);


int main()
{
&nbsp; &nbsp; const int size = 3;
&nbsp; &nbsp; int array[size] = {33,66,99};
&nbsp; &nbsp; //We are passing a pointer or reference to the array
&nbsp; &nbsp; //so we will not know the size of the array
&nbsp; &nbsp; //We have to pass the size to the function as well
&nbsp; &nbsp; arrayAsPointer(array, size);
&nbsp; &nbsp; arraySized(array, size);
&nbsp; &nbsp; arrayUnSized(array, size);
&nbsp; &nbsp; return 0;
}


void arrayAsPointer(int *array, int size)
{
&nbsp; &nbsp; std::cout&lt;&lt;std::setw(5);
&nbsp; &nbsp; for(int i=0; i&lt;size; i++)&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; std::cout&lt;&lt;array[i]&lt;&lt;" ";
&nbsp; &nbsp; std::cout&lt;&lt;"\n";
}


void arraySized(int array[3], int size)
{
&nbsp; &nbsp; std::cout&lt;&lt;std::setw(5);
&nbsp; &nbsp; for(int i=0; i&lt;size; i++)
&nbsp; &nbsp; &nbsp; &nbsp; std::cout&lt;&lt;array[i]&lt;&lt;" ";
&nbsp; &nbsp; std::cout&lt;&lt;"\n";&nbsp;&nbsp;
}


void arrayUnSized(int array[], int size)
{
&nbsp; &nbsp; std::cout&lt;&lt;std::setw(5);
&nbsp; &nbsp; for(int i=0; i&lt;size; i++)
&nbsp; &nbsp; &nbsp; &nbsp; std::cout&lt;&lt;array[i]&lt;&lt;" ";
&nbsp; &nbsp; std::cout&lt;&lt;"\n";&nbsp;&nbsp;
}
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('dc9bda98-22f8-405e-aafa-d05681a18761'::uuid, 0, '309f146a-a038-40b1-8088-7934fd1fee12'::uuid, 'LESSON'::public.resource_type, 'Inheritance Introduction', NULL, '<p>In C++ we can derive a class from another class, called a base. The derived class can access members and functions of the base class.</p><p><strong>We say the derived class has inherited from the base class.</strong></p><p>In the image below we see a graphical representation of class inheritance. The base class is at the top of the tree and the derived class is below it.</p><p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2017/May/59133f5d_screen-shot-2017-05-10-at-9.26.51-am/screen-shot-2017-05-10-at-9.26.51-am.png"></p><p class="ql-align-center">A graphical representation of an base and derived class.</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('893f742d-abfd-401c-86e3-190fd208eccf'::uuid, 2, '58ec2170-9408-4d91-bd95-6b8fb6300bef'::uuid, 'LESSON'::public.resource_type, 'Pointers', NULL, '<p>Pointers, which are the addresses of variables, can be accessed in C++.</p><p>For example in this code snippet:</p><pre class="ql-syntax" spellcheck="false">     int a = 54;
</pre><p>54 is the value of the variable, in other words, it is the value that is stored in the location reserved the the variable called ''a''.</p><p>Now, let''s ask ourselves,&nbsp;<strong>where is a?</strong>&nbsp;The location of ''a'' can be found using a pointer!</p><pre class="ql-syntax" spellcheck="false">     int a = 54;
     std::cout&lt;&lt; &amp;a&lt;&lt;"\n"; //This will print the LOCATION of ''a''
</pre><p>More information about pointers can be found at:&nbsp;<a href="http://www.cplusplus.com/doc/tutorial/pointers/" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Pointers</strong></a></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6a5cc225-13e1-4689-bcf8-bbffa0284955'::uuid, 3, '58ec2170-9408-4d91-bd95-6b8fb6300bef'::uuid, 'LESSON'::public.resource_type, 'Dereferencing Pointers', NULL, '<p>But what if we have a pointer and want to access the value stored in that address? That process is called&nbsp;<em>dereferencing</em>, and it is indicated by adding the operator&nbsp;<code style="color: var(--chakra-colors-black);">*</code>&nbsp;before the variable''s name. This same operator should be used to declare a variable that is meant to store a pointer.</p><p>For example:</p><pre class="ql-syntax" spellcheck="false"> // this is an integer variable with value = 54
int a = 54;

// this is a pointer that holds the address of the variable ''a''.
// if ''a'' was a float, rather than int, so should be its pointer.
int * pointerToA = &amp;a;

// If we were to print pointerToA, we''d obtain the address of ''a'':
std::cout &lt;&lt; "pointerToA stores " &lt;&lt; pointerToA &lt;&lt; ''\n'';

// If we want to know what is stored in this address, we can dereference pointerToA:
std::cout &lt;&lt; "pointerToA points to " &lt;&lt; * pointerToA &lt;&lt; ''\n'';
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d51b96fe-4f76-47ca-bd91-bb2031209323'::uuid, 0, 'df61d3e7-668e-4dab-a4ca-3224923c1a32'::uuid, 'LESSON'::public.resource_type, 'Find Min & Max', NULL, '<p><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">For this programming quiz, we are going to find the min and max and average of 15 numbers that a user will input.</span></p><p><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">The numbers range from 0 to 100.</span></p><p><strong style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">We will do it now for practice and then we will do it with arrays.</strong><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">&nbsp;So you do not have to keep all fifteen numbers stored in memory. Find the min and max and average of 15 numbers that a user will input. The numbers range from 0 to 100.</span></p><p><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">So you do not have to keep all fifteen numbers stored in memory.</span></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3180188d-c332-4ee7-b103-50afefa53221'::uuid, 1, 'df61d3e7-668e-4dab-a4ca-3224923c1a32'::uuid, 'LESSON'::public.resource_type, 'Arrays', NULL, '<p>Arrays are included in the C++ programming language, just as they are in other languages. This means many of you are already familiar with arrays. So this is a good lesson to learn to use arrays.</p><p>Before you begin this lesson I should tell you one thing:</p><p><strong>In C++ you don''t need to learn arrays</strong>.</p><p>There is a good case that instead of using arrays, you can use vectors. Vectors are more powerful /versatile than arrays.</p><p>In this course I teach arrays because everyone knows them from another language and they are easier to learn. If you continue in the course we will learn about vectors and you will then have the tools to make your own Vector/Array decisions.</p><h3>C++ arrays can be declared as:</h3><p><br></p><p><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">``` variableType arrayName [ ] = {variables to be stored in the array}; ``` or as: ``` variableType arrayName[array size] ```</span></p><p><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">Information about arrays can be found at:</span></p><p><a href="https://www.tutorialspoint.com/cplusplus/cpp_arrays.htm" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: rgb(32, 21, 255);"><strong>C++ Arrays</strong></a></p><p><a href="https://www.tutorialspoint.com/cplusplus/cpp_arrays.htm" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: rgb(32, 21, 255);"><strong>(opens in a new tab)</strong></a></p><h3>We can access the values in an array by identifying the specific index.</h3><p>``` variableType arrayName[ index number ] ```</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f0cfb2af-4bf9-459c-a12e-e4cff7bf07a2'::uuid, 2, 'df61d3e7-668e-4dab-a4ca-3224923c1a32'::uuid, 'CODE'::public.resource_type, 'Array Practice', 'b6484e21-6937-489c-b031-b71767994221'::uuid, 'Sum of two integer', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8b13ce22-918d-484e-91de-42dad0f3ae41'::uuid, 3, 'df61d3e7-668e-4dab-a4ca-3224923c1a32'::uuid, 'LESSON'::public.resource_type, 'MultiDimensional Arrays', NULL, '<p>C++ supports multidimensional arrays. C++ arrays can be of any dimension: 1 to ''n''.</p><p>They are initialized with the format:</p><pre class="ql-syntax" spellcheck="false">typeOfVariable arrayName[size of dim.1][size of dim. 2] ...[size of dim. n];
</pre><p>For example:</p><pre class="ql-syntax" spellcheck="false">int array2Dimensions[2][3];
</pre><p>Creates a [2 rows x 3 columns] array of integers.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('dc698812-9891-4000-b1bc-e5ebb3525d36'::uuid, 0, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'LESSON'::public.resource_type, 'Functions', NULL, '<p>C++ supports functions, in fact main() is nothing more than a special C++ function.</p><p>All C++ functions (except the special case of the main function) must have:</p><ul><li>A declaration: this is a statement of how the function is to be called.</li><li>A definition: this is the statement(s) of the task the function performs when called</li></ul><p>C++ functions can:</p><ul><li>Accept parameters, but they are not required</li><li>Return values, but a return value is not required</li><li>Can modify parameters, if given explicit direction to do so</li></ul><p><strong>Function Syntax:</strong>&nbsp;<code style="color: var(--chakra-colors-black);">retVariableType functionName(parameter1, parameter2, ...,parameterN) { statement(s); }</code></p><p>For example:</p><pre class="ql-syntax" spellcheck="false">void printValues()
{
     std::cout&lt;&lt;"Hello World!";
}
</pre><p>This function accepts no parameters and returns no value. When it is called in a program, it will execute the statement</p><pre class="ql-syntax" spellcheck="false">std::cout&lt;&lt;"Hello World!";
</pre><p><strong>Function Declaration:</strong>&nbsp;A function is declared with the syntax:</p><pre class="ql-syntax" spellcheck="false">returnVariableType  functionName(parameter1, parameter2, ...,parameterN);
</pre><p><strong>Note the semi-colon at the end of the statement.</strong></p><p><strong>Calling the function</strong></p><p>Functions are called using their function name with any parameters specified in the declaration and definition.</p><p>For example:</p><pre class="ql-syntax" spellcheck="false">int main()
{
     ...
     functionName(parameter1, parameter2, ..., parameterN);
     ...
}
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d95959c0-6e86-4212-acde-f80b2d1de555'::uuid, 1, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'LESSON'::public.resource_type, 'Func: No Ret, No Parameters', NULL, '<p>The most basic function is one that accepts no parameters and does not return a value.</p><p>The syntax for the declaration of this type of function is:</p><pre class="ql-syntax" spellcheck="false">void functionName();
</pre><p>The syntax for the definition is:</p><pre class="ql-syntax" spellcheck="false">void functionName()
{
     statement(s);
}
</pre><p>An example of the function declaration and definition:</p><p>The declaration:</p><pre class="ql-syntax" spellcheck="false">void printMessage();
</pre><p>The definition:</p><pre class="ql-syntax" spellcheck="false">void printMessage()
{
     std::cout&lt;&lt;"Call your mother!";
}
</pre><p>To call the function:</p><pre class="ql-syntax" spellcheck="false">int main()
{
     ...
     printMessage();
     ...
    return 0;
}
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('25ffd4a0-aabb-463a-b684-caafef84f8b5'::uuid, 10, '38f563ec-2772-4c5f-a494-687097ce77b0'::uuid, 'LESSON'::public.resource_type, 'Function Best Practices', NULL, '<p>When creating functions there is a precaution that is often considered a ''best practice''.</p><p><br></p><p>When passing variables that are not going to be modified in the function, define the variable as a ''const'' so that it cannot be changed by the function.</p><p><br></p><p>For example:</p><p>In this function, we are passing an integer variable called input. We want the function to use it and not modify it. So we will give it a variable type that is a const int.</p><p><br></p><p>Function Delcaration</p><pre class="ql-syntax" spellcheck="false">int doubleInput(const int input)
</pre><p>Function Definition</p><pre class="ql-syntax" spellcheck="false">int doubleInput(const int input)
{
    int h = input *2;
    return h;
}
</pre><h4>This code will not compile:</h4><p>I have modified the variable input. In the declaration and definition I said this value would not be modified.</p><pre class="ql-syntax" spellcheck="false">int doubleInput(const int input)
{
    input++;
    int h = input *2;
    return h;
}
</pre><p>Below is the error message I get when I try to compile this code.</p><p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2017/March/58da9430_screen-shot-2017-03-28-at-9.49.28-am/screen-shot-2017-03-28-at-9.49.28-am.png"></p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ce9ed9af-bb48-4d15-bd00-bcc355e4fc55'::uuid, 0, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'VIDEO'::public.resource_type, 'Is C++ an OOP Language?', NULL, '', 'https://www.youtube.com/watch?v=ZUlRQMTq9IM');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b0830d17-06ae-4ef7-bfb3-624bc54b7151'::uuid, 1, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'VIDEO'::public.resource_type, 'Classes Introduction', NULL, '', 'https://www.youtube.com/watch?v=-EwsSCObiRw');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('181c73a5-aa9f-4e2d-b353-185b33e26f9a'::uuid, 2, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'CODE'::public.resource_type, 'Why Classes Prog. Quiz', 'b6484e21-6937-489c-b031-b71767994758'::uuid, 'Check prime number', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f94cfffd-404b-4b05-9916-71379d4b6b85'::uuid, 3, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'LESSON'::public.resource_type, 'Classes', NULL, '<p>Now, that we have a seriously tough problem to solve, we can talk about classes!</p><p>A class in C++ is a user defined data type. It can have data and functions.</p><p>That sounds a little abstract, so let''s look at an example of a class.</p><p>Let''s create a type called ''Student'', we''ll base it on the previous programming quiz.</p><p><br></p><p>We would like to have the information associated with each student. So let''s say our Student data type has:</p><ul><li>a name</li><li>an id number</li><li>a graduation date</li></ul><p>These three are members of Student. ``` class Student { string name; int id; int gradDate; }; ```</p><p>The nice thing about C++ classes, the default is to make all members private.</p><p>This means only other members of the class can access the data.</p><p><br></p><p>That sounds bad.... we have a data type with data that we can''t access. But, remember, I said C++ classes can have functions as well as data.</p><p><br></p><p><strong>We can use functions to access the data in a class.</strong></p><p>Functions that access and/or modify data values in classes are called mutators.</p><p>Check this page to learn more about&nbsp;<a href="https://en.wikipedia.org/wiki/Mutator_method" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Mutators</strong></a></p><p><a href="https://en.wikipedia.org/wiki/Mutator_method" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></p><p>Now let''s add the setName function (functions in classes are also called methods) to our Student class. Recall the default for members in a class is private. We want the access functions to be public.</p><p>So we add the keyword "public" and all members listed after it are accessible:</p><pre class="ql-syntax" spellcheck="false">class Student
{
        string name;
        int id;
        int gradDate;

    public:
        void setName(string name);

};
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4e8de70e-90a1-43a2-9231-5799506d8b9e'::uuid, 4, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'LESSON'::public.resource_type, 'Class Members', NULL, '<p>Let''s create some functions that can change the value of our data in our class called Student:</p><p>Traditionally, setDataName is the name we use to change data in a class. In our case we have three data values:</p><ul><li>name</li><li>id</li><li>gradDate</li></ul><p>So let''s create a function to change the value of name: This is just the usual C++ function. It accepts an input string and returns nothing. ``` void setName(std::string nameIn) ```</p><p>Now let''s add a function to assess each of the data values in Student: An example of a class:</p><pre class="ql-syntax" spellcheck="false">class Student
{
        string name;
        int id;
        int gradDate;

    public:
        void setName(string nameIn);
        void setId(int idIn);
        void setGradDate(int dateIn);
};
</pre><p>So, we can set our data but now we need to ''get'' the data. Traditionally these are called get-functions.</p><p><br></p><p>They have the form&nbsp;<strong>getDataValue</strong>.</p><p><br></p><p>Get functions return the data, so get functions have the variable type as a return variable.</p><p>For example: To access the data called name, the function declaration would be:</p><pre class="ql-syntax" spellcheck="false">string getName();
</pre><p>If we do a get function for each data member, the student class should look like this:</p><p>An example of a class:</p><pre class="ql-syntax" spellcheck="false">class Student
{
        string name;
        int id;
        int gradDate;

    public:
        void setName(string nameIn);
        void setId(int idIn);
        void setGradDate(int dateIn);
        string getName();
        int getId();
        int getGradDate();
        void print();
};
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('81f6cb46-9a90-4f62-919f-017625f5d0fc'::uuid, 5, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'LESSON'::public.resource_type, 'Defining Class Functions', NULL, '<p>Now that we have our members and functions declared, we need to define them. Here''s our Student class:</p><pre class="ql-syntax" spellcheck="false">class Student
{
        string name;
        int id;
        int gradDate;

    public:
        void setName(string nameIn);
        void setId(int idIn);
        void setgradDate(int dateIn);
        string getName();
        int getId();
        int getGradDate();
};
</pre><p>Now let''s define the modifying function members:</p><pre class="ql-syntax" spellcheck="false">void Student::setName(string nameIn)
{
     name = nameIn;
}

void Student::setId(int idIn)
{
     id = idIn;
}

void Student::setGradDate(int gradDateIn)
{
     gradDate = gradDateIn;
}

</pre><p>Let''s define the accessing function members:</p><pre class="ql-syntax" spellcheck="false">string Student::getName()
{
     return name;
}

int Student::getId()
{
     return id;
}

int Student::getGradDate()
{
     return gradDate;
}
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e4a0b479-dc57-466b-a44d-7a01e9fa1d90'::uuid, 6, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'LESSON'::public.resource_type, 'A Class Defined', NULL, '<p>Let''s look at what we have so far in the student class.</p><pre class="ql-syntax" spellcheck="false">class Student
{
        string name;
        int id;
        int gradDate;

    public:
        void setName(string nameIn);
        void setId(int idIn);
        void setgradDate(int dateIn);
};

Student::setName(string nameIn)
{
     name = nameIn;
}

Student::setID(int idIn)
{
     id = idIn;
}

Student::setGradeDate(int gradDateIn)
{
     gradDate = gradDateIn;
}
</pre><p>Our Student class is ready to use.</p><p><br></p><p>There is one more function member I would like to add to the class, it is not required, but it is nice to have it.</p><p><br></p><p>The function is called print.</p><p>This function will print all the data values in the class.</p><pre class="ql-syntax" spellcheck="false">void print()
{
     cout&lt;&lt;name&lt;&lt;" "&lt;&lt;id&lt;&lt;" "&lt;&lt;gradDate;
}
</pre><p>Notice that this function prints only the data values with a space between them. It does not add a newline, or text. This is standard for C++ basic print functions. We have to think others might want to use this function and we should keep it as neutral as possible.</p><pre class="ql-syntax" spellcheck="false">class Student
{
        string name;
        int id;
        int gradDate;

    public:
        void setName(string nameIn);
        void setId(int idIn);
        void setGradDate(int dateIn);
        string getName();
        int getId();
        int getGradDate();
        void print();
};

void Student::setName(string nameIn)
{
     name = nameIn;
}

void Student::setId(int idIn)
{
     id = idIn;
}

void Student::setGradDate(int gradDateIn)
{
     gradDate = gradDateIn;
}

void Student::print()
{
     cout&lt;&lt;name&lt;&lt;" "&lt;&lt;id&lt;&lt;" "&lt;&lt;gradDate;
}

string Student::getName()
{
     return name;
}

int Student::getId()
{
     return id;
}

int Student::getGradDate()
{
     return gradDate;
}
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d3576dc4-ec5c-433a-80e1-996ee507d6dc'::uuid, 1, '309f146a-a038-40b1-8088-7934fd1fee12'::uuid, 'LESSON'::public.resource_type, 'Inheritance: Access Control', NULL, '<p><strong>Access Control for Inherited Classes</strong></p><p>Let''s look at this bit of code from our example:</p><pre class="ql-syntax" spellcheck="false">
//The derived class with Student as base class
class GradStudent : public Student
{
    private:
        string degree;
    public:
        GradStudent();
        void setDegree(string degreeIn);
        string getDegree();
};
</pre><p>Notice the line:</p><pre class="ql-syntax" spellcheck="false">class GradStudent: public Student
</pre><p>The access control before the base class (in this case ''public'') determines the access of the inherited class.</p><p>There are three types of access control: public, private, and protected.</p><ul><li><strong>Public Inheritance</strong>&nbsp;means all public members of the base class are accessible to the derived class</li><li><strong>Private Inheritance</strong>&nbsp;means all members of the base class are private to the derived class</li><li><strong>Protected Inheritance</strong>&nbsp;means all members of the base class are protected to the derived class.</li></ul><p>It is very rare to have a protected or private inheritance, the vast majority of the time inheritance is public.</p><p><strong>An example of private inheritance.</strong></p><p>Even though private inheritance is rare, let''s look at an example.</p><p>In the program below, the inheritance is now private:</p><pre class="ql-syntax" spellcheck="false">
//The derived class with Student as base class
class GradStudent : private Student
{
    private:
        string degree;
    public:
        GradStudent();
        void setDegree(string degreeIn);
        string getDegree();
        void setStudentId(int idIn); //need this to access Student::setId()
        int getStudentId(); //need this to access Student::getId()
};
</pre><p>Now that we have a private inheritance, the Student member functions setId() and getID() are no longer available to the GradStudent class.</p><p>When we write the member functions, we must explicitly refer to the Student class.</p><pre class="ql-syntax" spellcheck="false">int GradStudent::getStudentId()
{
    //We must access getId() as a private function
    return Student::getId();
}
void GradStudent::setStudentId(int idIn)
{
    //We must access setId() as a private function
    Student::setId(idIn);
}
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1709797f-2a22-4236-a747-d0a42cb80476'::uuid, 7, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'LESSON'::public.resource_type, 'Syntax', NULL, '<p>The syntax for a class is:</p><pre class="ql-syntax" spellcheck="false">class ClassName
{
      member1;
      member2;
      ...

public:
     return variable accessFunction1(function parameters);
     return variable accessFunction2(function parameters);
      ...
} ;

returnVariable ClassName:: accessFunction1(function parameters)
{
    function statements;
}

returnVariable ClassName:: accessFunction2(function parameters)
{
    function statements;
}

...
</pre><p>As an aside, some conventions list the public definitions first, including the Google C++ Style Guide. It is best to use the convention for the group paying you to code.</p><p><strong>C++ Convention is:</strong></p><ul><li>Capitalize the first letter of the classname. ``` class ClassName ```</li><li>Private members are listed first. If you do this, there is no need to use the ''private'' keyword. If you list them after the public keyword, you will need to identify them using the private keyword. ``` { member1; member2; ... ```</li><li>Use ''getVariableName'' for accessing private variables Use ''setVariableName'' for assigning values to private variables ``` public: return variable accessFunction1(function parameters); return variable accessFunction2(function parameters); ... } ; ```</li><li>You will need to signify that the functions are part of the class definition by using the namespace classname::. ``` returnVariable ClassName:: accessFunction1(function parameters) { function statements; }</li><li>returnVariable ClassName:: accessFunction2(function parameters) { function statements; }</li></ul><pre class="ql-syntax" spellcheck="false">
...
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9749168b-a377-40db-b9e5-a3a4e6252259'::uuid, 8, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'LESSON'::public.resource_type, 'Using a Class', NULL, '<p>It is conventional to put classes in a header file. For this example we are going to put them in the main file so we can see both the main program and the class at the same time. Hopefully, this will make it a little easier to see what is going on in the program.</p><p>Notice we need to use the "dot operator" to access the public members.</p><p>For example, to get the value of the grad date in the student class we need to type:</p><pre class="ql-syntax" spellcheck="false">studentVariableName.getGradDate();
</pre><p>There is another operator (-&gt;) that is used for accessing pointer members of a class. We will discuss that operator in the Binary Search Trees program.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7faf81f7-1b74-45c5-ab0a-a1c093cabf18'::uuid, 9, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'VIDEO'::public.resource_type, 'Memory Management', NULL, '', 'https://www.youtube.com/watch?v=uu6_Zc0M1Yk');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('85ecb050-72f2-4107-998e-65129018d6d3'::uuid, 10, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'LESSON'::public.resource_type, 'Constructors', NULL, '<p><strong>There is a special function member that we need to talk about, constructors.</strong></p><p><br></p><p>A constructor is special function that is executed whenever we create a new instance of the class. It is used to set initial values of data members of the class.</p><p><br></p><p>For example, in our Cats class we may want to have an initial value for the age of a cat and it''s breed. If we set initial values, we do not need to require the program or user set every value.</p><p><br></p><p><strong>Constructors do not return a value, including void.</strong></p><p><br></p><p>The declaration for a constructor is:</p><pre class="ql-syntax" spellcheck="false">ClassName::ClassName();
</pre><p>The definition of a constructor is:</p><pre class="ql-syntax" spellcheck="false">ClassName::ClassName()
{
     dataMemberName1 = value;
     dataMemberName2 = value;
     ...
}
</pre><p><em>Note: There are also Destructors which will be discussed later in the course.</em></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e4d7659a-2d56-47db-ab2e-b00eac66da3a'::uuid, 11, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'LESSON'::public.resource_type, 'Destructors', NULL, '<p><strong>In addition to constructors, C++ also has destructors.</strong></p><p><br></p><p>Destructors are special class functions that are called whenever an object goes out of scope. Just like a constructor, a destructor is called automatically.</p><ul><li>Destructors&nbsp;<strong>cannot</strong>:</li><li class="ql-indent-1">return a value</li><li class="ql-indent-1">accept parameters</li><li>Destructors must have the same name as the class.</li></ul><p>The syntax for a destructor is similar to the constructor:</p><p>The destructor is identified with a tilda (~) symbol.</p><p>Declaring a destructor:</p><pre class="ql-syntax" spellcheck="false">~className()  //this is a destructor
</pre><p>Defining a destructor:</p><pre class="ql-syntax" spellcheck="false">classname::~classname()
{
     //tasks to be completed before going out of scope
}
</pre><p>One of the more important tasks of a destructor is releasing memory that was allocated by the class constructor and member functions.</p><p>We will discuss this in detail during the memory allocation lesson.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('03f38de4-b1e0-4639-9b24-a8f4fcdb0a91'::uuid, 12, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'LESSON'::public.resource_type, 'Helper Functions in Classes', NULL, '<p><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">Classes can have member functions that do more than just set or get data values. These helper functions can perform tasks that are often requested or are easier to perform in the class itself.</span></p><p><br></p><p><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">For example:</span></p><p><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">Let''s say we have a class that tracks the grades a student receives in a course. We can create a member function that calculates the average.</span></p><pre class="ql-syntax" spellcheck="false">/*Goal: look at helper functions in classes*/


#include "main.hpp"


int main()
{
&nbsp; &nbsp; Student s1;
&nbsp; &nbsp; s1.setId(3232);
&nbsp; &nbsp; s1.setGrade(0,85);
&nbsp; &nbsp; s1.setGrade(1, 80);
&nbsp; &nbsp; s1.setGrade(2,98);
&nbsp; &nbsp; s1.setGrade(3,65);
&nbsp; &nbsp; s1.setGrade(4,90);
&nbsp; &nbsp; s1.printInfo();
&nbsp; &nbsp; cout&lt;&lt;"avg = "&lt;&lt;s1.getAvg();
&nbsp; &nbsp; return 0;
}
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4c995556-35d7-4236-b990-579b4907ebb1'::uuid, 13, '43b37254-0cea-45af-b254-185b1ffd9e13'::uuid, 'LESSON'::public.resource_type, 'this Pointer', NULL, '<p>C++ has a pointer called ''this''.</p><p>''this'' returns its own address.</p><p>There are a few cases where ''this'' might be necessary, but often using it is considered a stylistic preference.</p><p>Note in the program below, to compare the Area of the Shape''s own area with the area of the shape</p><pre class="ql-syntax" spellcheck="false">  //Use ''this'' to compare areas
 //The class functions
      int compareWithThis(Shape shape)
      {
         //return the area of the calling shape
         return this-&gt;Area() &gt; shape.Area();
      }
   //Using the class function in a program
   //In this case sh1.Area() is being compared to sh2.Area()

   if(sh1.compareWithThis(sh2)) {
      cout &lt;&lt; "\nShape2 is smaller than Shape1" &lt;&lt;endl;
   }
</pre><p>I can perform the exact same function and not use ''this''.</p><pre class="ql-syntax" spellcheck="false">     //''this'' is not necessary to compare shapes
      int compare(Shape shapeIn)
      {
         return Area() &gt; shapeIn.Area();
      }
</pre><p>To use the class function:</p><pre class="ql-syntax" spellcheck="false">   if(sh1.compare(sh2))
   {
      cout &lt;&lt; "\nShape2 is smaller than Shape1" &lt;&lt;endl;
   }
</pre><p>Again, the function compares sh1.area() to the area of sh2.area().</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c1da1e31-7e2a-421c-a7a3-f183dd0702cc'::uuid, 0, '6d79d7cf-feec-446b-b70d-fb720a469d1c'::uuid, 'LESSON'::public.resource_type, 'Overloading', NULL, '<p>In the course so far we have been required to defined a variable''s type before we could use it. We have also had to define the types for input variables of functions and classes. Let''s take a look at what I am talking about, to make sure we understand the situation.</p><p><br></p><pre class="ql-syntax" spellcheck="false">/*Goal: look at a program, and see if we can make it more versatile*/


#include&lt;iostream&gt;


int findSmallerInt(int input1, int input2);
float findSmallerFloat(float input1, float input2);
char findSmallerChar(char input1, char input2);


int main()
{
&nbsp; &nbsp; int a = 5;&nbsp;
&nbsp; &nbsp; int b = 4;
&nbsp; &nbsp; float f1 = 5.43;
&nbsp; &nbsp; float f2 = 6.32;
&nbsp; &nbsp; char c1 = ''c'';
&nbsp; &nbsp; char c2 = ''z'';
&nbsp; &nbsp; std::cout&lt;&lt;findSmallerInt(a,b)&lt;&lt;" is the smaller of "&lt;&lt;a&lt;&lt;" and "&lt;&lt;b&lt;&lt;"\n";
&nbsp; &nbsp; std::cout&lt;&lt;findSmallerFloat(f1,f2)&lt;&lt;" is the smaller of "&lt;&lt;f1&lt;&lt;" and "&lt;&lt;f2&lt;&lt;"\n";
&nbsp; &nbsp; std::cout&lt;&lt;findSmallerChar(c1,c2)&lt;&lt;" is the smaller of "&lt;&lt;c1&lt;&lt;" and "&lt;&lt;c2&lt;&lt;"\n";
&nbsp; &nbsp;&nbsp;
&nbsp; &nbsp; return 0;
}


int findSmallerInt(int input1, int input2)
{
&nbsp; &nbsp; if(input1&lt;input2)
&nbsp; &nbsp; &nbsp; &nbsp; return input1;
&nbsp; &nbsp; return input2;
}
float findSmallerFloat(float input1, float input2)
{
&nbsp; &nbsp; if(input1&lt;input2)
&nbsp; &nbsp; &nbsp; &nbsp; return input1;
&nbsp; &nbsp; return input2;
}


char findSmallerChar(char input1, char input2)
{
&nbsp; &nbsp; if(input1&lt;input2)
&nbsp; &nbsp; &nbsp; &nbsp; return input1;
&nbsp; &nbsp; return input2;
}
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7eea9a36-1b87-4dc1-8923-b01ce9b89907'::uuid, 1, '6d79d7cf-feec-446b-b70d-fb720a469d1c'::uuid, 'LESSON'::public.resource_type, 'Overloading Constructors', NULL, '<p>We saw in the Classes lesson that we can have two kinds of constructors:</p><ul><li>those that do not have input parameters</li><li>those that do have them.</li></ul><p>There will be times when we would like to have both options in a class. Luckily, we can use Overloading to achieve it!</p><p>When create a class we can have two different constructors and the compiler will know which one we want.</p><p>The program below is an example of a class that has two kinds of constructors.</p><p><br></p><pre class="ql-syntax" spellcheck="false">/*Goal: learn about overloading constructors*/


#include "main.hpp"


int main()
{
&nbsp; &nbsp; Square s1;
&nbsp; &nbsp; Square s2(4,3);
&nbsp; &nbsp; cout&lt;&lt;"s1 dimensions are: "&lt;&lt;s1.getWidth()&lt;&lt;","&lt;&lt;s1.getLength();
&nbsp; &nbsp; cout&lt;&lt;"\ns2 dimensions are: "&lt;&lt;s2.getWidth()&lt;&lt;","&lt;&lt;s2.getLength();
&nbsp; &nbsp; return 0;
}
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('eca358c4-6341-422e-a7be-96c3848f1f38'::uuid, 2, '6d79d7cf-feec-446b-b70d-fb720a469d1c'::uuid, 'LESSON'::public.resource_type, 'Overloading Operators', NULL, '<p>We can overload operators in C++. This is useful when using user defined objects.</p><p>In the example below we will use operators to overload the ''+'' sign.</p><p>Let''s look at the example in detail.</p><p>You can see in the code below, the function must specify a return type. Then it must use the keyword ''operator'' followed by the ''+'' sign.</p><pre class="ql-syntax" spellcheck="false">      //The function that overloads the ''+'' sign
      int operator + (Shape shapeIn)
      {
          return Area() + shapeIn.Area();
      }
</pre><p>To use the overloaded ''+'' sign, we just have to use it with our user defined objects.</p><p>For example:</p><pre class="ql-syntax" spellcheck="false"> int total = sh1 + sh2;
</pre><p>In this case the ''+'' will add the areas of the two shapes.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('27df863f-5367-48de-9b34-32caa101dc34'::uuid, 0, '1d0997e4-5661-4314-89f4-4ef9c3274783'::uuid, 'VIDEO'::public.resource_type, 'Generic Programming', NULL, '', 'https://www.youtube.com/watch?v=LMapajnUc1k');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('11c03f7d-12a7-442a-ad5d-af78d5fb0bda'::uuid, 1, '1d0997e4-5661-4314-89f4-4ef9c3274783'::uuid, 'LESSON'::public.resource_type, 'Templates Example', NULL, '<p>We saw how overloading can be used to create a function that is fairly generic. Unfortunately, we still have to write a function for each variable type. Wouldn''t it be nice to just write a function once and use it over and over for different variable types?</p><p>Well, actually, we can do that.</p><p><br></p><p>C++ allows us to create generic functions using&nbsp;<strong>templates</strong>.</p><p><br></p><p>Let''s look at an example of a function built using a template. Then we''ll discuss the details of what is a template and how to use them to create generic functions.</p><p>Recall our findSmaller function for two integers:</p><pre class="ql-syntax" spellcheck="false">int findSmallerInt(int input1, int input2)
{
    if(input1&lt;input2)
        return input1;
    return input2;
}
</pre><p>Let''s see what that function looks like when we use a template to make it generic.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5bf9daa1-aa84-4e84-b56b-3685b054fe51'::uuid, 2, '1d0997e4-5661-4314-89f4-4ef9c3274783'::uuid, 'LESSON'::public.resource_type, 'Func. Templates 2', NULL, '<p>So far we have looked at functions where all the input parameters and return variables are the same type. Now we will look at when the types are different.</p><p>We will still use the same form, we will just need to tell the compiler that different variable types are allowed.</p><pre class="ql-syntax" spellcheck="false">template &lt;typename T, typename U, typename V&gt;
T functionName (U  parameter1, V  parameter2,...)
{
    function statements;
}
</pre><p>For example:</p><pre class="ql-syntax" spellcheck="false">T getBigger(T input1, U input2)
{
    if(input1 &gt; input2)
        return input1;
    return input2;
}
</pre><p>In this instance the function accepts two inputs of different types; ''T'' and ''U''. The return type is ''T''. For the user this translates as: "Enter two different variable types in the function. Whichever variable type is listed first, is the variable type that is returned.</p><p>More information can be found at:&nbsp;<a href="http://www.cplusplus.com/doc/oldtutorial/templates/" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>C++ Templates</strong></a></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('97992bca-bf1e-450e-a7bd-00106d392948'::uuid, 3, '1d0997e4-5661-4314-89f4-4ef9c3274783'::uuid, 'LESSON'::public.resource_type, 'Generic Classes', NULL, '<p>In C++, we can create generic classes as well as functions. We use the same template type placeholder as we did for functions.</p><p>Let''s look at an example of a generic class. In the example below I removed some of the code we don''t need to discuss. The complete program is in the program quiz below.</p><p><strong>If the class is going to accept strings, we need to include the ''using namespace'' compiler directive, or it will not recognize the string variable.</strong>&nbsp;``` //header file for main.cpp #include</p><pre class="ql-syntax" spellcheck="false">//The class accepts strings, so we need to use namespace
using namespace std;

```
</pre><p><strong>We use "template&nbsp;for classes</strong>&nbsp;``` //tell compiler this class uses a generic value template&nbsp;class StudentRecord {</p><pre class="ql-syntax" spellcheck="false">```
</pre><p><strong>Just as with non-generic classes, we have private and public members. To signify the variable type that is changable, use the name you assigned in the template&nbsp;command. In our case, this is T.</strong></p><p>Everywhere you see the T, this is where we would substitute int, char, float, string if we wanted to do this a no-generic class.</p><pre class="ql-syntax" spellcheck="false">
    private:
        const int size = 5;
        T grade;
        int studentId;
    public:
       //note: I used a constructor that accepts the grade input
        StudentRecord(T input);
        void setId(int idIn);
        void printGrades();
};
</pre><p>*<strong>The member functions must all be treated as generic functions. You will have to add the template command to each member function.</strong>&nbsp;```</p><pre class="ql-syntax" spellcheck="false">template&lt;class T&gt;
StudentRecord&lt;T&gt;::StudentRecord(T input)
{
    grade=input;
}

//Notice I still add the template&lt;class T here, even though this is not a generic //function. It is in a generic class.

template&lt;class T&gt;
void StudentRecord&lt;T&gt;::setId(int idIn)
{
    studentId = idIn;
}

template&lt;class T&gt;
void StudentRecord&lt;T&gt;::printGrades()
{
    cout&lt;&lt;"ID# "&lt;&lt;studentId&lt;&lt;": ";
    cout&lt;&lt;grade&lt;&lt;"\n ";
    cout&lt;&lt;"\n";
}

```
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f7178ba3-f2f0-4bf5-be79-1474624d5ace'::uuid, 4, '1d0997e4-5661-4314-89f4-4ef9c3274783'::uuid, 'CODE'::public.resource_type, 'Generic Classes Prog. Quiz', 'b6484e21-6937-489c-b031-b71767994760'::uuid, 'Check triangle from side length', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('02fa1c7b-7247-472a-8bd8-27456433be9a'::uuid, 2, '309f146a-a038-40b1-8088-7934fd1fee12'::uuid, 'LESSON'::public.resource_type, 'Multiple Inheritance', NULL, '<p>C++ classes can inherit from more than one class. This is known as "Multiple Inheritance".</p><p>The form for declaring multiple inheritance is:</p><pre class="ql-syntax" spellcheck="false">class DerivedClass : access BaseClass1, ... ,access BaseClassN
</pre><p>For example, in the statement shown below, the derived class is TeachingAssociate. It inherits attributes from Staff and from GradStudent.</p><pre class="ql-syntax" spellcheck="false">class TeachingAssociate: public Staff, public GradStudent
</pre><p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2017/May/59135e32_screen-shot-2017-05-10-at-11.38.10-am/screen-shot-2017-05-10-at-11.38.10-am.png"></p><p class="ql-align-center">A graphical representation of multiple inheritance.</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7f8e3bc2-4ac0-4c4e-8503-dbb4c2e84704'::uuid, 0, '895a6395-1440-417b-8a2f-08413f4034f3'::uuid, 'LESSON'::public.resource_type, 'Inheritance Issue', NULL, '<p>To understand polymorphism, we need to take a deeper look at Inheritance.</p><p>Let''s begin with an example of inheritance that will highlight the need for polymorphism.</p><p>In the program below we have two classes; Employee and Manager.</p><p>A manager is an employee, so we can use inheritance to derive the Manager class from the Employee class. The difference between the two classes lies in the payRate. Employees are paid an hourly wage, managers are paid a salary.</p><p>The weekly pay for an employee is calculated as:</p><pre class="ql-syntax" spellcheck="false">       pay = PayRate * HoursWorked
</pre><p>For the manager weekly pay is calculated as:</p><pre class="ql-syntax" spellcheck="false">       pay = Salary / 52
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('dc018eb4-e429-4d0f-811c-a077979bd504'::uuid, 1, '895a6395-1440-417b-8a2f-08413f4034f3'::uuid, 'LESSON'::public.resource_type, 'Virtual Functions', NULL, '<p>We tried a couple of different methods to process all employees the same way.</p><ul><li>One worked, but did not make our code better.</li><li>One seemed to help, but it didn''t work.</li></ul><p>The first solution to our problem is obviously wrong. We don''t want to write duplicate code for each Employee type.</p><p>The second solution should work, but it doesn''t. The question is why doesn''t it?</p><p>Let''s look at the code again:</p><pre class="ql-syntax" spellcheck="false">/*
*/
#include "main.hpp"

int main()
{
    string status = "salary"; //options: hourly or salary
    string level;
    level = "hourly";
    Employee *e1; //e1 is now a pointer to Employee object

    if(status == level)
    {
        e1 = new Employee(); //we define an hourly employee
    }
    else
    {
        e1 = new Manager(); //we define a salaried employee
    }

   ...
}
</pre><p>Let''s think about what we are doing here. We assign an Employee pointer at the start of the program. This allocates memory to an Employee object. Then later, we define that same memory location as a manager. This&nbsp;<em>should</em>&nbsp;now supersede the previous definition, but it doesn''t.</p><p>Another way to say this is:</p><pre class="ql-syntax" spellcheck="false">The term e1 is statically bound during compile.
We want it to be dynamically bound during execution.
</pre><p>Fortunately, C++ allows dynamic binding through the use of&nbsp;<strong>Virtual Functions</strong>.</p><p>According to MicroSoft C++ Language Reference:</p><p>A virtual function is a member function that you expect to be redefined in derived classes. When you refer to a derived class object using a pointer or a reference to the base class, you can call a virtual function for that object and execute the derived class''s version of the function.</p><p><a href="https://msdn.microsoft.com/en-us/library/0y01k918.aspx" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>C++ Virtual Functions</strong></a></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('52233292-9888-4de8-8a49-49c16c377da5'::uuid, 2, '895a6395-1440-417b-8a2f-08413f4034f3'::uuid, 'LESSON'::public.resource_type, 'Virtual Functions 2', NULL, '<p>In the program below we define a manager and an employee.</p><p>The virtual function makes this possible:</p><pre class="ql-syntax" spellcheck="false">virtual float calcWeeklyPay();
</pre><p>Note: we only had to add the keyword virtual in one location in the base class. Any class derived from Employee that has a function by the same name will inherit the same properties.</p><p><br></p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2d171fd2-db91-434e-a26a-6c9dbfe78103'::uuid, 3, '895a6395-1440-417b-8a2f-08413f4034f3'::uuid, 'LESSON'::public.resource_type, 'Pure Virtual Functions', NULL, '<p>Pure Virtual Functions are a special case of virtual functions.</p><p>A pure virtual function is used when the base class has a function that will be defined in its derived class, but it has no meaningful definition in the base class.</p><p>An example of a pure virtual function is shown in the program below.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('61e81e01-af0b-4ca3-86e3-0fa261cd3616'::uuid, 0, '248a19ec-75e4-4f0f-ae0a-3cebca318ccf'::uuid, 'LESSON'::public.resource_type, 'Vectors Introduction', NULL, '<p><br></p><p>We have been using the C++ standard function library throughout this course (recall I/O streams, string, etc.). Well, there is actually another part of the Standard C++ library, the&nbsp;<strong>object oriented class</strong>.</p><p><br></p><p>The Object oriented library has many containers that are quite useful for programming. We now going to take some time to work with some of them.</p><p>The first class we will discuss is the vector class.</p><p>Let''s look at and play with an example of a vector.</p><p>In the program below, we create a vector of integers, called vectorInts.</p><p>You should notice the following:</p><ul><li>We included a C++ library called vector</li><li>To instantiate a vector :</li></ul><pre class="ql-syntax" spellcheck="false">  std::vector&lt;int&gt; vectorInts;
</pre><ul><li>The vector has size 0 when we instantiate it.</li><li>We use ''resize'' to change the size of the vector.</li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('08edfcd4-cd54-459e-8bb8-c5b9b78bdeed'::uuid, 1, '248a19ec-75e4-4f0f-ae0a-3cebca318ccf'::uuid, 'LESSON'::public.resource_type, 'Vectors and Iterators', NULL, '<p>Vectors are more versatile than arrays, and can be resized during runtime. We can also insert elements into a vector (we''ll insert elements a little later in the lesson).</p><p>This characteristic adds a lot of freedom to vectors that we don''t have with arrays. It also means we have to adjust how we access elements in a vector. Since we can add elements anywhere in the vector, we do not refer to the first element of a vector as the zero element, we call it the beginning. The last element is called end. To keep track of where we are in the vector, we need an&nbsp;<strong>iterator</strong>.</p><p>In the program below, you should notice the following:</p><ul><li>We use ::assign to add and define elements to the vector</li><li>We instantiate an iterator for the vector class:</li></ul><pre class="ql-syntax" spellcheck="false">  //creating an iterator for the vector
  std::vector&lt;int&gt;::iterator it;
</pre><ul><li>We use the iterator to cycle through the vector. Begin is the first element in the vector, end it the last.</li></ul><pre class="ql-syntax" spellcheck="false">  for (it = vectorInts.begin(); it != vectorInts.end(); ++it)
    std::cout&lt;&lt;*it&lt;&lt;" ";
</pre><ul><li>Notice, we dereference the iterator to print out the value of the vector:</li></ul><pre class="ql-syntax" spellcheck="false">std::cout&lt;&lt;*it&lt;&lt;" ";
</pre><ul><li>Notice, we have to increment the iterator as we execute the for loop.</li></ul><pre class="ql-syntax" spellcheck="false"> for (it = vectorInts.begin(); it != vectorInts.end(); ++it)
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f7a36308-dc47-4db4-b406-2a66c98db9a4'::uuid, 2, '248a19ec-75e4-4f0f-ae0a-3cebca318ccf'::uuid, 'LESSON'::public.resource_type, 'Elements', NULL, '<p>Since vectors are instantiated without elements, we need to have a method to add elements. The first method we learned is ::assign.</p><p>::Assign will write over elements in the vector, which is what we want in some cases, but in others it is not desired.</p><p>We can add elements to the end (or back) of a vector using ::push_back.</p><p>Let''s look at an example using push_back.</p><p>Note in the program:</p><ul><li>We added an element by pushing it on to the back of the vector. In this case we put an element with value 24 on the end of the vector.</li></ul><pre class="ql-syntax" spellcheck="false">  vectorInts.push_back(24);
</pre><ul><li>We can add as many elements as we wish using the push_back function. In this example we added four elements to the vector.</li></ul><pre class="ql-syntax" spellcheck="false">  vectorInts.push_back(24);
  vectorInts.push_back(25);
  vectorInts.push_back(26);
  vectorInts.push_back(27);
</pre><p><br></p><p>insert is another method to add elements to a vector.</p><p>insert adds elements to the location&nbsp;<em>after</em>&nbsp;the iterator.</p><p>To add elements using insert:</p><ul><li>Set the iterator to one before the location where you would like to add an element.</li><li>Use insert to add the element.</li></ul><p>This sounds complicated, let''s look at an example and you''ll see it is fairly straight forward.</p><p>In the program below, note the following:</p><ul><li>Before we insert, we need to set the iterator to a known destination. In this case we set it to the beginning of the vector plus one.</li></ul><pre class="ql-syntax" spellcheck="false">  it  = vectorInts.begin() + 1;
</pre><ul><li>To insert the element we need to give the insert location and the value of the element. In this case the location is the location of the iterator (begin + 1). The value is -1.</li></ul><pre class="ql-syntax" spellcheck="false">vectorInts.insert(it, -1);
</pre><p>Also note in the program below, I reset the iterator to the beginning of the vector before inserting the next value.</p><p>You need to do this after an insert because&nbsp;<strong>all iterator locations are invalid after an insert</strong>.</p><p>In this program I set the iterator to the beginning of the vector. Then during the insert I moved the iterator 3 locations to add the next element, which has a value of -2.&nbsp;<code style="color: var(--chakra-colors-black);">it = vectorInts.begin(); vectorInts.insert(it + 3, -2);</code></p><p><br></p><p>Another method for adding elements is ::emplace.</p><p>Emplace puts an element in a vector at the position pointed to by the iterator.</p><p>Emplace differs from insert in the method used to insert the element. Insert&nbsp;<strong>copies</strong>&nbsp;the values of the vector while emplace does an&nbsp;<strong>in-place insertion</strong>. This means the insertion occurs at the point after the iterator.</p><p>The difference makes emplace more efficient than insert in special cases.</p><p>You can find more about emplace&nbsp;<a href="https://stackoverflow.com/questions/14788261/c-stdvector-emplace-vs-insert" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>here</strong></a></p><p><a href="https://stackoverflow.com/questions/14788261/c-stdvector-emplace-vs-insert" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></p><p>In the program below, we see the code:</p><pre class="ql-syntax" spellcheck="false">  //insert an element after the first element
  it  = vectorInts.begin() + 1;
  vectorInts.emplace(it, -1);
</pre><p>To use emplace we must first set the iterator to the desired location. In this case, after the first element.</p><pre class="ql-syntax" spellcheck="false">  it  = vectorInts.begin() + 1;
</pre><p>Then we use emplace to add the element.</p><pre class="ql-syntax" spellcheck="false">vectorInts.emplace(it, -1);
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('61946901-e4a4-4964-b9e8-2910793afb95'::uuid, 3, '248a19ec-75e4-4f0f-ae0a-3cebca318ccf'::uuid, 'LESSON'::public.resource_type, 'clear Vector', NULL, '<p>We can remove all elements from the vector at the same time using the method ::clear.</p><p>In the program below note the following code:</p><pre class="ql-syntax" spellcheck="false"> //clear the vector
  vectorInts.clear();
</pre><p>This will remove all elements in the vector called vectorInts.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8fa5e0cc-3a60-416f-9f90-cc752e8265e0'::uuid, 4, '248a19ec-75e4-4f0f-ae0a-3cebca318ccf'::uuid, 'LESSON'::public.resource_type, 'erase Vector', NULL, '<p>We can remove specific elements from a vector using ::erase.</p><p>::erase can:</p><ul><li>delete a single element from a vector For example:</li></ul><pre class="ql-syntax" spellcheck="false">//erase the 5th element in the vector
  vectorInts.erase(vectorInts.begin()+4);
</pre><ul><li>delete a range of elements form a vector For example:</li></ul><pre class="ql-syntax" spellcheck="false">  //erase a range of elements in the vector
  vectorInts.erase(vectorInts.begin()+1, vectorInts.begin()+3);
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('20f32771-8f1d-4773-862b-e3cbd6c699ac'::uuid, 5, '248a19ec-75e4-4f0f-ae0a-3cebca318ccf'::uuid, 'LESSON'::public.resource_type, 'pop_back', NULL, '<p><br></p><p>We can remove the last element of a vector using ::pop_back.</p><p>For example:</p><pre class="ql-syntax" spellcheck="false">  //pop the last element off the vector
  vectorInts.pop_back();
</pre><p>pop_back&nbsp;<em>DOES NOT</em>&nbsp;return a value!</p><p>For example, the code shown below will generate an error message and will not compile.</p><pre class="ql-syntax" spellcheck="false">  int a;
  a = vectorInts.pop_back(); //this line does not compile
</pre><p>You will get an error message telling you ::pop_back has a void value for a return.</p><pre class="ql-syntax" spellcheck="false">main.cpp: In function ‘int main()’:
main.cpp:39:5: error: void value not ignored as it ought to be
   a = vectorInts.pop_back();
</pre><p><br></p>', '');
-- End of chapter Java 1

-- Chapter Java 2
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('156a6bf7-dc81-4bce-956a-7a0e7998feb8'::uuid, '31492b43-ebe3-4bc5-bf07-a3c8b5d03f24'::uuid, 0, 'Java OOPS 1', '<p>4 articles</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.463', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.463');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('dab9a305-9d53-48ce-938c-d4a1241d270a'::uuid, '31492b43-ebe3-4bc5-bf07-a3c8b5d03f24'::uuid, 1, 'Java OOPS 2', '', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.469', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.469');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('8381fccd-9458-45b6-9f10-cad145d3ea4b'::uuid, '31492b43-ebe3-4bc5-bf07-a3c8b5d03f24'::uuid, 2, 'Java OOPS 3', '<p>6 articles</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.472', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.472');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('a50d6805-4a02-4f49-a6fd-2bacb212df7e'::uuid, '31492b43-ebe3-4bc5-bf07-a3c8b5d03f24'::uuid, 3, 'Interfaces in Java', '<p>4 articles</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.475', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.475');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('19c589d7-2a7f-4036-bb83-6acbcfa5ac5b'::uuid, '31492b43-ebe3-4bc5-bf07-a3c8b5d03f24'::uuid, 4, 'Collection in Java', '<p>5 articles</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.477', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 20:07:06.477');
-- End of chapter Java 2

-- Chapter Java 3
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('8c33cc8c-3671-4312-8689-d935a7026109'::uuid, 'db4bfd55-bc8e-40dc-b07a-6d1de7652a3e'::uuid, 0, 'Input and Output', '<p><span style="color: rgb(16, 22, 47);">Learn about input and output in Java and how to run programs in your own environment.</span></p><p><br></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.164', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.164');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('950f31d7-a518-43ad-9b8b-4cf268edaeb7'::uuid, 'db4bfd55-bc8e-40dc-b07a-6d1de7652a3e'::uuid, 1, 'Serialization', '<p>Learn about serialization in Java.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.189', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.190');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('e3f8ad78-37b7-454d-8c2c-26313baa49b6'::uuid, 'db4bfd55-bc8e-40dc-b07a-6d1de7652a3e'::uuid, 2, 'Generics and Collections', '<p>Learn about generics and collections in Java.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.206', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.206');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('ae337470-89de-46ce-b0ad-d8e723897a69'::uuid, 'db4bfd55-bc8e-40dc-b07a-6d1de7652a3e'::uuid, 3, 'Nested classes', '<p>Learn about nested classes in Java.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.217', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.217');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('5b46ff16-e2ea-47b4-99a3-959f5aaebe2b'::uuid, 'db4bfd55-bc8e-40dc-b07a-6d1de7652a3e'::uuid, 4, 'Threading', '<p>Learn about threading in Java.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.217', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.217');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('6ca77614-89a5-46ad-8338-b13e519c365a'::uuid, 'db4bfd55-bc8e-40dc-b07a-6d1de7652a3e'::uuid, 5, 'Regular Expression', '<p>Learn about regular expressions (or “regex”) in Java.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.229', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 22:05:51.229');
-- End of chapter Java 3

-- Chapter Go 1
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('cfcc50cd-8701-4236-90fe-083138f78a08'::uuid, '3856262b-1bb2-4525-aac6-5a406e2de81e'::uuid, 0, 'Introduction', '<p><span style="color: rgb(16, 22, 47);">Ready to learn how to use Google’s new programming language, Go?</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.506', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.506');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, '3856262b-1bb2-4525-aac6-5a406e2de81e'::uuid, 1, 'Variables', '<p>Learn about creating and storing values in Go by using variables. Use different types to indicate what values those variables store.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.511', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.511');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('8fb0a7d4-3350-44b2-ae31-6cfe38dbf63a'::uuid, '3856262b-1bb2-4525-aac6-5a406e2de81e'::uuid, 2, 'fmt Package', '<p>Learn how to print and scan data using Go’s&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt</code>&nbsp;package!</p><p><br></p><p><br></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.516', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.516');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('e2b94a56-02f6-4b21-9d0d-578a8406c386'::uuid, '3856262b-1bb2-4525-aac6-5a406e2de81e'::uuid, 3, 'Conditionals', '<p>If you want to learn about implementing conditionals in Go, you’ve come to the right place!</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.519', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.519');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('e2a436a9-f706-4785-927b-e1fb7dab0e2d'::uuid, '3856262b-1bb2-4525-aac6-5a406e2de81e'::uuid, 4, 'Functions', '<p>Learn how to write Go functions in this action-packed course!</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.522', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-07-31 23:58:00.522');
-- End of chapter Go 1

-- Chapter PHP 1
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('a5e61ef9-11cd-4295-aec7-c6e3695dd072'::uuid, '61bead66-df47-452b-9fed-17f262dae4bd'::uuid, 0, 'Introduction to PHP', '<p>Learn how PHP is used in modern web development to create dynamic web pages for visitors</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 16:40:07.557', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 16:40:07.557');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('9de0422e-9805-4e86-bee8-01e09df4bd7d'::uuid, '61bead66-df47-452b-9fed-17f262dae4bd'::uuid, 1, 'PHP Strings and Variables', '<p><span style="color: rgb(16, 22, 47);">Learn about PHP variables and the string and number data types.</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 16:40:07.565', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 16:40:07.565');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('a2c14269-e7dd-493b-9d19-3a6fe8a28cc4'::uuid, '61bead66-df47-452b-9fed-17f262dae4bd'::uuid, 2, 'PHP numbers', '<p>Learn about numbers in PHP.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 16:40:07.577', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 16:40:07.577');
-- End of chapter PHP 1

-- Chapter PHP 2
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('2a71f618-bdc8-4737-a48d-faa16bf1158c'::uuid, '41c6df55-cb97-449e-87df-3acdf8c5fd8a'::uuid, 0, 'Connecting to Databases', '<p><span style="color: rgb(16, 22, 47);">Learn how to connect user data to a PostgreSQL database and display the data as HTML.</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 20:07:08.272', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 20:07:08.272');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('73253625-6cf4-410f-8966-e177f8f49e95'::uuid, '41c6df55-cb97-449e-87df-3acdf8c5fd8a'::uuid, 1, 'File Handling', '<p><span style="color: rgb(16, 22, 47);">Learn how to work with files in PHP.</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 20:07:08.307', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 20:07:08.307');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('d0b564e1-d14d-48be-9a2e-e4cd831e1471'::uuid, '41c6df55-cb97-449e-87df-3acdf8c5fd8a'::uuid, 2, 'APIs', '<p>Learn about what APIs are and how to use external APIs in PHP applications.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 20:07:08.330', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 20:07:08.330');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('0621ff93-8959-4440-ae90-46665005f1f2'::uuid, '41c6df55-cb97-449e-87df-3acdf8c5fd8a'::uuid, 3, 'Going Off-Platform with PHP', '<p>Take your PHP project off-platform with XAMPP.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 20:07:08.334', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 20:07:08.334');
-- End of chapter PHP 2

-- chapter php 3
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('a0988f89-e5b7-4122-805c-d436c9bd1d03'::uuid, 'eef6f7fe-c934-495a-a282-65996166bd97'::uuid, 0, 'Introduction', '<p>Learn how LearnVern''s advance PHP video tutorials can help create user-friendly applications with practical examples and interactive videos. Our free advance PHP course will help you master several important topics such as&nbsp;Ajax, Javascript, OOPS, Json, Jquery, XML, and more.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.312', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.312');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('73b55810-c89a-4a23-aaa5-ddcf93263e0f'::uuid, 'eef6f7fe-c934-495a-a282-65996166bd97'::uuid, 1, 'Basics about PHP', '<p>Learn some basics concepts about the PHP langugage.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.315', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.315');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('b71526ce-f195-40d6-aac6-71bd2b506e32'::uuid, 'eef6f7fe-c934-495a-a282-65996166bd97'::uuid, 2, 'Loops', '<p>Learn about loops and its condition</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.319', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.319');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('591b18d4-925f-4801-ad07-c189b9af2b38'::uuid, 'eef6f7fe-c934-495a-a282-65996166bd97'::uuid, 3, 'Files in PHP', '<p>Learn to work with file in PHP.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.321', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.321');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('0a710ef6-4c32-4230-b9d5-fbb492156b4b'::uuid, 'eef6f7fe-c934-495a-a282-65996166bd97'::uuid, 4, 'Web knowledge with PHP', '<p>Learn basics concepts about web and how to do it in PHP</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.323', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.323');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('fbf1cb09-c838-4e5a-8ab4-e56b0ad59d14'::uuid, 'eef6f7fe-c934-495a-a282-65996166bd97'::uuid, 5, 'OOP', '<p>Learn about principles and concepts of OOP in PHP</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.327', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.327');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('19b12d44-143d-46b7-801b-2c14cdb73cfc'::uuid, 'eef6f7fe-c934-495a-a282-65996166bd97'::uuid, 6, 'Advance web knowledge', '<p>Learn about even more advance web development knowledge in PHP</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.331', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-01 22:51:13.331');
-- end of chapter php 3

-- chapter kotlin 1
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, '927cb9d2-0edc-4c6e-8154-e16f15f7947a'::uuid, 0, 'Introduction to Kotlin', '<p><span style="color: rgb(16, 22, 47);">Get started with Kotlin by learning everything you need to know to create your first basic program!</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.174', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.174');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, '927cb9d2-0edc-4c6e-8154-e16f15f7947a'::uuid, 1, 'Data types & Variables', '<p>Learn about variables and the various data types that are supported in Kotlin.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.187', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.187');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('94236271-ebdb-46d7-b503-c965c3c37674'::uuid, '927cb9d2-0edc-4c6e-8154-e16f15f7947a'::uuid, 2, 'Conditional Expressions', '<p>Learn how to control the flow of code execution with conditional expressions!</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.196', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.196');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('f4865861-1ab8-4ba5-84d7-80ec3043fff2'::uuid, '927cb9d2-0edc-4c6e-8154-e16f15f7947a'::uuid, 3, 'Lists', '<p>Learn about the various types of collections that exist in Kotlin including lists, sets, and maps.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.206', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.206');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('76667e3a-a1ee-40a4-8fa6-55368854902e'::uuid, '927cb9d2-0edc-4c6e-8154-e16f15f7947a'::uuid, 4, 'Sets', '<p>Learn about the various types of collections that exist in Kotlin including lists, sets, and maps.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.214', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.214');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('16973bd3-e042-4c10-ad58-5a4b89b9e8f6'::uuid, '927cb9d2-0edc-4c6e-8154-e16f15f7947a'::uuid, 5, 'Loops', '<p>Learn how to effectively implement code repetition in Kotlin!</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.218', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 13:54:19.218');
-- end of chapter kotlin 1

-- chapter kotlin 2
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('10712a27-3124-4681-9a27-bde72357c1ef'::uuid, '17c0c958-ff03-4a8c-bce2-929428048db8'::uuid, 0, 'Introduction', '<p><span style="color: rgb(11, 11, 11);">Set up IntelliJ, the IDE that we will use in this course, and understand the major benefits of learning and using Kotlin.</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 15:43:23.973', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 15:43:23.973');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, '17c0c958-ff03-4a8c-bce2-929428048db8'::uuid, 1, 'Kotlin Basics', '<p><span style="color: rgb(11, 11, 11);">Use the Kotlin interpreter to get comfortable with basic language features. Write Kotlin statements and expressions, and practice using operators.</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 15:43:23.980', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 15:43:23.980');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('d4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, '17c0c958-ff03-4a8c-bce2-929428048db8'::uuid, 2, 'Functions', '<p><span style="color: rgb(11, 11, 11);">Create and call functions with default and variable arguments. Pass functions as arguments to filters, and program simple lambdas.</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 15:43:23.991', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 15:43:23.991');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, '17c0c958-ff03-4a8c-bce2-929428048db8'::uuid, 3, 'Classes', '<p><span style="color: rgb(11, 11, 11);">Learn how object-oriented programming works in Kotlin. Build private and public classes, including abstract classes and interfaces. Understand data classes and special purpose classes.</span></p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 15:43:24.010', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 15:43:24.010');
-- end of chapter kotlin 2

-- chapter dsa 1
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, '6301cef7-6c6b-4ff7-97fa-fe41f0c57c6e'::uuid, 0, 'Languages & Countability', '<p>In this chapter, we explore the foundations of formal languages and their significance in computability. We delve into:</p><ol><li><strong>Formal Languages</strong>: Understand the structure and types of formal languages, including regular and context-free languages.</li><li><strong>Countability</strong>: Learn about countable and uncountable sets, and their implications in computer science.</li><li><strong>Language Classes</strong>: Examine the hierarchy of languages and their properties.</li><li><strong>Applications</strong>: Discover practical applications in automata theory and algorithm design.</li></ol><p>This chapter equips you with the essential concepts of languages and countability, crucial for understanding the limits of computation.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.511', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.511');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('41624f50-8635-4109-93da-3360acd2370b'::uuid, '6301cef7-6c6b-4ff7-97fa-fe41f0c57c6e'::uuid, 1, 'Turing Machines', '<p>In this chapter, we dive into the concept of Turing Machines, a fundamental model of computation. Key topics include:</p><ol><li><strong>Definition and Structure</strong>: Learn what a Turing Machine is, its components, and how it operates.</li><li><strong>Types of Turing Machines</strong>: Explore variations like deterministic, non-deterministic, and multi-tape Turing Machines.</li><li><strong>Computational Power</strong>: Understand the capabilities and limitations of Turing Machines in solving problems.</li><li><strong>Decidability</strong>: Examine the concept of decidable and undecidable problems with examples.</li><li><strong>Turing Machine Design</strong>: Get hands-on with designing and analyzing simple Turing Machines.</li></ol><p>This chapter provides a deep understanding of Turing Machines, essential for grasping the theoretical limits of what can be computed.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.521', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.521');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, '6301cef7-6c6b-4ff7-97fa-fe41f0c57c6e'::uuid, 2, 'Church-Turing Thesis', '<p>In this chapter, we discuss the Church-Turing Thesis, a foundational concept in the theory of computation. Key points include:</p><ol><li><strong>Definition</strong>: Understand the Church-Turing Thesis and its assertion that any function computable by an algorithm can be computed by a Turing Machine.</li><li><strong>Historical Context</strong>: Learn about the contributions of Alonzo Church and Alan Turing in formulating this thesis.</li><li><strong>Equivalent Models</strong>: Explore various models of computation, such as lambda calculus and recursive functions, that are equivalent to Turing Machines.</li><li><strong>Implications</strong>: Examine the profound implications of the Church-Turing Thesis on the limits of computation and algorithmic solvability.</li><li><strong>Critiques and Discussions</strong>: Review debates and interpretations surrounding the thesis, including its philosophical significance.</li></ol><p><br></p><p>This chapter equips you with a comprehensive understanding of the Church-Turing Thesis, crucial for appreciating the theoretical underpinnings of computer science.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.532', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.532');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, '6301cef7-6c6b-4ff7-97fa-fe41f0c57c6e'::uuid, 3, 'Universality', '<p>In this chapter, we explore the concept of universality in computation, focusing on the following key topics:</p><ol><li><strong>Universal Turing Machines</strong>: Understand what a Universal Turing Machine (UTM) is and how it can simulate any other Turing Machine.</li><li><strong>Importance of Universality</strong>: Learn why the concept of universality is central to computer science and the development of general-purpose computers.</li><li><strong>Construction of UTMs</strong>: Examine the steps involved in constructing a Universal Turing Machine.</li><li><strong>Implications</strong>: Discover the implications of universality for programming languages, compilers, and the notion of software running on different hardware.</li><li><strong>Examples and Applications</strong>: Look at practical examples of universal computation, including modern computers and interpreters.</li></ol><p><br></p><p>This chapter provides a deep understanding of universality, highlighting its critical role in the theory and practice of computation.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.537', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.537');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, '6301cef7-6c6b-4ff7-97fa-fe41f0c57c6e'::uuid, 4, 'Undecidability', '', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.541', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.541');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('64267f60-faca-4c29-a180-5528def47f96'::uuid, '6301cef7-6c6b-4ff7-97fa-fe41f0c57c6e'::uuid, 5, 'P and NP', '<p>In this chapter, we explore the complexity classes P and NP, fundamental concepts in computational complexity theory. Key topics include:</p><ol><li><strong>Definitions</strong>: Understand the definitions of P (problems solvable in polynomial time) and NP (problems verifiable in polynomial time).</li><li><strong>Examples</strong>: Examine examples of problems in P and NP to illustrate the concepts.</li><li><strong>NP-Completeness</strong>: Learn about NP-complete problems, the hardest problems in NP, and the significance of polynomial-time reductions.</li><li><strong>Cook-Levin Theorem</strong>: Study the Cook-Levin Theorem, which established the first NP-complete problem (Boolean satisfiability).</li><li><strong>P vs NP Question</strong>: Discuss the famous open problem in computer science: whether P equals NP, and its implications for fields such as cryptography, optimization, and algorithm design.</li><li><strong>Real-World Implications</strong>: Explore the practical consequences of P and NP in various domains, including scheduling, resource allocation, and game theory.</li></ol><p><br></p><p>This chapter provides a comprehensive understanding of the complexity classes P and NP, crucial for grasping the challenges and boundaries of efficient computation.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.548', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.548');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('d3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, '6301cef7-6c6b-4ff7-97fa-fe41f0c57c6e'::uuid, 6, 'NP - Completeness', '<p>In this chapter, we focus on NP-Completeness, a central concept in computational complexity theory. Key topics include:</p><ol><li><strong>Definition</strong>: Understand what it means for a problem to be NP-complete, including the criteria that make a problem both in NP and as hard as any problem in NP.</li><li><strong>Polynomial-Time Reductions</strong>: Learn how to use polynomial-time reductions to prove that a problem is NP-complete.</li><li><strong>Cook-Levin Theorem</strong>: Study the foundational Cook-Levin Theorem, which proves that the Boolean satisfiability problem (SAT) is NP-complete.</li><li><strong>Common NP-Complete Problems</strong>: Explore well-known NP-complete problems, such as SAT, 3-SAT, Traveling Salesman Problem, and Knapsack Problem.</li><li><strong>Implications of NP-Completeness</strong>: Discuss the practical significance of NP-completeness, including its impact on algorithm design and the P vs NP question.</li><li><strong>Approaches to NP-Complete Problems</strong>: Examine strategies for dealing with NP-complete problems, such as approximation algorithms, heuristics, and special cases.</li></ol><p><br></p><p>This chapter equips you with a deep understanding of NP-completeness, highlighting its importance in the study of computational complexity and problem-solving.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.554', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.554');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('9d4d3014-6631-491d-9158-8a981ff52078'::uuid, '6301cef7-6c6b-4ff7-97fa-fe41f0c57c6e'::uuid, 7, ' Dynamic Programming', '<p>In this chapter, we explore Dynamic Programming (DP), a powerful method for solving complex problems by breaking them down into simpler subproblems. Key topics include:</p><ol><li><strong>Principle of Optimality</strong>: Understand the core concept where an optimal solution can be constructed efficiently from optimal solutions of its subproblems.</li><li><strong>Memoization</strong>: Learn about top-down dynamic programming using memoization to store and reuse previously computed results.</li><li><strong>Tabulation</strong>: Study bottom-up dynamic programming by filling a table to solve subproblems iteratively.</li><li><strong>Examples and Applications</strong>: Explore classic DP problems such as Fibonacci sequence, Knapsack problem, Longest Common Subsequence, and Matrix Chain Multiplication.</li><li><strong>Complexity Analysis</strong>: Analyze the time and space complexity of dynamic programming solutions to understand their efficiency.</li><li><strong>Optimizations</strong>: Discover techniques to optimize DP solutions, like space optimization and reducing problem dimensions.</li></ol><p><br></p><p>This chapter provides a comprehensive understanding of dynamic programming, equipping you with the skills to tackle a wide range of computational problems efficiently.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.560', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.560');
INSERT INTO public.chapter
(id, certificate_course_id, "no", title, description, created_by, created_at, updated_by, updated_at)
VALUES('cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, '6301cef7-6c6b-4ff7-97fa-fe41f0c57c6e'::uuid, 8, 'Linear Programming', '<p>In this chapter, we delve into Linear Programming (LP), a mathematical method for optimizing a linear objective function, subject to linear constraints. Key topics include:</p><ol><li><strong>Definition and Formulation</strong>: Understand the structure of linear programming problems, including objective functions, constraints, and feasible regions.</li><li><strong>Standard Form</strong>: Learn how to express LP problems in standard form for easier analysis and solution.</li><li><strong>Graphical Method</strong>: Explore the graphical method for solving LP problems with two variables, providing a visual understanding of feasible regions and optimal solutions.</li><li><strong>Simplex Algorithm</strong>: Study the Simplex algorithm, a widely used method for solving LP problems efficiently.</li><li><strong>Duality</strong>: Learn about the concept of duality in linear programming, including the primal-dual relationship and its implications.</li><li><strong>Applications</strong>: Examine real-world applications of linear programming in areas such as economics, engineering, logistics, and resource management.</li></ol><p><br></p><p>This chapter equips you with the foundational knowledge and techniques of linear programming, essential for optimizing complex decision-making processes.</p>', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.566', 'b029f559-52a8-4699-b595-71161498ed8c'::uuid, '2024-08-02 22:47:13.566');
-- end of chapter dsa 1

-- Chapter resource Java 1
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('642a4503-55b9-4c05-a640-266c0bc86aac'::uuid, 0, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'Introduction to Java', NULL, '<p class="ql-align-justify">Java is a class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible. It is intended to let application developers write once, and run anywhere (WORA), meaning that compiled Java code can run on all platforms that support Java without the need for recompilation. Java was first released in 1995 and is widely used for developing applications for desktop, web, and mobile devices. Java is known for its simplicity, robustness, and security features, making it a popular choice for enterprise-level applications.</p><p class="ql-align-justify"><strong>JAVA</strong>&nbsp;was developed by James Gosling at&nbsp;<strong>Sun Microsystems</strong><u>&nbsp;</u>Inc in the May&nbsp;<strong>1995</strong>&nbsp;and later acquired by Oracle Corporation. It is a simple programming language. Java makes writing, compiling, and debugging programming easy.&nbsp;It helps to create reusable code and modular programs.&nbsp;<a href="https://www.geeksforgeeks.org/java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java</a>&nbsp;is a class-based, object-oriented programming language and is designed to have as few implementation dependencies as possible. A general-purpose programming language made for developers to&nbsp;<em>write once run anywhere</em>&nbsp;that is compiled Java code can run on all platforms that support Java. Java applications are compiled to byte code that can run on any Java Virtual Machine. The syntax of Java is similar to c/c++.</p><p class="ql-align-justify"><strong>History:&nbsp;</strong>Java’s history is very interesting. It is a programming language created in 1991.<strong>&nbsp;</strong>James Gosling, Mike Sheridan, and Patrick Naughton, a team of Sun engineers known as the&nbsp;<strong>Green team&nbsp;</strong>initiated the Java language in 1991.&nbsp;<strong>Sun Microsystems</strong>&nbsp;released its first public implementation in 1996 as&nbsp;<strong>Java 1.0</strong>. It provides no-cost -run-times on popular platforms. Java1.0 compiler was re-written in Java by Arthur Van Hoff to strictly comply with its specifications. With the arrival of Java 2, new versions had multiple configurations built for different types of platforms.</p><p class="ql-align-justify">In 1997, Sun Microsystems approached the ISO standards body and later formalized Java, but it soon withdrew from the process. At one time, Sun made most of its Java implementations available without charge, despite their proprietary software status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System.</p><p class="ql-align-justify">On November 13, 2006, Sun released much of its Java virtual machine as free, open-source software. On May 8, 2007, Sun finished the process, making all of its JVM’s core code available under open-source distribution terms.</p><p class="ql-align-justify">The principles for creating&nbsp;<a href="https://www.geeksforgeeks.org/courses/free-java-course-online" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">java programming language</a>&nbsp;were simple, robust, secured, high-performance, portable, multi-threaded, interpreted, dynamic, etc. In 1995 Java was developed by&nbsp;<strong>James Gosling</strong>, who is known as the Father of Java. Currently, Java is used in mobile devices, internet programming, games, e-business, etc.</p><p>Implementation of a Java application program involves a following step. They include:</p><p>1. Creating the program</p><p>2. Compiling the program</p><p>3. Running the program</p><p><br></p><p>Remember that, before we begin creating the program, the Java Development Kit (JDK) must be properly installed on our system and also path will be set.</p><p>• Creating Program</p><p>&nbsp;&nbsp;We can create a program using Text Editor (Notepad) or IDE (NetBeans)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class Test</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public static void main(String []args)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(“My First Java Program.”);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</p><p>File -&gt; Save -&gt; d:\Test.java</p><p>&nbsp;</p><p>• Compiling the program</p><p>&nbsp;To compile the program, we must run the Java compiler (javac), with the name of the source file on “command prompt” like as follows</p><p>&nbsp;If everything is OK, the “javac” compiler creates a file called “Test.class” containing byte code of the program.</p><p>• Running the program</p><p>&nbsp;&nbsp;We need to use the Java Interpreter to run a program.</p><h3>Java programming language is named JAVA. Why?</h3><p class="ql-align-justify">After the name OAK, the team decided to give it a new name to it and the suggested words were Silk, Jolt, revolutionary, DNA, dynamic, etc. These all names were easy to spell and fun to say, but they all wanted the name to reflect the essence of technology. In accordance with James Gosling,&nbsp;<strong>Java</strong>&nbsp;the among the top names along with&nbsp;<strong>Silk</strong>, and since java was a unique name so most of them preferred it.</p><p class="ql-align-justify">Java is the name of an&nbsp;<strong>island</strong>&nbsp;in Indonesia where the first coffee(named java coffee) was produced. And this name was chosen by James Gosling while having coffee near his office. Note that Java is just a name, not an acronym.</p><h3>Java Terminology</h3><p class="ql-align-justify">Before learning Java, one must be familiar with these common terms of Java.</p><p class="ql-align-justify"><strong>1.&nbsp;Java Virtual Machine(JVM):&nbsp;</strong>&nbsp;This is generally referred to as&nbsp;<a href="https://www.geeksforgeeks.org/jvm-works-jvm-architecture/#:~:text=JVM(Java%20Virtual%20Machine)%20acts,(Write%20Once%20Run%20Anywhere)." rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><u>JVM</u></a>. There are three execution phases of a program. They are written, compile and run the program.</p><ul><li>Writing a program is done by a java programmer like you and me.</li><li>The compilation is done by the&nbsp;<strong>JAVAC</strong>&nbsp;compiler which is a primary Java compiler included in the Java development kit (JDK). It takes the Java program as input and generates bytecode as output.</li><li>In the Running<strong>&nbsp;</strong>phase of a program,<strong>&nbsp;JVM</strong>&nbsp;executes the bytecode generated by the compiler.</li></ul><p class="ql-align-justify">Now, we understood that the function of Java Virtual Machine is to execute the bytecode produced by the compiler. Every Operating System has a different JVM but the output they produce after the execution of bytecode is the same across all the operating systems. This is why Java is known as a<strong>&nbsp;platform-independent language.</strong></p><p class="ql-align-justify"><strong>2. Bytecode in&nbsp;</strong>the&nbsp;<strong>Development Process:&nbsp;</strong>As discussed, the Javac compiler of JDK compiles the java source code into bytecode so that it can be executed by JVM. It is saved as&nbsp;<strong>.class</strong>&nbsp;file by the compiler. To view the bytecode, a disassembler like&nbsp;<a href="https://www.geeksforgeeks.org/javap-tool-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><u>javap</u></a>&nbsp;can be used.</p><p class="ql-align-justify"><strong>3. Java Development Kit(JDK):&nbsp;</strong>While we were using the term JDK when we learn about bytecode and JVM. So, as the name suggests, it is a complete Java development kit that includes everything including compiler, Java Runtime Environment (JRE), java debuggers, java docs, etc. For the program to execute in java, we need to install JDK on our computer in order to create, compile and run the java program.</p><p class="ql-align-justify"><strong>4. Java Runtime Environment (JRE):&nbsp;</strong>JDK includes JRE. JRE installation on our computers allows the java program to run, however, we cannot compile it. JRE includes a browser, JVM, applet support, and plugins. For running the java program, a computer needs JRE.</p><p class="ql-align-justify"><strong>5. Garbage Collector:&nbsp;</strong>In Java, programmers can’t delete the objects. To delete or recollect that memory JVM has a program called&nbsp;<a href="https://www.geeksforgeeks.org/garbage-collection-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><u>Garbage Collector</u></a>. Garbage Collectors can recollect the objects that are not referenced. So Java makes the life of a programmer easy by handling memory management. However, programmers should be careful about their code whether they are using objects that have been used for a long time. Because Garbage cannot recover the memory of objects being referenced.</p><p class="ql-align-justify"><strong>6. ClassPath:&nbsp;</strong>The&nbsp;<a href="https://www.geeksforgeeks.org/classpath-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><u>classpath</u></a>&nbsp;is the file path where the java runtime and Java compiler look for&nbsp;<strong>.class</strong>&nbsp;files to load. By default, JDK provides many libraries. If you want to include external libraries they should be added to the classpath.</p><h3>Primary/Main Features of Java</h3><p class="ql-align-justify"><strong>1. Platform Independent:&nbsp;</strong>Compiler converts source code to bytecode and then the JVM executes the bytecode generated by the compiler. This bytecode can run on any platform be it Windows, Linux, or macOS which means if we compile a program on Windows, then we can run it on Linux and vice versa. Each operating system has a different JVM, but the output produced by all the OS is the same after the execution of the bytecode. That is why we call java a platform-independent language.</p><p class="ql-align-justify"><strong>2. Object-Oriented Programming Language:&nbsp;</strong>Organizing the program in the terms of a collection of objects is a way of object-oriented programming, each of which represents an instance of the class.</p><p class="ql-align-justify">The four main concepts of Object-Oriented programming are:</p><ul><li>Abstraction</li><li>Encapsulation</li><li>Inheritance</li><li>Polymorphism</li></ul><p class="ql-align-justify"><strong>3.</strong>&nbsp;<strong>Simple:&nbsp;</strong>Java is one of the simple languages as it does not have complex features like pointers, operator overloading, multiple inheritances, and Explicit memory allocation.&nbsp;</p><p class="ql-align-justify"><strong>4.</strong>&nbsp;<strong>Robust:&nbsp;</strong>Java language is robust which means reliable. It is developed in such a way that it puts a lot of effort into checking errors as early as possible, that is why the java compiler is able to detect even those errors that are not easy to detect by another programming language. The main features of java that make it robust are garbage collection, Exception Handling, and memory allocation.</p><p class="ql-align-justify"><strong>5.</strong>&nbsp;<strong>Secure:&nbsp;</strong>&nbsp;In java, we don’t have pointers, so we cannot access out-of-bound arrays i.e it shows&nbsp;<strong>ArrayIndexOutOfBound Exception</strong>&nbsp;if we try to do so. That’s why several security flaws like stack corruption or buffer overflow are impossible to exploit in Java. Also, java programs run in an environment that is independent of the os(operating system) environment which makes java programs more secure.</p><p class="ql-align-justify"><strong>6.</strong>&nbsp;<strong>Distributed:&nbsp;</strong>We can create distributed applications using the java programming language. Remote Method Invocation and Enterprise Java Beans are used for creating distributed applications in java. The java programs can be easily distributed on one or more systems that are connected to each other through an internet connection.</p><p class="ql-align-justify"><strong>7.</strong>&nbsp;<strong>Multithreading:&nbsp;</strong>Java supports multithreading. It is a Java feature that allows concurrent execution of two or more parts of a program for maximum utilization of the CPU.</p><p class="ql-align-justify"><strong>8.</strong>&nbsp;<strong>Portable:&nbsp;</strong>As we know, java code written on one machine can be run on another machine. The platform-independent feature of java in which its platform-independent bytecode can be taken to any platform for execution makes java portable.</p><p class="ql-align-justify"><strong>9. High Performance:</strong>&nbsp;Java architecture is defined in such a way that it reduces overhead during the runtime and at some times java uses Just In Time (JIT) compiler where the compiler compiles code on-demand basics where it only compiles those methods that are called making applications to execute faster.</p><p class="ql-align-justify"><strong>10. Dynamic flexibility:&nbsp;</strong>Java being completely object-oriented gives us the flexibility to add classes,&nbsp;new methods to existing classes, and even create new classes through sub-classes. Java even supports functions written in other languages such as C, C++ which are referred to as native methods.</p><p class="ql-align-justify"><strong>11. Sandbox Execution:</strong>&nbsp;Java programs run in a separate space that allows user to execute their applications without affecting the underlying system with help of a bytecode verifier. Bytecode verifier also provides additional security as its role is to check the code for any violation of access.</p><p class="ql-align-justify"><strong>12. Write Once Run Anywhere:</strong>&nbsp;As discussed above java application generates a ‘.class’ file that corresponds to our applications(program) but contains code in binary format. It provides ease t architecture-neutral ease as bytecode is not dependent on any machine architecture. It is the primary reason java is used in the enterprising IT industry globally worldwide.</p><p class="ql-align-justify"><strong>13. Power of compilation and interpretation:</strong>&nbsp;Most languages are designed with the purpose of either they are compiled language or they are interpreted language. But java integrates arising enormous power as Java compiler compiles the source code to bytecode and JVM&nbsp;executes this bytecode to machine OS-dependent executable code.</p><p><strong>class :</strong>&nbsp;class keyword is used to declare classes in Java</p><p><strong>public :</strong>&nbsp;It is an access specifier. Public means this function is visible to all.</p><p><strong>static :</strong>&nbsp;static is again a keyword used to make a function static. To execute a static function you do not have to create an Object of the class. The main() method here is called by JVM, without creating any object for class.</p><p><strong>void :</strong>&nbsp;It is the return type, meaning this function will not return anything.</p><p><strong>main :</strong>&nbsp;main() method is the most important method in a Java program. This is the method which is executed, hence all the logic must be inside the main() method. If a java class is not having a main() method, it causes compilation error.</p><p><strong>String[] args :</strong>&nbsp;This is used to signify that the user may opt to enter parameters to the Java Program at command line. We can use both String[] args or String args[]. Java compiler would accept both forms.</p><p><strong>System.out.println :</strong>&nbsp;This is used to print anything on the console like “printf” in C language.</p><p><br></p><p><strong style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);">Example</strong></p><pre class="ql-syntax" spellcheck="false">// Importing classes from packages
import java.io.*;

// Main class
public class GFG {

    // Main driver method
    public static void main(String[] args)
    {

        // Print statement
        System.out.println("Welcome to GeeksforGeeks");
    }
}
</pre><p><br></p><p><strong style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);">Output</strong></p><pre class="ql-syntax" spellcheck="false">Welcome to GeeksforGeeks
</pre><p><br></p><p class="ql-align-justify"><strong>Explanation:</strong></p><p class="ql-align-justify"><strong>1.&nbsp;Comments:&nbsp;</strong>Comments are used for explaining code and are used in a similar manner in Java or C or C++. Compilers ignore the comment entries and do not execute them. Comments can be of a single line or multiple lines.</p><p class="ql-align-justify"><strong>Single line Comments:</strong></p><p class="ql-align-justify"><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">// Single line comment
</pre><p class="ql-align-justify">Multi-line<strong>&nbsp;comments:</strong></p><p class="ql-align-justify"><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">/* Multi line comments*/
</pre><p class="ql-align-justify"><strong>2.&nbsp;import java.io.*:&nbsp;</strong>This means all the classes of the io package can be imported. Java io package provides a set of input and output streams for reading and writing data to files or other input or output sources.</p><p class="ql-align-justify"><strong>3.&nbsp;class:&nbsp;</strong>The class contains the data and methods to be used in the program. Methods define the behavior of the class. Class&nbsp;<strong>GFG</strong>&nbsp;has only one method Main in JAVA.</p><p class="ql-align-justify"><strong>4.&nbsp;static void main():</strong>&nbsp;<strong>static</strong>&nbsp;keyword tells us that this method is accessible without instantiating the class.&nbsp;</p><p class="ql-align-justify"><strong>5.&nbsp;void:&nbsp;</strong>keywords tell that this method will not return anything. The main<strong>()</strong>&nbsp;method is the entry point of our application.</p><p class="ql-align-justify"><strong>6.&nbsp;System.in:</strong>&nbsp;This is the&nbsp;<strong>standard input stream</strong>&nbsp;that is used to read characters from the keyboard or any other standard input device.</p><p class="ql-align-justify"><strong>7.&nbsp;System.out:&nbsp;</strong>This is the&nbsp;<strong>standard output stream</strong>&nbsp;that is used to produce the result of a program on an output device like the computer screen.</p><p class="ql-align-justify"><strong>8.&nbsp;println():&nbsp;</strong>This method in Java is also used to display text on the console. It prints the text on the console and the cursor moves to the start of the next line at the console. The next printing takes place from the next line.</p><p class="ql-align-justify">9.&nbsp;<strong>String []args:</strong>&nbsp;This is the argument passed to the main function which is an array of strings with the array name args. One can choose their own flexible name but this name is used by many developers.</p><p class="ql-align-justify"><em>Everything in java is represented in Class as an object including the main function.</em></p><h3><a href="https://www.geeksforgeeks.org/courses" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Related Courses</strong></a></h3><h3><a href="https://www.geeksforgeeks.org/courses/Java-Foundation?utm_source=article&amp;utm_medium=article&amp;utm_campaign=java-foundation-article" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Java Programming Foundation – Self Paced Course</em></a></h3><blockquote><em>What you can develop with JAVA has no limitations. JAVA programming language is a fundamental programming language that every aspiring programmer should be skilled at to have a successful career in software development. Start your journey with&nbsp;</em><a href="https://www.geeksforgeeks.org/courses/Java-Foundation?utm_source=article&amp;utm_medium=article&amp;utm_campaign=java-foundation-article" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Java Programming Foundation – Self Paced Course</em></a><em>&nbsp;and strengthen your JAVA basics concepts such as&nbsp;</em><strong><em>data types, operators, functions, loops,</em></strong><em>&nbsp;and much more.</em></blockquote><h3><a href="https://www.geeksforgeeks.org/courses/Java-Collections?utm_source=gfg-page&amp;utm_medium=gfg-page+&amp;utm_campaign=java-collections-framework-fundamentals-gfg-page" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Fundamentals of Java Collection Framework – Self Paced Course</em></a></h3><blockquote><em>It’s time to level up! Learning the Collections Framework is vital for every Java programmer as it saves a lot of time while writing code. In this Self Paced Course, learn about&nbsp;</em><a href="https://www.geeksforgeeks.org/courses/Java-Collections?utm_source=gfg-page&amp;utm_medium=gfg-page+&amp;utm_campaign=java-collections-framework-fundamentals-gfg-page" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Java Collections Framework</em></a><em>&nbsp;classes, interfaces, and methods that provide us with various&nbsp;</em><strong><em>data structures like LinkedList, ArrayList, HashMap</em></strong><em>&nbsp;etc. Advance your JAVA career today!</em></blockquote><h3><a href="https://www.geeksforgeeks.org/courses/java-backend-live?utm_source=gfg+page&amp;utm_medium=gfg+page&amp;utm_id=java+backend+development+live+course&amp;utm_term=gfg+page" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>JAVA Backend Development – Live Course</em></a></h3><blockquote><em>Learn Backend Development skills to build Java-based web applications. This Live course will introduce the learner to advanced tools such as Hibernate, RESTful APIs, and others. You will get hands-on experience with real-world applications based on JAVA and learn advanced topics like-&nbsp;</em><strong><em>Java OOPS, Streams and File Handling in Java, Threads in Java</em></strong><em>&nbsp;and much more. So, waiting is over! Join&nbsp;</em><a href="https://www.geeksforgeeks.org/courses/java-backend-live?utm_source=gfg+page&amp;utm_medium=gfg+page&amp;utm_id=java+backend+development+live+course&amp;utm_term=gfg+page" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Java Backend Development- Live Course</em></a><em>&nbsp;and become an industry-ready developer!</em></blockquote><h3>IMPORTANT POINTS OF JAVA:</h3><p>Here are some important points about Java:</p><ol><li>Java is a high-level, object-oriented programming language that was first released in 1995.</li><li>Java is platform-independent, which means that code written in Java can run on any platform that has a Java Virtual Machine (JVM) installed.</li><li>Java code is compiled into bytecode, which can then be executed by the JVM.</li><li>Java is known for its “write once, run anywhere” philosophy, which makes it a popular choice for cross-platform development.</li><li>Java provides automatic memory management through garbage collection, which makes it easier to write and maintain code.</li><li>Java has a vast standard library that provides a wide range of tools for common programming tasks.</li><li>Java is widely used in enterprise applications, web development, and Android app development.</li><li>Java is a strongly typed language, which means that every variable and expression has a specific type that must be declared before use.</li><li>Java has a robust exception-handling mechanism that makes it easier to handle errors and unexpected behavior in code.</li><li>Java supports multithreading, which makes it possible to write programs that can perform multiple tasks simultaneously.</li></ol><h3>Advantages of Java:</h3><ol><li>Platform independent: Java code can run on any platform that has a Java Virtual Machine (JVM) installed, which means that applications can be written once and run on any device.</li><li>Object-Oriented: Java is an object-oriented programming language, which means that it follows the principles of encapsulation, inheritance, and polymorphism.</li><li>Security: Java has built-in security features that make it a secure platform for developing applications, such as automatic memory management and type checking.</li><li>Large community: Java has a large and active community of developers, which means that there is a lot of support available for learning and using the language.</li><li>Enterprise-level applications: Java is widely used for developing enterprise-level applications, such as web applications, e-commerce systems, and database systems.</li></ol><h3>Disadvantages of Java:</h3><ol><li>Performance: Java can be slower compared to other programming languages, such as C++, due to its use of a virtual machine and automatic memory management.</li><li>Memory management: Java’s automatic memory management can lead to slower performance and increased memory usage, which can be a drawback for some applications.</li></ol><p><br></p><p>Want to be a master in&nbsp;<strong>Backend Development with Java</strong>&nbsp;for building robust and scalable applications? Enroll in&nbsp;<a href="https://gfgcdn.com/tu/Q8Q/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Java Backend and Development Live Course</strong></a>&nbsp;by GeeksforGeeks to get your hands dirty with Backend Programming. Master the key&nbsp;<strong>Java concepts, server-side programming, database integration</strong>, and more through hands-on experiences and&nbsp;<strong>live projects</strong>. Are you new to Backend development or want to be a Java Pro? This course equips you with all you need for building high-performance, heavy-loaded backend systems in Java. Ready to take your Java Backend skills to the next level? Enroll now and take your development career to sky highs.</p><p><br></p><p><br></p><p><br></p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6b89a873-123b-4f36-8810-d82c68d05d86'::uuid, 1, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'The Complete History of Java Programming Language', NULL, '<p class="ql-align-justify"><a href="https://www.geeksforgeeks.org/java-tutorials/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java</a>&nbsp;is an&nbsp;<a href="https://www.geeksforgeeks.org/object-oriented-programming-oops-concept-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Object-Oriented programming</a>&nbsp;language developed by&nbsp;<strong>James Gosling</strong>&nbsp;in the early 1990s. The team initiated this project to develop a language for digital devices such as set-top boxes, television, etc. Originally&nbsp;<a href="https://www.geeksforgeeks.org/c-plus-plus/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">C++</a>&nbsp;was considered to be used in the project but the idea was rejected for several reasons(For instance C++ required more memory). Gosling endeavoured to alter and expand&nbsp;<a href="https://www.geeksforgeeks.org/c-plus-plus/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">C++</a>&nbsp;however before long surrendered that for making another stage called&nbsp;<strong>Green</strong>. James Gosling and his team called their project “<strong>Greentalk</strong>” and its file extension was&nbsp;<strong>.gt</strong>&nbsp;and later became to known as “<strong>OAK</strong>”.</p><p><strong><u>Why “Oak”?</u></strong></p><p class="ql-align-justify">The name&nbsp;<strong>Oak</strong>&nbsp;was used by&nbsp;<strong>Gosling</strong>&nbsp;after an&nbsp;<strong>oak tree</strong>&nbsp;that remained outside his office. Also, Oak is an image of solidarity and picked as a national tree of numerous nations like the U.S.A., France, Germany, Romania, etc. But they had to later rename it as “<strong>JAVA</strong>” as it was already a trademark by&nbsp;<strong>Oak Technologies</strong>.&nbsp;<strong><u>“JAVA”</u></strong>&nbsp;Gosling and his team did a brainstorm session and after the session, they came up with several names such as&nbsp;<strong>JAVA, DNA, SILK, RUBY, etc.</strong>&nbsp;<strong>Java</strong>&nbsp;name was decided after much discussion since it was so unique.</p><p class="ql-align-justify">The name Java originates from a sort of&nbsp;<strong>espresso bean</strong>, Java. Gosling came up with this name while having a coffee near his office. Java was created on the principles like&nbsp;<strong>Robust, Portable, Platform Independent, High Performance, Multithread, etc.</strong>&nbsp;and was called one of the&nbsp;<strong>Ten Best Products of 1995</strong>&nbsp;by the&nbsp;<strong>TIME MAGAZINE</strong>. Currently, Java is used in&nbsp;<strong>internet programming, mobile devices, games, e-business solutions, etc.</strong>&nbsp;If you here, then it might be possible that you are interested in learning Java programming, explore&nbsp;<a href="https://www.geeksforgeeks.org/courses/free-java-course-online" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">free Java course</a>&nbsp;to get full in-depth knowledge of Java.</p><p class="ql-align-justify">The&nbsp;<a href="https://www.geeksforgeeks.org/java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java language</a>&nbsp;has experienced a few changes since&nbsp;<strong>JDK 1.0</strong>&nbsp;just as various augmentations of classes and packages to the standard library. In Addition to the language changes, considerably more sensational changes have been made to the Java Class Library throughout the years, which has developed from a couple of hundred classes in JDK 1.0 to more than three thousand in J2SE 5.<img src="https://media.geeksforgeeks.org/wp-content/uploads/20190502181004/History-of-Java.jpg"><strong><u>History of various Java versions:</u></strong></p><p>Version</p><p>Release Date</p><p>Major changes</p><p>JDK Beta</p><p>1995</p><p>&nbsp;</p><p>JDK 1.0</p><p>January 1996</p><p>The Very first version was released on January 23, 1996. The principal stable variant, JDK 1.0.2, is called Java 1.</p><p>JDK 1.1</p><p>February 1997</p><p>Was released on February 19, 1997. There were many additions in JDK 1.1 as compared to version 1.0 such as</p><ul><li>A broad retooling of the AWT occasion show</li><li>Inner classes added to the language</li><li>JavaBeans</li><li>JDBC</li><li>RMI</li></ul><p>J2SE 1.2</p><p>December 1998</p><p>“Play area” was the codename which was given to this form and was released on 8th December 1998. Its real expansion included: strictfp keyword</p><ul><li>the Swing graphical API was coordinated into the centre classes</li><li>Sun’s JVM was outfitted with a JIT compiler out of the blue</li><li>Java module</li><li>Java IDL, an IDL usage for CORBA interoperability</li><li>Collections system</li></ul><p>J2SE 1.3</p><p>May 2000</p><p>Codename- “KESTREL” Release Date- 8th May 2000 Additions:</p><ul><li>HotSpot JVM included</li><li>Java Naming and Directory Interface</li><li>JPDA</li><li>JavaSound</li><li>Synthetic proxy classes</li></ul><p>J2SE 1.4</p><p>February 2002</p><p>Codename- “Merlin” Release Date- 6th February 2002 Additions: Library improvements</p><ul><li>Regular expressions modelled after Perl regular expressions</li><li>The image I/O API for reading and writing images in formats like JPEG and PNG</li><li>Integrated XML parser and XSLT processor (JAXP) (specified in JSR 5 and JSR 63)</li><li>Preferences API (java.util.prefs)</li></ul><p>Public Support and security updates for this version ended in October 2008.</p><p>J2SE 5.0</p><p>September 2004</p><p>Codename- “Tiger” Release Date- “30th September 2004” Originally numbered as 1.5 which is still used as its internal version. Added several new language features such as:</p><ul><li>for-each loop</li><li>Generics</li><li>Autoboxing</li><li>Var-args</li></ul><p>JAVA SE 6</p><p>December 2006</p><p>Codename- “Mustang” Released Date- 11th December 2006 Packaged with a database supervisor and encourages the utilization of scripting languages with the JVM. Replaced the name J2SE with java SE and dropped the .0 from the version number. Additions:</p><ul><li>Upgrade of JAXB to version 2.0: Including integration of a StAX parser.</li><li>Support for pluggable annotations (JSR 269).</li><li>JDBC 4.0 support (JSR 221)</li></ul><p>JAVA SE 7</p><p>July 2011</p><p>Codename- “Dolphin” Release Date- 7th July 2011 Added small language changes including strings in the switch. The JVM was extended with support for dynamic languages. Additions:</p><ul><li>Compressed 64-bit pointers.</li><li>Binary Integer Literals.</li><li>Upstream updates to XML and Unicode.</li></ul><p>JAVA SE 8</p><p>March 2014</p><p>Released Date- 18th March 2014 Language level support for lambda expressions and default methods and a new date and time API inspired by Joda Time.</p><p>JAVA SE 9</p><p>September 2017</p><p>Release Date: 21st September 2017 Project Jigsaw: designing and implementing a standard, a module system for the Java SE platform, and to apply that system to the platform itself and the JDK.</p><p>JAVA SE 10</p><p>March 2018</p><p>Released Date- 20th March Addition:</p><ul><li>Additional Unicode language-tag extensions</li><li>Root certificates</li><li>Thread-local handshakes</li><li>Heap allocation on alternative memory devices</li><li>Remove the native-header generation tool – javah.</li><li>Consolidate the JDK forest into a single repository.</li></ul><p>JAVA SE 11</p><p>September 2018</p><p>Released Date- 25th September, 2018 Additions-</p><ul><li>Dynamic class-file constants</li><li>Epsilon: a no-op garbage collector</li><li>The local-variable syntax for lambda parameters</li><li>Low-overhead heap profiling</li><li>HTTP client (standard)</li><li>Transport Layer Security (TLS) 1.3</li><li>Flight recorder</li></ul><p>JAVA SE 12</p><p>March 2019</p><p>Released Date- 19th March 2019 Additions-</p><ul><li>Shenandoah: A Low-Pause-Time Garbage Collector (Experimental)</li><li>Microbenchmark Suite</li><li>Switch Expressions (Preview)</li><li>JVM Constants API</li><li>One AArch64 Port, Not Two</li><li>Default CDS Archives</li></ul><p>JAVA SE 13</p><p>September 2019</p><p>Released Date – 17th September 2019</p><p>Additions-</p><ul><li>Text Blocks (Multiline strings).</li><li>Switch Expressions.</li><li>Enhanced Thread-local handshakes.</li></ul><p>JAVA SE 14</p><p>March 2020</p><p>Released Date – 17th March 2020</p><p>Additions-</p><ul><li>Records (new class type for data modeling).</li><li>Pattern Matching for instanceof.</li><li>Helpful NullPointerExceptions.</li></ul><p>JAVA SE 15</p><p>September 2020</p><p>Released Date – 15th September 2020</p><p>Additions-</p><ul><li>Sealed Classes.</li><li>Hidden Classes.</li><li>Foreign Function and Memory API (Incubator).</li></ul><p>JAVA SE 16</p><p>March 2021</p><p>Released Date – 16th March 2021</p><p>Additions-</p><ul><li>Records (preview feature).</li><li>Pattern Matching for switch (preview feature).</li><li>Unix Domain Socket Channel (Incubator).</li></ul><p>JAVA SE 17</p><p>September 2021</p><p>Released Date – 14th September 2021</p><p>Additions-</p><ul><li>Sealed Classes (finalized).</li><li>Pattern Matching for instanceof (finalized).</li><li>Strong encapsulation of JDK internals by default.</li><li>New macOS rendering pipeline.</li></ul>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d6431780-8fff-406d-af24-65652b801e57'::uuid, 2, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'How to Download and Install Java for 64 bit machine?', NULL, '<p class="ql-align-justify">Java is one of the most popular and widely used programming languages. It is a simple, portable, platform-independent language. It has been one of the most popular programming languages for many years.</p><p>In this article, We will see How to download and install Java for Windows 64-bit. We’ll also be answering all your queries such as What is the latest version of Java and How to Install Java on Windows 7, 8, or 32-bit systems, How to change from 32-Bit Java to 64-Bit Java, etc.</p><h2>Steps to Download Java on Windows 64-Bit Machine</h2><p class="ql-align-justify">The following steps can be followed in order to download and install Java. All the steps are described below have been performed on the Windows 10 operating system, but the procedure is quite similar to other operating systems like Windows 7,8, and 11 as well.&nbsp;</p><p><strong>Step 1:</strong>&nbsp;Open&nbsp;<a href="https://www.oracle.com/java/technologies/javase-downloads.html" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">https://www.oracle.com/java/technologies/javase-downloads.html</a>&nbsp;URL in the browser and it will navigate to the official Oracle Java downloads page.&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200604234654/F10EF513-6B9A-4C6C-937C-815255B7CC82.png.jpg"></p><p><strong>Step 2:</strong>&nbsp;Now, scroll to the version of the Java which we want to download and click on&nbsp;<strong>JDK Download</strong>&nbsp;option as shown below:&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200604235435/F10EF513-6B9A-4C6C-937C-815255B7CC82.png1_.jpg"></p><p><strong>Step 3:</strong>&nbsp;Scroll down to the page and click on the&nbsp;<strong>download&nbsp;</strong>button option suitable for your computer&nbsp;<a href="https://www.geeksforgeeks.org/types-of-operating-systems/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Operating System</a>. But for a 64-bit machine, choose the software name ending with&nbsp;<strong>x64</strong>.&nbsp;&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200605000117/BC48EB5E-C1CC-4405-A042-4D630DC99E37.png.jpg"></p><p>After clicking on the download button, a popup will appear which says that we have to accept&nbsp;<strong>Oracle Technology Network License Agreement for Oracle Java SE</strong>&nbsp;in order to download this software. Therefore, click on the checkbox and then proceed to download as shown below:&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200605000553/9A075D24-88AD-4074-86D3-5DFE6CEB8587.png.jpg"></p><p><strong>Step 4:</strong>&nbsp;We will now be navigated to&nbsp;<strong>Oracle Login page</strong>. We need to login to the account. As soon we log in, our download will start instantly as shown below:&nbsp;&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200605003606/7EC5F186-04EA-4555-BD06-70722D598E6D.png.jpg"></p><h2>Steps to Install Java on Windows 64-Bit Machine</h2><p><strong>Step 1:</strong>&nbsp;After the downloading procedure is complete, we need to run the installer. Once Java installation wizard opens, click on the&nbsp;<strong>Next</strong>&nbsp;button as shown below:&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200605134233/DD375C42-1A5D-4958-A9F2-947827ACC354.png.jpg"></p><p><strong>Step 2:</strong>&nbsp;Again click on the&nbsp;<strong>Next</strong>&nbsp;button if we wish to install&nbsp;<a href="https://www.geeksforgeeks.org/download-and-install-java-development-kit-jdk-on-windows-mac-and-linux/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java development kit</a>&nbsp;in the default directory(encircled with green color), or we can change this directory by clicking on&nbsp;<strong>Change</strong>&nbsp;button.&nbsp;&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200605134732/223C3BE0-9816-4DBE-90A4-72E75400AA3C.png.jpg"></p><p><strong>Step 3:</strong>&nbsp;The installation will begin as shown below:&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200605135155/947EA669-15A7-4DE9-8682-BE357575C49B.png.jpg"></p><p><strong>Step 4:</strong>&nbsp;Now, it will ask for the installation directory for<a href="https://www.geeksforgeeks.org/jre-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">&nbsp;<strong>JRE</strong></a><strong>(Java Runtime Environment)</strong>. Again we can continue with the default directory or change it accordingly.&nbsp;</p><blockquote><em>Article:&nbsp;</em><a href="https://www.geeksforgeeks.org/setting-environment-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Download and Set up Java Runtime Environment</em></a></blockquote><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200605141500/2A7D2509-8EDB-4FD9-9E0C-C4D9BE216ED2.png"></p><p><strong>Step 5:</strong>&nbsp;The Java installation will be successfully completed as shown below:&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200605141712/E34ACD85-0A45-457C-9A26-46CE6B946C0B.png.jpg"></p><p><strong>Step 6:</strong>&nbsp;Finally, we can click on the&nbsp;<strong>Close</strong>&nbsp;button after the confirmation window appears which saying that the Java is installed.&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200605141753/0AEBB4C4-8F74-473A-B968-1D018F8A50CB.png"></p><p><strong>Step 7:&nbsp;</strong>At last, To confirm if everything is set up properly, open cmd and type<a href="https://www.geeksforgeeks.org/different-ways-to-check-java-version-in-windows/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>&nbsp;<em>java –version</em></strong></a></p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20220521183835/img.png"><em>CMD WINDOW</em></p><p>After installing Java, we can set it up using the steps mentioned in&nbsp;<a href="https://www.geeksforgeeks.org/setting-environment-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">this article</a>.&nbsp;</p><h2>Conclusion</h2><p>Java remains a cornerstone in the programming world, known for its simplicity, portability, and platform independence. Installing Java on Windows 10, 11 64-bit machine involves straightforward steps, ensuring a smooth setup process for developers. In case you have any queries, You can refer to the following FAQs regarding how to install Java in Windows.</p><h2>Download and Install Java on Windows 64 bit machine – FAQs</h2><p><br></p><h3>What is the latest Java version for Windows 10?</h3><ul><li><em>Visit the official Oracle Java downloads page.</em></li><li><em>Scroll to the latest version available for download.</em></li><li><em>Click on the JDK Download option.</em></li><li><em>Choose the version suitable for Windows 10 64-bit.</em></li></ul><p><em><span class="ql-cursor">﻿</span></em></p><h3>How to install Java’s latest version in Windows 10?</h3><ul><li><em>Download the latest Java version from the official Oracle Java downloads page.</em></li><li><em>Run the installer once the download is complete.</em></li><li><em>Follow the installation wizard prompts, clicking “Next” as required.</em></li><li><em>Choose the installation directory and complete the installation process.</em></li></ul><p><br></p><h3>How to download Java on Windows 10 64 bit?</h3><ul><li><em>Open the official Oracle Java downloads page.</em></li><li><em>Select the appropriate JDK version for Windows 64-bit.</em></li><li><em>Click on the download button and accept the license agreement.</em></li><li><em>Login to your Oracle account if prompted and proceed with the download.</em></li></ul><p><br></p><h3>How to install Java on Windows 7 8 64-bit 32-bit?</h3><ul><li><em>Download the appropriate JDK version for your Windows version (32-bit or 64-bit).</em></li><li><em>Run the installer and follow the installation wizard instructions.</em></li><li><em>Choose the installation directory and complete the installation process.</em></li></ul><p><br></p><h3>How to change from 32-bit Java to 64-bit Java?</h3><ul><li><em>Uninstall the existing 32-bit Java installation from your system.</em></li><li><em>Download and install the 64-bit Java version from the official Oracle Java downloads page.</em></li><li><em>Ensure that any environment variables or settings pointing to the Java installation are updated to reflect the new 64-bit installation.</em></li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0fd85a95-9d26-4155-a9a2-f8205de133b7'::uuid, 3, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'Setting up the environment in Java', NULL, '<p>Java is a general-purpose computer programming language that is concurrent, class-based, object-oriented, etc.&nbsp;Java applications are typically compiled to&nbsp;<a href="https://www.geeksforgeeks.org/difference-between-byte-code-and-machine-code/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">bytecode</a>&nbsp;that can run on any Java virtual machine (JVM) regardless of computer architecture. The latest version is&nbsp;<strong>Java 22</strong>.&nbsp;Below are the environment settings for both Linux and Windows.&nbsp;JVM, JRE, and JDK three are all platform-dependent because the configuration of each Operating System is different. But, Java is platform-independent.&nbsp;Few things must be clear before setting up the environment&nbsp;which can better be perceived from the below image provided as follows:</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20210218150010/JDK.png"></p><ul><li><strong>JDK</strong>(Java Development Kit): JDK is intended for software developers and includes development tools such as the Java compiler, Javadoc, Jar, and a debugger.</li><li><strong>JRE</strong>(Java Runtime Environment): JRE contains the parts of the Java libraries required to run Java programs and is intended for end-users. JRE can be viewed as a subset of JDK.</li><li><strong>JVM:</strong>&nbsp;JVM (Java Virtual Machine) is an abstract machine. It is a specification that provides a runtime environment in which java bytecode can be executed. JVMs are available for many hardware and software platforms.</li></ul><p>Now let us discuss the steps for setting up a Java environment with visual aids. Let’s use the Windows operating system to illustrate visual aids.</p><p><strong>Steps:&nbsp;</strong>Here we will be proposing steps for three different operating systems as listed:</p><ol><li>Windows operating system</li><li>Linux operating system</li><li>macOS operating system</li></ol><h3>A. Windows operating systems</h3><p>The steps for setting the environment in the Windows&nbsp;<strong><u>operating</u></strong>&nbsp;system are as follows:&nbsp;</p><p><strong>Step 1:&nbsp;</strong>Java8 JDK is available at&nbsp;<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Download Java 8</a>.&nbsp;Click the first link for Windows(32-bit) and the last link for Windows(64-bit) as highlighted below.&nbsp;</p><p>&nbsp;</p><p><span style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230305130711/Jdk8.png"></span><strong>Step 2:&nbsp;</strong>Now you will see a download prompt just accept the term and conditions and click on the download button</p><p><span style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230305131630/Download-button.jpg"></span><strong>Step 3</strong>: If you have an oracle account then sign in or if don’t then create one and sign in</p><p><span style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230305134546/account.jpg"></span><strong>Step 4:&nbsp;</strong>Then your download will start automatically after signing in if don’t then click on the previous link again</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230305135814/save.jpg"></p><p><strong>Step 5:</strong>&nbsp;After downloading, run the jdk-8u Application(<em>.exe</em>&nbsp;file) and follow the instructions to install Java on your machine. Once you&nbsp;<strong><u>install</u>&nbsp;</strong>Java on your device, you have to set up the environment variable.</p><p><strong>Step 6:</strong>&nbsp;Go to&nbsp;<strong>Control Panel -&gt; System and Security -&gt; System.</strong>&nbsp;Under the Advanced System Setting option click on&nbsp;<strong>Environment Variables</strong>&nbsp;as highlighted below.&nbsp;</p><p>&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/Capture10.png"></p><p><strong>Step 7:</strong>&nbsp;Now, you have to alter the “Path” variable under System variables so that it also contains the path to the Java environment. Select the “Path” variable and click on the Edit button as highlighted below.&nbsp;</p><p>&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/cdn-uploads/Capture-1.png"></p><p><strong>Step 8:</strong>&nbsp;You will see a list of different paths, click on the New button, and then add the path where java is installed. By default, java is installed in “C:\Program Files\Java\jdk\bin” folder OR “C:\Program Files(x86)\Java\jdk\bin”. In case, you have installed java at any other location, then add that path.&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/cdn-uploads/Capture-2.png"></p><p><strong>Step 9:&nbsp;</strong>Click on OK, Save the settings, and you are done !! Now to check whether the installation is done correctly, open the command prompt and type&nbsp;<em>javac -version</em>. You will see that java is running on your machine.</p><blockquote><strong><em>Note:</em></strong><em>&nbsp;To make sure whether the compiler is set up, type&nbsp;javac&nbsp;in the command prompt. You will see a list related to javac.</em></blockquote><h3>B. Linux Operating System</h3><p>In Linux, there are several ways to install java. But we will refer to the simplest and easy way to install java using a terminal. For Linux, we will install OpenJDK. OpenJDK is a free and open-source implementation of the Java programming language. Steps for setting the environment in the Linux operating system are as follows:&nbsp;</p><p><strong>Step 1:</strong>&nbsp;Go to&nbsp;<strong>Application -&gt; Accessories -&gt; Terminal</strong>.</p><p><strong>Step 2:</strong>&nbsp;Type the command as below as follows:</p><pre class="ql-syntax" spellcheck="false">sudo apt-get install openjdk-8-jdk
</pre><p><strong>Step 3:</strong>&nbsp;For the “JAVA_HOME” (Environment Variable) type the command as shown below, in “Terminal” using your installation path…(Note: the default path is as shown, but if you have to install OpenJDK at another location then set that path.)&nbsp;</p><pre class="ql-syntax" spellcheck="false">export JAVA_HOME = /usr/lib/jvm/java-8-openjdk
</pre><p><strong>Step 4:</strong>&nbsp;For “PATH” (Environment Value) type command as shown below, in “Terminal” using your installation path…Note: the default path is as shown, but if you have to install OpenJDK at another location then set that path.)&nbsp;</p><pre class="ql-syntax" spellcheck="false">export PATH = $PATH:/usr/lib/jvm/java-8-openjdk/bin
</pre><p>Note: We are done setting up the environment in Java for Linux OS.</p><blockquote><strong><em>Note:&nbsp;</em></strong><em>Now to check whether the installation is done correctly, type&nbsp;java -version&nbsp;in the Terminal. You will see that java is running on your machine.</em></blockquote><ul><li><strong><em>Notepad/gedit</em></strong><em>&nbsp;: They are simple&nbsp;</em><strong><em><u>text-editors</u></em></strong><em>&nbsp;for writing java programs. Notepad is available on Windows and gedit is available on Linux.</em></li><li><strong><em>Eclipse IDE</em></strong><em>&nbsp;: It is the most widely used IDE(Integrated Development Environment) for developing software in java. You can&nbsp;</em><a href="https://www.eclipse.org/downloads/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>download Eclipse</em></a><em>.</em></li></ul><h3>C. MacOS Operating System</h3><p><strong>Step 1:</strong>&nbsp;Open the terminal from the application folder or simply press the “command” and “shift” key together and write initials of the terminal and press enter.&nbsp;</p><blockquote><em>It will be&nbsp;</em><strong><em><u>good</u>&nbsp;</em></strong><em>to have package manager such as&nbsp;</em><a href="https://brew.sh/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong><em><u>homebrew</u></em></strong></a><strong><em><u>&nbsp;</u></em></strong><em>installed in your machine as we can operate to install any software from here itself simply by using terminal commands.</em></blockquote><p><strong>Step 2:</strong>&nbsp;Now in order to configure first write the command ‘java –version ‘ where the message below it will pop that there is no&nbsp;&nbsp;</p><pre class="ql-syntax" spellcheck="false">java --version
javac --version
</pre><blockquote><strong><em>Note:</em></strong><em>&nbsp;If it was set up then you would have been getting the version displayed on the screen as it is shown below where in that machine it was already set up. So remember to cross-check in your machine once you have successfully&nbsp;</em><strong><em><u>set it up</u></em></strong><em>&nbsp;in yours.</em></blockquote><blockquote><em><img src="https://media.geeksforgeeks.org/wp-content/uploads/20210916092210/Screenshot20210916at91714AM.png"></em></blockquote><p><strong>Step 2:</strong>&nbsp;Once we are done with installing JDK now let us move on setting up the&nbsp;<strong><u>java_home</u></strong>&nbsp;environment variable for that you will have to look into something called s ‘bash_profie’ using the below command</p><pre class="ql-syntax" spellcheck="false">ls -al
</pre><p>You will notice that in your terminal there will be no bash_profile set but it is shown below so here in this machine it is already set up. In order to set it up if not there we have to create it which lets us prior seek into java home variables whether it is set up or not.&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20210916094848/Screenshot20210916at94827AM.png"></p><p><strong>Step 3:</strong>&nbsp;Setting up the home java variable. Use the below command to check or setup if not installed as follows on the terminal:</p><pre class="ql-syntax" spellcheck="false">echo $JAVA_HOME
</pre><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20210916095602/Screenshot20210916at95528AM.png"></p><p>If it is showing blank then the java home variable is not set up as perceived from the above image.</p><p><strong>Step 4:</strong>&nbsp;Installing bash_profile&nbsp;</p><p>Make sure to go to the root folder in the terminal and write the command ‘touch ./bash_profile ‘</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20210916100150/Screenshot20210916at100134AM.png"></p><p>Now you will see that bash-profile s created which is as shown in the step2 in your machine which hone can verify by writing command as follows:</p><pre class="ql-syntax" spellcheck="false">ls -al
</pre><p><strong>Step 5:</strong>&nbsp;Edit the .bash_profile created for java, you just have to write the command marked in below media and provided below as follows:</p><pre class="ql-syntax" spellcheck="false">export JAVA_HOME=$(/usr/libexec/java_home)
// No need to remember this command
</pre><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20210916101632/Screenshot20210916at101617AM.png"></p><p>Save this file and relaunch the terminal by closing it.&nbsp;</p><p><strong>&nbsp;Step 5:</strong>&nbsp;Verifying whether it is installed by entering the following two commands&nbsp;</p><pre class="ql-syntax" spellcheck="false">source .bash_profile
echo $JAVA_HOME
</pre><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20210916102219/Screenshot20210916at102149AM.png"></p><p>From the above media, we can see the java variable is all set to go as earlier there was a blank therein the above media.</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('dca48faa-f809-4133-8046-8d5fb7c0985e'::uuid, 4, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'JDK in Java', NULL, '<p class="ql-align-justify">The Java Development Kit (JDK) is a cross-platformed software development environment that offers a collection of tools and libraries necessary for developing Java-based software applications and applets. It is a core package used in Java, along with the&nbsp;<a href="https://www.geeksforgeeks.org/jvm-works-jvm-architecture/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>JVM (Java Virtual Machine)</strong></a>&nbsp;and the JRE (Java Runtime Environment).&nbsp;</p><p class="ql-align-justify">Beginners often get confused with JRE and JDK, if you are only interested in running Java programs on your machine then you can easily do it using Java Runtime Environment. However, if you would like to develop a Java-based software application then along with JRE you may need some additional necessary tools, which is called JDK.</p><p class="ql-align-center"><strong>JDK=JRE+Development Tools</strong></p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20201023214841/gfgjdk-660x423.jpg"><em>JAVA Development Kit (JDK)</em></p><h4>&nbsp;</h4><h4>The Java Development Kit&nbsp;is an implementation of&nbsp;one of the Java Platform:</h4><ul><li><a href="https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Standard Edition</a>&nbsp;(Java SE),</li><li><a href="https://en.wikipedia.org/wiki/Jakarta_EE" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java Enterprise Edition (Java EE)</a>,</li><li><a href="https://en.wikipedia.org/wiki/Java_Platform,_Micro_Edition" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Micro Edition (Java ME),</a></li></ul><h3>Contents of JDK</h3><p class="ql-align-justify">The JDK has a private Java Virtual Machine (JVM) and a few other resources necessary for the development of a Java Application.&nbsp;</p><p class="ql-align-justify"><strong>JDK contains:</strong></p><ul><li>Java Runtime Environment (JRE),</li><li>An interpreter/loader (Java),</li><li>A compiler (javac),</li><li>An archiver (jar) and many more.</li></ul><p class="ql-align-justify">The&nbsp;Java Runtime Environment in JDK is usually called Private Runtime because it is separated from the regular JRE and has extra content. The Private Runtime in JDK contains a JVM and all the class libraries present in the production environment, as well as additional libraries useful to developers, e.g, internationalization libraries and the IDL libraries.</p><h3><strong>Most Popular JDKs:</strong></h3><ul><li><strong>Oracle JDK:</strong>&nbsp;the most popular JDK and the main distributor of Java11,</li><li><strong>OpenJDK:</strong>&nbsp;Ready for use: JDK 15, JDK 14, and JMC,</li><li><strong>Azul Systems Zing:</strong>&nbsp;efficient and low latency JDK for Linux os,</li><li><strong>Azul Systems:</strong>&nbsp;based Zulu brand for Linux, Windows, Mac OS X,</li><li><strong>IBM J9 JDK:</strong>&nbsp;for AIX, Linux, Windows, and many other OS,</li><li><strong>Amazon Corretto:</strong>&nbsp;the newest option with the no-cost build of OpenJDK and long-term support.</li></ul><h3>Set-Up:</h3><p class="ql-align-justify">Setting up JDK in your development environment is super easy, just follow the below simple steps.&nbsp;</p><p class="ql-align-justify"><strong>Installation of JDK</strong></p><ul><li>Go to this Oracle’s official Download Page through this&nbsp;<a href="https://www.oracle.com/in/java/technologies/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">link</a></li><li>Select the latest JDK version and click Download and add it to your classpath.</li><li>Just check the JDK software is installed or not on your computer at the correct location, for example, at C:\Program Files\Java\jdk11.0.9.</li></ul><p class="ql-align-justify"><strong>Set JAVA_HOME for Windows:</strong></p><ul><li>Right-click My Computer and select Properties.</li><li>Go to the Advanced tab and select Environment Variables, and then edit JAVA_HOME to point to the exact location where your JDK software is stored, for example, C:\Program Files\Java\jdk11.0.9 is the default location in windows.</li></ul><p class="ql-align-justify">Java maintains backward compatibility, so don’t worry just download the latest release and you will get all the old and many new features. After Installing the JDK and JRE adds the java command to your command line. You can verify this through the command prompt by the&nbsp;<strong>java -version</strong>&nbsp;command. In some cases, you need to restart your system after installing the JDK.</p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20201231095834/Screenshot10171.png"><em>JDK Version</em></p><p class="ql-align-center"><br></p><h3>Compile and Run Java Code using JDK:</h3><p class="ql-align-justify">You can use the JDK compiler to convert your Java text file into an executable program. Your Java text segment is converted into&nbsp;<strong>bytecode</strong>&nbsp;after compilation which carries the&nbsp;<strong>.class</strong>&nbsp;extension.</p><p class="ql-align-justify">First, create a Java text file and save it using a name. Here we are saving the file as Hello.java.</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">class Hello{
    public static void main (String[] args) {
        System.out.println("Hello Geek!");
    }
}
</pre><p class="ql-align-justify"><br></p><p class="ql-align-justify">After that just simply use the<strong>&nbsp;javac</strong>&nbsp;command, which is used for the compilation purpose in Java. Please don’t forget to provide the full path of your java text file to the command line else you will get an error as “The system cannot find the path specified”,&nbsp;</p><p class="ql-align-justify">Your command should be similar to the given below example where Hello is the file name and the full path to the file is specified before the file name. The path and javac.exe should be inside the quotes.</p><blockquote class="ql-align-justify"><em>“C:\Program Files\Java\jdk-11.0.9\bin\javac.exe” Hello.java</em></blockquote><p class="ql-align-justify">You can notice now that the&nbsp;<em>Hello.class</em>&nbsp;file is being created in the same directory as Hello.java. Now you can run your code by simply using the<strong>&nbsp;java Hello&nbsp;</strong>command, which will give you the desired result according to your code. Please remember that you don’t have to include the .class to run your code.</p><blockquote class="ql-align-justify"><em>C:\Users\Pinaki\Documents&gt;java Hello</em></blockquote><blockquote class="ql-align-justify"><em>(Output:) Hello Geek!</em></blockquote><h3>The Jar component:</h3><p class="ql-align-justify">JDK contains many useful tools and among them, the most popular after javac is the jar tool. The jar file is nothing but a full pack of Java classes. After creating the .class files, you can put them together in a .jar, which compresses and structures them in a predictable fashion. Now, let’s convert our Hello.class to a jar file.</p><p class="ql-align-justify">Before proceeding, please note that you should be in the same directory where the Hello.java file was saved. Now type the command given below in the command line.</p><p class="ql-align-justify"><strong>Creating a .jar file</strong></p><blockquote class="ql-align-justify"><em>C:\Users\Pinaki\Documents&gt;”c:\Program Files\Java\jdk-11.0.9\bin\jar.exe” –create –file Hello.jar Hello.class</em></blockquote><p class="ql-align-justify">Now you can notice that Hello.jar file had been created in the same directory using Hello.class file and jar.exe. You can use the jar file by adding it to your classpath and executing the program inside it. Here the -cp stands for classpath which helps to add the jar to the same classpath.</p><p class="ql-align-justify"><strong>Executing the .jar file</strong></p><blockquote class="ql-align-justify"><em>java -cp hello_world.jar hello_world</em></blockquote><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5b48b90a-d555-46f4-bceb-6f23abb3bb79'::uuid, 5, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'How JVM Works – JVM Architecture?', NULL, '<p class="ql-align-justify">JVM(Java Virtual Machine) acts as a run-time engine to run Java applications. JVM is the one that actually calls the&nbsp;<strong>main</strong>&nbsp;method present in a Java code. JVM is a part of JRE(Java Runtime Environment).</p><p class="ql-align-justify">Java applications are called WORA (Write Once Run Anywhere). This means a programmer can develop Java code on one system and can expect it to run on any other Java-enabled system without any adjustment. This is all possible because of JVM.</p><p class="ql-align-justify">When we compile a&nbsp;<em>.java</em>&nbsp;file,&nbsp;<em>.class</em>&nbsp;files(contains byte-code) with the same class names present in&nbsp;<em>.java</em>&nbsp;file are generated by the Java compiler. This&nbsp;<em>.class</em>&nbsp;file goes into various steps when we run it. These steps together describe the whole JVM.&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/jvm-3.jpg"></p><p class="ql-align-justify">&nbsp;</p><p class="ql-align-justify"><strong>Class Loader Subsystem</strong></p><p class="ql-align-justify">It is mainly responsible for three activities.&nbsp;</p><ul><li>Loading</li><li>Linking</li><li>Initialization</li></ul><p class="ql-align-justify"><strong>Loading:</strong>&nbsp;The Class loader reads the “.<em>class”</em>&nbsp;file, generate the corresponding binary data and save it in the method area. For each “<em>.class”&nbsp;</em>file, JVM stores the following information in the method area.&nbsp;</p><p class="ql-align-justify">&nbsp;</p><ul><li>The fully qualified name of the loaded class and its immediate parent class.</li><li>Whether the “<em>.class”</em>&nbsp;file is related to Class or Interface or Enum.</li><li>Modifier, Variables and Method information etc.</li></ul><p class="ql-align-justify">After loading the “<em>.class”</em>&nbsp;file, JVM creates an object of type Class to represent this file in the heap memory. Please note that this object is of type Class predefined in&nbsp;<em>java.lang</em>&nbsp;package. These Class object can be used by the programmer for getting class level information like the name of the class, parent name, methods and variable information etc. To get this object reference we can use&nbsp;<em>getClass()</em>&nbsp;method of&nbsp;<a href="https://www.geeksforgeeks.org/object-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Object</a>&nbsp;class.</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// A Java program to demonstrate working</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// of a Class type object created by JVM</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// to represent .class file in memory.</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.lang.reflect.Field;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.lang.reflect.Method;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java code to demonstrate use</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// of Class object created by JVM</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Test {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Student s1 = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Student();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Getting hold of Class</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// object created by JVM.</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Class c1 = s1.getClass();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Printing type of object using c1.</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(c1.getName());</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// getting all methods in an array</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Method m[] = c1.getDeclaredMethods();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(Method method : m)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(method.getName());</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// getting all fields in an array</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Field f[] = c1.getDeclaredFields();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(Field field : f)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(field.getName());</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// A sample class whose information</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// is fetched above using its Class object.</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Student {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>private</strong></code> <code style="color: black; background-color: initial;">String name;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>private</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">roll_No;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: black; background-color: initial;">String getName() { </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>return</strong></code> <code style="color: black; background-color: initial;">name; }</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">setName(String name) { </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>this</strong></code><code style="color: black; background-color: initial;">.name = name; }</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">getRoll_no() { </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>return</strong></code> <code style="color: black; background-color: initial;">roll_No; }</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">setRoll_no(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">roll_no)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>this</strong></code><code style="background-color: initial; color: black;">.roll_No = roll_no;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Student
getName
setName
getRoll_no
setRoll_no
name
roll_No
</pre><p class="ql-align-justify"><strong>Note:</strong>&nbsp;For every loaded “<em>.class”</em>&nbsp;file, only&nbsp;<strong>one</strong>&nbsp;object of the class is created.&nbsp;</p><p class="ql-align-justify">&nbsp;</p><pre class="ql-syntax" spellcheck="false">Student s2 = new Student();
// c2 will point to same object where
// c1 is pointing
Class c2 = s2.getClass();
System.out.println(c1==c2); // true
</pre><p class="ql-align-justify"><strong>Linking:</strong>&nbsp;Performs verification, preparation, and (optionally) resolution.&nbsp;</p><p class="ql-align-justify">&nbsp;</p><ul><li><em>Verification</em>: It ensures the correctness of the&nbsp;<em>.class</em>&nbsp;file i.e. it checks whether this file is properly formatted and generated by a valid compiler or not. If verification fails, we get run-time exception&nbsp;<em>java.lang.VerifyError</em>. This activity is done by the component ByteCodeVerifier. Once this activity is completed then the class file is ready for compilation.</li><li><em>Preparation</em>: JVM allocates memory for class static variables and initializing the memory to default values.&nbsp;</li><li><em>Resolution</em>: It is the process of replacing symbolic references from the type with direct references. It is done by searching into the method area to locate the referenced entity.</li></ul><p class="ql-align-justify"><strong>Initialization:</strong>&nbsp;In this phase, all static variables are assigned with their values defined in the code and static block(if any). This is executed from top to bottom in a class and from parent to child in the class hierarchy.&nbsp;</p><p class="ql-align-justify">In general, there are three class loaders :&nbsp;</p><p class="ql-align-justify">&nbsp;</p><ul><li><em>Bootstrap class loader</em>: Every JVM implementation must have a bootstrap class loader, capable of loading trusted classes. It loads core java API classes present in the “<em>JAVA_HOME/jre/lib”</em>&nbsp;directory. This path is popularly known as the bootstrap path. It is implemented in native languages like C, C++.</li><li><em>Extension class loader</em>: It is a child of the bootstrap class loader. It loads the classes present in the extensions directories “<em>JAVA_HOME/jre/lib/ext”</em>(Extension path) or any other directory specified by the java.ext.dirs system property. It is implemented in java by the&nbsp;<em>sun.misc.Launcher$ExtClassLoader</em>&nbsp;class.</li><li><em>System/Application class loader</em>: It is a child of the extension class loader. It is responsible to load classes from the application classpath. It internally uses Environment Variable which mapped to java.class.path. It is also implemented in Java by the&nbsp;<em>sun.misc.Launcher$AppClassLoader</em>&nbsp;class.</li><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java code to demonstrate Class Loader subsystem</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Test {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// String class is loaded by bootstrap loader, and</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// bootstrap loader is not Java object, hence null</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(String.</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>class</strong></code><code style="background-color: initial; color: black;">.getClassLoader());</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Test class is loaded by Application loader</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(Test.</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>class</strong></code><code style="background-color: initial; color: black;">.getClassLoader());</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">null
jdk.internal.loader.ClassLoaders$AppClassLoader@8bcc55f
</pre><p class="ql-align-justify"><strong>Note:&nbsp;</strong>JVM follows the Delegation-Hierarchy principle to load classes. System class loader delegate load request to extension class loader and extension class loader delegate request to the bootstrap class loader. If a class found in the boot-strap path, the class is loaded otherwise request again transfers to the extension class loader and then to the system class loader. At last, if the system class loader fails to load class, then we get run-time exception&nbsp;<em>java.lang.ClassNotFoundException</em>.&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/jvmclassloader.jpg"></p><p class="ql-align-justify"><strong>JVM Memory</strong>&nbsp;</p><ol><li><strong>Method area:</strong>&nbsp;In the method area, all class level information like class name, immediate parent class name, methods and variables information etc. are stored, including static variables. There is only one method area per JVM, and it is a shared resource.&nbsp;</li><li><strong>Heap area:</strong>&nbsp;Information of all objects is stored in the heap area. There is also one Heap Area per JVM. It is also a shared resource.</li><li><strong>Stack area:</strong>&nbsp;For every thread, JVM creates one run-time stack which is stored here. Every block of this stack is called activation record/stack frame which stores methods calls. All local variables of that method are stored in their corresponding frame. After a thread terminates, its run-time stack will be destroyed by JVM. It is not a shared resource.</li><li><strong>PC Registers:</strong>&nbsp;Store address of current execution instruction of a thread. Obviously, each thread has separate PC Registers.</li><li><strong>Native method stacks:</strong>&nbsp;For every thread, a separate native stack is created. It stores native method information.&nbsp;</li></ol><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/jvm-memory-2.jpg"></p><p class="ql-align-justify"><strong>Execution Engine</strong>&nbsp;</p><p class="ql-align-justify">Execution engine executes the “<em>.class”</em>&nbsp;(bytecode). It reads the byte-code line by line, uses data and information present in various memory area and executes instructions. It can be classified into three parts:</p><ul><li><em>Interpreter</em>: It interprets the bytecode line by line and then executes. The disadvantage here is that when one method is called multiple times, every time interpretation is required.</li><li><em>Just-In-Time Compiler(JIT)</em>&nbsp;: It is used to increase the efficiency of an interpreter. It compiles the entire bytecode and changes it to native code so whenever the interpreter sees repeated method calls, JIT provides direct native code for that part so re-interpretation is not required, thus efficiency is improved.</li><li><em>Garbage Collector</em>: It destroys un-referenced objects. For more on Garbage Collector, refer&nbsp;<a href="https://www.geeksforgeeks.org/garbage-collection-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Garbage Collector</a>.</li></ul><p class="ql-align-justify"><strong>Java Native Interface (JNI) :&nbsp;</strong></p><p class="ql-align-justify">It is an interface that interacts with the Native Method Libraries and provides the native libraries(C, C++) required for the execution. It enables JVM to call C/C++ libraries and to be called by C/C++ libraries which may be specific to hardware.</p><p class="ql-align-justify"><strong>Native Method Libraries :&nbsp;</strong></p><p class="ql-align-justify">It is a collection of the Native Libraries(C, C++) which are required by the Execution Engine.</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('94b4c1d4-cbd8-4e08-81dc-314a83cbb76d'::uuid, 6, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'Differences between JDK, JRE and JVM', NULL, '<p><strong>Java Development Kit (JDK</strong>) is a software development environment used for developing Java applications and applets. It includes the Java Runtime Environment (JRE), an interpreter/loader (Java), a compiler (javac), an archiver (jar), a documentation generator (Javadoc), and other tools needed in Java development.&nbsp;</p><p>Now we need an environment to make a run of our program. Henceforth,<strong>&nbsp;JRE</strong>&nbsp;stands for&nbsp;<strong>“Java Runtime Environment”</strong>&nbsp;and may also be written as&nbsp;<strong>“Java RTE.”</strong>&nbsp;The Java Runtime Environment provides the minimum requirements for executing a Java application; it consists of the&nbsp;<em>Java Virtual Machine (JVM), core classes</em>, and&nbsp;<em>supporting files</em>.&nbsp;</p><p>Now let us discuss&nbsp;<strong>JVM</strong>, which stands out for java virtual machines. It is as follows:</p><ul><li>A&nbsp;<strong>specification</strong>&nbsp;where the working of Java Virtual Machine is specified. But implementation provider is independent to choose the algorithm. Its implementation has been provided by Sun and other companies.</li><li>An&nbsp;<strong>implementation</strong>&nbsp;is a computer program that meets the requirements of the JVM specification.</li><li><strong>Runtime Instance</strong>&nbsp;Whenever you write a java command on the command prompt to run the java class, an instance of JVM is created.</li></ul><p>Before proceeding to the differences between JDK, JRE, and JVM, let us discuss them in brief first and interrelate them with the image below proposed.</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20210218150010/JDK.png"></p><p>Don’t get confused as we are going to discuss all of them one by one.</p><p><strong>1. JDK</strong>&nbsp;(Java Development Kit) is a Kit that provides the environment to&nbsp;<strong>develop and execute(run)</strong>&nbsp;the Java program. JDK is a kit(or package) that includes two things</p><ul><li>Development Tools(to provide an environment to develop your java programs)</li><li>JRE (to execute your java program).</li></ul><p><strong>2. JRE</strong>&nbsp;(Java Runtime Environment) is an installation package that provides an environment to&nbsp;<strong>only run(not develop)</strong>&nbsp;the java program(or application)onto your machine. JRE is only used by those who only want to run Java programs that are end-users of your system.</p><p><strong>3.&nbsp;</strong><a href="https://www.geeksforgeeks.org/jvm-works-jvm-architecture/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>JVM</strong>&nbsp;(<strong>Java Virtual Machine)</strong></a><strong>&nbsp;</strong>is a very important part of both JDK and JRE because it is contained or inbuilt in both. Whatever Java program you run using JRE or JDK goes into JVM and JVM is responsible for executing the java program line by line, hence it is also known as an&nbsp;<a href="https://www.geeksforgeeks.org/compiler-vs-interpreter-2/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>i<em>nterpreter</em></strong></a><strong>.</strong></p><p>Now let us discuss the components of JRE in order to understand its importance of it and perceive how it actually works. For this let us discuss components.</p><p>The components of JRE are as follows:</p><ol><li><strong>Deployment technologies</strong>, including deployment, Java Web Start, and Java Plug-in.</li><li><strong>User interface toolkits</strong>, including&nbsp;<em>Abstract Window Toolkit (AWT), Swing, Java 2D, Accessibility, Image I/O, Print Service, Sound, drag</em>,<em>&nbsp;and drop (DnD)</em>, and&nbsp;<em>input methods</em>.</li><li><strong>Integration libraries</strong>, including&nbsp;<em>Interface Definition Language (IDL), Java Database Connectivity (JDBC), Java Naming and Directory Interface (JNDI), Remote Method Invocation (RMI), Remote Method Invocation Over Internet Inter-Orb Protocol (RMI-IIOP)</em>, and&nbsp;<em>scripting</em>.</li><li><strong>Other base libraries</strong>, including&nbsp;<em>international support, input/output (I/O), extension mechanism, Beans, Java Management Extensions (JMX), Java Native Interface (JNI), Math, Networking, Override Mechanism, Security, Serialization</em>, and&nbsp;<em>Java for XML Processing (XML JAXP)</em>.</li><li><strong>Lang and util base libraries</strong>, including&nbsp;<em>lang and util, management, versioning, zip, instrument, reflection, Collections, Concurrency Utilities, Java Archive (JAR), Logging, Preferences API, Ref Objects</em>, and&nbsp;<em>Regular Expressions</em>.</li><li><strong>Java Virtual Machine (JVM)</strong>, including&nbsp;<em>Java HotSpot Client</em>&nbsp;and&nbsp;<em>Server Virtual Machines</em>.</li></ol><p>After having an adequate understanding of the components, now let us discuss the working of JDK. In order to understand how JDK works, let us consider an illustration below as follows:</p><p><strong>Illustration:</strong></p><blockquote><em>Consider a java source file saved as ‘Example.java’. The file is compiled into a set of Byte Code that is stored in a “.class” file. Here it will be “Example.class“.&nbsp;</em></blockquote><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/JRE_JDK_JVM.jpg"></p><blockquote><strong><em>Note</em></strong><em>: From above, media operation computing during the compile time can be interpreted.</em></blockquote><blockquote><em>The following actions occur at runtime as listed below:</em></blockquote><ul><li><em>Class Loader</em></li><li><em>Byte Code Verifier</em></li><li><em>Interpreter</em></li><li class="ql-indent-1"><em>Execute the Byte Code</em></li><li class="ql-indent-1"><em>Make appropriate calls to the underlying hardware</em></li></ul><p><strong>Now let us discuss in brief how JVM works out. It is as follows:</strong></p><p>JVM becomes an instance of JRE at the runtime of a Java program. It is widely known as a runtime interpreter.JVM largely helps in the abstraction of inner implementation from the programmers who make use of libraries for their programs from JDK.&nbsp;</p><p class="ql-align-justify"><strong><em>It is mainly responsible for three activities.&nbsp;</em></strong></p><ul><li class="ql-align-justify">Loading</li><li class="ql-align-justify">Linking</li><li class="ql-align-justify">Initialization</li></ul><p class="ql-align-justify"><strong>Similarly, now let us discuss the working of JRE which is as follows:</strong></p><ul><li class="ql-align-justify">JVM(Java Virtual Machine) acts as a run-time engine to run Java applications. JVM is the one that actually calls the&nbsp;<strong>main</strong>&nbsp;method present in a java code. JVM is a part of JRE(Java Runtime Environment).</li><li class="ql-align-justify">Java applications are called WORA (Write Once Run Anywhere). This means a programmer can develop Java code on one system and can expect it to run on any other Java-enabled system without any adjustments. This is all possible because of JVM.</li><li class="ql-align-justify">When we compile a&nbsp;<em>.java</em>&nbsp;file,&nbsp;<em>.class</em>&nbsp;files(contains byte-code) with the same class names present in&nbsp;<em>.java</em>&nbsp;file are generated by the Java compiler. This&nbsp;<em>.class</em>&nbsp;file goes into various steps when we run it. These steps together describe the whole JVM.</li></ul><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/jvm-3.jpg"></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('107fd3b0-fd9f-4f8a-9327-0e3afc277c5d'::uuid, 7, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'Just In Time Compiler', NULL, '<p>The JIT or Just-In-Time compiler is an essential part of the&nbsp;<a href="https://www.geeksforgeeks.org/jre-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">JRE (Java Runtime Environment)</a>, that is responsible for performance optimization of java based applications during run time. The compiler is one of the key aspects in deciding the performance of an application for both parties i.e. the end-user and the application developer. Let us check the Just In Time Compiler in Java in more detail.</p><h2>Java JIT Compiler</h2><p>Bytecode is one of the most important features of java that aids in cross-platform execution. The way of converting bytecode to native machine language for execution has a huge impact on its speed of it. These bytecodes have to be interpreted or compiled to proper machine instructions depending on the instruction set architecture. Moreover, these can be directly executed if the instruction architecture is bytecode based. Interpreting the bytecode affects the speed of execution. In order to improve performance, JIT compilers interact with the&nbsp;<a href="https://www.geeksforgeeks.org/jvm-works-jvm-architecture/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java Virtual Machine (JVM)</a>&nbsp;at run time and compile suitable bytecode sequences into native machine code. While using a JIT compiler, the hardware is able to execute the native code, as compared to having the JVM interpret the same sequence of bytecode repeatedly and incurring overhead for the translation process. This subsequently leads to performance gains in the execution speed, unless the compiled methods are executed less frequently.&nbsp;</p><p>The JIT compiler is able to perform certain simple optimizations while compiling a series of bytecode to native machine language. Some of these optimizations performed by JIT compilers are data analysis, reduction of memory accesses by register allocation, translation from stack operations to register operations, elimination of common sub-expressions, etc. The greater the degree of optimization done, the more time a JIT compiler spends in the execution stage. Therefore it cannot afford to do all the optimizations that a static compiler is capable of, because of the extra overhead added to the execution time and moreover its view of the program is also restricted.&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/CommonArticleDesign20-min-1.png"></p><h3><strong>Working on JIT Compiler</strong></h3><p>Java follows an object-oriented approach, as a result, it consists of classes. These constitute bytecode that is platform neutral and are executed by the JVM across diversified architectures.</p><ul><li>At run time, the JVM loads the class files, the semantics of each are determined, and appropriate computations are performed. The additional processor and memory usage during interpretation make a Java application perform slowly as compared to a native application.</li><li>The JIT compiler aids in improving the performance of Java programs by compiling bytecode into native machine code at run time.</li><li>The JIT compiler is enabled throughout, while it gets activated when a method is invoked. For a compiled method, the JVM directly calls the compiled code, instead of interpreting it. Theoretically speaking, If compiling did not require any processor time or memory usage, the speed of a native compiler and that of a Java compiler would have been the same.</li><li>JIT compilation requires processor time and memory usage. When the java virtual machine first starts up, thousands of methods are invoked. Compiling all these methods can significantly affect startup time, even if the end result is a very good performance optimization.</li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6743f783-059f-4a43-8250-90b05ed935e7'::uuid, 8, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'Difference between JIT and JVM in Java', NULL, '<p><a href="https://www.geeksforgeeks.org/jvm-works-jvm-architecture/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Java Virtual Machine</em>&nbsp;(JVM)</a>&nbsp;is used in the java runtime environment(JRE). The original JVM was conceived as a bytecode interpreter. This may come as a bit of a surprise because of performance problems. Many modern languages are meant to be compiled into CPU-specific, executable code. The fact that the JVM executes a Java program, however, helps address the major issues associated with web-based applications.</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/CommonArticleDesign20-min-1.png"></p><p>The fact that the JVM executes a Java program also helps to make it stable. Since the JVM is in charge, program execution is controlled by it. Therefore, it is possible for the JVM to build a limited execution area called a sandbox that contains the software, preventing the system from getting unlimited access. Protection is also improved by some limitations in the Java language that exists. Java’s JVM architecture includes a class loader, execution engine, memory field, etc.</p><p>In order to understand differences, let’s dig down to the components by illustrating the working of JVM alongside.&nbsp;</p><ul><li><a href="https://www.geeksforgeeks.org/classloader-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>ClassLoader</strong></a><strong>:</strong>&nbsp;The class loader has the purpose of loading class files. It helps accomplish three main functions: Loading, Initialization, and&nbsp;Linking.</li><li><a href="https://www.geeksforgeeks.org/java-virtual-machine-jvm-stack-area/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>JVM language Stacks</strong></a><strong>:</strong>&nbsp;Java memory stores local variables, and partial results of a computation. Each thread has its own JVM stack, created as the thread is created. When the method is invoked, a new frame is created, and then removed.</li><li><strong>Method Area:</strong>&nbsp;JVM Method Area specializes in storing the metadata and code-behind files for Java applications.</li><li><strong>PC Registers:</strong>&nbsp;The Java Virtual Machine Instruction address currently being executed is saved by PC registers. Each thread in Java has its own separate PC register.</li><li><strong>Heap:</strong>&nbsp;In a heap are saved all objects, arrays, and instance variables. This memory is shared between several threads.</li><li><strong>Execution Engine:</strong>&nbsp;It is a form of software used for the testing of software, hardware, or complete systems. The test execution engine never carries any information concerning the product being tested.</li><li><strong>Native Method Libraries</strong>&nbsp;which are the Executing Engine needs Native Libraries (C, C++) and the native method interface which is a framework for programming is the Native Method Interface. This enables the Java code that runs in a JVM to call libraries and native applications. Also, the native method stacks have a native code command depending on the native library. It assigns storage to native heaps or uses any stack type.</li></ul><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20210304102904/jitedit.jpg"></p><p><a href="https://www.geeksforgeeks.org/just-in-time-compiler/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Just In Time(JIT) compiler</strong></a></p><p>While Java was developed as an interpreted language, in order to improve performance, there is nothing about Java that prevents&nbsp;<a href="https://www.geeksforgeeks.org/generate-byte-code-file-python/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">bytecode</a>&nbsp;compilation into native code on the fly. For that reason, not long after Java’s initial release, the HotSpot JVM was released. A just-in-time (JIT) bytecode compiler is included in HotSpot. A Just In Time(JIT) compiler is part of the JVM and on a piece-by-piece demand basis, selected portions of bytecode are compiled into executable code in real-time. That is, as is necessary during execution, a JIT compiler compiles code. In addition, not all bytecode sequences are compiled, only those that will benefit from the compilation. The just-in-time method, however, still yields a major boost in inefficiency. The portability and safety function still exists even though dynamic compilation is applied to bytecode since the JVM is still in control of the execution environment.</p><p>In order to understand differences, let’s dig down to the components by illustrating the working of JIT alongside.</p><p>Interpreting the bytecode, the standard implementation of the JVM slows the execution of the programs. JIT compilers interact with JVM at runtime to improve performance and compile appropriate bytecode sequences into native machine code.</p><p>Hardware is interpreting the code instead of JVM (Java Virtual Machine). This can lead to performance gains in the speed of execution. This can be done per-file, per-function, or maybe on any arbitrary code fragment; the code is often compiled when it’s close to being executed (hence the name “just-in-time”), and then cached and reused later without having to be recompiled. It performs many optimizations: data analysis, translation from stack operations to registry operations, reduction of memory access by registry allocation, elimination of common sub-expressions.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b79acda4-fc08-4f6e-b118-37860391b062'::uuid, 9, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'Difference between Byte Code and Machine Code', NULL, '<p>Byte code is an intermediate code between the source code and machine code. It is a low-level code that is the result of the compilation of a source code which is written in a high-level language. It is processed by a virtual machine like&nbsp;<a href="https://www.geeksforgeeks.org/jvm-works-jvm-architecture/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java Virtual Machine (JVM)</a>.</p><p>Byte code is a non-runnable code after it is translated by an interpreter into machine code then it is understandable by the machine. It is compiled to run on JVM, any system having JVM can run it irrespective of their operating system. That’s why Java is platform-independent. Byte code is referred to as a Portable code.</p><h3><strong>Machine Code:</strong></h3><p>Machine code is a set of instructions that is directly machine-understandable and it is processed by the Central Processing Unit (CPU). Machine code is in binary (0’s and 1’s) format which is completely different from the byte code and source code. It is regarded as the most lowest-level representation of the source code. Machine code is obtained after compilation or interpretation. It is also called machine language.</p><p>The below figure illustrates the<strong>&nbsp;</strong>example of how Java source code is converted to Byte code and then to machine code :</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200823163148/machinecode-300x162.png"></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('69e7c18e-060b-4c26-b359-bc30499385d2'::uuid, 10, '15cf3460-2e69-4028-a120-1d5b0a45c011'::uuid, 'LESSON'::public.resource_type, 'How is Java platform independent?', NULL, '<p>The meaning of Java platform-independent is that the Java compiled code(byte code) can run on all operating systems. A program is written in a language that is human-readable. It may contain words, phrases, etc. which the machine does not understand. For the source code to be understood by the machine, it needs to be in a language understood by machines, typically a machine-level language. So, here comes the role of a compiler. The compiler converts the high-level language (human language) into a format understood by the machines.&nbsp;</p><p>Therefore, a compiler is a program that translates the source code for another program from a programming language into executable code. This executable code may be a sequence of machine instructions that can be executed by the CPU directly, or it may be an intermediate representation that is interpreted by a virtual machine. This intermediate representation in Java is the&nbsp;<strong>Java Byte Code.&nbsp;</strong></p><h2><strong>Step-by-Step Execution of Java Program</strong></h2><ul><li>Whenever a program is written in JAVA, the java compiles it.</li><li>The result of the JAVA compiler is the&nbsp;<strong>.class file or the bytecode</strong>&nbsp;and not the machine’s native code (unlike the C compiler).</li><li>The bytecode generated is a non-executable code and needs an interpreter to execute on a machine. This interpreter is the JVM and thus the Bytecode is executed by the JVM.</li><li>And finally, the program runs to give the desired output.</li></ul><p><span style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230520121734/How-Java-is-Platform-Independent-768.png"></span>In the case of C or C++ (languages that are not platform independent), the compiler generates an executable file (such as a .exe file) which is both OS-dependent and CPU-dependent. When we try to run this executable file on another OS or CPU architecture, it does not run, since it is specifically compiled for the target operating system and hardware architecture, making it incompatible with others.</p><h2><strong>Why Java is platform-independent but JVM is platform dependent?</strong></h2><p>In Java, the main point here is that the JVM depends on the operating system – so if you are running Mac OS X you will have a different JVM than if you are running Windows or some other operating system. This fact can be verified by trying to download the JVM for your particular machine – when trying to download it, you will be given a list of JVM corresponding to different operating systems, and you will obviously pick whichever JVM is targeted for the operating system that you are running. So we can conclude that JVM is platform-dependent and it is the reason why Java is able to become “Platform Independent”.&nbsp;</p><p><strong>Important Points:&nbsp;</strong></p><ul><li>In the case of Java,&nbsp;<strong>it is the magic of Bytecode that makes it platform-independent</strong>.</li><li>This adds to an important feature in the JAVA language termed&nbsp;<strong>portability</strong>. Every system has its own JVM which gets installed automatically when the JDK software is installed. For every operating system separate JVM is available which is capable to read the .class file or byte code.</li><li>An important point to be noted is that while&nbsp;<strong>JAVA is a platform-independent language, the JVM is platform-dependent.</strong>&nbsp;Different JVM is designed for different OS and byte code is able to run on different OS.</li></ul><blockquote><strong><em>Note:&nbsp;</em></strong><em>As JVM is platform dependent because of which Java is not considered completely platform-independent.</em></blockquote>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('be37d1e7-41a0-499e-a656-b671be829e56'::uuid, 0, '7e0279cb-cd7c-4106-8d76-3a2b38a0bdc2'::uuid, 'LESSON'::public.resource_type, 'Java Basic Syntax', NULL, '<p class="ql-align-justify">Java program is an object-oriented programming language, that means java is the collection of objects, and these objects communicate through method calls to each other to work together. Here is a brief discussion on the&nbsp;<a href="https://www.geeksforgeeks.org/classes-objects-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Classes and Objects</a>,&nbsp;<a href="https://www.geeksforgeeks.org/methods-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Method</a>,&nbsp;<a href="https://www.geeksforgeeks.org/variables-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Instance variables</a>, syntax, and semantics of Java.</p><h3><strong>Basic Terminologies in Java</strong></h3><p><strong>1. Class:</strong>&nbsp;The class is a blueprint (plan) of the instance of a class (object). It can be defined as a logical template that share common properties and methods.</p><ul><li>Example1: Blueprint of the house is class.</li><li>Example2: In real world, Alice is an object of the “Human” class.</li></ul><p><strong>2.</strong>&nbsp;<strong>Object</strong>: The object is an instance of a class. It is an entity that has behavior and state.</p><ul><li>Example: Dog, Cat, Monkey etc. are the object of “Animal” class.</li><li><strong>Behavior:</strong>&nbsp;Running on the road.</li></ul><p><strong>3.</strong>&nbsp;<strong>Method</strong>: The behavior of an object is the method.</p><ul><li><strong>Example</strong>: The fuel indicator indicates the amount of fuel left in the car.</li></ul><p><strong>4. Instance variables</strong>: Every object has its own unique set of instance variables. The state of an object is generally created by the values that are assigned to these instance variables.</p><p><strong>Example:&nbsp;</strong>Steps to compile and run a java program in a console</p><pre class="ql-syntax" spellcheck="false">javac GFG.java
java GFG
</pre><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">import java.util.*;
public class GFG {
    public static void main(String[] args)
    {
        System.out.println("GeeksforGeeks!");
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">GeeksforGeeks!
</pre><p><strong>Note:&nbsp;</strong>When the class is public, the name of the file has to be the class name.</p><h3><strong>Syntax:</strong></h3><p><strong>1. Comments in Java</strong></p><p>There are three types of comments in Java.&nbsp;</p><p><strong>&nbsp;i.&nbsp;</strong>Single line Comment</p><pre class="ql-syntax" spellcheck="false">// System.out.println("This is an comment.");
</pre><p><strong>ii.</strong>&nbsp;Multi-line Comment</p><pre class="ql-syntax" spellcheck="false">/*
    System.out.println("This is the first line comment.");
    System.out.println("This is the second line comment.");
*/
</pre><p><strong>iii.&nbsp;</strong>Documentation Comment. Also called a&nbsp;<strong>doc comment</strong>.</p><pre class="ql-syntax" spellcheck="false">/** documentation */
</pre><p><strong>2. Source File Name</strong></p><p>The name of a source file should exactly match the public class name with the extension of .<strong>java</strong>. The name of the file can be a different name if it does not have any public class. Assume you have a public class&nbsp;<strong>GFG</strong>.</p><pre class="ql-syntax" spellcheck="false">GFG.java // valid syntax
gfg.java // invalid syntax
</pre><p><strong>3. Case Sensitivity</strong></p><p>Java is a case-sensitive language, which means that the identifiers&nbsp;<strong><em>AB, Ab, aB</em></strong>,<strong><em>&nbsp;</em></strong>and&nbsp;<strong><em>ab&nbsp;</em></strong>are different in Java.</p><pre class="ql-syntax" spellcheck="false">System.out.println("GeeksforGeeks"); // valid syntax
system.out.println("GeeksforGeeks"); // invalid syntax because of the first letter of System keyword is always uppercase.
</pre><p><strong>4. Class Names</strong></p><p><strong>i.</strong>&nbsp;The first letter of the class should be in Uppercase (lowercase is allowed but discouraged).</p><p><strong>ii.&nbsp;</strong>If several words are used to form the name of the class, each inner word’s first letter should be in Uppercase. Underscores are allowed, but not recommended. Also allowed are numbers and currency symbols, although the latter are also discouraged because they are used for a special purpose (for inner and anonymous classes).</p><pre class="ql-syntax" spellcheck="false">class MyJavaProgram    // valid syntax
class 1Program         // invalid syntax
class My1Program       // valid syntax
class $Program         // valid syntax, but discouraged
class My$Program       // valid syntax, but discouraged (inner class Program inside the class My)
class myJavaProgram    // valid syntax, but discouraged
</pre><p><strong>5. public static void main(String [] args)</strong></p><p>The method main() is the main entry point into a Java program; this is where the processing starts. Also allowed is the signature&nbsp;<strong>public static void main(String… args)</strong>.</p><p><strong>6. Method Names</strong></p><p><strong>i.&nbsp;</strong>All the method names should start with a lowercase letter (uppercase is also allowed but lowercase is recommended).</p><p><strong>ii.</strong>&nbsp;If several words are used to form the name of the method, then each first letter of the inner word should be in Uppercase. Underscores are allowed, but not recommended. Also allowed are digits and currency symbols.</p><pre class="ql-syntax" spellcheck="false">public void employeeRecords() // valid syntax
public void EmployeeRecords() // valid syntax, but discouraged
</pre><p><strong>7. Identifiers in java</strong></p><p class="ql-align-justify">Identifiers are the names of local variables, instance and class variables, and labels, but also the names for classes, packages, modules and methods. All Unicode characters are valid, not just the ASCII subset.&nbsp;</p><p class="ql-align-justify"><strong>i.&nbsp;</strong>All identifiers can begin with a letter, a currency symbol or an underscore (<strong>_</strong>). According to the convention, a letter should be lower case for variables.</p><p class="ql-align-justify"><strong>ii.&nbsp;</strong>The first character of identifiers can be followed by any combination of letters, digits, currency symbols and the underscore. The underscore is not recommended for the names of variables. Constants (static final attributes and enums) should be in all Uppercase letters.</p><p class="ql-align-justify"><strong>iii.&nbsp;</strong>Most importantly identifiers are case-sensitive.</p><p class="ql-align-justify"><strong>iv.</strong>&nbsp;A keyword cannot be used as an identifier since it is a reserved word and has some special meaning.</p><pre class="ql-syntax" spellcheck="false">Legal identifiers: MinNumber, total, ak74, hello_world, $amount, _under_value
Illegal identifiers: 74ak, -amount
</pre><p class="ql-align-justify"><strong>8. White spaces in Java</strong></p><p class="ql-align-justify">A line containing only white spaces, possibly with the comment, is known as a blank line, and the Java compiler totally ignores it.</p><p class="ql-align-justify"><strong>9. Access Modifiers:&nbsp;</strong>These modifiers control the scope of class and methods.</p><ul><li><strong>Access Modifiers:</strong>&nbsp;default, public, protected, private.</li><li><strong>Non-access Modifiers:</strong>&nbsp;final, abstract, static, transient, synchronized, volatile, native.</li></ul><h2>Conclusion</h2><p>Mastering Java’s basic syntax is essential for any aspiring programmer. It lays the foundation for more advanced concepts and skills. To further enhance your understanding and proficiency, consider enrolling in our&nbsp;<a href="https://www.geeksforgeeks.org/courses/free-java-course-online" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Free Java Course</a>, which offers comprehensive coverage and practical exercises</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3bb8252c-5f8a-4c7f-9f96-1588336860f8'::uuid, 1, '7e0279cb-cd7c-4106-8d76-3a2b38a0bdc2'::uuid, 'VIDEO'::public.resource_type, 'Java Hello World Program', NULL, '', 'https://www.youtube.com/watch?v=lcJzw0JGfeE');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('24b3add5-17e8-4e13-ba5c-fce3ad3a6265'::uuid, 2, '7e0279cb-cd7c-4106-8d76-3a2b38a0bdc2'::uuid, 'LESSON'::public.resource_type, 'Java Data Types', NULL, '<h1>Java Data Types</h1><p>Last Updated :&nbsp;14 Jul, 2024</p><p><br></p><p><br></p><ul><li><br></li></ul><p class="ql-align-justify">Java is statically typed and also a strongly typed language because, in Java, each type of data (such as integer, character, hexadecimal, packed decimal, and so forth) is predefined as part of the programming language and all constants or variables defined for a given program must be described with one of the Java data types.</p><h2>Data Types in Java</h2><p class="ql-align-justify"><strong>Data types in Java</strong>&nbsp;are of different sizes and values that can be stored in the variable that is made as per convenience and circumstances to cover up all test cases. Java has two categories in which data types are segregated<strong>&nbsp;</strong></p><ol><li><strong>Primitive Data Type:</strong>&nbsp;such as boolean, char, int, short, byte, long, float, and double</li><li><strong>Non-Primitive Data Type or Object Data type:</strong>&nbsp;such as String, Array, etc.</li></ol><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20240307140133/data-types-768.png"></p><p><br></p><h3><strong>1. Boolean Data Type</strong></h3><p>Boolean data type represents only one bit of information&nbsp;<strong>either true or false</strong>&nbsp;which is intended to represent the two truth values of logic and Boolean algebra, but the size of the boolean data type is&nbsp;<strong>virtual machine-dependent</strong>. Values of type boolean are not converted implicitly or explicitly (with casts) to any other type. But the programmer can easily write conversion code.</p><p><strong>Syntax:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">boolean booleanVar;
</pre><p><strong>Size:</strong>&nbsp;Virtual machine dependent</p><h3><strong>2. Byte Data Type</strong></h3><p>The byte data type is an 8-bit signed two’s complement integer. The byte data type is useful for saving memory in large arrays.</p><p><strong>Syntax:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">byte byteVar;
</pre><p><strong>Size:</strong>&nbsp;1 byte (8 bits)</p><h3><strong>3. Short Data Type</strong></h3><p>The short data type is a 16-bit signed two’s complement integer. Similar to byte, use a short to save memory in large arrays, in situations where the memory savings actually matters.</p><p><strong>Syntax:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">short shortVar;
</pre><p><strong>Size:</strong>&nbsp;2 bytes (16 bits)</p><h3><strong>4. Integer Data Type</strong></h3><p>It is a 32-bit signed two’s complement integer.</p><p><strong>Syntax:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">int intVar;
</pre><p><strong>Size:</strong>&nbsp;4 bytes ( 32 bits )</p><blockquote><strong><em>Remember:</em></strong><em>&nbsp;In Java SE 8 and later, we can use the int data type to represent an unsigned 32-bit integer, which has a value in the range [0, 232-1]. Use the Integer class to use the int data type as an unsigned integer.&nbsp;</em></blockquote><h3><strong>5. Long Data Type</strong></h3><p>&nbsp;The range of a long is quite large. The long data type is a 64-bit two’s complement integer and is useful for those occasions where an int type is not large enough to hold the desired value. The size of the Long Datatype is 8 bytes (64 bits).</p><p><strong>Syntax:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">long longVar;
</pre><blockquote><strong><em>Remember:</em></strong><em>&nbsp;In Java SE 8 and later, you can use the long data type to represent an unsigned 64-bit long, which has a minimum value of 0 and a maximum value of 264-1. The Long class also contains methods like comparing Unsigned, divide Unsigned, etc to support arithmetic operations for unsigned long.&nbsp;</em></blockquote><h3><strong>6. Float Data Type</strong></h3><p>The float data type is a single-precision 32-bit IEEE 754 floating-point. Use a float (instead of double) if you need to save memory in large arrays of floating-point numbers. The size of the float data type is 4 bytes (32 bits).</p><p><strong>Syntax:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">float floatVar;
</pre><h3><strong>7. Double Data Type</strong></h3><p>The double data type is a double-precision 64-bit IEEE 754 floating-point. For decimal values, this data type is generally the default choice. The size of the double data type is 8 bytes or 64 bits.</p><p>Get more about Java Data Types with our&nbsp;<a href="https://www.geeksforgeeks.org/courses/free-java-course-online" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Free Java Course</a>. This course provides comprehensive coverage of Java fundamentals, including data types, syntax, control structures, and object-oriented programming concepts.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">double doubleVar;
</pre><blockquote><strong><em>Note:&nbsp;</em></strong><em>Both float and double data types were designed especially for scientific calculations, where approximation errors are acceptable. If accuracy is the most prior concern then, it is recommended not to use these data types and use BigDecimal class instead.&nbsp;</em></blockquote><p>It is recommended to go through&nbsp;<a href="https://www.geeksforgeeks.org/rounding-off-errors-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>rounding off errors in java.</em></a></p><h3><strong>8. Char Data Type</strong></h3><p>The char data type is a single 16-bit Unicode character with the size of 2 bytes (16 bits).</p><p><strong>Syntax:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">char charVar;
</pre><h3>Why is the Size of char 2 bytes in Java?&nbsp;</h3><p>So, other languages like C/C++ use only ASCII characters, and to represent all ASCII characters 8 bits is enough. But Java uses the&nbsp;<strong>Unicode system not the ASCII code System</strong>&nbsp;and to represent the Unicode system 8 bits is not enough to represent all characters so Java uses 2 bytes for characters.&nbsp;<strong>Unicode</strong>&nbsp;defines a fully international character set that can represent most of the world’s written languages. It is a unification of dozens of character sets, such as Latin, Greek, Cyrillic, Katakana, Arabic, and many more.</p><p><strong>Example:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to Demonstrate Char Primitive Data Type

// Class
class GFG {

    // Main driver method
    public static void main(String args[])
    {

        // Creating and initializing custom character
        char a = ''G'';

        // Integer data type is generally
        // used for numeric values
        int i = 89;

        // use byte and short
        // if memory is a constraint
        byte b = 4;

        // this will give error as number is
        // larger than byte range
        // byte b1 = 7888888955;

        short s = 56;

        // this will give error as number is
        // larger than short range
        // short s1 = 87878787878;

        // by default fraction value
        // is double in java
        double d = 4.355453532;

        // for float use ''f'' as suffix as standard
        float f = 4.7333434f;

        // need to hold big range of numbers then we need
        // this data type
        long l = 12121;

        System.out.println("char: " + a);
        System.out.println("integer: " + i);
        System.out.println("byte: " + b);
        System.out.println("short: " + s);
        System.out.println("float: " + f);
        System.out.println("double: " + d);
        System.out.println("long: " + l);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">char: G
integer: 89
byte: 4
short: 56
float: 4.7333436
double: 4.355453532
long: 12121
</pre><h2>Non-Primitive Data Type or Reference Data Types</h2><p>The&nbsp;<strong>Reference Data Types</strong>&nbsp;will contain a memory address of variable values because the reference types won’t store the variable value directly in memory. They are strings, objects, arrays, etc.&nbsp;</p><p><br></p><h3><strong>1. Strings&nbsp;</strong></h3><p><a href="https://www.geeksforgeeks.org/strings-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Strings</a>&nbsp;are defined as an array of characters. The difference between a character array and a string in Java is, that the string is designed to hold a sequence of characters in a single variable whereas, a character array is a collection of separate char-type entities. Unlike C/C++, Java strings are not terminated with a null character.</p><p><strong>Syntax:</strong>&nbsp;Declaring a string</p><pre class="ql-syntax" spellcheck="false">&lt;String_Type&gt; &lt;string_variable&gt; = “&lt;sequence_of_string&gt;”;
</pre><p><strong>Example:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">// Declare String without using new operator
String s = "GeeksforGeeks";
// Declare String using new operator
String s1 = new String("GeeksforGeeks");
</pre><h3><strong>2. Class</strong></h3><p>A&nbsp;<a href="https://www.geeksforgeeks.org/classes-objects-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">class</a>&nbsp;is a user-defined blueprint or prototype from which objects are created.&nbsp;It represents the set of properties or methods that are common to all objects of one type. In general, class declarations can include these components, in order:&nbsp;</p><ol><li><strong>Modifiers</strong>: A class can be public or has default access. Refer to&nbsp;<a href="https://www.geeksforgeeks.org/access-specifiers-for-classes-or-interfaces-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">access specifiers for classes or interfaces in Java</a></li><li><strong>Class name:</strong>&nbsp;The name should begin with an initial letter (capitalized by convention).</li><li><strong>Superclass(if any):</strong>&nbsp;The name of the class’s parent (superclass), if any, preceded by the keyword extends. A class can only extend (subclass) one parent.</li><li><strong>Interfaces(if any):</strong>&nbsp;A comma-separated list of interfaces implemented by the class, if any, preceded by the keyword implements. A class can implement more than one interface.</li><li><strong>Body:</strong>&nbsp;The class body&nbsp;is surrounded by braces, { }.</li></ol><p><br></p><h3><strong>3. Object</strong></h3><p>An&nbsp;<a href="https://www.geeksforgeeks.org/classes-objects-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Object</a>&nbsp;is a basic unit of Object-Oriented Programming&nbsp;and represents real-life entities.&nbsp;A typical Java program creates many objects, which as you know, interact by invoking methods. An object consists of :</p><ol><li><strong>State</strong>: It is represented by the attributes of an object. It also reflects the properties of an object.</li><li><strong>Behavior</strong>: It is represented by the methods of an object. It also reflects the response of an object to other objects.</li><li><strong>Identity</strong>: It gives a unique name to an object and enables one object to interact with other objects.</li></ol><p><br></p><h3><strong>4. Interface</strong></h3><p>Like a class, an&nbsp;<a href="https://www.geeksforgeeks.org/interfaces-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">interface</a>&nbsp;can have methods and variables, but the methods declared in an interface are by default abstract (only method signature, no body).&nbsp;&nbsp;</p><ul><li>Interfaces specify what a class must do and not how. It is the blueprint of the class.</li><li>An Interface is about capabilities like a Player may be an interface and any class implementing Player must be able to (or must implement) move(). So it specifies a set of methods that the class has to implement.</li><li>If a class implements an interface and does not provide method bodies for all functions specified in the interface, then the class must be declared abstract.</li><li>A Java library example is&nbsp;<a href="https://www.geeksforgeeks.org/comparator-interface-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Comparator Interface</a>. If a class implements this interface, then it can be used to sort a collection.</li></ul><h3><strong>5. Array</strong></h3><p>An&nbsp;<a href="https://www.geeksforgeeks.org/arrays-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Array</a>&nbsp;is a group of like-typed variables that are referred to by a common name. Arrays in Java work differently than they do in C/C++. The following are some important points about Java arrays.&nbsp;</p><ul><li>In Java, all arrays are dynamically allocated. (discussed below)</li><li>Since arrays are objects in Java, we can find their length using member length. This is different from C/C++ where we find length using size.</li><li>A Java array variable can also be declared like other variables with [] after the data type.</li><li>The variables in the array are ordered and each has an index beginning with 0.</li><li>Java array can also be used as a static field, a local variable, or a method parameter.</li><li>The&nbsp;<strong>size</strong>&nbsp;of an array must be specified by an int value and not long or short.</li><li>The direct superclass of an array type is Object.</li><li>Every array type implements the interfaces&nbsp;<a href="https://www.geeksforgeeks.org/marker-interface-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Cloneable</a>&nbsp;and&nbsp;<a href="https://www.geeksforgeeks.org/serialization-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">java.io.Serializable</a>.</li></ul><p><br></p><h2>FAQs of Data Types in Java</h2><h3>1. What are Data Types in Java?</h3><p>Data types are of different sizes and values that can be stored in the variable that is made as per convenience and circumstances to cover up all test cases.&nbsp;</p><p><br></p><h3>2. What are the 8 Data Types that use in Java?</h3><p>There are 8 main primitive data types in java as mentioned below:</p><ul><li>boolean</li><li>byte</li><li>char</li><li>short</li><li>int</li><li>long</li><li>float</li><li>double</li></ul><h3>3. Which is a Primitive Type in Java?</h3><p>Primitive data types are the types in java that can store a single value and do not provide any special capability.</p><p><br></p><h3>4. Why char uses 2 bytes in Java and what is \u0000?</h3><p>Char uses 2 bytes in java because it uses the Unicode system rather than the ASCII system. “\u000” is the lowest range of the Unicode system.</p><p><strong>Check Out:</strong>&nbsp;<a href="https://www.geeksforgeeks.org/java-gq/data-types-2-gq/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Quiz on Data Type in Java</a></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('de987ca3-df8b-494d-a007-040ca57e00ca'::uuid, 3, '7e0279cb-cd7c-4106-8d76-3a2b38a0bdc2'::uuid, 'LESSON'::public.resource_type, 'Java Identifiers', NULL, '<p>In Java, identifiers are used for identification purposes. Java Identifiers can be a class name, method name, variable name,&nbsp;or label.&nbsp;</p><h3>Example of Java Identifiers</h3><pre class="ql-syntax" spellcheck="false">public class Test
{
    public static void main(String[] args)
    {
        int a = 20;
    }
}
</pre><p>In the above Java code, we have 5 identifiers namely :&nbsp;&nbsp;</p><ul><li><strong>Test</strong>: class name.</li><li><strong>main</strong>: method name.</li><li><strong>String</strong>: predefined class name.</li><li><strong>args</strong>: variable name.</li><li><strong>a</strong>:&nbsp;variable name.</li></ul><h2><strong>Rules For Defining Java Identifiers</strong></h2><p>There are certain rules for defining a valid Java identifier. These rules must be followed, otherwise, we get a compile-time error. These rules are also valid for other languages like C, and C++.&nbsp;</p><ul><li>The only allowed characters for identifiers are all alphanumeric characters([<strong>A-Z</strong>],[<strong>a-z</strong>],[<strong>0-9</strong>]), ‘<strong>$</strong>‘(dollar sign) and ‘<strong>_</strong>‘ (underscore).For example “geek@” is not a valid Java identifier as it contains a ‘@’ a special character.</li><li>Identifiers should&nbsp;<strong>not</strong>&nbsp;start with digits(<strong>[0-9]</strong>). For example “123geeks” is not a valid Java identifier.</li><li>Java identifiers are<strong>&nbsp;case-sensitive</strong>.</li><li>There is no limit on the length of the identifier but it is advisable to use an optimum length of 4 – 15 letters only.</li><li><strong>Reserved</strong>&nbsp;<strong>Words</strong>&nbsp;can’t be used as an identifier. For example “int while = 20;” is an invalid statement as a while is a reserved word. There are&nbsp;<strong>53</strong>&nbsp;reserved words in Java.</li></ul><p><strong>Examples of valid identifiers :&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">MyVariable
MYVARIABLE
myvariable
x
i
x1
i1
_myvariable
$myvariable
sum_of_array
geeks123

</pre><p><strong>Examples of invalid identifiers :&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">My Variable  // contains a space
123geeks   // Begins with a digit
a+c // plus sign is not an alphanumeric character
variable-2 // hyphen is not an alphanumeric character
sum_&amp;_difference // ampersand is not an alphanumeric character

</pre><h2><strong>Reserved Words</strong>&nbsp;in Java</h2><p>Any programming language reserves some words to represent functionalities defined by that language. These words are called reserved words. They can be briefly categorized into two parts:&nbsp;<strong>keywords</strong>(50) and&nbsp;<strong>literals</strong>(3). Keywords define functionalities and literals define value. Identifiers are used by symbol tables in various analyzing phases(like lexical, syntax, and semantic) of a compiler architecture.&nbsp;</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8bcb3c6b-a9ec-4498-9812-6d9adeb5bcf1'::uuid, 4, '7e0279cb-cd7c-4106-8d76-3a2b38a0bdc2'::uuid, 'LESSON'::public.resource_type, 'Operators in Java', NULL, '<p>Java provides many types of operators which can be used according to the need. They are classified based on the functionality they provide. In this article, we will learn about Java Operators and learn all their types.</p><h2>What are the Java Operators?</h2><p>Operators in Java are the symbols used for performing specific operations in Java. Operators make tasks like addition, multiplication, etc which look easy although the implementation of these tasks is quite complex.</p><h2>Types of Operators in Java</h2><p>There are multiple types of operators in Java all are mentioned below:</p><ol><li><a href="https://www.geeksforgeeks.org/java-arithmetic-operators-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Arithmetic Operators</a></li><li><a href="https://www.geeksforgeeks.org/java-unary-operator-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Unary Operators</a></li><li><a href="https://www.geeksforgeeks.org/java-assignment-operator-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Assignment Operator</a></li><li><a href="https://www.geeksforgeeks.org/java-relational-operators-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Relational Operators</a></li><li><a href="https://www.geeksforgeeks.org/java-logical-operators-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Logical Operators</a></li><li><a href="https://www.geeksforgeeks.org/java-ternary-operator-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Ternary Operator</a></li><li><a href="https://www.geeksforgeeks.org/operators-in-java/?ref=lbp" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Bitwise Operators</a></li><li><a href="https://www.geeksforgeeks.org/operators-in-java/?ref=lbp" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Shift Operators</a></li><li><a href="https://www.geeksforgeeks.org/java-instanceof-and-its-applications/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">instance of operator</a></li></ol><h3><strong>1. Arithmetic Operators</strong></h3><p>They are used to perform simple arithmetic operations on primitive data types.&nbsp;</p><ul><li><strong>* :&nbsp;</strong>Multiplication</li><li><strong>/ :&nbsp;</strong>Division</li><li><strong>% :&nbsp;</strong>Modulo</li><li><strong>+ :&nbsp;</strong>Addition</li><li><strong>– :&nbsp;</strong>Subtraction</li></ul><p><strong>Example:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to implement
// Arithmetic Operators
import java.io.*;

// Drive Class
class GFG {
      // Main Function
    public static void main (String[] args) {

        // Arithmetic operators
        int a = 10;
        int b = 3;

        System.out.println("a + b = " + (a + b));
        System.out.println("a - b = " + (a - b));
        System.out.println("a * b = " + (a * b));
        System.out.println("a / b = " + (a / b));
        System.out.println("a % b = " + (a % b));

    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">a + b = 13
a - b = 7
a * b = 30
a / b = 3
a % b = 1
</pre><h3><strong>2. Unary Operators</strong></h3><p>Unary operators need only one operand. They are used to increment, decrement, or negate a value.&nbsp;</p><ul><li><strong>– :</strong>&nbsp;<strong>Unary minus</strong>, used for negating the values.</li><li><strong>+ :</strong>&nbsp;<strong>Unary plus</strong>&nbsp;indicates the positive value (numbers are positive without this, however). It performs an automatic conversion to int when the type of its operand is the byte, char, or short. This is called unary numeric promotion.</li><li><strong>++ :</strong>&nbsp;<strong>Increment operator</strong>, used for incrementing the value by 1. There are two varieties of increment operators.&nbsp;</li><li class="ql-indent-1"><strong>Post-Increment:&nbsp;</strong>Value is first used for computing the result and then incremented.</li><li class="ql-indent-1"><strong>Pre-Increment:&nbsp;</strong>Value is incremented first, and then the result is computed.</li><li><strong>– –&nbsp;: Decrement operator</strong>, used for decrementing the value by 1. There are two varieties of decrement operators.&nbsp;</li><li class="ql-indent-1"><strong>Post-decrement:&nbsp;</strong>Value is first used for computing the result and then decremented.</li><li class="ql-indent-1"><strong>Pre-Decrement: The value</strong>&nbsp;is decremented first, and then the result is computed.</li><li><strong>! : Logical not operator</strong>, used for inverting a boolean value.</li></ul><p><strong>Example:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to implement
// Unary Operators
import java.io.*;

// Driver Class
class GFG {
      // main function
    public static void main(String[] args)
    {
        // Interger declared
        int a = 10;
        int b = 10;

        // Using unary operators
        System.out.println("Postincrement : " + (a++));
        System.out.println("Preincrement : " + (++a));

        System.out.println("Postdecrement : " + (b--));
        System.out.println("Predecrement : " + (--b));
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Postincrement : 10
Preincrement : 12
Postdecrement : 10
Predecrement : 8
</pre><h3><strong>3. Assignment Operator</strong></h3><p><strong>&nbsp;‘=’</strong>&nbsp;Assignment operator is used to assign a value to any variable. It has right-to-left associativity, i.e. value given on the right-hand side of the operator is assigned to the variable on the left, and therefore right-hand side value must be declared before using it or should be a constant.&nbsp;</p><p>The general format of the assignment operator is:</p><pre class="ql-syntax" spellcheck="false">variable = value;
</pre><p>In many cases, the assignment operator can be combined with other operators to build a shorter version of the statement called a&nbsp;<strong>Compound Statement</strong>. For example, instead of a&nbsp;<strong>=</strong>&nbsp;a+5, we can write a&nbsp;<strong>+=</strong>&nbsp;5.&nbsp;</p><ul><li><strong>+=</strong>, for adding the left operand with the right operand and then assigning it to the variable on the left.</li><li><strong>-=</strong>, for subtracting the right operand from the left operand and then assigning it to the variable on the left.</li><li><strong>*=</strong>, for multiplying the left operand with the right operand and then assigning it to the variable on the left.</li><li><strong>/=</strong>, for dividing the left operand by the right operand and then assigning it to the variable on the left.</li><li><strong>%=</strong>, for assigning the modulo of the left operand by the right operand and then assigning it to the variable on the left.</li></ul><p><strong>Example:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to implement
// Assignment Operators
import java.io.*;

// Driver Class
class GFG {
    // Main Function
    public static void main(String[] args)
    {

        // Assignment operators
        int f = 7;
        System.out.println("f += 3: " + (f += 3));
        System.out.println("f -= 2: " + (f -= 2));
        System.out.println("f *= 4: " + (f *= 4));
        System.out.println("f /= 3: " + (f /= 3));
        System.out.println("f %= 2: " + (f %= 2));
        System.out.println("f &amp;= 0b1010: " + (f &amp;= 0b1010));
        System.out.println("f |= 0b1100: " + (f |= 0b1100));
        System.out.println("f ^= 0b1010: " + (f ^= 0b1010));
        System.out.println("f &lt;&lt;= 2: " + (f &lt;&lt;= 2));
        System.out.println("f &gt;&gt;= 1: " + (f &gt;&gt;= 1));
        System.out.println("f &gt;&gt;&gt;= 1: " + (f &gt;&gt;&gt;= 1));
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">f += 3: 10
f -= 2: 8
f *= 4: 32
f /= 3: 10
f %= 2: 0
f &amp;= 0b1010: 0
f |= 0b1100: 12
f ^= 0b1010: 6
f &lt;&lt;= 2: 24
f &gt;&gt;= 1: 12
f &gt;&gt;&gt;= 1: 6
</pre><h3><strong>4. Relational Operators</strong></h3><p>These operators are used to check for relations like equality, greater than, and less than. They return boolean results after the comparison and are extensively used in looping statements as well as conditional if-else statements. The general format is,&nbsp;</p><pre class="ql-syntax" spellcheck="false">variable relation_operator value
</pre><p>Some of the relational operators are-&nbsp;</p><ul><li><strong>==, Equal to&nbsp;</strong>returns true if the left-hand side is equal to the right-hand side.</li><li><strong>!=, Not Equal to&nbsp;</strong>returns true if the left-hand side is not equal to the right-hand side.</li><li><strong>&lt;, less than:&nbsp;</strong>returns true if the left-hand side is less than the right-hand side.</li><li><strong>&lt;=, less than or equal to&nbsp;</strong>returns true if the left-hand side is less than or equal to the right-hand side.</li><li><strong>&gt;, Greater than:&nbsp;</strong>returns true if the left-hand side is greater than the right-hand side.</li><li><strong>&gt;=, Greater than or equal to&nbsp;</strong>returns true if the left-hand side is greater than or equal to the right-hand side.</li></ul><p><strong>Example:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to implement
// Relational Operators
import java.io.*;

// Driver Class
class GFG {
    // main function
    public static void main(String[] args)
    {
        // Comparison operators
        int a = 10;
        int b = 3;
        int c = 5;

        System.out.println("a &gt; b: " + (a &gt; b));
        System.out.println("a &lt; b: " + (a &lt; b));
        System.out.println("a &gt;= b: " + (a &gt;= b));
        System.out.println("a &lt;= b: " + (a &lt;= b));
        System.out.println("a == c: " + (a == c));
        System.out.println("a != c: " + (a != c));
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">a &gt; b: true
a &lt; b: false
a &gt;= b: true
a &lt;= b: false
a == c: false
a != c: true
</pre><h3><strong>5. Logical Operators</strong></h3><p>These operators are used to perform “logical AND” and “logical OR” operations, i.e., a function similar to AND gate and OR gate in digital electronics. One thing to keep in mind is the second condition is not evaluated if the first one is false, i.e., it has a short-circuiting effect. Used extensively to test for several conditions for making a decision. Java also has “Logical NOT”, which returns true when the condition is false and vice-versa</p><p>Conditional operators are:</p><ul><li><strong>&amp;&amp;, Logical AND:&nbsp;</strong>returns true when both conditions are true.</li><li><strong>||, Logical OR:&nbsp;</strong>returns true if at least one condition is true.</li><li><strong>!, Logical NOT:&nbsp;</strong>returns true when a condition is false and vice-versa</li></ul><p><strong>Example:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to implemenet
// Logical operators
import java.io.*;

// Driver Class
class GFG {
      // Main Function
    public static void main (String[] args) {
        // Logical operators
        boolean x = true;
        boolean y = false;

        System.out.println("x &amp;&amp; y: " + (x &amp;&amp; y));
        System.out.println("x || y: " + (x || y));
        System.out.println("!x: " + (!x));
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">x &amp;&amp; y: false
x || y: true
!x: false
</pre><h3><strong>6. Ternary operator</strong></h3><p>The ternary operator is a shorthand version of the if-else statement. It has three operands and hence the name Ternary.</p><p>The general format is:</p><pre class="ql-syntax" spellcheck="false">condition ? if true : if false
</pre><p>The above statement means that if the condition evaluates to true, then execute the statements after the ‘?’ else execute the statements after the ‘:’.&nbsp;&nbsp;</p><p><strong>Example:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate
// max of three numbers using
// ternary operator.
public class operators {
    public static void main(String[] args)
    {
        int a = 20, b = 10, c = 30, result;

        // result holds max of three
        // numbers
        result
            = ((a &gt; b) ? (a &gt; c) ? a : c : (b &gt; c) ? b : c);
        System.out.println("Max of three numbers = "
                           + result);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Max of three numbers = 30
</pre><h3><strong>7. Bitwise Operators</strong></h3><p>These operators are used to perform the manipulation of individual bits of a number. They can be used with any of the integer types. They are used when performing update and query operations of the Binary indexed trees.&nbsp;</p><ul><li><strong>&amp;, Bitwise AND operator:&nbsp;</strong>returns bit by bit AND of input values.</li><li><strong>|, Bitwise OR operator:&nbsp;</strong>returns bit by bit OR of input values.</li><li><strong>^, Bitwise XOR operator:&nbsp;</strong>returns bit-by-bit XOR of input values.</li><li><strong>~, Bitwise Complement Operator:&nbsp;</strong>This is a unary operator which returns the one’s complement representation of the input value, i.e., with all bits inverted.</li></ul><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to implement
// bitwise operators
import java.io.*;

// Driver class
class GFG {
    // main function
    public static void main(String[] args)
    {
        // Bitwise operators
        int d = 0b1010;
        int e = 0b1100;
        System.out.println("d &amp; e: " + (d &amp; e));
        System.out.println("d | e: " + (d | e));
        System.out.println("d ^ e: " + (d ^ e));
        System.out.println("~d: " + (~d));
        System.out.println("d &lt;&lt; 2: " + (d &lt;&lt; 2));
        System.out.println("e &gt;&gt; 1: " + (e &gt;&gt; 1));
        System.out.println("e &gt;&gt;&gt; 1: " + (e &gt;&gt;&gt; 1));
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">d &amp; e: 8
d | e: 14
d ^ e: 6
~d: -11
d &lt;&lt; 2: 40
e &gt;&gt; 1: 6
e &gt;&gt;&gt; 1: 6
</pre><h3><strong>8. Shift Operators</strong></h3><p>These operators are used to shift the bits of a number left or right, thereby multiplying or dividing the number by two, respectively. They can be used when we have to multiply or divide a number by two. General format-&nbsp;</p><pre class="ql-syntax" spellcheck="false"> number shift_op number_of_places_to_shift;
</pre><ul><li><strong>&lt;&lt;, Left shift operator:&nbsp;</strong>shifts the bits of the number to the left and fills 0 on voids left as a result. Similar effect as multiplying the number with some power of two.</li><li><strong>&gt;&gt;, Signed Right shift operator:&nbsp;</strong>shifts the bits of the number to the right and fills 0 on voids left as a result. The leftmost bit depends on the sign of the initial number. Similar effect to dividing the number with some power of two.</li><li><strong>&gt;&gt;&gt;, Unsigned Right shift operator:&nbsp;</strong>shifts the bits of the number to the right and fills 0 on voids left as a result. The leftmost bit is set to 0.</li></ul><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to implement
// shift operators
import java.io.*;

// Driver Class
class GFG {
    // main function
    public static void main(String[] args)
    {
        int a = 10;

          // using left shift
        System.out.println("a&lt;&lt;1 : " + (a &lt;&lt; 1));

        // using right shift
        System.out.println("a&gt;&gt;1 : " + (a &gt;&gt; 1));
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">a&lt;&lt;1 : 20
a&gt;&gt;1 : 5
</pre><h3><strong>9. instanceof operator</strong></h3><p>The instance of the operator is used for type checking. It can be used to test if an object is an instance of a class, a subclass, or an interface. General format-&nbsp;</p><pre class="ql-syntax" spellcheck="false">object instance of class/subclass/interface
</pre><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate
// instance of operator

class operators {
    public static void main(String[] args)
    {

        Person obj1 = new Person();
        Person obj2 = new Boy();

        // As obj is of type person, it is not an
        // instance of Boy or interface
        System.out.println("obj1 instanceof Person: "
                           + (obj1 instanceof Person));
        System.out.println("obj1 instanceof Boy: "
                           + (obj1 instanceof Boy));
        System.out.println("obj1 instanceof MyInterface: "
                           + (obj1 instanceof MyInterface));

        // Since obj2 is of type boy,
        // whose parent class is person
        // and it implements the interface Myinterface
        // it is instance of all of these classes
        System.out.println("obj2 instanceof Person: "
                           + (obj2 instanceof Person));
        System.out.println("obj2 instanceof Boy: "
                           + (obj2 instanceof Boy));
        System.out.println("obj2 instanceof MyInterface: "
                           + (obj2 instanceof MyInterface));
    }
}

class Person {
}

class Boy extends Person implements MyInterface {
}

interface MyInterface {
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">obj1 instanceof Person: true
obj1 instanceof Boy: false
obj1 instanceof MyInterface: false
obj2 instanceof Person: true
obj2 instanceof Boy: true
obj2 instanceof MyInterface: true
</pre><h2>Precedence and Associativity of Java Operators</h2><p>Precedence and associative rules are used when dealing with hybrid equations involving more than one type of operator. In such cases, these rules determine which part of the equation to consider first, as there can be many different valuations for the same equation. The below table depicts the precedence of operators in decreasing order as magnitude, with the top representing the highest precedence and the bottom showing the lowest precedence.</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/operators.png"></p><h2>Interesting Questions about Java Operators&nbsp;</h2><p><br></p><h3><strong>1. Precedence and Associativity:</strong></h3><p>&nbsp;There is often confusion when it comes to hybrid equations which are equations having multiple operators. The problem is which part to solve first. There is a golden rule to follow in these situations. If the operators have different precedence, solve the higher precedence first. If they have the same precedence, solve according to associativity, that is, either from right to left or from left to right. The explanation of the below program is well written in comments within the program itself.</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">public class operators {
    public static void main(String[] args)
    {
        int a = 20, b = 10, c = 0, d = 20, e = 40, f = 30;

        // precedence rules for arithmetic operators.
        // (* = / = %) &gt; (+ = -)
        // prints a+(b/d)
        System.out.println("a+b/d = " + (a + b / d));

        // if same precedence then associative
        // rules are followed.
        // e/f -&gt; b*d -&gt; a+(b*d) -&gt; a+(b*d)-(e/f)
        System.out.println("a+b*d-e/f = "
                           + (a + b * d - e / f));
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">a+b/d = 20
a+b*d-e/f = 219
</pre><h3><strong>2. Be a Compiler:&nbsp;</strong></h3><p>The compiler in our systems uses a lex tool to match the greatest match when generating tokens. This creates a bit of a problem if overlooked. For example, consider the statement&nbsp;<strong>a=b+++c</strong>; too many of the readers might seem to create a compiler error. But this statement is absolutely correct as the token created by lex is a, =, b, ++, +, c. Therefore, this statement has a similar effect of first assigning b+c to a and then incrementing b. Similarly, a=b+++++c; would generate an error as the tokens generated are a, =, b, ++, ++, +, c. which is actually an error as there is no operand after the second unary operand.</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">public class operators {
    public static void main(String[] args)
    {
        int a = 20, b = 10, c = 0;

        // a=b+++c is compiled as
        // b++ +c
        // a=b+c then b=b+1
        a = b++ + c;
        System.out.println("Value of a(b+c), "
                           + " b(b+1), c = " + a + ", " + b
                           + ", " + c);

        // a=b+++++c is compiled as
        // b++ ++ +c
        // which gives error.
        // a=b+++++c;
        // System.out.println(b+++++c);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Value of a(b+c),  b(b+1), c = 10, 11, 0
</pre><h3><strong>3. Using + over ():&nbsp;</strong></h3><p>When using the + operator inside&nbsp;<strong><em>system.out.println()</em></strong>&nbsp;make sure to do addition using parenthesis. If we write something before doing addition, then string addition takes place, that is, associativity of addition is left to right, and hence integers are added to a string first producing a string, and string objects concatenate when using +. Therefore it can create unwanted results.</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">public class operators {
    public static void main(String[] args)
    {
        int x = 5, y = 8;

        // concatenates x and y as
        // first x is added to "concatenation (x+y) = "
        // producing "concatenation (x+y) = 5"
        // and then 8 is further concatenated.
        System.out.println("Concatenation (x+y)= " + x + y);

        // addition of x and y
        System.out.println("Addition (x+y) = " + (x + y));
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Concatenation (x+y)= 58
Addition (x+y) = 13
</pre><h2>Advantages of Operators in Java</h2><p>The advantages of using operators in Java are mentioned below:</p><ol><li><strong>Expressiveness</strong>: Operators in Java provide a concise and readable way to perform complex calculations and logical operations.</li><li><strong>Time-Saving:</strong>&nbsp;Operators in Java save time by reducing the amount of code required to perform certain tasks.</li><li><strong>Improved Performance</strong>: Using operators can improve performance because they are often implemented at the hardware level, making them faster than equivalent Java code.</li></ol><h2>Disadvantages of Operators in Java</h2><p>The disadvantages of Operators in Java are mentioned below:</p><ol><li><strong>Operator Precedence:</strong>&nbsp;Operators in Java have a defined precedence, which can lead to unexpected results if not used properly.</li><li><strong>Type Coercion</strong>: Java performs implicit type conversions when using operators, which can lead to unexpected results or errors if not used properly.</li></ol><h2>FAQs in Java Operators</h2><p><br></p><h3>1. What is operators in Java with example?</h3><p>Operators are the special symbols that are used for performing certain operations. For example, ‘+’ is used for addition where 5+4 will return the value 9.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('308ddd03-8366-41bb-b0c9-3c2bfe27d761'::uuid, 5, '7e0279cb-cd7c-4106-8d76-3a2b38a0bdc2'::uuid, 'LESSON'::public.resource_type, 'Java Variables', NULL, '<p>In Java, Variables are the data containers that save the data values during Java program execution. Every Variable in Java is assigned a data type that designates the type and quantity of value it can hold. A variable is a memory location name for the data.</p><h2>Variables in Java</h2><p>Java variable is a name given to a memory location. It is the basic unit of storage in a program.</p><ul><li>The value stored in a variable can be changed during program execution.</li><li>Variables in Java are only a name given to a memory location. All the operations done on the variable affect that memory location.</li><li>In Java, all variables must be declared before use.</li></ul><h2>How to Declare Variables in Java?</h2><p>We can declare variables in Java as pictorially depicted below as a visual aid.</p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230405112751/Variables-in-Java-768.webp"><em>&nbsp;</em></p><p>From the image, it can be easily perceived that while declaring a variable, we need to take care of two things that are:</p><ol><li><strong>datatype</strong>: Type of data that can be stored in this variable.&nbsp;</li><li><strong>data_name:</strong>&nbsp;Name was given to the variable.&nbsp;</li></ol><p>In this way, a name can only be given to a memory location. It can be assigned values in two ways:&nbsp;</p><ul><li>Variable Initialization</li><li>Assigning value by taking input</li></ul><h2>How to Initialize Variables in Java?</h2><p>It can be perceived with the help of 3 components that are as follows:</p><ul><li><strong>datatype</strong>: Type of data that can be stored in this variable.</li><li><strong>variable_name</strong>: Name given to the variable.</li><li><strong>value</strong>: It is the initial value stored in the variable.</li></ul><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230405112914/Variables-Syntax-in-Java.webp"><em>&nbsp;</em></p><p><strong>Illustrations:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">// Declaring float variable
float simpleInterest;
// Declaring and initializing integer variable
int time = 10, speed = 20;
// Declaring and initializing character variable
char var = ''h'';
</pre><h2>Types of Variables in Java</h2><p>Now let us discuss different types of variables&nbsp;which are listed as<strong>&nbsp;</strong>follows:&nbsp;</p><ol><li>Local Variables</li><li>Instance Variables</li><li>Static Variables</li></ol><p><span style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230405113005/Types-of-Variables-in-Java-768.webp"></span>Let us discuss the traits of every type of variable listed here in detail.</p><h3><strong>1. Local Variables</strong>&nbsp;</h3><p>A variable defined within a block or method or constructor is called a local variable.&nbsp;</p><ul><li>The Local variable is created at the time of declaration and destroyed after exiting from the block or when the call returns from the function.</li><li>The scope of these variables exists only within the block in which the variables are declared, i.e., we can access these variables only within that block.</li><li>Initialization of the local variable is mandatory before using it in the defined scope.</li></ul><h4>Time Complexity of the Method:</h4><pre class="ql-syntax" spellcheck="false">Time Complexity: O(1)
Auxiliary Space: O(1)
</pre><p><strong>Below is the implementation of the above approach:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to implement
// Local Variables
import java.io.*;

class GFG {
    public static void main(String[] args)
    {
        // Declared a Local Variable
        int var = 10;

        // This variable is local to this main method only
        System.out.println("Local Variable: " + var);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Local Variable: 10
</pre><p><strong>Example :</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">import java.io.*;
public class GFG {
    public static void main(String[] args)
    {
        // x is a local variable
        int x = 10;

        // message is also a local
        // variable
        String message = "Hello, world!";

        System.out.println("x = " + x);
        System.out.println("message = " + message);

        if (x &gt; 5) {
            // result is a
            // local variable
            String result = "x is greater than 5";
            System.out.println(result);
        }

        // Uncommenting the line below will result in a
        // compile-time error System.out.println(result);

        for (int i = 0; i &lt; 3; i++) {
            String loopMessage
                = "Iteration "
                  + i; // loopMessage is a local variable
            System.out.println(loopMessage);
        }

        // Uncommenting the line below will result in a
        // compile-time error
        // System.out.println(loopMessage);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">x = 10
message = Hello, world!
x is greater than 5
Iteration 0
Iteration 1
Iteration 2
</pre><h3><strong>2. Instance Variables</strong></h3><p>Instance variables are non-static variables and are declared in a class outside of any method, constructor, or block.&nbsp;</p><ul><li>As instance variables are declared in a class, these variables are created when an object of the class is created and destroyed when the object is destroyed.</li><li>Unlike local variables, we may use access specifiers for instance variables. If we do not specify any access specifier, then the default access specifier will be used.</li><li>Initialization of an instance variable is not mandatory. Its default value is dependent on the data type of variable. For&nbsp;<em>String</em>&nbsp;it is&nbsp;<em>null,&nbsp;</em>for<em>&nbsp;float&nbsp;</em>it<em>&nbsp;</em>is<em>&nbsp;0.0f,&nbsp;</em>for<em>&nbsp;int&nbsp;</em>it is<em>&nbsp;0,&nbsp;</em>for Wrapper classes like&nbsp;<em>Integer</em>&nbsp;it is&nbsp;<em>null, etc.</em></li><li>Instance variables can be accessed only by creating objects.</li><li>We initialize instance variables using&nbsp;<a href="https://www.geeksforgeeks.org/constructors-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">constructors</a>&nbsp;while creating an object. We can also use&nbsp;<a href="https://www.geeksforgeeks.org/using-instance-blocks-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">instance blocks</a>&nbsp;to initialize the instance variables.</li></ul><h4>The complexity of the method:</h4><pre class="ql-syntax" spellcheck="false">Time Complexity: O(1)
Auxiliary Space: O(1)
</pre><p><strong>Below is the implementation of the above approach:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to demonstrate
// Instance Variables
import java.io.*;

class GFG {

    // Declared Instance Variable
    public String geek;
    public int i;
    public Integer I;
    public GFG()
    {
        // Default Constructor
        // initializing Instance Variable
        this.geek = "Shubham Jain";
    }

    // Main Method
    public static void main(String[] args)
    {
        // Object Creation
        GFG name = new GFG();

        // Displaying O/P
        System.out.println("Geek name is: " + name.geek);
        System.out.println("Default value for int is "
                           + name.i);

        // toString() called internally
        System.out.println("Default value for Integer is "
                           + name.I);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Geek name is: Shubham Jain
Default value for int is 0
Default value for Integer is null
</pre><h3><strong>3. Static Variables</strong></h3><p>Static variables are also known as class variables.&nbsp;</p><ul><li>These variables are declared similarly to instance variables. The difference is that static variables are declared using the static keyword within a class outside of any method, constructor, or block.</li><li>Unlike instance variables, we can only have one copy of a static variable per class, irrespective of how many objects we create.</li><li>Static variables are created at the start of program execution and destroyed automatically when execution ends.</li><li>Initialization of a static variable is not mandatory. Its default value is dependent on the data type of variable. For&nbsp;<em>String</em>&nbsp;it is&nbsp;<em>null</em>, for&nbsp;<em>float</em>&nbsp;it is&nbsp;<em>0.0f</em>, for&nbsp;<em>int</em>&nbsp;it is&nbsp;<em>0</em>, for&nbsp;<em>Wrapper classes</em>&nbsp;like&nbsp;<em>Integer</em>&nbsp;it is&nbsp;<em>null,</em>&nbsp;etc.</li><li>If we access a static variable like an instance variable (through an object), the compiler will show a warning message, which won’t halt the program. The compiler will replace the object name with the class name automatically.</li><li>If we access a static variable without the class name, the compiler will automatically append the class name. But for accessing the static variable of a different class, we must mention the class name as 2 different classes might have a static variable with the same name.</li><li>Static variables cannot be declared locally inside an instance method.</li><li><a href="https://www.geeksforgeeks.org/static-blocks-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Static blocks</a>&nbsp;can be used to initialize static variables.</li></ul><h4>The complexity of the method:</h4><pre class="ql-syntax" spellcheck="false">Time Complexity: O(1)
Auxiliary Space: O(1)
</pre><p><strong>Below is the implementation of the above approach:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to demonstrate
// Static variables
import java.io.*;

class GFG {
    // Declared static variable
    public static String geek = "Shubham Jain";

    public static void main(String[] args)
    {

        // geek variable can be accessed without object
        // creation Displaying O/P GFG.geek --&gt; using the
        // static variable
        System.out.println("Geek Name is : " + GFG.geek);

        // static int c=0;
        // above line,when uncommented,
        // will throw an error as static variables cannot be
        // declared locally.
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Geek Name is : Shubham Jain
</pre><h2>Differences Between the Instance Variables and the Static Variables</h2><p>Now let us discuss the differences between the Instance variables and the Static variables:</p><ul><li>Each object will have its own copy of an instance variable, whereas we can only have one copy of a static variable per class, irrespective of how many objects we create. Thus,&nbsp;<strong>static variables</strong>&nbsp;are good for&nbsp;<strong>memory</strong>&nbsp;<strong>management</strong>.</li><li>Changes made in an instance variable using one object will not be reflected in other objects as each object has its own copy of the instance variable. In the case of a static variable, changes will be reflected in other objects as static variables are common to all objects of a class.</li><li>We can access instance variables through object references, and static variables can be accessed directly using the class name<strong>.</strong></li><li>Instance variables are created when an object is created with the use of the keyword ‘new’ and destroyed when the object is destroyed. Static variables are created when the program starts and destroyed when the program stops.</li></ul><p><strong>Syntax:</strong>&nbsp;Static and instance variables</p><pre class="ql-syntax" spellcheck="false">class GFG
{
    // Static variable
    static int a;

    // Instance variable
    int b;
}
</pre><h2>Conclusion</h2><p>The Important points to remember in the articles are mentioned below:</p><ul><li>Variables in Java is a data container that saves the data values during Java program execution.</li><li>There are three types of variables in Java Local variables, static variables, and instance variables.</li></ul><h2>FAQs on Variables in Java</h2><p><br></p><h3>What are variables in Java?</h3><blockquote><em>Variables are the containers in Java that can store data values inside them.</em></blockquote><h3>What are the 3 types of variables in Java?</h3><blockquote><em>There are three types of variables in Java are mentioned below:</em></blockquote><ol><li><em>Local Variables</em></li><li><em>Static Variables</em></li><li><em>Instance Variables</em></li></ol><h3>How to declare variables in Java examples?</h3><blockquote><em>We can declare variables in java with syntax as mentioned below:</em></blockquote><pre class="ql-syntax" spellcheck="false">data_type variable_name;
</pre><blockquote><strong><em>Example:</em></strong></blockquote><pre class="ql-syntax" spellcheck="false">// Integer datatype with var1 name
int var1;
</pre><h2><strong>Must Read:</strong></h2><ul><li><a href="https://www.geeksforgeeks.org/rules-for-variable-declaration-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Rules of Variable Declaration in Java</a></li><li><a href="https://www.geeksforgeeks.org/variable-scope-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Scope of Variables in Java</a></li><li><a href="https://www.geeksforgeeks.org/static-keyword-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Comparison of static keywords in C++ and Java</a></li><li><a href="https://www.geeksforgeeks.org/g-fact-47/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Are static local variables allowed in Java?</a></li><li><a href="https://www.geeksforgeeks.org/instance-variable-hiding-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Instance Variable Hiding in Java</a></li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7a3bc6ca-6c53-466b-b9c7-ffc901ce376d'::uuid, 6, '7e0279cb-cd7c-4106-8d76-3a2b38a0bdc2'::uuid, 'LESSON'::public.resource_type, 'Scope of Variables In Java', NULL, '<p>Scope of a variable is the part of the program where the variable is accessible. Like C/C++, in Java, all identifiers are lexically (or statically) scoped, i.e.scope of a variable can be determined at compile time and independent of function call stack.&nbsp;</p><p>Java programs are organized in the form of classes. Every class is part of some package. Java scope rules can be covered under following categories.</p><p>&nbsp;</p><p class="ql-align-center"><strong>Member Variables (Class Level Scope)</strong></p><p><br></p><p>These variables must be declared inside class (outside any function). They can be directly accessed anywhere in class. Let’s take a look at an example:&nbsp;</p><pre class="ql-syntax" spellcheck="false">public class Test
{
    // All variables defined directly inside a class
    // are member variables
    int a;
    private String b;
    void method1() {....}
    int method2() {....}
    char c;
}
</pre><ul><li>We can declare class variables anywhere in class, but outside methods.</li><li>Access specified of member variables doesn’t affect scope of them within a class.</li><li>Member variables can be accessed outside a class with following rules</li></ul><pre class="ql-syntax" spellcheck="false">Modifier      Package  Subclass  World

public          Yes      Yes     Yes

protected       Yes      Yes     No

Default (no
modifier)       Yes       No     No

private         No        No     No
</pre><p class="ql-align-center"><strong>Local Variables (Method Level Scope)</strong></p><p><br></p><p>Variables declared inside a method have method level scope and can’t be accessed outside the method.&nbsp;</p><pre class="ql-syntax" spellcheck="false">public class Test
{
    void method1()
    {
       // Local variable (Method level scope)
       int x;
    }
}
</pre><p><br></p><p><strong>Note :</strong>&nbsp;Local variables don’t exist after method’s execution is over.&nbsp;</p><p>Here’s another example of method scope, except this time the variable got passed in as a parameter to the method:&nbsp;</p><pre class="ql-syntax" spellcheck="false">class Test
{
    private int x;
    public void setX(int x)
    {
        this.x = x;
    }
}
</pre><p>The above code uses&nbsp;<a href="https://www.geeksforgeeks.org/this-reference-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">this keyword</a>&nbsp;to differentiate between the local and class variables.</p><p>As an exercise, predict the output of following Java program.&nbsp;&nbsp;</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">public class Test
{
    static int x = 11;
    private int y = 33;
    public void method1(int x)
    {
        Test t = new Test();
        this.x = 22;
        y = 44;

        System.out.println("Test.x: " + Test.x);
        System.out.println("t.x: " + t.x);
        System.out.println("t.y: " + t.y);
        System.out.println("y: " + y);
    }

    public static void main(String args[])
    {
        Test t = new Test();
        t.method1(5);
    }
}
</pre><p><strong>Output:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">Test.x: 22
t.x: 22
t.y: 33
y: 44
</pre><p><br></p><p><strong>Loop Variables (Block Scope)</strong>&nbsp;</p><p>A variable declared inside pair of brackets “{” and “}” in a method has scope within the brackets only.</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">public class Test
{
    public static void main(String args[])
    {
        {
            // The variable x has scope within
            // brackets
            int x = 10;
            System.out.println(x);
        }

        // Uncommenting below line would produce
        // error since variable x is out of scope.

        // System.out.println(x);
    }
}
</pre><p><strong>Output:&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">10
</pre><p><br></p><p>As another example, consider following program with a for loop.&nbsp;</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">class Test
{
    public static void main(String args[])
    {
        for (int x = 0; x &lt; 4; x++)
        {
            System.out.println(x);
        }

        // Will produce error
        System.out.println(x);
    }
}
</pre><p><strong>Output:&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">11: error: cannot find symbol
        System.out.println(x);
</pre><p><br></p><p>The right way of doing above is,&nbsp;</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Above program after correcting the error
class Test
{
    public static void main(String args[])
    {
        int x;
        for (x = 0; x &lt; 4; x++)
        {
            System.out.println(x);
        }

       System.out.println(x);
    }
}
</pre><p><strong>Output:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">0
1
2
3
4
</pre><p><br></p><p>Let’s look at tricky example of loop scope. Predict the output of following program. You may be surprised if you are regular C/C++ programmer.&nbsp;</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">class Test
{
    public static void main(String args[])
    {
        int a = 5;
        for (int a = 0; a &lt; 5; a++)
        {
            System.out.println(a);
        }
    }
}
</pre><p><strong>Output :</strong></p><pre class="ql-syntax" spellcheck="false">6: error: variable a is already defined in method go(int)
       for (int a = 0; a &lt; 5; a++)
                ^
1 error
</pre><p><br></p><p>Note:- In C++, it will run. But in java it is an error because in java, the name of the variable of inner and outer loop must be different.</p><p>A similar program in C++ works. See&nbsp;<a href="https://ide.geeksforgeeks.org/hWKCdM" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">this</a>.</p><p>As an exercise, predict the output of the following Java program.&nbsp;</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">class Test
{
    public static void main(String args[])
    {
        {
            int x = 5;
            {
                int x = 10;
                System.out.println(x);
            }
        }
    }
}
</pre><p>Q. From the above knowledge, tell whether the below code will run or not.</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">class Test {
    public static void main(String args[])
    {
        for (int i = 1; i &lt;= 10; i++) {
            System.out.println(i);
        }
        int i = 20;
        System.out.println(i);
    }
}
</pre><p><strong>Output :&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">1
2
3
4
5
6
7
8
9
10
20
</pre><p><br></p><p>Yes, it will run!&nbsp;</p><p>See the program carefully, inner loop will terminate before the outer loop variable is declared.So the inner loop variable is destroyed first and then the new variable of same name has been created.</p><p><strong>Some Important Points about Variable scope in Java:</strong>&nbsp;&nbsp;</p><ul><li>In general, a set of curly brackets { } defines a scope.</li><li>In Java we can usually access a variable as long as it was defined within the same set of brackets as the code we are writing or within any curly brackets inside of the curly brackets where the variable was defined.</li><li>Any variable defined in a class outside of any method can be used by all member methods.</li><li>When a method has the same local variable as a member, “this” keyword can be used to reference the current class variable.</li><li>For a variable to be read after the termination of a loop, It must be declared before the body of the loop.</li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3915d504-eecf-4214-aecc-0e0f43565d88'::uuid, 7, '7e0279cb-cd7c-4106-8d76-3a2b38a0bdc2'::uuid, 'LESSON'::public.resource_type, 'Wrapper Classes in Java', NULL, '<p>A Wrapper class in Java is a class whose object wraps or contains primitive data types. When we create an object to a wrapper class, it contains a field and in this field, we can store primitive data types. In other words, we can wrap a primitive value into a wrapper class object. Let’s check on the wrapper classes in Java with examples:</p><h2><strong>Need of Wrapper Classes</strong></h2><p>There are certain needs for using the Wrapper class in Java as mentioned below:</p><ol><li>They convert primitive data types into objects. Objects are needed if we wish to modify the arguments passed into a method (because primitive types are passed by value).</li><li>The classes in java.util package handles only objects and hence wrapper classes help in this case also.</li><li>Data structures in the Collection framework, such as&nbsp;<a href="https://www.geeksforgeeks.org/arraylist-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">ArrayList</a>&nbsp;and&nbsp;<a href="https://www.geeksforgeeks.org/vector-vs-arraylist-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Vector</a>, store only objects (reference types) and not primitive types.</li><li>An object is needed to support synchronization in multithreading.</li></ol><h2>Advantages of Wrapper Classes</h2><ol><li>Collections allowed only object data.</li><li>On object data we can call multiple methods compareTo(), equals(), toString()</li><li>Cloning process only objects</li><li>Object data allowed null values.</li><li>Serialization can allow only object data.</li></ol><p><br></p><h2><strong>Autoboxing and Unboxing</strong></h2><p><br></p><h3><strong>1. Autoboxing</strong></h3><p>The automatic conversion of primitive types to the object of their corresponding wrapper classes is known as autoboxing. For example – conversion of int to Integer, long to Long, double to Double, etc.&nbsp;</p><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to demonstrate Autoboxing</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.ArrayList;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Autoboxing {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>char</strong></code> <code style="color: black; background-color: initial;">ch = </code><code style="color: blue; background-color: initial;">''a''</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Autoboxing- primitive to Character object</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// conversion</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Character a = ch;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">ArrayList&lt;Integer&gt; arrayList</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">= </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">ArrayList&lt;Integer&gt;();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Autoboxing because ArrayList stores only objects</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">arrayList.add(</code><code style="background-color: initial; color: rgb(0, 153, 0);">25</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// printing the values from object</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(arrayList.get(</code><code style="background-color: initial; color: rgb(0, 153, 0);">0</code><code style="background-color: initial; color: black;">));</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">25


</pre><h3><strong>2. Unboxing</strong></h3><p>It is just the reverse process of autoboxing. Automatically converting an object of a wrapper class to its corresponding primitive type is known as unboxing. For example – conversion of Integer to int, Long to long, Double to double, etc.&nbsp;</p><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to demonstrate Unboxing</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.ArrayList;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Unboxing {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Character ch = </code><code style="background-color: initial; color: blue;">''a''</code><code style="background-color: initial; color: black;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// unboxing - Character object to primitive</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// conversion</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>char</strong></code> <code style="color: black; background-color: initial;">a = ch;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">ArrayList&lt;Integer&gt; arrayList</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">= </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">ArrayList&lt;Integer&gt;();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">arrayList.add(</code><code style="background-color: initial; color: rgb(0, 153, 0);">24</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// unboxing because get method returns an Integer</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// object</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">num = arrayList.get(</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// printing the values from primitive data types</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(num);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">24


</pre><h3>Java Wrapper Classes Example</h3><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to demonstrate Wrapping and UnWrapping</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// in Classes</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// byte data type</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>byte</strong></code> <code style="color: black; background-color: initial;">a = </code><code style="color: rgb(0, 153, 0); background-color: initial;">1</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// wrapping around Byte object</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Byte byteobj = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Byte(a);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Use with Java 9</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Byte byteobj = Byte.valueOf(a);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// int data type</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">b = </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// wrapping around Integer object</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Integer intobj = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Integer(b);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Use with Java 9</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Integer intobj = Integer.valueOf(b);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// float data type</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>float</strong></code> <code style="color: black; background-color: initial;">c = </code><code style="color: rgb(0, 153, 0); background-color: initial;">18</code><code style="color: black; background-color: initial;">.6f;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// wrapping around Float object</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Float floatobj = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Float(c);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Use with Java 9</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Float floatobj = Float.valueOf(c);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// double data type</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>double</strong></code> <code style="color: black; background-color: initial;">d = </code><code style="color: rgb(0, 153, 0); background-color: initial;">250.5</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Wrapping around Double object</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Double doubleobj = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Double(d);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Use with Java 9</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Double doubleobj = Double.valueOf(d);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// char data type</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>char</strong></code> <code style="color: black; background-color: initial;">e = </code><code style="color: blue; background-color: initial;">''a''</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// wrapping around Character object</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Character charobj = e;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// printing the values from objects</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"Values of Wrapper objects (printing as objects)"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"\nByte object byteobj: "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ byteobj);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"\nInteger object intobj: "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ intobj);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"\nFloat object floatobj: "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ floatobj);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"\nDouble object doubleobj: "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ doubleobj);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"\nCharacter object charobj: "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ charobj);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// objects to data types (retrieving data types from</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// objects) unwrapping objects to primitive data</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// types</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>byte</strong></code> <code style="color: black; background-color: initial;">bv = byteobj;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">iv = intobj;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>float</strong></code> <code style="color: black; background-color: initial;">fv = floatobj;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>double</strong></code> <code style="color: black; background-color: initial;">dv = doubleobj;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>char</strong></code> <code style="color: black; background-color: initial;">cv = charobj;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// printing the values from data types</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"\nUnwrapped values (printing as data types)"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"\nbyte value, bv: "</code> <code style="color: black; background-color: initial;">+ bv);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"\nint value, iv: "</code> <code style="color: black; background-color: initial;">+ iv);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"\nfloat value, fv: "</code> <code style="color: black; background-color: initial;">+ fv);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"\ndouble value, dv: "</code> <code style="color: black; background-color: initial;">+ dv);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"\nchar value, cv: "</code> <code style="color: black; background-color: initial;">+ cv);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Values of Wrapper objects (printing as objects)

Byte object byteobj: 1

Integer object intobj: 10

Float object floatobj: 18.6

Double object doubleobj: 250.5

Character object charobj: a

Unwrapped values (printing as data types)

byte value, bv: 1

int value, iv: 10

float value, fv: 18.6

double value, dv: 250.5

char value, cv: a


</pre><h2>Custom Wrapper Classes in Java</h2><p>Java Wrapper classes wrap the primitive data types. We can create a class that wraps data inside it. So let us check how to create our own custom wrapper class in Java. It can be implemented for creating certain structures like queues, stacks, etc.</p><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to implement</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Custom wrapper class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// wrapper class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Maximum {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>private</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">maxi = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>private</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">size = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">insert(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">x)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>this</strong></code><code style="background-color: initial; color: black;">.size++;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(x &lt;= </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>this</strong></code><code style="color: black; background-color: initial;">.maxi)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>return</strong></code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>this</strong></code><code style="background-color: initial; color: black;">.maxi = x;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">top() { </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>return</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>this</strong></code><code style="color: black; background-color: initial;">.maxi; }</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">elementNumber() { </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>return</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>this</strong></code><code style="color: black; background-color: initial;">.size; }</code></p><p><code style="color: black; background-color: initial;">};</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Maximum x = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Maximum();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">x.insert(</code><code style="background-color: initial; color: rgb(0, 153, 0);">12</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">x.insert(</code><code style="background-color: initial; color: rgb(0, 153, 0);">3</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">x.insert(</code><code style="background-color: initial; color: rgb(0, 153, 0);">23</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Maximum element: "</code> <code style="color: black; background-color: initial;">+ x.top());</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Number of elements inserted: "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ x.elementNumber());</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Maximum element: 23
Number of elements inserted: 3


</pre><h2>FAQs in Wrapper Class</h2><p><br></p><h3>1. Which are the wrapper classes in Java?</h3><p>A Wrapper class in Java is a class whose object wraps or contains primitive data types.</p><h3>2. Why use the wrapper class in Java?</h3><p>The wrapper class in Java is used to convert primitive data types into objects. Objects are needed if we wish to modify the arguments passed into a method.</p><h3>3. What are the 8 wrapper classes in Java?</h3><p>There are 8 Wrapper classes in Java these are Boolean, Byte, Short, Character, Integer, Long, Float, Double.</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e12b2dac-6593-40fa-93c2-e62bdd09120a'::uuid, 0, '1a9e783a-b19d-4f53-99fa-1e61a0a396c9'::uuid, 'LESSON'::public.resource_type, 'How to Take Input From User in Java?', NULL, '<p>Java brings various Streams with its I/O package that helps the user perform all the<a href="https://www.geeksforgeeks.org/java-io-input-output-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">&nbsp;Java input-output operations</a>. These streams support all types of objects, data types, characters, files, etc. to fully execute the I/O operations. Input in Java can be with certain methods mentioned below in the article.</p><h2>Methods to Take Input in Java</h2><p>There are<strong>&nbsp;two ways</strong>&nbsp;by which we can take Java input from the user or from a file</p><ul><li><a href="https://www.geeksforgeeks.org/java-io-bufferedreader-class-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">BufferedReader Class</a></li><li><a href="https://www.geeksforgeeks.org/scanner-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Scanner Class</a></li></ul><h3>1. Using BufferedReader Class for String Input In Java</h3><p class="ql-align-justify">It is a simple class that is used to read a sequence of characters. It has a simple function read that reads a character, another read which reads an array of characters, and a readLine() function which reads a line.</p><p class="ql-align-justify"><a href="https://www.geeksforgeeks.org/inputstreamreader-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">InputStreamReader</a>&nbsp;is a class that converts the input stream of bytes into a stream of characters, allowing it to be read by BufferedReader, which expects a stream of characters.</p><blockquote><em>Note: BufferedReader can throw checked exceptions.</em></blockquote><p class="ql-align-justify"><strong>Below is the implementation of the above approach:</strong></p><p>Java</p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program for taking user
// input using BufferedReader Class
import java.io.*;

class GFG {

    // Main Method
    public static void main(String[] args)
        throws IOException
    {
        // Creating BufferedReader Object
        // InputStreamReader converts bytes to
        // stream of character
        BufferedReader bfn = new BufferedReader(
            new InputStreamReader(System.in));

        // String reading internally
        String str = bfn.readLine();

        // Integer reading internally
        int it = Integer.parseInt(bfn.readLine());

        // Printing String
        System.out.println("Entered String : " + str);

        // Printing Integer
        System.out.println("Entered Integer : " + it);
    }
}
</pre><p><br></p><h4><strong>Output:</strong></h4><pre class="ql-syntax" spellcheck="false">Mayank Solanki
888
Entered String : Mayank Solanki
Entered Integer : 888
</pre><h3>Using Buffer Reader Class To Read the Input</h3><p class="ql-align-justify">Below is the implementation of the above approach:</p><p>Java</p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">import java.io.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
class Easy {
    public static void main(String[] args)
    {
        // creating the instance of class BufferedReader
        BufferedReader reader = new BufferedReader(
            new InputStreamReader(System.in));
        String name;
        try {
            System.out.println("Enter your name");
            name = reader.readLine(); // taking string input
            System.out.println("Name=" + name);
        }
        catch (Exception e) {
        }
    }
}
</pre><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">Enter your name:
Geeks
Name=Geeks
</pre><h3>2. Using Scanner Class for Taking Input in Java</h3><p class="ql-align-justify">It is an advanced version of BufferedReader which was added in later versions of Java. The scanner can read formatted input. It has different functions for different types of data types.&nbsp;</p><ul><li>The scanner is much easier to read as we don’t have to write throws as there is no exception thrown by it.</li><li>It was added in later versions of Java</li><li>It contains predefined functions to read an Integer, Character, and other data types as well.</li></ul><h3><strong>Syntax of Scanner class:</strong></h3><pre class="ql-syntax" spellcheck="false">Scanner scn = new Scanner(System.in);
</pre><h3><strong>Importing Scanner Class:</strong></h3><p class="ql-align-justify"><strong>‘</strong>To use the Scanner we need to import the Scanner class from the util package as</p><pre class="ql-syntax" spellcheck="false">import java.util.Scanner;
</pre><h3><strong>Inbuilt Scanner functions are as follows:</strong></h3><ul><li><strong>Integer:</strong>&nbsp;<a href="https://www.geeksforgeeks.org/scanner-nextint-method-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">nextInt()</a></li><li><strong>Float:</strong>&nbsp;<a href="https://www.geeksforgeeks.org/scanner-nextfloat-method-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">nextFloat()</a></li><li><strong>String :</strong>&nbsp;next() and nextLine()</li></ul><p class="ql-align-justify">Hence, in the case of Integer and String in Scanner, we don’t require parsing as we did require in BufferedReader.</p><p>Java</p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to show how to take
// input from user using Scanner Class

import java.util.*;

class GFG {

    public static void main(String[] args)
    {
        // Scanner definition
        Scanner scn = new Scanner(System.in);

        // input is a string ( one word )
        // read by next() function
        String str1 = scn.next();

        // print String
        System.out.println("Entered String str1 : " + str1);

        // input is a String ( complete Sentence )
        // read by nextLine()function
        String str2 = scn.nextLine();

        // print string
        System.out.println("Entered String str2 : " + str2);

        // input is an Integer
        // read by nextInt() function
        int x = scn.nextInt();

        // print integer
        System.out.println("Entered Integer : " + x);

        // input is a floatingValue
        // read by nextFloat() function
        float f = scn.nextFloat();

        // print floating value
        System.out.println("Entered FloatValue : " + f);
    }
}
</pre><p><br></p><h4><strong>Output:</strong></h4><pre class="ql-syntax" spellcheck="false">Entered String str1 : Geeks
Entered String str2 : Geeks For Geeks
Entered Integer : 123
Entered FloatValue : 123.090
</pre><h4>Example 2:</h4><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to implement
// Scanner Class to take input
import java.io.*;
import java.util.Scanner;

// Driver Class
class Easy {
    // main function
    public static void main(String[] args)
    {
        // creating the instance of class Scanner
        Scanner obj = new Scanner(System.in);
        String name;
        int rollno;
        float marks;

        System.out.println("Enter your name");

        // taking string input
        name = obj.nextLine();
        System.out.println("Enter your rollno");

        // taking integer input
        rollno = obj.nextInt();
        System.out.println("Enter your marks");

        // taking float input
        marks = obj.nextFloat();

        // printing the output
        System.out.println("Name=" + name);
        System.out.println("Rollno=" + rollno);
        System.out.println("Marks=" + marks);
    }
}
</pre><p><br></p><h4><strong>Output:</strong></h4><pre class="ql-syntax" spellcheck="false">Enter your name
Geeks
Enter your rollno
5
Enter your marks
84.60
Name=Geeks
Rollno=5
Marks=84.60
</pre><h2><strong>Differences Between BufferedReader and Scanner</strong></h2><ul><li>BufferedReader is a very basic way to read the input generally used to read the stream of characters. It gives an edge over Scanner as it is faster than Scanner because Scanner does lots of post-processing for parsing the input; as seen in nextInt(), nextFloat()</li><li>BufferedReader is more flexible as we can specify the size of stream input to be read. (In general, it is there that BufferedReader reads larger input than Scanner)</li><li>These two factors come into play when we are reading larger input. In general, the Scanner Class serves the input.</li><li>BufferedReader is preferred as it is synchronized. While dealing with multiple threads it is preferred.</li><li>For decent input, and easy readability. The Scanner is preferred over BufferedReader.</li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2a9184b2-a401-4bdf-94bc-76d1e8179c90'::uuid, 1, '1a9e783a-b19d-4f53-99fa-1e61a0a396c9'::uuid, 'LESSON'::public.resource_type, 'Ways to read input from console in Java', NULL, '<p class="ql-align-justify">In Java, there are four different ways to read input from the user in the command line environment(console).&nbsp;</p><h3><strong>1. Using Buffered Reader Class</strong></h3><p class="ql-align-justify">This is the Java classical method to take input, Introduced in JDK 1.0. This method is used by wrapping the System.in (standard input stream) in an InputStreamReader which is wrapped in a BufferedReader, we can read input from the user in the command line.&nbsp;</p><ul><li>The input is buffered for efficient reading.</li><li>The wrapping code is hard to remember.</li></ul><p class="ql-align-justify"><strong>Implementation:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate BufferedReader
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
public class Test {
    public static void main(String[] args)
        throws IOException
    {
        // Enter data using BufferReader
        BufferedReader reader = new BufferedReader(
            new InputStreamReader(System.in));

        // Reading data using readLine
        String name = reader.readLine();

        // Printing the read line
        System.out.println(name);
    }
}
</pre><h4><strong>Input:</strong>&nbsp;</h4><pre class="ql-syntax" spellcheck="false">Geek
</pre><h4><strong>Output:&nbsp;</strong></h4><pre class="ql-syntax" spellcheck="false">Geek
</pre><p>Auxiliary Space: O(1)&nbsp;</p><blockquote class="ql-align-justify"><strong><em>Note:</em></strong><em>&nbsp;To read other types, we use functions like Integer.parseInt(), Double.parseDouble(). To read multiple values, we use split().</em></blockquote><h3><strong>2. Using Scanner Class</strong></h3><p class="ql-align-justify">This is probably the most preferred method to take input, Introduced in JDK 1.5. The main purpose of the Scanner class is to parse primitive types and strings using regular expressions; however, it is also can be used to read input from the user in the command line.&nbsp;</p><ul><li>Convenient methods for parsing primitives (nextInt(), nextFloat(), …) from the tokenized input.</li><li>Regular expressions can be used to find tokens.</li><li>The reading methods are not synchronized.</li></ul><p class="ql-align-justify">To see more differences, please see&nbsp;<a href="https://www.geeksforgeeks.org/difference-between-scanner-and-bufferreader-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">this</a>&nbsp;article.</p><p>Java</p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate working of Scanner in Java
import java.util.Scanner;

class GetInputFromUser {
    public static void main(String args[])
    {
        // Using Scanner for Getting Input from User
        Scanner in = new Scanner(System.in);

        String s = in.nextLine();
        System.out.println("You entered string " + s);

        int a = in.nextInt();
        System.out.println("You entered integer " + a);

        float b = in.nextFloat();
        System.out.println("You entered float " + b);
    }
}
</pre><h4><strong>Input:</strong>&nbsp;</h4><pre class="ql-syntax" spellcheck="false">GeeksforGeeks
12
3.4

</pre><h4><strong>Output:</strong></h4><pre class="ql-syntax" spellcheck="false">You entered string GeeksforGeeks
You entered integer 12
You entered float 3.4

</pre><h3><strong>3. Using Console Class</strong></h3><p class="ql-align-justify">It has been becoming a preferred way for reading user’s input from the command line, Introduced in JDK 1.6. In addition, it can be used for reading password-like input without echoing the characters entered by the user; the format string syntax can also be used (like System.out.printf()).&nbsp;</p><p class="ql-align-justify"><strong>Advantages:</strong></p><ul><li>Reading password without echoing the entered characters.</li><li>Reading methods are synchronized.</li><li>Format string syntax can be used.</li><li>Does not work in non-interactive environment (such as in an IDE).</li></ul><p>Java</p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate working of System.console()
// Note that this program does not work on IDEs as
// System.console() may require console
public class Sample {
    public static void main(String[] args)
    {
        // Using Console to input data from user
        String name = System.console().readLine();

        System.out.println("You entered string " + name);
    }
}
</pre><h4><strong>Input:</strong>&nbsp;</h4><pre class="ql-syntax" spellcheck="false">GeeksforGeeks

</pre><h4><strong>Output:</strong></h4><pre class="ql-syntax" spellcheck="false">You entered string GeeksforGeeks

</pre><h3><strong>4.&nbsp;</strong><a href="https://www.geeksforgeeks.org/command-line-arguments-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Using Command line argument</strong></a></h3><p class="ql-align-justify">Most used user input for competitive coding available right from the initial release of Java (JDK 1.0). The command-line arguments are stored in the String format. The parseInt method of the Integer class converts string argument into Integer. Similarly, for float and others during execution. The usage of args[] comes into existence in this input form. The passing of information takes place during the program run. The command line is given to args[]. These programs have to be run on cmd.</p><p class="ql-align-justify"><strong>Code Implementation:</strong></p><p>Java</p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Program to check for command line arguments
class Hello {
    public static void main(String[] args)
    {
        // check if length of args array is
        // greater than 0
        if (args.length &gt; 0) {
            System.out.println(
                "The command line arguments are:");

            // iterating the args array and printing
            // the command line arguments
            for (String val : args)
                System.out.println(val);
        }
        else
            System.out.println("No command line "
                               + "arguments found.");
    }
}
</pre><p><strong>Command Line Arguments:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">javac GFG1.java
java Main Hello World

</pre><h4><strong>Output:</strong></h4><pre class="ql-syntax" spellcheck="false">The command line arguments are:
Hello
World

</pre><h3><strong>5. Using DataInputStream class</strong></h3><p>A DataInputStream in Java is a class that provides a convenient way to read primitive Java data types from an input stream in a machine-independent manner, introduced in JDK 1.0. It wraps an existing&nbsp;<strong>InputStream</strong>&nbsp;and allows applications to read Java primitive data types (int, short, long, byte, float, double, char, boolean) and strings from the underlying input stream, preserving their binary format.<strong>&nbsp;DataInputStream</strong>&nbsp;is part of the java.io package and is particularly useful when you need to read data that was written using a&nbsp;<strong>DataOutputStream</strong>&nbsp;or any other source that wrote data in a compatible format.</p><p><strong>Definition:</strong></p><p><strong>DataInputStream</strong>&nbsp;is a Java class that implements data input operations. It allows applications to read primitive data types and strings from an input stream in a machine-independent way. It achieves this by wrapping an existing input stream and providing methods to read various primitive data types and strings from the underlying input source.</p><p>Remember that&nbsp;<strong>DataInputStream</strong>&nbsp;reads data in a binary format, so it’s important to ensure that the data being read was written using the correct methods in&nbsp;<strong>DataOutputStream</strong>&nbsp;or a compatible source to avoid data corruption or misinterpretation.</p><p><strong>Code Implementation:</strong></p><p>Java</p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">//Java program to read input using DataInputStream class
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        DataInputStream reader = new DataInputStream(System.in);

        // Reading integers
        System.out.print("Enter an integer: ");
        int inputInt = Integer.parseInt(reader.readLine());

        // Reading strings
        System.out.print("Enter a string: ");
        String inputString = reader.readLine();
        System.out.println("You entered integer: " + inputInt);
        System.out.println("You entered string: " + inputString);

    }
}
</pre><h4>Input:</h4><pre class="ql-syntax" spellcheck="false">Enter an integer: 10
Enter a string: GeeksForGeeks
</pre><h4>Output:</h4><pre class="ql-syntax" spellcheck="false">You entered integer: 10
You entered string :GeeksForGeeks
</pre><p>Please refer&nbsp;<a href="https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">this</a>&nbsp;for more faster ways of reading input.</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('65ec972d-17d2-4e6d-b07f-3c45bc5483a0'::uuid, 2, '1a9e783a-b19d-4f53-99fa-1e61a0a396c9'::uuid, 'LESSON'::public.resource_type, 'System.out.println in Java', NULL, '<p>Java&nbsp;<strong>System.out.println()</strong>&nbsp;is used to print an argument that is passed to it.</p><h3>Parts of System.out.println()</h3><p>The statement can be broken into 3 parts which can be understood separately:</p><ol><li><a href="https://www.geeksforgeeks.org/java-lang-system-class-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>System</strong></a><strong>:</strong>&nbsp;It is a final class defined in the&nbsp;<a href="https://www.geeksforgeeks.org/java-lang-package-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">java.lang package</a>.</li><li><strong>out:</strong>&nbsp;This is an instance of&nbsp;<a href="https://www.geeksforgeeks.org/java-io-printstream-class-java-set-1/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">PrintStream&nbsp;</a>type, which is a public and static member field of the&nbsp;<a href="https://www.geeksforgeeks.org/java-lang-system-class-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">System class</a>.</li><li><a href="https://www.geeksforgeeks.org/difference-between-print-and-println-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>println()</strong></a><strong>:</strong>&nbsp;As all instances of the&nbsp;<a href="https://www.geeksforgeeks.org/java-io-printstream-class-java-set-1/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">PrintStream class</a>&nbsp;have a public method println(), we can invoke the same on out as well. This is an upgraded version of print(). It prints any argument passed to it and adds a new line to the output. We can assume that System.out represents the Standard Output Stream.</li></ol><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20191126171503/println1.png"></p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">System.out.println(parameter)
</pre><p><strong>Parameters:</strong>&nbsp;The parameter might be anything that the user wishes to print on the output screen.</p><h2>Example of Java System.out.println()</h2><h4><strong>Example 1:</strong></h4><p>Below is the implementation of System.out.println :</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java code to illustrate </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// System.out.println(); </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Driver Class </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// main function </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Welcome"</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"To"</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"GeeksforGeeks"</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">} </code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Welcome
To
GeeksforGeeks

</pre><p><strong>Example 2:</strong></p><p>Below is the implementation of System.out.println :</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java code to illustrate </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// System.out.println(); </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Driver Class </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// main function </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Declaring variable </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">num1 = </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">, num2 = </code><code style="color: rgb(0, 153, 0); background-color: initial;">20</code><code style="color: black; background-color: initial;">, sum; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Printing the variables </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(</code><code style="background-color: initial; color: blue;">"The addition of "</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print( </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">num1 + </code><code style="background-color: initial; color: blue;">" and "</code> <code style="color: black; background-color: initial;">+ num2 + </code><code style="color: blue; background-color: initial;">" is: "</code><code style="color: black; background-color: initial;">); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Printing the result after operation </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(num1 + num2); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">} </code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">The addition of 10 and 20 is: 30
</pre><p>Just like&nbsp;<strong>System.out</strong>, Java provides us with two other standard or default&nbsp;<strong>input-output streams</strong>:</p><ol><li><strong>System.in</strong>: This is the standard input stream that is used to read characters from the keyboard or any other standard input device.&nbsp;<strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">InputStreamReader inp = new InputStreamReader(System.in);
</pre><ol><li><strong>System.err</strong>: This is the standard error stream that is used to output all the error data that a program might throw, on a computer screen or any standard output device.</li><li><strong>Example:</strong></li></ol><pre class="ql-syntax" spellcheck="false">System.err.print("Error");
</pre><h2><strong>Overloads of println() method</strong></h2><p>As we know,&nbsp;<a href="https://www.geeksforgeeks.org/overloading-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Method Overloading in Java</a>&nbsp;allows different methods to have the same name, but different signatures or parameters where each signature can differ by the number of input parameters or type of input parameters or both. From the use of println() we observed that it is a single method of&nbsp;<a href="https://www.geeksforgeeks.org/java-io-printstream-class-java-set-1/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">PrintStream class</a>&nbsp;that allows the users to print various types of elements by accepting different type and number of parameters.</p><p><strong>For example</strong>:</p><pre class="ql-syntax" spellcheck="false">System.out.println(),
System.out.println(int),
System.out.println(double),
System.out.println(string),
System.out.println(character),
etc.
</pre><p>PrintStream has around&nbsp;<strong>10 different overloads of println() method</strong>&nbsp;that are invoked based on the type of parameters passed by the user.</p><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java code to illustrate method </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// overloading in println() </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Driver Class </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">PrintLN { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// main function </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Declaring different datatypes </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">num = </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>char</strong></code> <code style="color: black; background-color: initial;">ch = </code><code style="color: blue; background-color: initial;">''G''</code><code style="color: black; background-color: initial;">; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">String str = </code><code style="background-color: initial; color: blue;">"GeeksforGeeks"</code><code style="background-color: initial; color: black;">; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>double</strong></code> <code style="color: black; background-color: initial;">d = </code><code style="color: rgb(0, 153, 0); background-color: initial;">10.2</code><code style="color: black; background-color: initial;">; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>float</strong></code> <code style="color: black; background-color: initial;">f = </code><code style="color: rgb(0, 153, 0); background-color: initial;">13</code><code style="color: black; background-color: initial;">.5f; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>boolean</strong></code> <code style="color: black; background-color: initial;">bool = </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>true</strong></code><code style="color: black; background-color: initial;">; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Various overloads of println() method </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(num); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(ch); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(str); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(d); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(f); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(bool); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Hello"</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">} </code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">10
G
GeeksforGeeks
10.2
13.5
true
Hello

</pre><h2><a href="https://www.geeksforgeeks.org/difference-between-print-and-println-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Difference between System.out.print() and System.out.println()</strong></a></h2><p><br></p><h3><strong>System.out.print()</strong></h3><p>This method prints the text on the console and the cursor remains at the end of the text at the console. The next printing takes place from just here. This method must take atleast one parameter else it will throw an error.</p><h3><strong>System.out.println()</strong></h3><p>This method prints the text on the console and the cursor remains at the start of the next line at the console. The next printing takes place from the next line. This method may or may not take any parameter.</p><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java code to illustrate difference </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// between print() and println() </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Driver Class </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Demo_print { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// main function </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Using print()"</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// using print() </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// all are printed in the </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// same line </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(</code><code style="background-color: initial; color: blue;">"GfG! "</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(</code><code style="background-color: initial; color: blue;">"GfG! "</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(</code><code style="background-color: initial; color: blue;">"GfG! "</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Using println()"</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// using println() </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// all are printed in the </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// different line </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"GfG! "</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"GfG! "</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"GfG! "</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">} </code></p><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">Using print()
GfG! GfG! GfG!

Using println()
GfG!
GfG!
GfG!
</pre><h3><strong>Performance Analysis of System.out.println()</strong></h3><p><strong>println()</strong>&nbsp;is a method that helps display output on a console. This might be dependent on various factors that drives the performance of this method. The message passed using println() is passed to the server’s console where&nbsp;<strong>kernel time&nbsp;</strong>is required to execute the task. Kernel time refers to the&nbsp;<strong>CPU time</strong>. Since println() is a synchronized method, so when multiple threads are passed could lead to the&nbsp;<strong>low-performance issue</strong>. System.out.println() is a&nbsp;<strong>slow operation</strong>&nbsp;as it incurs heavy overhead on the machine compared to most IO operations. There is an alternative way of performing output operations by invoking&nbsp;<a href="https://www.geeksforgeeks.org/java-io-printwriter-class-java-set-1/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>PrintWriter</strong></a>&nbsp;or the&nbsp;<a href="https://www.geeksforgeeks.org/io-bufferedwriter-class-methods-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>BufferedWriter&nbsp;</strong></a>class. They are&nbsp;<strong>fast as compared to the println()</strong>&nbsp;of the PrintStream class.</p><p><strong>Related Articles:</strong></p><ol><li><a href="https://www.geeksforgeeks.org/difference-between-print-and-println-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Difference between print() and println()</em></a></li><li><em>Input-Output in Java</em></li><li><a href="https://www.geeksforgeeks.org/printstream-println-method-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>PrintStream println() method in Java with Examples</em></a></li><li><a href="https://www.geeksforgeeks.org/redirecting-system-out-println-output-to-a-file-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Redirecting System.out.println() output to a file in Java</em></a></li></ol><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9f411d18-11dc-454e-8fbd-3e4887f930b0'::uuid, 0, '95f03521-4e01-4c42-ba2c-8a03129f0c12'::uuid, 'LESSON'::public.resource_type, 'Decision Making in Java (if, if-else, switch, break, continue, jump)', NULL, '<p>Decision Making in programming is similar to decision-making in real life. In programming also face some situations where we want a certain block of code to be executed when some condition is fulfilled.&nbsp;</p><p>A programming language uses control statements to control the flow of execution of a program based on certain conditions. These are used to cause the flow of execution to advance and branch based on changes to the state of a program.&nbsp;</p><p><strong>Java’s Selection statements:</strong>&nbsp;</p><ul><li><a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/?ref=lbp#if" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">if</a></li><li><a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/?ref=lbp#if-else" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">if-else</a></li><li><a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/?ref=lbp#nested-if" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">nested-if</a></li><li><a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/?ref=lbp#if-else-if" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">if-else-if</a></li><li><a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/?ref=lbp#switch-case" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">switch-case</a></li><li><a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/?ref=lbp#jump" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">jump</a>&nbsp;– break, continue, return</li></ul><p><strong>1. if:&nbsp;</strong>if statement is the most simple decision-making statement. It is used to decide whether a certain statement or block of statements will be executed or not i.e if a certain condition is true then a block of statements is executed otherwise not.&nbsp;</p><p><strong>Syntax</strong>:&nbsp;</p><pre class="ql-syntax" spellcheck="false">if(condition)
{
   // Statements to execute if
   // condition is true
}
</pre><p>Here, the&nbsp;<strong>condition</strong>&nbsp;after evaluation will be either true or false. if statement accepts boolean values – if the value is true then it will execute the block of statements under it.&nbsp;</p><p>If we do not provide the curly braces ‘{‘ and ‘}’ after&nbsp;<strong>if( condition )</strong>&nbsp;then by default if statement will consider the immediate one statement to be inside its block. For example,&nbsp;</p><pre class="ql-syntax" spellcheck="false">if(condition)  //Assume condition is true
   statement1;  //part of if block
   statement2;    // separate from if block

// Here if the condition is true
// if block will consider statement1 as its part and executes in only true condition
// statement2 will be separate from the if block so it will always executes whether the condition is true or false.
</pre><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/if.png"></p><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to illustrate If statement without curly block</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">IfDemo {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">15</code><code style="color: black; background-color: initial;">)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Inside If block"</code><code style="background-color: initial; color: black;">); </code><code style="background-color: initial; color: rgb(0, 130, 0);">// part of if block(immediate one statement after if condition)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"10 is less than 15"</code><code style="background-color: initial; color: black;">); </code><code style="background-color: initial; color: rgb(0, 130, 0);">//always executes as it is outside of if block</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// This statement will be executed</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// as if considers one statement by default again below statement is outside of if block</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"I am Not in if"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Inside If block
10 is less than 15
I am Not in if
</pre><p><strong>Time Complexity:</strong>&nbsp;O(1)</p><p><strong>Auxiliary Space :&nbsp;</strong>O(1)</p><p><strong>2. if-else</strong>: The if statement alone tells us that if a condition is true it will execute a block of statements and if the condition is false it won’t. But what if we want to do something else if the condition is false? Here comes the else statement. We can use the else statement with the if statement to execute a block of code when the condition is false.&nbsp;</p><p><strong>Syntax</strong>:&nbsp;</p><pre class="ql-syntax" spellcheck="false">if (condition)
{
    // Executes this block if
    // condition is true
}
else
{
    // Executes this block if
    // condition is false
}
</pre><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/if-else.png"></p><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to illustrate if-else statement</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">IfElseDemo {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">15</code><code style="color: black; background-color: initial;">)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"i is smaller than 15"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>else</strong></code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"i is greater than 15"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">i is smaller than 15
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space :&nbsp;</strong>O(1)</p><p><strong>3. nested-if:</strong>&nbsp;A nested if is an if statement that is the target of another if or else. Nested if statements mean an if statement inside an if statement. Yes, java allows us to nest if statements within if statements. i.e, we can place an if statement inside another if statement.&nbsp;</p><p><strong>Syntax:&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">if (condition1)
{
   // Executes when condition1 is true
   if (condition2)
   {
      // Executes when condition2 is true
   }
}
</pre><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/nested-if-modified-1.png"></p><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to illustrate nested-if statement</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">NestedIfDemo {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i == </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code> <code style="color: black; background-color: initial;">|| i&lt;</code><code style="color: rgb(0, 153, 0); background-color: initial;">15</code><code style="color: black; background-color: initial;">) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// First if statement</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">15</code><code style="color: black; background-color: initial;">)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"i is smaller than 15"</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Nested - if statement</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Will only be executed if statement above</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// it is true</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">12</code><code style="color: black; background-color: initial;">)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"i is smaller than 12 too"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>else</strong></code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"i is greater than 15"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">i is smaller than 15
i is smaller than 12 too
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space:&nbsp;</strong>O(1)</p><p><strong>4. if-else-if ladder:</strong>&nbsp;Here, a user can decide among multiple options.The if statements are executed from the top down. As soon as one of the conditions controlling the if is true, the statement associated with that ‘if’ is executed, and the rest of the ladder is bypassed. If none of the conditions is true, then the final else statement will be executed. There can be as many as ‘else if’ blocks associated with one ‘if’ block but only one ‘else’ block is allowed with one ‘if’ block.</p><pre class="ql-syntax" spellcheck="false">if (condition)
    statement;
else if (condition)
    statement;
.
.
else
    statement;
</pre><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/if-elseif.png"></p><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to illustrate if-else-if ladder</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">ifelseifDemo {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">20</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i == </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"i is 10"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>else</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i == </code><code style="color: rgb(0, 153, 0); background-color: initial;">15</code><code style="color: black; background-color: initial;">)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"i is 15"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>else</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i == </code><code style="color: rgb(0, 153, 0); background-color: initial;">20</code><code style="color: black; background-color: initial;">)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"i is 20"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>else</strong></code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"i is not present"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">i is 20
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space:&nbsp;</strong>O(1)</p><p><strong>5. switch-case:</strong>&nbsp;The switch statement is a multiway branch statement. It provides an easy way to dispatch execution to different parts of code based on the value of the expression.&nbsp;</p><p><strong>Syntax:&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">switch (expression)
{
  case value1:
    statement1;
    break;
  case value2:
    statement2;
    break;
  .
  .
  case valueN:
    statementN;
    break;
  default:
    statementDefault;
}
</pre><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">/*package whatever //do not write package name here */</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main (String[] args) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">num=</code><code style="color: rgb(0, 153, 0); background-color: initial;">20</code><code style="color: black; background-color: initial;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>switch</strong></code><code style="background-color: initial; color: black;">(num){</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>case</strong></code> <code style="color: rgb(0, 153, 0); background-color: initial;">5</code> <code style="color: black; background-color: initial;">:&nbsp; System.out.println(</code><code style="color: blue; background-color: initial;">"It is 5"</code><code style="color: black; background-color: initial;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>break</strong></code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>case</strong></code> <code style="color: rgb(0, 153, 0); background-color: initial;">10</code> <code style="color: black; background-color: initial;">: System.out.println(</code><code style="color: blue; background-color: initial;">"It is 10"</code><code style="color: black; background-color: initial;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>break</strong></code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>case</strong></code> <code style="color: rgb(0, 153, 0); background-color: initial;">15</code> <code style="color: black; background-color: initial;">: System.out.println(</code><code style="color: blue; background-color: initial;">"It is 15"</code><code style="color: black; background-color: initial;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>break</strong></code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>case</strong></code> <code style="color: rgb(0, 153, 0); background-color: initial;">20</code> <code style="color: black; background-color: initial;">: System.out.println(</code><code style="color: blue; background-color: initial;">"It is 20"</code><code style="color: black; background-color: initial;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>break</strong></code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>default</strong></code><code style="background-color: initial; color: black;">:&nbsp; System.out.println(</code><code style="background-color: initial; color: blue;">"Not present"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">It is 20
</pre><p><strong>Time Complexity</strong>: O(1)</p><p><strong>Space Complexity</strong>: O(1)</p><ul><li>The expression can be of type byte, short, int char, or an enumeration. Beginning with JDK7, the&nbsp;<em>expression</em>&nbsp;can also be of type String.</li><li>Duplicate case values are not allowed.</li><li>The default statement is optional.</li><li>The break statement is used inside the switch to terminate a statement sequence.</li><li>The break statements are necessary without the break keyword, statements in switch blocks fall through.&nbsp;</li><li>If the break keyword is omitted, execution will continue to the next case.</li></ul><p><strong>6. jump:</strong>&nbsp;Java supports three jump statements:&nbsp;<strong>break, continue</strong>&nbsp;and&nbsp;<strong>return</strong>. These three statements transfer control to another part of the program.&nbsp;</p><ul><li><strong>Break:</strong>&nbsp;In Java, a break is majorly used for:&nbsp;</li><li class="ql-indent-1">Terminate a sequence in a switch statement (discussed above).</li><li class="ql-indent-1">To exit a loop.</li><li class="ql-indent-1">Used as a “civilized” form of goto.</li><li><strong>Continue:&nbsp;</strong>Sometimes it is useful to force an early iteration of a loop. That is, you might want to continue running the loop but stop processing the remainder of the code in its body for this particular iteration. This is, in effect, a goto just past the body of the loop, to the loop’s end. The continue statement performs such an action.&nbsp;</li></ul><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/continue-1.png"></p><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to illustrate using</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// continue in an if statement</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">ContinueDemo {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">; i++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// If the number is even</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// skip and continue</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i % </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code> <code style="color: black; background-color: initial;">== </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>continue</strong></code><code style="background-color: initial; color: black;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// If number is odd, print it</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(i + </code><code style="background-color: initial; color: blue;">" "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">1 3 5 7 9
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space:&nbsp;</strong>O(1)</p><ul><li><a href="https://www.geeksforgeeks.org/return-keyword-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Return:</strong></a><strong>&nbsp;</strong>The return statement is used to explicitly return from a method. That is, it causes program control to transfer back to the caller of the method.</li></ul><p><strong>Example:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to illustrate using return</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Return {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>boolean</strong></code> <code style="color: black; background-color: initial;">t = </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>true</strong></code><code style="color: black; background-color: initial;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Before the return."</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(t)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>return</strong></code><code style="background-color: initial; color: black;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Compiler will bypass every statement</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// after return</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"This won''t execute."</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Before the return.
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space:&nbsp;</strong>O(1)</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a8dde055-5083-4024-b5d3-8b8e6782305d'::uuid, 1, '95f03521-4e01-4c42-ba2c-8a03129f0c12'::uuid, 'LESSON'::public.resource_type, 'For-each loop in Java', NULL, '<p>Prerequisite:&nbsp;<a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Decision making in Java</a></p><p>For-each is another array traversing technique like for loop, while loop, do-while loop introduced in Java5.&nbsp;</p><p>&nbsp;</p><ul><li>It starts with the keyword&nbsp;<strong>for</strong>&nbsp;like a normal for-loop.</li><li>Instead of declaring and initializing a loop counter variable, you declare a variable that is the same type as the base type of the array, followed by a colon, which is then followed by the array name.</li><li>In the loop body, you can use the loop variable you created rather than using an indexed array element.&nbsp;</li><li>&nbsp;</li><li>It’s commonly used to iterate over an array or a Collections class (eg, ArrayList)</li></ul><p><strong>Syntax:&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">for (type var : array)
{
    statements using var;
}
</pre><p><strong>Simple program with for each loop:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">/*package whatever //do not write package name here */</code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Easy </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: black; background-color: initial;">{ </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// array declaration </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">ar[] = { </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">50</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">60</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">80</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">90</code> <code style="color: black; background-color: initial;">}; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">element : ar) </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(element + </code><code style="background-color: initial; color: blue;">" "</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">}</code></p><pre class="ql-syntax" spellcheck="false">Output10 50 60 80 90
</pre><p><strong>The above syntax is equivalent to:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">for (int i=0; i&lt;arr.length; i++)
{
    type var = arr[i];
    statements using var;
}
</pre><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to illustrate&nbsp; </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// for-each loop </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">For_Each&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></p><p><code style="color: black; background-color: initial;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] arg) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[] marks = { </code><code style="background-color: initial; color: rgb(0, 153, 0);">125</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">132</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">95</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">116</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">110</code> <code style="color: black; background-color: initial;">}; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">highest_marks = maximum(marks); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"The highest score is "</code> <code style="color: black; background-color: initial;">+ highest_marks); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">maximum(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code><code style="color: black; background-color: initial;">[] numbers) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{&nbsp; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">maxSoFar = numbers[</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">]; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// for each loop </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">num : numbers)&nbsp; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(num &gt; maxSoFar) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">maxSoFar = num; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>return</strong></code> <code style="color: black; background-color: initial;">maxSoFar; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">} </code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">The highest score is 132
</pre><p><strong>Limitations of for-each loop</strong>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;decision-making</p><ol><li>For-each loops are<strong>&nbsp;not appropriate when you want to modify the array</strong>:</li><li>&nbsp;</li></ol><pre class="ql-syntax" spellcheck="false">for (int num : marks)
{
    // only changes num, not the array element
    num = num*2;
}
</pre><p>&nbsp;&nbsp;&nbsp;&nbsp;2. For-each loops&nbsp;<strong>do not keep track of index</strong>. So we can not obtain array index using For-Each loop&nbsp;</p><p>&nbsp;</p><pre class="ql-syntax" spellcheck="false">for (int num : numbers)
{
    if (num == target)
    {
        return ???;   // do not know the index of num
    }
}
</pre><p>&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;For-each&nbsp;<strong>only iterates forward over the array in single steps&nbsp;</strong></p><p>&nbsp;</p><pre class="ql-syntax" spellcheck="false">// cannot be converted to a for-each loop
for (int i=numbers.length-1; i&gt;0; i--)
{
      System.out.println(numbers[i]);
}
</pre><p>&nbsp;&nbsp;&nbsp;&nbsp;4. For-each&nbsp;<strong>cannot process two decision making statements</strong>&nbsp;at once&nbsp;</p><p>&nbsp;</p><pre class="ql-syntax" spellcheck="false">// cannot be easily converted to a for-each loop
for (int i=0; i&lt;numbers.length; i++)
{
    if (numbers[i] == arr[i])
    { ...
    }
}
</pre><p>&nbsp;&nbsp;&nbsp;&nbsp;5. For-each also has some&nbsp;<strong>performance overhead&nbsp;</strong>over simple iteration:&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">/*package whatever //do not write package name here */</code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*; </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main (String[] args) { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">List&lt;Integer&gt; list = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">ArrayList&lt;&gt;(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>long</strong></code> <code style="color: black; background-color: initial;">startTime; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>long</strong></code> <code style="color: black; background-color: initial;">endTime; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">1000000</code><code style="color: black; background-color: initial;">; i++) { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">list.add(i); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Type 1 </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">startTime = Calendar.getInstance().getTimeInMillis(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i : list) { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">a = i; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">endTime = Calendar.getInstance().getTimeInMillis(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"For each loop :: "</code> <code style="color: black; background-color: initial;">+ (endTime - startTime) + </code><code style="color: blue; background-color: initial;">" ms"</code><code style="color: black; background-color: initial;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Type 2 </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">startTime = Calendar.getInstance().getTimeInMillis(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; list.size(); j++) { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">a = list.get(j); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">endTime = Calendar.getInstance().getTimeInMillis(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Using collection.size() :: "</code> <code style="color: black; background-color: initial;">+ (endTime - startTime) + </code><code style="color: blue; background-color: initial;">" ms"</code><code style="color: black; background-color: initial;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Type 3 </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">startTime = Calendar.getInstance().getTimeInMillis(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">size = list.size(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; size; j++) { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">a = list.get(j); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">endTime = Calendar.getInstance().getTimeInMillis(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"By calculating collection.size() first :: "</code> <code style="color: black; background-color: initial;">+ (endTime - startTime) + </code><code style="color: blue; background-color: initial;">" ms"</code><code style="color: black; background-color: initial;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Type 4 </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">startTime = Calendar.getInstance().getTimeInMillis(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code><code style="background-color: initial; color: black;">(</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = list.size()-</code><code style="color: rgb(0, 153, 0); background-color: initial;">1</code><code style="color: black; background-color: initial;">; j &gt;= </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j--) { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">a = list.get(j); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">endTime = Calendar.getInstance().getTimeInMillis(); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Using [int j = list.size(); j &gt; size ; j--] :: "</code> <code style="color: black; background-color: initial;">+ (endTime - startTime) + </code><code style="color: blue; background-color: initial;">" ms"</code><code style="color: black; background-color: initial;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">} </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// This code is contributed by Ayush Choudhary @gfg(code_ayush)</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">For each loop :: 45 ms
Using collection.size() :: 11 ms
By calculating collection.size() first :: 13 ms
Using [int j = list.size(); j &gt; size ; j--] :: 15 ms
</pre><p><strong>Related Articles:</strong>&nbsp;</p><p><a href="https://www.geeksforgeeks.org/g-fact-40-foreach-in-c-and-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">For-each in C++ vs Java</a>&nbsp;</p><p><a href="https://www.geeksforgeeks.org/iterator-vs-foreach-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Iterator vs For-each in Java</a></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4b6771cf-8a86-4f81-89da-7ded78755093'::uuid, 2, '95f03521-4e01-4c42-ba2c-8a03129f0c12'::uuid, 'LESSON'::public.resource_type, 'Continue Statement in Java', NULL, '<p>Suppose a person wants code to execute for the values as per the code is designed to be executed but forcefully the same user wants to skip out the execution for which code should have been executed as designed above but will not as per the demand of the user. In simpler words, it is a&nbsp;<a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">decision-making</a>&nbsp;problem as per the demand of the user.</p><p><strong>Real-Life Example:</strong></p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20201102141150/GFGContinue.png"></p><blockquote><em>Consider a man is climbing up to go to his house in between there are 11 stairs. Being in hurry to climb up he directly stepped onto 3 staircases and then 4, 5, 6, 7, 8, 9 and jumps to last one. During this he missed out staircase 1st, 2nd and 10th and he completed the goal to reach his house. He continued his journey skipping staircase of. his choices.&nbsp;</em></blockquote><blockquote><em>In computers, it interprets staircases which is/are supposed to be skipped as ‘continue’. The action to miss out execution which are supposed to be executed, is interpreted as continue statement be it any programming language.</em></blockquote><p class="ql-align-justify"><a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Continue</a>&nbsp;statement is often used inside in programming languages inside loops control structures. Inside the loop,&nbsp;<strong>when a continue statement is encountered the control directly jumps to the beginning of the loop for the next iteration instead of executing the statements of the current iteration.</strong>&nbsp;The continue statement is used when we want to skip a particular condition and continue the rest execution. Java continue statement is used for all type of loops but it is generally used in for, while, and do-while loops.</p><ul><li>In the case of for loop, the continue keyword force control to jump immediately to the update statement.</li><li>Whereas in the case of a while loop or do-while loop, control immediately jumps to the Boolean expression.</li></ul><p><strong>Syntax:&nbsp;</strong>continue keyword along with a semicolon</p><pre class="ql-syntax" spellcheck="false">continue;
</pre><p><strong>Flow Chart of Continue Statement</strong></p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20201021223902/j1-660x615.png"></p><p>The above&nbsp;<a href="https://www.geeksforgeeks.org/an-introduction-to-flowcharts/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">flowchart</a>&nbsp;is most important for the understanding of this keyword. Always remember the<strong>&nbsp;</strong>condition is always placed inside diamond boxes and statements in rectangular boxes. Now jumping onto the implementation part</p><p><strong>Case 1: Continue statement inside for loop</strong></p><p>In this program, illustration for how to use the continue statement within For loop. When the value of ‘i’ becomes 10 or 12, the continue statement plays its role and skip their execution but for other values of’ ‘i’ the loop will run smoothly.</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to illustrate the use of continue statement</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Importing Classes/Files</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Main driver method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// For loop for iteration</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt;= </code><code style="color: rgb(0, 153, 0); background-color: initial;">15</code><code style="color: black; background-color: initial;">; i++) {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Check condition for continue</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i == </code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code> <code style="color: black; background-color: initial;">|| i == </code><code style="color: rgb(0, 153, 0); background-color: initial;">12</code><code style="color: black; background-color: initial;">) {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Using continue statement to skip the</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// execution of loop when i==10 or i==12</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>continue</strong></code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Printing elements to show continue statement</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(i + </code><code style="background-color: initial; color: blue;">" "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output :</strong></p><pre class="ql-syntax" spellcheck="false">0 1 2 3 4 5 6 7 8 9 11 13 14 15
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space :&nbsp;</strong>O(1)</p><p><strong>Case 2: Continue statement inside while loop</strong></p><p>In the below program, we give example, how to use the continue statement within the While loop. When the value of count becomes 7 or 15, the continue statement plays its role and skip their execution but for other values of the count, the loop will run smoothly.</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to illustrate the use of continue statement</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// inside the While loop</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Main driver method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Initializing a variable say it count&nbsp; to a value</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// greater than the value greater among the loop</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// values</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">count = </code><code style="color: rgb(0, 153, 0); background-color: initial;">20</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// While loop for iteration</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>while</strong></code> <code style="color: black; background-color: initial;">(count &gt;= </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(count == </code><code style="color: rgb(0, 153, 0); background-color: initial;">7</code> <code style="color: black; background-color: initial;">|| count == </code><code style="color: rgb(0, 153, 0); background-color: initial;">15</code><code style="color: black; background-color: initial;">) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">count--;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Decrementing variable initialized above</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Showing continue execution inside loop</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// skipping when count==7 or count==15</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>continue</strong></code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Printing values after continue statement</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(count + </code><code style="background-color: initial; color: blue;">" "</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Decrementing the count variable</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">count--;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">20 19 18 17 16 14 13 12 11 10 9 8 6 5 4 3 2 1 0
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space :&nbsp;</strong>O(1)</p><p><strong>Case 3: Continue statement inside do while loop</strong></p><p>In the below program, we give example, of how to use the continue statement within the do-While loop. When the value of I becomes 4 or 18, the continue statement plays its role and skips its execution but for other values of I, the loop will run smoothly.</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to illustrate the use of continue statement</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// inside the Do-While loop</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Importing generic Classes/Files</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Main driver method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Creating and Initializing a variable</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Do-While loop for iteration</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>do</strong></code> <code style="color: black; background-color: initial;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i == </code><code style="color: rgb(0, 153, 0); background-color: initial;">4</code> <code style="color: black; background-color: initial;">|| i == </code><code style="color: rgb(0, 153, 0); background-color: initial;">18</code><code style="color: black; background-color: initial;">) {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Incrementing loop variable by 2</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">i += </code><code style="background-color: initial; color: rgb(0, 153, 0);">2</code><code style="background-color: initial; color: black;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Illustrating continue statement skipping</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// the execution&nbsp; when i==7 or i==15</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>continue</strong></code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Printing to showcase continue affect</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(i);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Incrementing variable by 2</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">i += </code><code style="background-color: initial; color: rgb(0, 153, 0);">2</code><code style="background-color: initial; color: black;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Condition check</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>while</strong></code> <code style="color: black; background-color: initial;">(i &lt;= </code><code style="color: rgb(0, 153, 0); background-color: initial;">35</code><code style="color: black; background-color: initial;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">0
2
6
8
10
12
14
16
20
22
24
26
28
30
32
34
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space :&nbsp;</strong>O(1)</p><p><strong>Case 4: Continue statement inside Inner loop(Nested Loop)</strong></p><p>In the below program, we give example, how to use the continue statement within Nested loops. When the value of i becomes 3 and j become 2, the continue statement plays its role and skip their execution but for other values of i and j, the loop will run smoothly.</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to illustrate the use of continue statement</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// inside an inner loop or simply nested loops</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Importing generic Classes/Files</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Main drive method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Outer loop for iteration</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">1</code><code style="color: black; background-color: initial;">; i &lt;= </code><code style="color: rgb(0, 153, 0); background-color: initial;">4</code><code style="color: black; background-color: initial;">; i++) {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Inner loop for iteration</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">1</code><code style="color: black; background-color: initial;">; j &lt;= </code><code style="color: rgb(0, 153, 0); background-color: initial;">3</code><code style="color: black; background-color: initial;">; j++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(i == </code><code style="color: rgb(0, 153, 0); background-color: initial;">3</code> <code style="color: black; background-color: initial;">&amp;&amp; j == </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">) {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Continue statement in inner loop to</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// skip the execution when i==3 and j==2</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>continue</strong></code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Print elements to showcase keyword affect</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(i + </code><code style="background-color: initial; color: blue;">" * "</code> <code style="color: black; background-color: initial;">+ j);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output:&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">1 * 1
1 * 2
1 * 3
2 * 1
2 * 2
2 * 3
3 * 1
3 * 3
4 * 1
4 * 2
4 * 3
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space :&nbsp;</strong>O(1)</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('70cc0892-7c58-4fea-91d1-47fbe1bb7735'::uuid, 3, '95f03521-4e01-4c42-ba2c-8a03129f0c12'::uuid, 'LESSON'::public.resource_type, 'Break statement in Java', NULL, '<p>Break Statement is a loop control statement that is used to terminate the loop. As soon as the break statement is encountered from within a loop, the loop iterations stop there, and control returns from the loop immediately to the first statement after the loop.&nbsp;</p><p><strong>Syntax:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">break;
</pre><p>Basically, break statements are used in situations when we are not sure about the actual number of iterations for the loop or we want to terminate the loop based on some condition.&nbsp;&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/break.png"></p><p><br></p><p><strong>Break:</strong>&nbsp;In Java, the break is majorly used for:&nbsp;</p><ul><li>Terminate a sequence in a switch statement (discussed above).</li><li>To exit a loop.</li><li>Used as a “civilized” form of goto.</li></ul><p><strong>Use of break in Switch cases</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">import java.io.*;
// Use of break statement in switch
class GFG {
    public static void main (String[] args) {
      //assigning n as integer value
      int n = 1;
      //passing n to switch
      // it will check n and display output accordingly
      switch(n){
        case 1:
          System.out.println("GFG");
          break;
        case 2:
          System.out.println("Second Case");
          break;
        default:
          System.out.println("default case");
      }
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">GFG
</pre><p><strong>Using break to exit a Loop</strong></p><p>Using break, we can force immediate termination of a loop, bypassing the conditional expression and any remaining code in the body of the loop.&nbsp;</p><p>Note: Break, when used inside a set of nested loops, will only break out of the innermost loop.&nbsp;&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/exit.png"></p><p><br></p><p>Example:</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate using
// break to exit a loop
class BreakLoopDemo {
    public static void main(String args[])
    {
        // Initially loop is set to run from 0-9
        for (int i = 0; i &lt; 10; i++) {
            // terminate loop when i is 5.
            if (i == 5)
                break;

            System.out.println("i: " + i);
        }
        System.out.println("Loop complete.");
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">i: 0
i: 1
i: 2
i: 3
i: 4
Loop complete.
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space :&nbsp;</strong>O(1)</p><p><strong>Using break as a Form of Goto</strong></p><p>Java does not have a goto statement because it provides a way to branch in an arbitrary and unstructured manner. Java uses the label. A Label is used to identifies a block of code.&nbsp;</p><p>Syntax:&nbsp;</p><pre class="ql-syntax" spellcheck="false">label:
{
  statement1;
  statement2;
  statement3;
  .
  .
}
</pre><p>Now, break statement can be use to jump out of target block.&nbsp;</p><p>Note: You cannot break to any label which is not defined for an enclosing block.&nbsp;</p><p>Syntax:&nbsp;&nbsp;</p><pre class="ql-syntax" spellcheck="false">break label;
</pre><p>Example:&nbsp;</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate
// using break with goto
class BreakLabelDemo {
    public static void main(String args[])
    {
        boolean t = true;

    // label first
    first : {

    // Illegal statement here
    // as label second is not
    // introduced yet break second;
    second : {
    third : {
        // Before break
        System.out.println("Before the break statement");

        // break will take the control out of
        // second label
        if (t)
            break second;
        System.out.println("This won''t execute.");
    }
        System.out.println("This won''t execute.");
    }

        // First block
        System.out.println("This is after second block.");
    }
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Before the break statement
This is after second block.
</pre><p><strong>Time Complexity:&nbsp;</strong>O(1)</p><p><strong>Auxiliary Space :&nbsp;</strong>O(1)</p><p>https://youtu.be/4uqb7-QpOAc?list=PLqM7alHXFySF5ErEHA1BXgibGg7uqmA4_</p><p><strong>Related Articles:</strong>&nbsp;</p><ul><li><a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Decision making in Java</a></li><li><a href="https://www.geeksforgeeks.org/break-statement-cc/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Break statement in C++</a></li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c320fad3-54b7-4f6d-92b7-878cc9259fdd'::uuid, 4, '95f03521-4e01-4c42-ba2c-8a03129f0c12'::uuid, 'LESSON'::public.resource_type, 'return keyword in Java', NULL, '<p>In Java,&nbsp;<strong>return&nbsp;</strong>is a reserved keyword i.e., we can’t use it as an identifier. It is used to&nbsp;<strong>exit</strong>&nbsp;from a method, with or without a value. Usage of&nbsp;<strong>return keyword</strong>&nbsp;as there exist two ways as listed below as follows:&nbsp;</p><ul><li><strong>Case 1:</strong>&nbsp;Methods returning a value</li><li><strong>Case 2:</strong>&nbsp;Methods not returning a value</li></ul><p>Let us illustrate by directly implementing them as follows:</p><h2><strong>Case 1:</strong>&nbsp;Methods returning a value</h2><blockquote><em>For methods that&nbsp;</em><strong><em>define</em></strong><em>&nbsp;a return type, return statement&nbsp;</em><strong><em>must be</em></strong><em>&nbsp;immediately followed by return value.&nbsp;</em></blockquote><p><strong>Example:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to Illustrate Usage of return Keyword

// Main method
class GFG {

    // Method 1
    // Since return type of RR method is double
    // so this method should return double value
    double RR(double a, double b) {
        double sum = 0;
        sum = (a + b) / 2.0;

        // Return statement as we already above have declared
        // return type to be double
        return sum;
    }

    // Method 2
    // Main driver method
    public static void main(String[] args)
    {
        // Print statement
        System.out.println(new GFG().RR(5.5, 6.5));
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">6.0
</pre><p><strong>Output explanation:&nbsp;</strong>When<strong>&nbsp;</strong>we are calling a class GFG method that has&nbsp;<strong>return sum</strong>&nbsp;which returns the value of sum and that’s value gets displayed on the console.</p><h4>Time Complexity of the above Method:</h4><blockquote><strong><em>Time Complexity:&nbsp;</em></strong><em>O(1)</em></blockquote><blockquote><strong><em>Auxiliary Space :&nbsp;</em></strong><em>O(1)</em></blockquote><h2><strong>Case 2: Methods not returning a value</strong></h2><p>For methods that do not return a value, return statement in Java can be skipped. here there arise two cases when there is no value been returned by the user as listed below as follows:</p><ul><li><strong>#1:</strong>&nbsp;Method not using return statement in void function</li><li><strong>#2:&nbsp;</strong>Methods with return type void<strong>&nbsp;</strong></li></ul><h3><strong>#1:</strong>&nbsp;Method not using return statement in void function</h3><p><strong>Example</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate no return
// keyword needed inside void method

// Main class
class GFG {

    // Since return type of demoSum method is
    // void so this method shouldn''t return any value
    void demoSum(int a, int b)
    {
        int sum = 0;
        sum = (a + b) / 10;
        System.out.println(sum);

        // No return statement in this method
    }

    // Method 2
    // Main driver method
    public static void main(String[] args)
    {
        // Calling the method
        // Over custom inputs
        new GFG().demoSum(5, 5);

        // Display message on the console for successful
        // execution of the program
        System.out.print(
            "No return keyword is used and program executed successfully");
    }

    // Note here we are not returning anything
    // as the return type is void
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">1
No return keyword is used and program executed successfully


</pre><blockquote><strong><em>Note:</em></strong><em>&nbsp;Return statement not required (</em><strong><em>but can be used</em></strong><em>) for methods with return type void. We can use “return;” which means&nbsp;</em><strong><em>not return anything</em></strong><em>.&nbsp;</em></blockquote><h3><strong>#2:&nbsp;</strong>Methods with&nbsp;<em>void return type</em></h3><p><strong>Example 1-A:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate usage of
// return keyword in void method

// Class 1
// Main class
class GFG {

    // Method 1
    // Since return type of demofunction method is
    // void so this method should not return any value
    void demofunction(double j)
    {
        if (j &lt; 9)

            // return statement below(only using
            // return statement and not returning
            // anything):
            // control exits the method if this
            // condition(i.e, j&lt;9) is true.
            return;
        ++j;
    }

    // Method 2
    // Main driver method
    public static void main(String[] args)
    {
        GFG gfg = new GFG();
        // Calling above method declared in above class
        gfg.demofunction(5.5);

        // Display message on console to illustrate
        // successful execution of program
        System.out.println("Program executed successfully");
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Program executed successfully
</pre><p><strong>Output explanation:&nbsp;</strong>If the statement&nbsp;<strong>if(j&lt;9)</strong>&nbsp;is true then control&nbsp;<strong>exits</strong>&nbsp;from the method and does&nbsp;<strong>not</strong>&nbsp;execute the rest of the statement of the RR method and hence comes back again to&nbsp;<em>main() method</em>.</p><h3><strong>Now moving ahead geek you must be wondering what if we do use return statement at the end of the program?</strong></h3><p>return statement can be used at various places in the method but we need to ensure that it must be the last statement to get executed in a method.</p><blockquote><strong><em>Note</em></strong><em>: return statement&nbsp;</em><strong><em>need not to be last statement in a method, but it must be last statement to execute</em></strong><em>&nbsp;in a method.&nbsp;</em></blockquote><p><strong>Example 1-B:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate return must not be always
// last statement, but must be last statement
// in a method to execute

// Main class
class GFG {

    // Method 1
    // Helper method
    // Since return type of demofunction method is void
    // so this method should not return any value
    void demofunction(double i)
    {
        // Demo condition check
        if (i &lt; 9)

            // See here return need not be last
            // statement but must be last statement
            // in a method to execute
            return;

        else
            ++i;
    }

    // Method 2
    // main driver method
    public static void main(String[] args)
    {
        // Calling the method
        new GFG().demofunction(7);

        // Display message to illustrate
        // successful execution of program
        System.out.println("Program executed successfully");
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Program executed successfully


</pre><h4><strong>Output explanation:&nbsp;</strong></h4><p>As the condition&nbsp;<strong>(i&lt;9)</strong>&nbsp;becomes true, it executes&nbsp;<strong>return</strong>&nbsp;statement, and hence flow comes&nbsp;<strong>out</strong>&nbsp;of ‘demofunction’ method and comes back again to main. Following this, the&nbsp;<strong><em>return statement</em></strong>&nbsp;must be the last statement to execute in a method, which means&nbsp;<strong>there is no&nbsp;</strong>point in defining any code after return which is clarified below as follows:</p><p><strong>Example 2A:</strong></p><p>Java</p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate usage of
// statement after return statement

// Main class
class GFG {

    // Since return type of demofunction method is void
    // so this method should return any value
    // Method 1
    void demofunction(double j)
    {
        return;

        // Here get compile error since can''t
        // write any statement after return keyword

        ++j;
    }

    // Method 2
    // Main driver method
    public static void main(String[] args)
    {

        // Calling the above defined function
        new GFG().demofunction(5);
    }
}
</pre><p><strong>Output:</strong></p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20210930154756/Screenshot20210930at34451PM.png"></p><p><strong>Example 2-B:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate usage
// of return keyword

// Main class
class GFG {
    // Since return type of demofunction method is
    // void so this method should not return any value
    // Method 1
    void demofunction(double val)
    {
        // Condition check
        if (val &lt; 0) {

            System.out.println(val);
            return;
        }
        else
            ++val;
    }

    // Method 2
    // Main drive method
    public static void main(String[] args)
    {

        // Calling the above method
        new GFG().demofunction(-1);

        // Display message to illustrate
        // successful execution of program
        System.out.println("Program Executed Successfully");
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">-1.0
Program Executed Successfully


</pre><blockquote><strong><em>Note:&nbsp;</em></strong><em>In the above program we do uncomment statements it will throw an error.</em></blockquote><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a4a7b52e-2d53-4e8b-af5e-c4f710146ec9'::uuid, 0, '32f1f62f-1918-476a-854b-76e204dc83e0'::uuid, 'VIDEO'::public.resource_type, 'Strings in Java', NULL, '', 'https://www.youtube.com/watch?v=R57pDw5cvGA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('cfd285f9-d74c-4ed9-9111-6897cc7417e1'::uuid, 1, '32f1f62f-1918-476a-854b-76e204dc83e0'::uuid, 'LESSON'::public.resource_type, 'String class in Java', NULL, '<p>The string is a sequence of characters. In Java, objects of String are immutable which means a constant and cannot be changed once created.</p><h3><strong>Creating a String</strong></h3><p>There are two ways to create string in Java:</p><h4><em>1. String literal</em></h4><pre class="ql-syntax" spellcheck="false">String s = “GeeksforGeeks”;
</pre><h4><strong>2. Using&nbsp;</strong><em>new</em><strong>&nbsp;keyword</strong></h4><pre class="ql-syntax" spellcheck="false">String s = new String (“GeeksforGeeks”);
</pre><h2><strong>String Constructors in Java</strong></h2><p><br></p><h3><strong>1. String(byte[] byte_arr)</strong></h3><p>Construct a new String by decoding the&nbsp;<em>byte array</em>. It uses the platform’s default character set for decoding.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">byte[] b_arr = {71, 101, 101, 107, 115};
String s_byte =new String(b_arr); //Geeks
</pre><h3><strong>2. String(byte[] byte_arr, Charset char_set)</strong></h3><p>Construct a new String by decoding the&nbsp;<em>byte array</em>. It uses the&nbsp;<em>char_set</em>&nbsp;for decoding.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">byte[] b_arr = {71, 101, 101, 107, 115};
Charset cs = Charset.defaultCharset();
String s_byte_char = new String(b_arr, cs); //Geeks
</pre><h3><strong>3. String(byte[] byte_arr, String char_set_name)</strong></h3><p>Construct a new String by decoding the&nbsp;<em>byte array</em>. It uses the&nbsp;<em>char_set_name</em>&nbsp;for decoding. It looks similar to the above constructs and they appear before similar functions but it takes the&nbsp;<em>String(which contains char_set_name)</em>&nbsp;as parameter while the above constructor takes&nbsp;<em>CharSet.</em></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">byte[] b_arr = {71, 101, 101, 107, 115};
String s = new String(b_arr, "US-ASCII"); //Geeks
</pre><h3><strong>4. String(byte[] byte_arr, int start_index, int length)</strong></h3><p>Construct a new string from the&nbsp;<em>bytes array</em>&nbsp;depending on the&nbsp;<em>start_index(Starting location)</em>&nbsp;and&nbsp;<em>length(number of characters from starting location).</em></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">byte[] b_arr = {71, 101, 101, 107, 115};
String s = new String(b_arr, 1, 3); // eek
</pre><h3><strong>5. String(byte[] byte_arr, int start_index, int length, Charset char_set)</strong></h3><p>Construct a new string from the&nbsp;<em>bytes array</em>&nbsp;depending on the&nbsp;<em>start_index(Starting location)</em>&nbsp;and&nbsp;<em>length(number of characters from starting location)</em>.Uses&nbsp;<em>char_set</em>&nbsp;for decoding.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">byte[] b_arr = {71, 101, 101, 107, 115};
Charset cs = Charset.defaultCharset();
String s = new String(b_arr, 1, 3, cs); // eek
</pre><h3><strong>6. String(byte[] byte_arr, int start_index, int length, String char_set_name)</strong></h3><p>Construct a new string from the<em>&nbsp;bytes array</em>&nbsp;depending on the&nbsp;<em>start_index(Starting location)</em>&nbsp;and&nbsp;<em>length(number of characters from starting location)</em>.Uses&nbsp;<em>char_set_name</em>&nbsp;for decoding.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">byte[] b_arr = {71, 101, 101, 107, 115};
String s = new String(b_arr, 1, 4, "US-ASCII"); // eeks
</pre><h3><strong>7. String(char[] char_arr)</strong></h3><p>Allocates a new String from the given&nbsp;<em>Character array</em></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">char char_arr[] = {''G'', ''e'', ''e'', ''k'', ''s''};
String s = new String(char_arr); //Geeks
</pre><h3><strong>8. String(char[] char_array, int start_index, int count)</strong></h3><p>Allocates a String from a given&nbsp;<em>character array</em>&nbsp;but choose&nbsp;<em>count</em>&nbsp;characters from the&nbsp;<em>start_index</em>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">char char_arr[] = {''G'', ''e'', ''e'', ''k'', ''s''};
String s = new String(char_arr , 1, 3); //eek
</pre><h3><strong>9. String(int[] uni_code_points, int offset, int count)</strong></h3><p>Allocates a String from a&nbsp;<em>uni_code_array</em>&nbsp;but choose&nbsp;<em>count</em>&nbsp;characters from the&nbsp;<em>start_index</em>.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">int[] uni_code = {71, 101, 101, 107, 115};
String s = new String(uni_code, 1, 3); //eek
</pre><h3><strong>10. String(StringBuffer s_buffer)</strong></h3><p>Allocates a new string from the string in&nbsp;<em>s_buffer</em></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">StringBuffer s_buffer = new StringBuffer("Geeks");
String s = new String(s_buffer); //Geeks
</pre><h3><strong>11. String(StringBuilder s_builder)</strong></h3><p>Allocates a new string from the string in&nbsp;<em>s_builder</em></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">StringBuilder s_builder = new StringBuilder("Geeks");
String s = new String(s_builder); //Geeks
</pre><p><br></p><h2><strong>String Methods in Java</strong></h2><p><br></p><h3><strong>1.</strong><a href="https://www.geeksforgeeks.org/java-string-length-method-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>&nbsp;int length()</strong></a></h3><p>Returns the number of characters in the String.</p><pre class="ql-syntax" spellcheck="false">"GeeksforGeeks".length();&nbsp; // returns 13
</pre><h3><strong>2.&nbsp;</strong><a href="https://www.geeksforgeeks.org/java-string-charat-method-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Char charAt(int i)</strong></a></h3><p>Returns the character at ith&nbsp;index.</p><pre class="ql-syntax" spellcheck="false">"GeeksforGeeks".charAt(3); // returns&nbsp; ‘k’
</pre><h3><strong>3.&nbsp;</strong><a href="https://www.geeksforgeeks.org/substring-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>String substring (int i)</strong></a></h3><p>Return the substring from the ith&nbsp;&nbsp;index character to end.</p><pre class="ql-syntax" spellcheck="false">"GeeksforGeeks".substring(3); // returns “ksforGeeks”
</pre><h3><strong>4.&nbsp;</strong><a href="https://www.geeksforgeeks.org/substring-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>String substring (int i, int j)</strong></a></h3><p>Returns the substring from i to j-1 index.</p><pre class="ql-syntax" spellcheck="false"> "GeeksforGeeks".substring(2, 5); // returns “eks”
</pre><h3><strong>5.&nbsp;</strong><a href="https://www.geeksforgeeks.org/java-string-concat-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>String concat( String str)</strong></a></h3><p>Concatenates specified string to the end of this string.</p><pre class="ql-syntax" spellcheck="false"> String s1 = ”Geeks”;
 String s2 = ”forGeeks”;
 String output = s1.concat(s2); // returns “GeeksforGeeks”
</pre><h3><strong>6.&nbsp;</strong><a href="https://www.geeksforgeeks.org/java-string-indexof/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>int indexOf (String s)</strong></a></h3><p>Returns the index within the string of the first occurrence of the specified string.</p><p>If String s is not present in input string then -1 is returned as the default value.</p><pre class="ql-syntax" spellcheck="false">1.   String s = ”Learn Share Learn”;
      int output = s.indexOf(“Share”); // returns 6
2. String s = "Learn Share Learn"
    int output = s.indexOf(“Play”);  // return -1
</pre><h3><strong>7.&nbsp;</strong><a href="https://www.geeksforgeeks.org/java-string-indexof/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>int indexOf (String s, int i)</strong></a></h3><p>Returns the index within the string of the first occurrence of the specified string, starting at the specified index.</p><pre class="ql-syntax" spellcheck="false"> String s = ”Learn Share Learn”;
 int output = s.indexOf("ea",3);// returns 13
</pre><h3><strong>8.&nbsp;</strong><a href="https://www.geeksforgeeks.org/java-lang-string-lastindexof-method/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Int lastIndexOf( String s)</strong></a></h3><p>Returns the index within the string of the last occurrence of the specified string.</p><p>If String s is not present in input string then -1 is returned as the default value.</p><pre class="ql-syntax" spellcheck="false"> 1. String s = ”Learn Share Learn”;
    int output = s.lastIndexOf("a"); // returns 14
2. String s = "Learn Share Learn"
    int output = s.indexOf(“Play”);  // return -1
</pre><h3><strong>9.&nbsp;</strong><a href="https://www.geeksforgeeks.org/boolean-equals-method-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>boolean equals( Object otherObj)</strong></a></h3><p>Compares this string to the specified object.</p><pre class="ql-syntax" spellcheck="false"> Boolean out = “Geeks”.equals(“Geeks”); // returns true
 Boolean out = “Geeks”.equals(“geeks”); // returns false
</pre><h3><strong>10.&nbsp;</strong><a href="https://www.geeksforgeeks.org/equalsignorecase-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>boolean&nbsp;equalsIgnoreCase (String anotherString)</strong></a></h3><p>Compares string to another string, ignoring case considerations.</p><pre class="ql-syntax" spellcheck="false"> Boolean out= “Geeks”.equalsIgnoreCase(“Geeks”); // returns true
 Boolean out = “Geeks”.equalsIgnoreCase(“geeks”); // returns true
</pre><h3><a href="https://www.geeksforgeeks.org/java-lang-string-compareto/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>11. int compareTo( String anotherString)</strong></a><strong>&nbsp;</strong></h3><p>Compares two string lexicographically.</p><pre class="ql-syntax" spellcheck="false"> int out = s1.compareTo(s2);&nbsp;
// where s1 and s2 are
// strings to be compared
 This returns difference s1-s2. If :
 out &lt; 0  // s1 comes before s2
 out = 0  // s1 and s2 are equal.
 out &gt; 0   // s1 comes after s2.
</pre><h3>12.&nbsp;<a href="https://www.geeksforgeeks.org/java-string-compareto-method-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>int compareToIgnoreCase( String anotherString)&nbsp;</strong></a></h3><p>Compares two string lexicographically, ignoring case considerations.</p><pre class="ql-syntax" spellcheck="false"> int out = s1.compareToIgnoreCase(s2);&nbsp;
// where s1 and s2 are
// strings to be compared
 This returns difference s1-s2. If :
 out &lt; 0  // s1 comes before s2
 out = 0   // s1 and s2 are equal.
 out &gt; 0   // s1 comes after s2.
</pre><blockquote><strong><em>Note:</em></strong><em>&nbsp;In this case, it will not consider case of a letter (it will ignore whether it is uppercase or lowercase).</em></blockquote><h3><strong>13.&nbsp;</strong><a href="https://www.geeksforgeeks.org/java-string-tolowercase-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>String toLowerCase()</strong></a></h3><p>Converts all the characters in the String to lower case.</p><pre class="ql-syntax" spellcheck="false">String word1 = “HeLLo”;
String word3 = word1.toLowerCase(); // returns “hello"
</pre><h3><strong>14.&nbsp;</strong><a href="https://www.geeksforgeeks.org/java-touppercase-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>String toUpperCase()</strong></a></h3><p>Converts all the characters in the String to upper case.</p><pre class="ql-syntax" spellcheck="false">String word1 = “HeLLo”;
String word2 = word1.toUpperCase(); // returns “HELLO”
</pre><h3><strong>15.&nbsp;</strong><a href="https://www.geeksforgeeks.org/java-string-trim-method-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>String trim()</strong></a></h3><p>Returns the copy of the String, by removing whitespaces at both ends. It does not affect whitespaces in the middle.</p><pre class="ql-syntax" spellcheck="false">String word1 = “ Learn Share Learn “;
String word2 = word1.trim(); // returns “Learn Share Learn”
</pre><h3><strong>16.</strong><a href="https://www.geeksforgeeks.org/java-lang-string-replace-method-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>&nbsp;String replace (char oldChar, char newChar)</strong></a></h3><p>Returns new string by replacing all occurrences of&nbsp;<em>oldChar&nbsp;</em>with&nbsp;<em>newChar.</em></p><pre class="ql-syntax" spellcheck="false">String s1 = “feeksforfeeks“;
String s2 = “feeksforfeeks”.replace(‘f’ ,’g’); // return “geeksforgeeks”
</pre><blockquote><strong><em>Note:</em></strong><em>&nbsp;s1 is still feeksforfeeks and s2 is geeksgorgeeks</em></blockquote><h3>17.&nbsp;<a href="https://www.geeksforgeeks.org/java-string-contains-method-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">boolean contains(string) :</a></h3><p>Returns true if string contains contains the given string</p><pre class="ql-syntax" spellcheck="false">String s1="geeksforgeeks";
String s2="geeks";
s1.contains(s2) // return true

</pre><h3>18.&nbsp;<a href="https://www.geeksforgeeks.org/java-string-tochararray-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Char[] toCharArray():</a></h3><p>Converts this String to a new character array.</p><pre class="ql-syntax" spellcheck="false">String s1="geeksforgeeks";
char []ch=s1.toCharArray();  // returns [ ''g'', ''e'' , ''e'' , ''k'' , ''s'' , ''f'', ''o'', ''r'' , ''g'' , ''e'' , ''e'' , ''k'' ,''s'' ]
</pre><h3>19.<a href="https://www.geeksforgeeks.org/string-startswith-method-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">&nbsp;boolean starsWith(string):</a></h3><p>Return true if string starts with this prefix.</p><pre class="ql-syntax" spellcheck="false">String s1="geeksforgeeks";
String s2="geeks";
s1.startsWith(s2) // return true
</pre><h2>Example of String Constructor and String Methods</h2><p>Below is the implementation of the above mentioned topic:</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java code to illustrate different constructors and methods
// String class.
import java.io.*;
import java.util.*;

// Driver Class
class Test
{
      // main function
    public static void main (String[] args)
    {
        String s= "GeeksforGeeks";
        // or String s= new String ("GeeksforGeeks");

        // Returns the number of characters in the String.
        System.out.println("String length = " + s.length());

        // Returns the character at ith index.
        System.out.println("Character at 3rd position = "
                           + s.charAt(3));

        // Return the substring from the ith&nbsp; index character
        // to end of string
        System.out.println("Substring " + s.substring(3));

        // Returns the substring from i to j-1 index.
        System.out.println("Substring&nbsp; = " + s.substring(2,5));

        // Concatenates string2 to the end of string1.
        String s1 = "Geeks";
        String s2 = "forGeeks";
        System.out.println("Concatenated string&nbsp; = " +
                            s1.concat(s2));

        // Returns the index within the string
        // of the first occurrence of the specified string.
        String s4 = "Learn Share Learn";
        System.out.println("Index of Share " +
                           s4.indexOf("Share"));

        // Returns the index within the string of the
        // first occurrence of the specified string,
        // starting at the specified index.
        System.out.println("Index of a&nbsp; = " +
                           s4.indexOf(''a'',3));

        // Checking equality of Strings
        Boolean out = "Geeks".equals("geeks");
        System.out.println("Checking Equality&nbsp; " + out);
        out = "Geeks".equals("Geeks");
        System.out.println("Checking Equality&nbsp; " + out);

        out = "Geeks".equalsIgnoreCase("gEeks ");
        System.out.println("Checking Equality " + out);

        //If ASCII difference is zero then the two strings are similar
        int out1 = s1.compareTo(s2);
        System.out.println("the difference between ASCII value is="+out1);
        // Converting cases
        String word1 = "GeeKyMe";
        System.out.println("Changing to lower Case " +
                            word1.toLowerCase());

        // Converting cases
        String word2 = "GeekyME";
        System.out.println("Changing to UPPER Case " +
                            word2.toUpperCase());

        // Trimming the word
        String word4 = " Learn Share Learn ";
        System.out.println("Trim the word " + word4.trim());

        // Replacing characters
        String str1 = "feeksforfeeks";
        System.out.println("Original String " + str1);
        String str2 = "feeksforfeeks".replace(''f'' ,''g'') ;
        System.out.println("Replaced f with g -&gt; " + str2);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">String length = 13
Character at 3rd position = k
Substring ksforGeeks
Substring&nbsp; = eks
Concatenated string&nbsp; = GeeksforGeeks
Index of Share 6
Index of a&nbsp; = 8
Checking Equality&nbsp; false
Checking Equality&nbsp;...


</pre><p><strong>For Set – 2 you can refer:&nbsp;</strong><a href="https://www.geeksforgeeks.org/java-lang-string-class-java-set-2/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java.lang.String class in Java | Set 2</a></p><p>&nbsp;This article is contributed by&nbsp;<strong>Rahul Agrawal and our helpfull users.&nbsp;</strong></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e099397d-8817-4752-a75f-a49f8b540468'::uuid, 2, '32f1f62f-1918-476a-854b-76e204dc83e0'::uuid, 'LESSON'::public.resource_type, 'Java.lang.String class in Java | Set 2', NULL, '<p>In this article we would be discussing different constructor and methods provided by java.lang.String. Strings in java are immutable. Now lets discuss some of the methods provided by String class.&nbsp;<strong>Methods:</strong></p><ol><li><strong>public int codePointAt(int index)</strong>&nbsp;– It takes as parameter a<em>&nbsp;index</em>&nbsp;which must be from 0 to length() – 1. ad returns a character&nbsp;<em>unicode point&nbsp;</em>of a index.</li><li><strong>public int codePointBefore(int index)</strong>&nbsp;– It takes as parameter a<em>&nbsp;index</em>&nbsp;which must be from 0 to length() – 1. and returns a&nbsp;<em>unicode point</em>&nbsp;of a character just before the index .</li><li><strong>public int codePointCount(int start_index, int end_index)</strong>&nbsp;– It takes as parameter&nbsp;<em>start_index&nbsp;</em>and&nbsp;<em>end_index</em>&nbsp;and returns the count of&nbsp;<em>Unicode code points&nbsp;</em>between the range.</li><li><a href="https://www.geeksforgeeks.org/java-string-subsequence-method-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public CharSequence subSequence(int start_index, int end_index)</strong></a>&nbsp;– This method returns&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>CharSequence</em></a>&nbsp;which is a subsequence of the String on which this method is invoked.&nbsp;<strong>Note:&nbsp;</strong>It behaves similarly to&nbsp;<strong>subString(int start_index, int end_index)</strong>, but&nbsp;<strong>subString()</strong>&nbsp;returns&nbsp;<strong>String</strong>&nbsp;while&nbsp;<strong>subSequence</strong>&nbsp;returns&nbsp;<strong>CharSequence.</strong></li><li><a href="https://www.geeksforgeeks.org/java-string-contains-method-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public boolean contains(CharSequence char_seq)</strong></a>&nbsp;– It returns&nbsp;<em>true</em>&nbsp;if the given&nbsp;<em>CharSquence</em>&nbsp;is present in the String on which its invoked.</li><li><strong>public boolean contentEquals(CharSequence char_seq)&nbsp;</strong>– It returns&nbsp;<em>true</em>&nbsp;only if the given&nbsp;<em>CharSequence</em>&nbsp;exactly matches the String on which its invoked</li><li><a href="https://www.geeksforgeeks.org/java-string-endswith-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public boolean endsWith(String suf)</strong></a>&nbsp;– It takes in parameter a String&nbsp;<em>suffix</em>&nbsp;and return&nbsp;<em>true</em>&nbsp;if the String has same suffix.</li><li><a href="https://www.geeksforgeeks.org/java-lang-string-startswith-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public boolean startsWith(String pre)</strong></a>&nbsp;– It takes in parameter a String&nbsp;<em>prefix</em>&nbsp;and returns&nbsp;<em>true</em>&nbsp;if the String has a same prefix</li><li><a href="https://www.geeksforgeeks.org/java-string-getchars-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public void getChars(int start, int end, char[] destination, int destination_start)</strong></a>&nbsp;: It takes in four parameters,&nbsp;<em>start and end&nbsp;</em>refers to the range which is to copied to the character array,&nbsp;<em>destination</em>&nbsp;is the character array to be copied to, and&nbsp;<em>destination_start</em>&nbsp;is the starting location of the destination array.</li><li><a href="https://www.geeksforgeeks.org/java-string-tochararray-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public char[] toCharArray()&nbsp;</strong></a>– It converts the entire String to the character array.&nbsp;<strong>Note :-</strong>&nbsp;<strong>getChars</strong>&nbsp;provide more flexibility when, a range of characters is to be copied to an existing array or a new array while&nbsp;<strong>toCharArray</strong>&nbsp;converts the entire string to a new character array.</li><li><strong>public int hashCode()</strong>&nbsp;– It returns hashcode of the given String. There is predefined formula to compute the hashcode of the String:</li></ol><pre class="ql-syntax" spellcheck="false">s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
where,
n - is the length of the String
i - is the ith character of the string
</pre><ol><li><a href="https://www.geeksforgeeks.org/interning-of-string/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public String intern()</strong></a>&nbsp;– It returns the canonical form of the String object on which it is invoked. ” When the intern method is invoked, if the pool already contains a string equal to this String object as determined by the equals(Object) method, then the string from the pool is returned. Otherwise, this String object is added to the pool and a reference to this String object is returned. ” –&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#intern--" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java String Documentation.</a></li><li><a href="https://www.geeksforgeeks.org/java-string-isempty-method-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public boolean isEmpty()</strong></a>&nbsp;– It returns true if the&nbsp;<em>length</em>&nbsp;of the String is&nbsp;<em>0</em>.</li><li><a href="https://www.geeksforgeeks.org/java-string-format-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public static String format(String f, Object… arguments)</strong></a>&nbsp;– Returns the formatted String according to the format specifier<em>&nbsp;f</em>, the&nbsp;<em>arguments&nbsp;</em>should exactly equal to the number of format specifier used .&nbsp;<strong>Variation:&nbsp;</strong><a href="https://www.geeksforgeeks.org/java-string-format-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public static String format(Locale l, String f, Object… arguments)</strong></a>– Returns the formatted String as per&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Locale</em></a>&nbsp;used.</li><li><a href="https://www.geeksforgeeks.org/java-lang-string-matches-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public boolean matches(String reg_exp)</strong></a>&nbsp;– It returns true if the string matches the&nbsp;<a href="https://www.geeksforgeeks.org/write-regular-expressions/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">regular expression</a>( reg_exp).</li><li><strong>public boolean regionMatches(int start_OString, String another, int start_AString, int no_of_char)</strong>&nbsp;– It returns true if the region of original string starting with index&nbsp;<em>start_OString</em>&nbsp;matches with the region of&nbsp;<em>another string&nbsp;</em>starting with&nbsp;<em>string_AString</em>, and&nbsp;<em>no_of_char</em>&nbsp;refers to the number of character to be compared.&nbsp;<strong>Variation :</strong>&nbsp;<strong>public boolean regionMatches(boolean ignore_case, int start_OString, String another, int start_AString, int no_of_char)</strong>&nbsp;– This variation of a method provide flexibility when we want to ignore the case while comparing substring. If the first parameter i.e.&nbsp;<em>ignore_case</em>&nbsp;is&nbsp;<em>true</em>&nbsp;it neglects the case and compares but if it is&nbsp;<em>false</em>&nbsp;it behaves similarly as the first version of the method without&nbsp;<em>ignore_case</em></li><li><a href="https://www.geeksforgeeks.org/split-string-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public String[] split(String reg_exp)</strong></a>&nbsp;– It splits the string around the regular expression and returns a String array.&nbsp;<strong>Variation :</strong>&nbsp;<a href="https://www.geeksforgeeks.org/split-string-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public String[] split(String reg_exp, int limit)</strong></a>&nbsp;– It splits the string around the regular expression and&nbsp;<em>limit&nbsp;</em>refers to the number of times the&nbsp;<em>reg_exp</em>&nbsp;is applied and it is&nbsp;<em>the length of the resulting array&nbsp;</em>and reg_exp is n is applied only length – 1 times.</li><li><a href="https://www.geeksforgeeks.org/java-string-join-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public static String join(CharSequence de_limiter, CharSequence… elements)</strong></a>&nbsp;– It returns a string which contains all the&nbsp;<em>elements</em>&nbsp;joins by the&nbsp;<em>de_limiter</em>.&nbsp;<strong>Variation:</strong>&nbsp;<a href="https://www.geeksforgeeks.org/java-string-join-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>public static String join(CharSequence de_limiter, Iterable elements)</strong></a>&nbsp;– It performs the same function but the second parameter is<em>&nbsp;Iterable&nbsp;</em>which makes it flexible to work with different collection classes.</li><li><strong>public String replaceAll(String reg_exp, String replacement)</strong>&nbsp;– It replaces all the Substring of the original string that matches the&nbsp;<em>reg_exp</em>&nbsp;with&nbsp;<em>replacement</em>&nbsp;and returns the modified String.</li><li><strong>public String replaceFirst(String reg_exp, String replacement)</strong>&nbsp;– It replaces the first occurrence of the<em>&nbsp;reg-exp</em>&nbsp;in the original string with the&nbsp;<em>replacement</em>&nbsp;and returns the modified String.&nbsp;<strong>Note :- replaceAll</strong>&nbsp;and&nbsp;<strong>replaceFirst</strong>&nbsp;doesn’t changes the original String rather it creates a new string with modification.</li></ol><p>For more methods on String refer to&nbsp;<a href="https://www.geeksforgeeks.org/string-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">String class in java</a>&nbsp;<strong>Reference:&nbsp;</strong><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">https://docs.oracle.com/javase/8/docs/api/java/lang/String.html</a></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('72c1027a-ef88-40c7-8938-93a33be806a4'::uuid, 3, '32f1f62f-1918-476a-854b-76e204dc83e0'::uuid, 'LESSON'::public.resource_type, 'StringTokenizer Class in Java', NULL, '<p class="ql-align-justify"><strong>StringTokenizer class</strong>&nbsp;in Java is used to break a string into tokens. A StringTokenizer object internally maintains a current position within the string to be tokenized. Some operations advance this current position past the characters processed.</p><p>A token is returned by taking a substring of the string that was used to create the StringTokenizer object. It provides the first step in the parsing process often called lexer or scanner.</p><h2>Java String Tokenization</h2><p>The String Tokenizer class allows an application to break strings into tokens. It implements the Enumeration interface. This class is used for parsing data. To use the String Tokenizer class we have to specify an input string and a string that contains delimiters. Delimiters are the characters that separate tokens. Each character in the delimiter string is considered a valid delimiter. Default delimiters are whitespaces, new lines, spaces, and tabs.&nbsp;</p><p><strong>Illustration:</strong></p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/cdn-uploads/StringTokenizer.png">&nbsp;</p><h2><strong>Constructors of StringToken</strong></h2><p>Let us consider ‘str’ as the string to be tokenized. In that case we have three constructor cases as mentioned below:</p><p>Constructor</p><p>Description</p><p><strong>StringTokenizer(String str)</strong></p><p>Default delimiters like newline, space, tab, carriage return, and form feed.</p><p><strong>StringTokenizer(String str, String delim)</strong></p><p>delim is a set of delimiters that are used to tokenize the given string.</p><p><strong>StringTokenizer(String str, String delim, boolean flag)</strong></p><p>The first two parameters have the same meaning wherein The flag&nbsp;serves the following purpose.</p><h3>Cases of StringToken Constructors</h3><p><strong>1.&nbsp;</strong>If the flag is false, delimiter characters serve to separate tokens</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">Input : if string --&gt; "hello geeks" and Delimiter is " ", then
Output:  tokens are "hello" and "geeks".
</pre><p><strong>2.&nbsp;</strong>If the flag is true, delimiter characters are considered to be tokens.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">Input : String --&gt; is "hello geeks"and Delimiter is " ", then
Output: Tokens --&gt; "hello", " " and "geeks".
</pre><p><strong>3.&nbsp;</strong>Multiple delimiters can be chosen for a single string.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">Syntax: StringTokenizer st1 = new StringTokenizer( "2+3-1*8/4", "+*-/");

Input : String --&gt; is "2+3-1*8/4" and Delimiters are +,*,-,/
Output: Tokens --&gt; "2","3","1","8","4".
</pre><h2>Examples of Java String Tokenizer Constructors</h2><p><br></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to implement</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java String Tokenizer Constructors</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Driver Class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// main function</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Constructor 1</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Using Constructor 1 - "</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Creating object of class inside main() method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">StringTokenizer st1 = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">StringTokenizer(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"Hello Geeks How are you"</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: blue;">" "</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Condition holds true till there is single token</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// remaining using hasMoreTokens() method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>while</strong></code> <code style="color: black; background-color: initial;">(st1.hasMoreTokens())</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Getting next tokens</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(st1.nextToken());</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Constructor 2</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Using Constructor 2 - "</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Again creating object of class inside main()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">StringTokenizer st2 = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">StringTokenizer(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"JAVA : Code : String"</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: blue;">" :"</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// If tokens are present</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>while</strong></code> <code style="color: black; background-color: initial;">(st2.hasMoreTokens())</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Print all tokens</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(st2.nextToken());</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Constructor 3</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Using Constructor 3 - "</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Again creating object of class inside main()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">StringTokenizer st3 = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">StringTokenizer(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"JAVA : Code : String"</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: blue;">" :"</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>true</strong></code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>while</strong></code> <code style="color: black; background-color: initial;">(st3.hasMoreTokens())</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(st3.nextToken());</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Using Constructor 1 -
Hello
Geeks
How
are
you
Using Constructor 2 -
JAVA
Code
String
Using Constructor 3 -
JAVA

:

Code

:

String
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ba745b03-5a74-4509-a66e-8295e272257c'::uuid, 4, '32f1f62f-1918-476a-854b-76e204dc83e0'::uuid, 'LESSON'::public.resource_type, 'StringTokenizer Methods in Java with Examples | Set 2', NULL, '<p><a href="https://www.geeksforgeeks.org/stringtokenizer-class-java-example-set-1-constructors/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">StringTokenizer class</a>&nbsp;in Java is used to break a string into tokens. One must go through&nbsp;<a href="https://www.geeksforgeeks.org/stringtokenizer-class-java-example-set-1-constructors/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">StringTokenizer class</a>&nbsp;where concepts and constructors are discussed which help in better understanding&nbsp;methods that are been discussed here below as follows:</p><p><strong>Methods of StringTokenizer class are as follows:</strong></p><ul><li>hasMoreToken</li><li>nextToken</li><li>countTokens</li><li>nextElement</li><li>hasMoreElements</li></ul><p><strong>Method 1:&nbsp;</strong>hasMoreTokens()</p><p>The method plays role in testing if tokens are present for the StringTokenizer’s string. Those characters that are considered to be delimiters by the StringTokenizer object are changed to characters in the string delimiter. Then the next token to the current position in the string is returned.&nbsp;</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">public boolean hasMoreTokens()
</pre><p><strong>Return Type:</strong>&nbsp;A boolean value, true if and only if next token to the current position in the string exists, else false.</p><p><strong>Method 2:</strong>&nbsp;nextToken()</p><p>The method returns the next token from the given StringTokenizer.&nbsp;</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">public String nextToken()
</pre><p><strong>Return Type:</strong>&nbsp;The next token from the given StringTokenizer if present.</p><p><strong>Exception Thrown:</strong>&nbsp;<a href="https://www.geeksforgeeks.org/how-to-fix-java-util-nosuchelementexception-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">NoSuchElementException</a>&nbsp;if no more tokens are left.</p><p><strong>Method 3: countTokens()</strong></p><p>The method returns the total number of tokens present so that we can use nextToken() method before it gives an exception.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">public int countTokens()
</pre><p><strong>Return Type:&nbsp;</strong>the number of tokens remaining in the string using the current delimiter set.</p><p><strong>Example</strong>&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to Illustrate Methods of StringTokenizer class</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Via hasMoreToken(), nextToken() and countTokens()</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Importing required classes</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Main class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Main driver method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[]) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Input strings</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">String mydelim = </code><code style="background-color: initial; color: blue;">" : "</code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">String mystr = </code><code style="background-color: initial; color: blue;">"JAVA : Code : String : Tokenizer : Geeks"</code><code style="background-color: initial; color: black;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Use of Constructor 2</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Here we are passing Delimiter - "mydelim"</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">StringTokenizer geeks3 =</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">StringTokenizer(mystr, mydelim);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Printing count of tokens and tokens</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// using countTokens() method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">count = geeks3.countTokens();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Number of tokens : "</code> <code style="color: black; background-color: initial;">+ count + </code><code style="color: blue; background-color: initial;">"\n"</code><code style="color: black; background-color: initial;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Iterating to get the tokens</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; count; i++)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"token at ["</code> <code style="color: black; background-color: initial;">+ i + </code><code style="color: blue; background-color: initial;">"] : "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ geeks3.nextToken());</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// checks for more tokens using hasMoreTokens() method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// which holds true till there is single element remaining</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>while</strong></code> <code style="color: black; background-color: initial;">(geeks3.hasMoreTokens())</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Returning the next token</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// using nextToken() method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(geeks3.nextToken());</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Number of tokens : 5

token at [0] : JAVA
token at [1] : Code
token at [2] : String
token at [3] : Tokenizer
token at [4] : Geeks
</pre><p><strong>Method 4:&nbsp;</strong>nextElement()</p><p>The method works similar to nextToken except that it returns an Object rather than String.&nbsp;Exists so that this class can implement the Enumeration interface.&nbsp;</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">public Object nextElement()
</pre><p><strong>Return Type:</strong>&nbsp;the next token from the given StringTokenizer.</p><p><strong>Exception Thrown:</strong>&nbsp;<a href="https://www.geeksforgeeks.org/how-to-fix-java-util-nosuchelementexception-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">NoSuchElementException</a>&nbsp;if there are no more tokens left.</p><p><strong>Method 5:&nbsp;</strong>hasMoreElements()</p><p>This method returns the same value as hasMoreToken. It exists so that the class can implement the Enumeration interface.&nbsp;</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">public boolean hasMoreElements()
</pre><p><strong>Return Type:</strong>&nbsp;A boolean value, true if tokens are present in the string, else false</p><p><strong>Example</strong>&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to Illustrate Methods of StringTokenizer</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Class Via hasMoreElements, nextElement and nextElement</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Importing required classes</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Main class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Main driver method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Input strings</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">String mydelim = </code><code style="background-color: initial; color: blue;">" : "</code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">String mystr</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">= </code><code style="background-color: initial; color: blue;">"JAVA : Code : String : Tokenizer : Geeks"</code><code style="background-color: initial; color: black;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Use of Constructor 2</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Here we are passing Delimiter - "mydelim"</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">StringTokenizer geeks</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">= </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">StringTokenizer(mystr, mydelim);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Counting no. of tokens present</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// using countTokens() method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">count = geeks.countTokens();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Printing no. of tokens present</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Number of tokens : "</code> <code style="color: black; background-color: initial;">+ count);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">//&nbsp; Condition holds true till there is</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// single token remaining using hasMoreElements()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// method True if tokens are present</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>while</strong></code> <code style="color: black; background-color: initial;">(geeks.hasMoreElements())</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">//&nbsp; Returning the next token</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// using nextElement() method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(geeks.nextElement());</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Number of tokens : 5
JAVA
Code
String
Tokenizer
Geeks
</pre><blockquote><strong><em>Tip:&nbsp;</em></strong><em>Do remember certain important points as listed:</em></blockquote><ul><li><em>countTokens() method is a good alternative in using the combination&nbsp;hasMoreTokens()&nbsp;and&nbsp;nextToken().</em></li><li><em>The combination of&nbsp;countTokens()&nbsp;and&nbsp;nextToken()&nbsp;is used if you are interested in the number of tokens also.</em></li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c8c21023-6a80-4c47-94ec-5e044d729bc4'::uuid, 0, '3db00de3-31f0-4e8e-9923-8bc08a5da6c9'::uuid, 'LESSON'::public.resource_type, 'Arrays in Java', NULL, '<p><strong>In Java, Array</strong>&nbsp;is a group of like-typed variables referred to by a common name. Arrays in Java work differently than they do in C/C++. Following are some important points about Java arrays.&nbsp;</p><h2>Arrays in Java</h2><ul><li>In Java, all arrays are dynamically allocated. (discussed below)</li><li>Arrays may be stored in contiguous memory [consecutive memory locations].</li><li>Since arrays are objects in Java, we can find their length using the object property&nbsp;<em>length</em>. This is different from C/C++, where we find length using size of.</li><li>A Java array variable can also be declared like other variables with [] after the data type.</li><li>The variables in the array are ordered, and each has an index beginning with 0.</li><li>Java array can also be used as a static field, a local variable, or a method parameter.</li></ul><p>An array can contain primitives (int, char, etc.) and object (or non-primitive) references of a class, depending on the definition of the array. In the case of primitive data types, the actual values might be stored in contiguous memory locations (JVM does not guarantee this behavior). In the case of class objects,&nbsp;<a href="https://www.geeksforgeeks.org/g-fact-46/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">the actual objects are stored in a heap segment</a>.&nbsp;To learn more about Java Array, go through&nbsp;<a href="https://www.geeksforgeeks.org/courses/free-java-course-online" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java programming course</a>&nbsp;here.</p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/Arrays1.png"></p><blockquote><strong><em>Note:</em></strong><em>&nbsp;This storage of arrays helps us randomly access the elements of an array [Support Random Access].</em></blockquote><h2>Creating, Initializing, and Accessing an Arrays</h2><p><br></p><h3><strong>One-Dimensional Arrays</strong></h3><p>The general form of a one-dimensional array declaration is&nbsp;</p><pre class="ql-syntax" spellcheck="false">-- type var-name[];
-- type[] var-name;
</pre><p>An array declaration has two components: the type and the name.&nbsp;<em>type</em>&nbsp;declares the element type of the array. The element type determines the data type of each element that comprises the array. Like an array of integers, we can also create an array of other primitive data types like char, float, double, etc., or user-defined data types (objects of a class). Thus, the element type for the array determines what type of data the array will hold.&nbsp;</p><p><strong>Example:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">// both are valid declarations
int intArray[];
int[] intArray;
// similar to int we can declare
// byte , short, boolean, long, float
// double, char
// an array of references to objects of
// the class MyClass (a class created by user)
MyClass myClassArray[];
// array of Object
Object[]  ao,
// array of Collection
// of unknown type
Collection[] ca;
</pre><p class="ql-align-justify">Although the first declaration establishes that int Array is an array variable,&nbsp;<strong>no actual array exists</strong>. It merely tells the compiler that this variable (int Array) will hold an array of the integer type. To link int Array with an actual, physical array of integers, you must allocate one using&nbsp;<strong>new</strong>&nbsp;and assign it to int Array.&nbsp;</p><h2>Instantiating an Array in Java</h2><p>When an array is declared, only a reference of an array is created. To create or give memory to the array, you create an array like this: The general form of&nbsp;<em>new</em>&nbsp;as it applies to one-dimensional arrays appears as follows:&nbsp;</p><pre class="ql-syntax" spellcheck="false">var-name = new type [size];
</pre><p>Here,&nbsp;<em>type</em>&nbsp;specifies the type of data being allocated,&nbsp;<em>size</em>&nbsp;determines the number of elements in the array, and&nbsp;<em>var-name</em>&nbsp;is the name of the array variable that is linked to the array. To use&nbsp;<em>new</em>&nbsp;to allocate an array,&nbsp;<strong>you must specify the type and number of elements to allocate.</strong></p><p><strong>Example:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">//declaring array
int intArray[];
// allocating memory to array
intArray = new int[20];
// combining both statements in one
int[] intArray = new int[20];
</pre><blockquote><strong><em>Note:&nbsp;</em></strong><em>The elements in the array allocated by&nbsp;new&nbsp;will automatically be initialized to&nbsp;</em><strong><em>zero</em></strong><em>&nbsp;(for numeric types),&nbsp;</em><strong><em>false</em></strong><em>&nbsp;(for boolean), or&nbsp;</em><strong><em>null</em></strong><em>&nbsp;(for reference types). Do refer to&nbsp;</em><a href="https://www.geeksforgeeks.org/default-array-values-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>default array values in Java</em></a><em>.</em></blockquote><blockquote><em>Obtaining an array is a two-step process. First, you must declare a variable of the desired array type. Second, you must allocate the memory to hold the array, using new, and assign it to the array variable. Thus,&nbsp;</em><strong><em>in Java</em></strong><em>,</em><strong><em>&nbsp;all arrays are dynamically allocated.</em></strong></blockquote><h2>Array Literal in Java</h2><p>In a situation where the size of the array and variables of the array are already known, array literals can be used.&nbsp;</p><pre class="ql-syntax" spellcheck="false">// Declaring array literal
int[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 };
</pre><ul><li>The length of this array determines the length of the created array.</li><li>There is no need to write the new int[] part in the latest versions of Java.</li></ul><h3>Accessing Java Array Elements using for Loop</h3><p>Each element in the array is accessed via its index. The index begins with 0 and ends at (total array size)-1. All the elements of array can be accessed using Java for Loop.</p><pre class="ql-syntax" spellcheck="false"> // accessing the elements of the specified array
for (int i = 0; i &lt; arr.length; i++)
             System.out.println("Element at index " + i + " : "+ arr[i]);
</pre><p><strong>Implementation:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate creating an array
// of integers,  puts some values in the array,
// and prints each value to standard output.

class GFG {
    public static void main(String[] args)
    {
        // declares an Array of integers.
        int[] arr;

        // allocating memory for 5 integers.
        arr = new int[5];

        // initialize the first elements of the array
        arr[0] = 10;

        // initialize the second elements of the array
        arr[1] = 20;

        // so on...
        arr[2] = 30;
        arr[3] = 40;
        arr[4] = 50;

        // accessing the elements of the specified array
        for (int i = 0; i &lt; arr.length; i++)
            System.out.println("Element at index " + i
                               + " : " + arr[i]);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Element at index 0 : 10
Element at index 1 : 20
Element at index 2 : 30
Element at index 3 : 40
Element at index 4 : 50
</pre><h4>Complexity of the above method:</h4><blockquote><strong><em>Time Complexity: O(n)</em></strong></blockquote><blockquote><strong><em>Auxiliary Space: O(1)</em></strong></blockquote><p>You can also access java arrays using&nbsp;<a href="https://www.geeksforgeeks.org/for-each-loop-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">for each loops</a>.&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20231213014325/Arrays-in-Java-660.png"></p><h2>Arrays of Objects in Java</h2><p>An array of objects is created like an array of primitive-type data items in the following way.&nbsp;</p><pre class="ql-syntax" spellcheck="false">Student[] arr = new Student[5]; //Student is a user-defined class
</pre><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">-- data type[] arrName;
-- datatype arrName[];
-- datatype [] arrName;
</pre><h2>Example of Arrays of Objects</h2><h4>Example 1:</h4><p>Below is the implementation of the above mentioned topic:</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">import java.io.*;

class GFG {
    public static void main (String[] args) {

      int [] arr=new int [4];
      // 4 is the size of arr

      System.out.println("Array Size:"+arr.length);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Array Size:4
</pre><p>The Student Array contains five memory spaces each of the size of Student class in which the address of five Student objects can be stored. The Student objects have to be instantiated using the constructor of the Student class, and their references should be assigned to the array elements in the following way.&nbsp;</p><h4><strong>Example 2:</strong></h4><p>Below is the implementation of the above mentioned topic:</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate creating
//  an array of objects

class Student {
    public int roll_no;
    public String name;
    Student(int roll_no, String name)
    {
        this.roll_no = roll_no;
        this.name = name;
    }
}

// Elements of the array are objects of a class Student.
public class GFG {
    public static void main(String[] args)
    {
        // declares an Array of Student
        Student[] arr;

        // allocating memory for 5 objects of type Student.
        arr = new Student[5];

        // initialize the first elements of the array
        arr[0] = new Student(1, "aman");

        // initialize the second elements of the array
        arr[1] = new Student(2, "vaibhav");

        // so on...
        arr[2] = new Student(3, "shikar");
        arr[3] = new Student(4, "dharmesh");
        arr[4] = new Student(5, "mohit");

        // accessing the elements of the specified array
        for (int i = 0; i &lt; arr.length; i++)
            System.out.println("Element at " + i + " : "
                               + arr[i].roll_no + " "
                               + arr[i].name);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Element at 0 : 1 aman
Element at 1 : 2 vaibhav
Element at 2 : 3 shikar
Element at 3 : 4 dharmesh
Element at 4 : 5 mohit
</pre><h4>Complexity of the above method:</h4><blockquote><strong><em>Time Complexity: O(n)</em></strong></blockquote><blockquote><strong><em>Auxiliary Space : O(1)</em></strong></blockquote><h4>Example 3</h4><p>An array of objects is also created like :&nbsp;</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate creating
//  an array of objects

class Student
{

    public String name;
    Student(String name)
    {
        this.name = name;
    }
      @Override
    public String toString(){
        return name;
    }
}

// Elements of the array are objects of a class Student.
public class GFG
{
    public static void main (String[] args)
    {
           // declares an Array and initializing  the elements of the array
        Student[] myStudents = new Student[]{new Student("Dharma"),new Student("sanvi"),new Student("Rupa"),new Student("Ajay")};

        // accessing the elements of the specified array
        for(Student m:myStudents){
            System.out.println(m);
        }
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Dharma
sanvi
Rupa
Ajay
</pre><h3>What happens if we try to access elements outside the array size?</h3><p>JVM throws&nbsp;<strong>ArrayIndexOutOfBoundsException</strong>&nbsp;to indicate that the array has been accessed with an illegal index. The index is either negative or greater than or equal to the size of an array.</p><p><strong>Below code shows what happens if we try to access elements outside the array size:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Code for showing error "ArrayIndexOutOfBoundsException"

public class GFG {
    public static void main(String[] args)
    {
        int[] arr = new int[4];
        arr[0] = 10;
        arr[1] = 20;
        arr[2] = 30;
        arr[3] = 40;

        System.out.println(
            "Trying to access element outside the size of array");
        System.out.println(arr[5]);
    }
}
</pre><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Trying to access element outside the size of array
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 5 out of bounds for length 4
at GFG.main(GFG.java:13)
</pre><h4>Example (Iterating the array):</h4><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">public class GFG {
    public static void main(String[] args)
    {
        int[] arr = new int[2];
        arr[0] = 10;
        arr[1] = 20;

        for (int i = 0; i &lt; arr.length; i++)
            System.out.println(arr[i]);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">10
20
</pre><h4>Complexity of the above method:</h4><blockquote><strong><em>Time Complexity: O(n),</em></strong><em>here n is size of array.</em></blockquote><blockquote><strong><em>Auxiliary Space: O(1)</em></strong><em>, since no extra space required.</em></blockquote><h2>Multidimensional Arrays in Java</h2><p>Multidimensional arrays are&nbsp;<strong>arrays of arrays</strong>&nbsp;with each element of the array holding the reference of other arrays. These are also known as&nbsp;<a href="https://www.geeksforgeeks.org/jagged-array-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Jagged Arrays</a>. A multidimensional array is created by appending one set of square brackets ([]) per dimension.&nbsp;</p><h4><strong>Syntax of Java Multidimensional Array</strong></h4><p>There are 2 methods to declare Java Multidimensional Arrays as mentioned below:</p><pre class="ql-syntax" spellcheck="false">-- datatype [][] arrayrefvariable;
-- datatype arrayrefvariable[][];
</pre><p><strong>Example:</strong></p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to demonstrate
// Java Multidimensional Array
import java.io.*;

// Driver class
class GFG {
    public static void main(String[] args)
    {
        // Syntax
        int[][] arr = new int[3][3];
        // 3 row and 3 column

          // Number of Rows
        System.out.println("Number of Rows:"+
                           arr.length);

          // Number of Columns
        System.out.println("Number of Columns:"+
                           arr[0].length);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Number of Rows:3
Number of Columns:3
</pre><p><br></p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20231213014406/MultiDimensional-Array-660.png"></p><h3>Multidimensional Array Declaration</h3><pre class="ql-syntax" spellcheck="false">int[][] intArray = new int[10][20]; //a 2D array or matrix
int[][][] intArray = new int[10][20][10]; //a 3D array
</pre><h2>Example of Muilti Dimensional Array in Java</h2><p><br></p><h3><strong>Example 1:</strong></h3><p>Below is the implementation of the above method:</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to Multidimensional Array

// Driver Class
public class multiDimensional {
      // main function
    public static void main(String args[])
    {
        // declaring and initializing 2D array
        int arr[][]
            = { { 2, 7, 9 }, { 3, 6, 1 }, { 7, 4, 2 } };

        // printing 2D array
        for (int i = 0; i &lt; 3; i++) {
            for (int j = 0; j &lt; 3; j++)
                System.out.print(arr[i][j] + " ");

            System.out.println();
        }
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">2 7 9
3 6 1
7 4 2
</pre><h3>Passing Arrays to Methods</h3><p>Like variables, we can also pass arrays to methods. For example, the below program passes the array to method&nbsp;<em>sum</em>&nbsp;to calculate the sum of the array’s values.</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate
// passing of array to method

public class Test {
    // Driver method
    public static void main(String args[])
    {
        int arr[] = { 3, 1, 2, 5, 4 };

        // passing array to method m1
        sum(arr);
    }

    public static void sum(int[] arr)
    {
        // getting sum of array values
        int sum = 0;

        for (int i = 0; i &lt; arr.length; i++)
            sum += arr[i];

        System.out.println("sum of array values : " + sum);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">sum of array values : 15
</pre><h4>Complexity of the above method:</h4><blockquote><strong><em>Time Complexity:&nbsp;</em></strong><em>O(n)</em></blockquote><blockquote><strong><em>Auxiliary Space :</em></strong><em>&nbsp;O(1)</em></blockquote><h3>Returning Arrays from Methods</h3><p>As usual, a method can also return an array. For example, the below program returns an array from method&nbsp;<em>m1</em>.&nbsp;</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate
// return of array from method

class Test {
    // Driver method
    public static void main(String args[])
    {
        int arr[] = m1();

        for (int i = 0; i &lt; arr.length; i++)
            System.out.print(arr[i] + " ");
    }

    public static int[] m1()
    {
        // returning  array
        return new int[] { 1, 2, 3 };
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">1 2 3
</pre><h4>Complexity of the above method:</h4><blockquote><strong><em>Time Complexity: O(n)&nbsp;</em></strong></blockquote><blockquote><strong><em>Auxiliary Space : O(1)</em></strong></blockquote><h3>Class Objects for Arrays</h3><p>Every array has an associated Class object, shared with all other arrays with the same component type.&nbsp;</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate
// Class Objects for Arrays

class Test {
    public static void main(String args[])
    {
        int intArray[] = new int[3];
        byte byteArray[] = new byte[3];
        short shortsArray[] = new short[3];

        // array of Strings
        String[] strArray = new String[3];

        System.out.println(intArray.getClass());
        System.out.println(
            intArray.getClass().getSuperclass());
        System.out.println(byteArray.getClass());
        System.out.println(shortsArray.getClass());
        System.out.println(strArray.getClass());
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">class [I
class java.lang.Object
class [B
class [S
class [Ljava.lang.String;
</pre><h4><strong>Explanation of the above method:</strong></h4><ol><li>The string “[I” is the run-time type signature for the class object “array with component type&nbsp;<em>int</em>.”</li><li>The only direct superclass of an array type is&nbsp;<a href="https://www.geeksforgeeks.org/object-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">java.lang.Object</a>.</li><li>The string “[B” is the run-time type signature for the class object “array with component type&nbsp;<em>byte</em>.”</li><li>The string “[S” is the run-time type signature for the class object “array with component type&nbsp;<em>short</em>.”</li><li>The string “[L” is the run-time type signature for the class object “array with component type of a Class.” The Class name is then followed.</li></ol><h2>Java Array Members</h2><p>Now, as you know that arrays are objects of a class, and a direct superclass of arrays is a class Object. The members of an array type are all of the following:&nbsp;</p><ul><li>The public final field&nbsp;<em>length</em>&nbsp;contains the number of components of the array. Length may be positive or zero.</li><li>All the members are inherited from class Object; the only method of Object that is not inherited is its&nbsp;<a href="https://www.geeksforgeeks.org/clone-method-in-java-2/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">clone</a>&nbsp;method.</li><li>The public method&nbsp;<em>clone()</em>&nbsp;overrides the clone method in class Object and throws no&nbsp;<a href="https://www.geeksforgeeks.org/checked-vs-unchecked-exceptions-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">checked exceptions</a>.</li></ul><p><br></p><h2>Cloning of Single-Dimensional Array in Java</h2><p>When you clone a single-dimensional array, such as&nbsp;<code>Object[]</code>, a&nbsp;<strong>shallow copy</strong>&nbsp;is performed. This means that the new array contains references to the original array’s elements rather than copies of the objects themselves. A deep copy occurs only with arrays containing primitive data types, where the actual values are copied.</p><h4>Below is the implementation of the above method:</h4><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate
// cloning of one-dimensional arrays

class Test {
    public static void main(String args[])
    {
        int intArray[] = { 1, 2, 3 };

        int cloneArray[] = intArray.clone();

        // will print false as shallow copy is created
        System.out.println(intArray == cloneArray);

        for (int i = 0; i &lt; cloneArray.length; i++) {
            System.out.print(cloneArray[i] + " ");
        }
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">false
1 2 3
</pre><h4>Explanation of the above Program:</h4><ul><li>In this example,&nbsp;<code>intArray</code>&nbsp;and&nbsp;<code>cloneArray</code>&nbsp;are not the same object (<code>intArray == cloneArray</code>&nbsp;is&nbsp;<code>false</code>), but they share the same contents because primitive values are deeply copied.</li><li>For arrays containing objects, the references are copied, so the objects themselves are not duplicated.</li></ul><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20231213014616/Clone-of-Array-660.png"></p><h2>Cloning Multidimensional Array in Java</h2><p>A clone of a multi-dimensional array (like Object[][]) is a “shallow copy,” however, which is to say that it creates only a single new array with each element array a reference to an original element array, but subarrays are shared.&nbsp;</p><p>Java</p><p><br></p><p><br></p><p><br></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate
// cloning of multi-dimensional arrays

class Test {
    public static void main(String args[])
    {
        int intArray[][] = { { 1, 2, 3 }, { 4, 5 } };

        int cloneArray[][] = intArray.clone();

        // will print false
        System.out.println(intArray == cloneArray);

        // will print true as shallow copy is created
        // i.e. sub-arrays are shared
        System.out.println(intArray[0] == cloneArray[0]);
        System.out.println(intArray[1] == cloneArray[1]);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">false
true
true
</pre><p><br></p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20231213014644/Multidimensional-Array-Clone-660.png"></p><h2>Frequently Asked Questions in Java Arrays</h2><p><br></p><h3>1. Can we specify the size of array as long?</h3><blockquote><em>No we can’t specify the size of array as long but we can specify it as int or short.</em></blockquote><h3>2. Which is the direct superclass of an array in Java?</h3><blockquote><em>An&nbsp;</em><a href="https://www.geeksforgeeks.org/object-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Object</em></a><em>&nbsp;is direct superclass of an array in Java.</em></blockquote><h3>3. Which Interfaces are implemented by Arrays in Java?</h3><blockquote><em>Every array type implements the interfaces Cloneable and&nbsp;</em><a href="https://www.geeksforgeeks.org/serialization-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>java.io.Serializable</em></a><em>.&nbsp;</em></blockquote><h3>4. Can we alter the size of Array?</h3><blockquote><em>The size of the array cannot be altered(once initialized).&nbsp;However, an array reference can be made to point to another array.</em></blockquote><h3><strong>Related Articles to the topic</strong></h3><ul><li><a href="https://www.geeksforgeeks.org/jagged-array-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Jagged Array in Java</a></li><li><a href="https://www.geeksforgeeks.org/for-each-loop-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">For-each loop in Java</a></li><li><a href="https://www.geeksforgeeks.org/array-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Arrays class in Java</a></li></ul><p><br></p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9f50be24-f524-42dc-962e-eb9659b716b0'::uuid, 1, '3db00de3-31f0-4e8e-9923-8bc08a5da6c9'::uuid, 'LESSON'::public.resource_type, 'Arrays class in Java', NULL, '<p>The&nbsp;<strong>Arrays</strong>&nbsp;class in&nbsp;<strong>java.util package</strong>&nbsp;is a part of the&nbsp;<strong>Java Collection Framework</strong>. This class provides static methods to dynamically create and access&nbsp;<strong>Java arrays</strong>. It consists of only static methods and the methods of Object class. The methods of this class can be used by the class name itself.</p><p>The class hierarchy is as follows:&nbsp;</p><pre class="ql-syntax" spellcheck="false">java.lang.Object
 ? java.util.Arrays
</pre><p>Geek, now you must be wondering why do we need java Arrays class when we are able to declare, initialize and compute operations over arrays. The answer to this though lies within the methods of this class which we are going to discuss further as practically these functions help programmers expanding horizons with arrays for instance there are often times when&nbsp;<a href="https://www.geeksforgeeks.org/loops-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>loops</strong></a>&nbsp;are used to do some tasks on an array like:&nbsp;</p><ul><li>Fill an array with a particular value.</li><li>Sort an Arrays.</li><li>Search in an Arrays.</li><li>And many more.</li></ul><blockquote><em>Here Arrays class provides several static methods that can be used to perform these tasks directly without the use of loops, hence forth making our code super short and optimized.</em></blockquote><p><strong>Syntax:&nbsp;</strong>Class declaration&nbsp;&nbsp;</p><pre class="ql-syntax" spellcheck="false">public class Arrays
    extends Object
</pre><p><strong>Syntax:&nbsp;</strong>In order to use Arrays&nbsp;</p><pre class="ql-syntax" spellcheck="false">Arrays.&lt;function name&gt;;
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('11d3e1e5-1a29-4033-a82a-500779bdbe6c'::uuid, 2, '3db00de3-31f0-4e8e-9923-8bc08a5da6c9'::uuid, 'LESSON'::public.resource_type, 'Multidimensional Arrays in Java', NULL, '<p><a href="https://www.geeksforgeeks.org/arrays-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Array-Basics in Java</a>&nbsp;<strong>Multidimensional Arrays</strong>&nbsp;can be defined in simple words as array of arrays. Data in multidimensional arrays are stored in tabular form (in row major order).&nbsp;</p><p><strong>Syntax:</strong></p><blockquote><strong><em>data_type</em></strong><em>[1st dimension][2nd dimension][]..[Nth dimension]&nbsp;</em><strong><em>array_name</em></strong><em>&nbsp;=&nbsp;</em><strong><em>new data_type</em></strong><em>[size1][size2]….[sizeN];</em></blockquote><p><strong>where:</strong></p><ul><li><strong>data_type</strong>: Type of data to be stored in the array. For example: int, char, etc.</li><li><strong>dimension</strong>: The dimension of the array created. For example: 1D, 2D, etc.</li><li><strong>array_name</strong>: Name of the array</li><li><strong>size1, size2, …, sizeN</strong>: Sizes of the dimensions respectively.</li></ul><p><strong>Examples:</strong></p><pre class="ql-syntax" spellcheck="false">Two dimensional array:
int[][] twoD_arr = new int[10][20];

Three dimensional array:
int[][][] threeD_arr = new int[10][20][30];
</pre><p><strong>Size of multidimensional arrays</strong>: The total number of elements that can be stored in a multidimensional array can be calculated by multiplying the size of all the dimensions.&nbsp;</p><p><strong>For example:</strong>&nbsp;The array&nbsp;<strong>int[][] x = new int[10][20]</strong>&nbsp;can store a total of (10*20) = 200 elements. Similarly, array&nbsp;<strong>int[][][] x = new int[5][10][20]</strong>&nbsp;can store a total of (5*10*20) = 1000 elements.</p><h2>Application of Multi-Dimensional Array</h2><p>● Multidimensional arrays are used to store the data in a tabular form. For example, storing the roll number and marks of a student can be easily done using multidimensional arrays. Another common usage is to store the images in 3D arrays.&nbsp;</p><p>● In dynamic programming questions, multidimensional arrays are used which are used to represent the states of the problem.&nbsp;</p><p>● Apart from these, they also have applications in many standard algorithmic problems like:&nbsp;Matrix Multiplication, Adjacency matrix representation in graphs, Grid search problems</p><h2>Two – dimensional Array (2D-Array)</h2><p>Two – dimensional array is the simplest form of a multidimensional array. A two – dimensional array can be seen as an array of one – dimensional array for easier understanding.&nbsp;</p><p><strong>Indirect Method of Declaration:</strong></p><ul><li><strong>Declaration – Syntax:</strong></li></ul><pre class="ql-syntax" spellcheck="false">data_type[][] array_name = new data_type[x][y];
        For example: int[][] arr = new int[10][20];

</pre><ul><li><strong>Initialization – Syntax:</strong></li></ul><pre class="ql-syntax" spellcheck="false">array_name[row_index][column_index] = value;
        For example: arr[0][0] = 1;

</pre><p><strong>Example:</strong>&nbsp;1</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][] arr = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code><code style="color: black; background-color: initial;">[</code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">][</code><code style="color: rgb(0, 153, 0); background-color: initial;">20</code><code style="color: black; background-color: initial;">];</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">arr[</code><code style="background-color: initial; color: rgb(0, 153, 0);">0</code><code style="background-color: initial; color: black;">][</code><code style="background-color: initial; color: rgb(0, 153, 0);">0</code><code style="background-color: initial; color: black;">] = </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"arr[0][0] = "</code> <code style="color: black; background-color: initial;">+ arr[</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">][</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">]);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">arr[0][0] = 1
</pre><h4>Example: Implementing 2D array with by default values with 4*4 matrix</h4><p><br></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">TwoDArray {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">rows = </code><code style="color: rgb(0, 153, 0); background-color: initial;">4</code><code style="color: black; background-color: initial;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">columns = </code><code style="color: rgb(0, 153, 0); background-color: initial;">4</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][] array = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code><code style="color: black; background-color: initial;">[rows][columns];</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">value = </code><code style="color: rgb(0, 153, 0); background-color: initial;">1</code><code style="color: black; background-color: initial;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; rows; i++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; columns; j++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">array[i][j] = value;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">value++;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"The 2D array is: "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; rows; i++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; columns; j++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(array[i][j] + </code><code style="background-color: initial; color: blue;">" "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">The 2D array is:
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
</pre><h4>Explanation:</h4><ul><li>The number of rows and columns are specified using the variables rows and columns. The 2D array is created using the new operator, which allocates memory for the array. The size of the array is specified by rows and columns.</li><li>&nbsp;</li></ul><p><strong>Direct Method of Declaration:</strong>&nbsp;<strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">data_type[][] array_name = {
                             {valueR1C1, valueR1C2, ....},
                             {valueR2C1, valueR2C2, ....}
                           };

For example: int[][] arr = {{1, 2}, {3, 4}};
</pre><p><strong>Example:</strong>&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][] arr = { { </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">2</code> <code style="color: black; background-color: initial;">}, { </code><code style="color: rgb(0, 153, 0); background-color: initial;">3</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">4</code> <code style="color: black; background-color: initial;">} };</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">; i++)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">; j++)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"arr["</code> <code style="color: black; background-color: initial;">+ i + </code><code style="color: blue; background-color: initial;">"]["</code> <code style="color: black; background-color: initial;">+ j + </code><code style="color: blue; background-color: initial;">"] = "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ arr[i][j]);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">arr[0][0] = 1
arr[0][1] = 2
arr[1][0] = 3
arr[1][1] = 4
</pre><h3>Accessing Elements of Two-Dimensional Arrays</h3><p>Elements in two-dimensional arrays are commonly referred by&nbsp;<strong>x[i][j]</strong>&nbsp;where ‘i’ is the row number and ‘j’ is the column number.&nbsp;</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">x[row_index][column_index]
</pre><p><strong>For example:</strong></p><pre class="ql-syntax" spellcheck="false">int[][] arr = new int[10][20];
arr[0][0] = 1;
</pre><p>The above example represents the element present in first row and first column.&nbsp;<strong>Note</strong>: In arrays if size of array is N. Its index will be from 0 to N-1. Therefore, for row_index 2, actual row number is 2+1 = 3.&nbsp;<strong>Example:</strong>&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][] arr = { { </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">2</code> <code style="color: black; background-color: initial;">}, { </code><code style="color: rgb(0, 153, 0); background-color: initial;">3</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">4</code> <code style="color: black; background-color: initial;">} };</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"arr[0][0] = "</code> <code style="color: black; background-color: initial;">+ arr[</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">][</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">]);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">arr[0][0] = 1
</pre><p><strong>Representation of 2D array in Tabular Format:</strong></p><p>A two – dimensional array can be seen as a table with ‘x’ rows and ‘y’ columns where the row number ranges from 0 to (x-1) and column number ranges from 0 to (y-1). A two – dimensional array ‘x’ with 3 rows and 3 columns is shown below:&nbsp;</p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/two-d.png"></p><p>&nbsp;<strong>Print 2D array in tabular format:</strong>&nbsp;</p><p>To output all the elements of a Two-Dimensional array, use nested for loops. For this two for loops are required, One to traverse the rows and another to traverse columns.</p><p><strong>Example:</strong>&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][] arr = { { </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">2</code> <code style="color: black; background-color: initial;">}, { </code><code style="color: rgb(0, 153, 0); background-color: initial;">3</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">4</code> <code style="color: black; background-color: initial;">} };</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">; i++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">; j++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(arr[i][j] + </code><code style="background-color: initial; color: blue;">" "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">1 2
3 4
</pre><h3>Example:&nbsp;Implementation of 2D array with User input</h3><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.Scanner;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Main {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Scanner scan = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Scanner(System.in);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(</code><code style="background-color: initial; color: blue;">"Enter number of rows: "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">rows = scan.nextInt();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(</code><code style="background-color: initial; color: blue;">"Enter number of columns: "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">columns = scan.nextInt();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][] multidimensionalArray= </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code><code style="color: black; background-color: initial;">[rows][columns];</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Now you can use the array like a regular</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// 2-dimensional array</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; rows; i++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; columns; j++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">multidimensionalArray[i][j]= (i + </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">) * (j + </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; rows; i++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; columns; j++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(multidimensionalArray[i][j]+ </code><code style="background-color: initial; color: blue;">" "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">scan.close();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Enter number of rows: 3
Enter number of columns: 3
1 2 3
2 4 6
3 6 9
</pre><ul><li>This code prompts the user to enter the number of rows and columns for the 2-dimensional array. The Scanner class is used to read the user input. Then it creates a 2-dimensional array of integers with the specified number of rows and columns, and assigns each element of the array with i*j.</li><li>If you want to create a multidimensional array with more than two dimensions, you can use the same approach of creating an array of arrays. For example, to create a 3-dimensional array, you can create an array of 2-dimensional arrays.</li></ul><h2>&nbsp;</h2><h2>Three – dimensional Array (3D-Array)</h2><p>Three – dimensional array is a complex form of a multidimensional array. A three-dimensional array can be seen as an array of two – dimensional array for easier understanding.&nbsp;</p><p><strong>Indirect Method of Declaration:</strong></p><ul><li><strong>Declaration – Syntax:</strong></li></ul><pre class="ql-syntax" spellcheck="false">data_type[][][] array_name = new data_type[x][y][z];
        For example: int[][][] arr = new int[10][20][30];

</pre><ul><li><strong>Initialization – Syntax:</strong></li></ul><pre class="ql-syntax" spellcheck="false">array_name[array_index][row_index][column_index] = value;
        For example: arr[0][0][0] = 1;

</pre><p><strong>Example:</strong>&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][][] arr = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code><code style="color: black; background-color: initial;">[</code><code style="color: rgb(0, 153, 0); background-color: initial;">10</code><code style="color: black; background-color: initial;">][</code><code style="color: rgb(0, 153, 0); background-color: initial;">20</code><code style="color: black; background-color: initial;">][</code><code style="color: rgb(0, 153, 0); background-color: initial;">30</code><code style="color: black; background-color: initial;">];</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">arr[</code><code style="background-color: initial; color: rgb(0, 153, 0);">0</code><code style="background-color: initial; color: black;">][</code><code style="background-color: initial; color: rgb(0, 153, 0);">0</code><code style="background-color: initial; color: black;">][</code><code style="background-color: initial; color: rgb(0, 153, 0);">0</code><code style="background-color: initial; color: black;">] = </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"arr[0][0][0] = "</code> <code style="color: black; background-color: initial;">+ arr[</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">][</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">][</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">]);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">arr[0][0][0] = 1
</pre><p><strong>Direct Method of Declaration:</strong>&nbsp;<strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">data_type[][][] array_name = {
                              {
                               {valueA1R1C1, valueA1R1C2, ....},
                               {valueA1R2C1, valueA1R2C2, ....}
                              },
                              {
                               {valueA2R1C1, valueA2R1C2, ....},
                               {valueA2R2C1, valueA2R2C2, ....}
                              }
                             };

For example: int[][][] arr = { {{1, 2}, {3, 4}}, {{5, 6}, {7, 8}} };
</pre><p><strong>Example:</strong>&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][][] arr = { { { </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">2</code> <code style="color: black; background-color: initial;">}, { </code><code style="color: rgb(0, 153, 0); background-color: initial;">3</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">4</code> <code style="color: black; background-color: initial;">} }, { { </code><code style="color: rgb(0, 153, 0); background-color: initial;">5</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">6</code> <code style="color: black; background-color: initial;">}, { </code><code style="color: rgb(0, 153, 0); background-color: initial;">7</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">8</code> <code style="color: black; background-color: initial;">} } };</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">; i++)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">; j++)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">z = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; z &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">; z++)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"arr["</code> <code style="color: black; background-color: initial;">+ i</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ </code><code style="background-color: initial; color: blue;">"]["</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ j + </code><code style="background-color: initial; color: blue;">"]["</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ z + </code><code style="background-color: initial; color: blue;">"] = "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ arr[i][j][z]);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">arr[0][0][0] = 1
arr[0][0][1] = 2
arr[0][1][0] = 3
arr[0][1][1] = 4
arr[1][0][0] = 5
arr[1][0][1] = 6
arr[1][1][0] = 7
arr[1][1][1] = 8
</pre><h3>Accessing Elements of Three-Dimensional Arrays</h3><p>Elements in three-dimensional arrays are commonly referred by&nbsp;<strong>x[i][j][k]</strong>&nbsp;where ‘i’ is the array number, ‘j’ is the row number and ‘k’ is the column number.&nbsp;</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">x[array_index][row_index][column_index]
</pre><p><strong>For example:</strong></p><pre class="ql-syntax" spellcheck="false">int[][][] arr = new int[10][20][30];
arr[0][0][0] = 1;
</pre><p>The above example represents the element present in the first row and first column of the first array in the declared 3D array.&nbsp;</p><p><strong>Note</strong>: In arrays if size of array is N. Its index will be from 0 to N-1. Therefore, for row_index 2, actual row number is 2+1 = 3.&nbsp;</p><p><strong>Example:</strong>&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][][] arr = { { { </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">2</code> <code style="color: black; background-color: initial;">}, { </code><code style="color: rgb(0, 153, 0); background-color: initial;">3</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">4</code> <code style="color: black; background-color: initial;">} }, { { </code><code style="color: rgb(0, 153, 0); background-color: initial;">5</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">6</code> <code style="color: black; background-color: initial;">}, { </code><code style="color: rgb(0, 153, 0); background-color: initial;">7</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">8</code> <code style="color: black; background-color: initial;">} } };</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"arr[0][0][0] = "</code> <code style="color: black; background-color: initial;">+ arr[</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">][</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">][</code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">]);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">arr[0][0][0] = 1
</pre><p><strong>Representation of 3D array in Tabular Format:</strong>&nbsp;</p><p>A three-dimensional array can be seen as a table of arrays with ‘x’ rows and ‘y’ columns where the row number ranges from 0 to (x-1) and column number ranges from 0 to (y-1). A three – dimensional array with 3 array containing 3 rows and 3 columns is shown below:&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/3D-array.jpg"></p><p>&nbsp;<strong>Print 3D array in tabular format:</strong>&nbsp;</p><p>To output all the elements of a Three-Dimensional array, use nested for loops. For this three for loops are required, One to traverse the arrays, second to traverse the rows and another to traverse columns.&nbsp;</p><p><strong>Example:</strong>&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][][] arr = { { { </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">2</code> <code style="color: black; background-color: initial;">}, { </code><code style="color: rgb(0, 153, 0); background-color: initial;">3</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">4</code> <code style="color: black; background-color: initial;">} },</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ { </code><code style="background-color: initial; color: rgb(0, 153, 0);">5</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">6</code> <code style="color: black; background-color: initial;">}, { </code><code style="color: rgb(0, 153, 0); background-color: initial;">7</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">8</code> <code style="color: black; background-color: initial;">} } };</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">; i++) {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">; j++) {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">k = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; k &lt; </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">; k++) {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(arr[i][j][k] + </code><code style="background-color: initial; color: blue;">" "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">1 2
3 4

5 6
7 8
</pre><p><strong>Inserting a Multi-dimensional Array during Runtime:</strong>&nbsp;</p><p>This topic is forced n taking user-defined input into a multidimensional array during runtime. It is focused on the user first giving all the input to the program during runtime and after all entered input, the program will give output with respect to each input accordingly. It is useful when the user wishes to make input for multiple Test-Cases with multiple different values first and after all those things are done, program will start providing output. As an example, let’s find the total number of even and odd numbers in an input array. Here, we will use the concept of a 2-dimensional array.&nbsp;</p><p>Here are a few points that explain the use of the various elements in the upcoming code:</p><ul><li>Row integer number is considered as the number of Test-Cases and Column values are considered as values in each Test-Case.</li><li>One for() loop is used for updating Test-Case number and another for() loop is used for taking respective array values.</li><li>As all input entry is done, again two for() loops are used in the same manner to execute the program according to the condition specified.</li><li>The first line of input is the total number of TestCases.</li><li>The second line shows the total number of first array values.</li><li>The third line gives array values and so on.</li></ul><p><strong>Implementation:</strong>&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.util.Scanner;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFGTestCase {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Scanner class to take</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// values from console</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Scanner scanner = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Scanner(System.in);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// totalTestCases = total</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// number of TestCases</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// eachTestCaseValues =</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// values in each TestCase as</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// an Array values</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">totalTestCases, eachTestCaseValues;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// takes total number of</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// TestCases as integer number</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">totalTestCases = scanner.nextInt();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// An array is formed as row</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// values for total testCases</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code><code style="background-color: initial; color: black;">[][] arrayMain = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code><code style="color: black; background-color: initial;">[totalTestCases][];</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// for loop to take input of</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// values in each TestCase</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; arrayMain.length; i++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">eachTestCaseValues = scanner.nextInt();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">arrayMain[i] = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code><code style="color: black; background-color: initial;">[eachTestCaseValues];</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; arrayMain[i].length; j++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">arrayMain[i][j] = scanner.nextInt();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code><code style="background-color: initial; color: rgb(0, 130, 0);">// All input entry is done.</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Start executing output</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// according to condition provided</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">i = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; i &lt; arrayMain.length; i++) {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Initialize total number of</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// even &amp; odd numbers to zero</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">nEvenNumbers = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">, nOddNumbers = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// prints TestCase number with</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// total number of its arguments</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"TestCase "</code> <code style="color: black; background-color: initial;">+ i + </code><code style="color: blue; background-color: initial;">" with "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ arrayMain[i].length</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ </code><code style="background-color: initial; color: blue;">" values:"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>for</strong></code> <code style="color: black; background-color: initial;">(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">j = </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">; j &lt; arrayMain[i].length; j++) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.print(arrayMain[i][j] + </code><code style="background-color: initial; color: blue;">" "</code><code style="background-color: initial; color: black;">);</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// even &amp; odd counter updated as</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// eligible number is found</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>if</strong></code> <code style="color: black; background-color: initial;">(arrayMain[i][j] % </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code> <code style="color: black; background-color: initial;">== </code><code style="color: rgb(0, 153, 0); background-color: initial;">0</code><code style="color: black; background-color: initial;">) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">nEvenNumbers++;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>else</strong></code> <code style="color: black; background-color: initial;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">nOddNumbers++;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Prints total numbers of</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// even &amp; odd</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"Total Even numbers: "</code> <code style="color: black; background-color: initial;">+ nEvenNumbers</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ </code><code style="background-color: initial; color: blue;">", Total Odd numbers: "</code> <code style="color: black; background-color: initial;">+ nOddNumbers);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// This code is contributed by Udayan Kamble.</code></p><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">Input:
2
2
1 2
3
1 2 3

Output:
TestCase 0 with 2 values:
1 2
Total Even numbers: 1, Total Odd numbers: 1
TestCase 1 with 3 values:
1 2 3
Total Even numbers: 1, Total Odd numbers: 2

Input:
3
8
1 2 3 4 5 11 55 66
5
100 101 55 35 108
6
3 80 11 2 1 5

Output:
TestCase 0 with 8 values:
1 2 3 4 5 11 55 66
Total Even numbers: 3, Total Odd numbers: 5
TestCase 1 with 5 values:
100 101 55 35 108
Total Even numbers: 2, Total Odd numbers: 3
TestCase 2 with 6 values:
3 80 11 2 1 5
Total Even numbers: 2, Total Odd numbers: 4
</pre><p><br></p><p>Summer-time is here and so is the time to skill-up! More than 5,000 learners have now completed their journey from&nbsp;<strong>basics of DSA to advanced level development programs</strong>&nbsp;such as Full-Stack, Backend Development, Data Science.&nbsp;</p>', '');
-- End of chapter resource Java 1

-- Chapter resource Java 2
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('860ac549-5adb-4c39-9ed6-e71e817ae9fc'::uuid, 0, '156a6bf7-dc81-4bce-956a-7a0e7998feb8'::uuid, 'LESSON'::public.resource_type, 'Object Oriented Programming (OOPs) Concept in Java', NULL, '<p class="ql-align-justify">As the name suggests, Object-Oriented Programming or Java OOPs concept refers to languages that use objects in programming, they use objects as a primary source to implement what is to happen in the code. Objects are seen by the viewer or user, performing tasks you assign.</p><p class="ql-align-justify">Object-oriented programming aims to implement real-world entities like inheritance, hiding, polymorphism, etc. in programming. The main aim of OOPs is to bind together the data and the functions that operate on them so that no other part of the code can access this data except that function.&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230712121524/Object-Oriented-Programming-(OOPs)-Concept-in-Java.webp"></p><p>Let us discuss prerequisites by polishing concepts of method declaration and message passing. Starting off with the method declaration, it consists of six components:&nbsp;</p><ul><li><a href="https://www.geeksforgeeks.org/access-modifiers-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Access Modifier</strong></a>: Defines the&nbsp;<strong>access type</strong>&nbsp;of the method i.e. from where it can be accessed in your application. In Java, there are 4 types of access specifiers:&nbsp;</li><li class="ql-indent-1"><strong>public:</strong>&nbsp;Accessible in all classes in your application.</li><li class="ql-indent-1"><strong>protected:</strong>&nbsp;Accessible within the package in which it is defined and in its&nbsp;<strong>subclass(es) (including subclasses declared outside the package)</strong>.</li><li class="ql-indent-1"><strong>private:</strong>&nbsp;Accessible only within the class in which it is defined.</li><li class="ql-indent-1"><strong>default (declared/defined without using any modifier):</strong>&nbsp;Accessible within the same class and package within which its class is defined.</li><li><strong>The return type</strong>: The data type of the value returned by the method or void if it does not return a value.</li><li><strong>Method Name</strong>: The rules for field names apply to method names as well, but the convention is a little different.</li><li><strong>Parameter list</strong>: Comma-separated list of the input parameters that are defined, preceded by their data type, within the enclosed parentheses. If there are no parameters, you must use empty parentheses ().</li><li><strong>Exception list</strong>: The exceptions you expect the method to throw. You can specify these exception(s).</li><li><strong>Method body</strong>: It is the block of code, enclosed between braces, that you need to execute to perform your intended operations.</li></ul><p><a href="https://www.geeksforgeeks.org/message-passing-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Message Passing</strong></a><strong>:</strong>&nbsp;Objects communicate with one another by sending and receiving information to each other. A message for an object is a request for execution of a procedure and therefore will invoke a function in the receiving object that generates the desired results. Message passing involves specifying the name of the object, the name of the function and the information to be sent.</p><blockquote><strong><em>Master OOP in Java</em></strong><em>&nbsp;Write cleaner, more modular, and reusable Java code by building a foundation in object-oriented programming with Educative’s interactive course Learn&nbsp;</em><a href="https://www.educative.io/geeks-oops" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Object-Oriented Programming in Java</em></a><em>. Sign up at Educative.io with the code</em><strong><em>&nbsp;GEEKS10&nbsp;</em></strong><em>to save 10% on your subscription.</em></blockquote><p>Now that we have covered the basic prerequisites, we will move on to the 4 pillars of OOPs which are as follows. But, let us start by learning about the different characteristics of an Object-Oriented Programming Language.</p><p>OOPS concepts are as follows:&nbsp;</p><ol><li><a href="https://www.geeksforgeeks.org/classes-objects-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Class</a></li><li><a href="https://www.geeksforgeeks.org/classes-objects-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Object&nbsp;</a></li><li><a href="https://www.geeksforgeeks.org/methods-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Method&nbsp;</a>and&nbsp;<a href="https://www.geeksforgeeks.org/message-passing-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">method passing</a></li></ol><ul><li class="ql-indent-1">Pillars of OOPs<a href="https://www.geeksforgeeks.org/abstraction-in-java-2" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Abstraction</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/encapsulation-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Encapsulation</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/inheritance-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Inheritance</a></li><li><a href="https://www.geeksforgeeks.org/polymorphism-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Polymorphism</a></li><li class="ql-indent-2">Compile-time polymorphism</li><li class="ql-indent-1">Runtime polymorphism</li></ul><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/cdn-uploads/20190717114649/Object-Oriented-Programming-Concepts.jpg"></p><p class="ql-align-justify">A&nbsp;<a href="https://www.geeksforgeeks.org/classes-objects-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">class&nbsp;</a>is a user-defined blueprint or prototype from which objects are created. It represents the set of properties or methods that are common to all objects of one type. Using classes, you can create multiple objects with the same behavior instead of writing their code multiple times. This includes classes for objects occurring more than once in your code. In general, class declarations can include these components in order:&nbsp;</p><ol><li><strong>Modifiers</strong>: A class can be public or have default access (Refer to&nbsp;<a href="https://www.geeksforgeeks.org/access-specifiers-for-classes-or-interfaces-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">this</a>&nbsp;for details).</li><li><strong>Class name:</strong>&nbsp;The class name should begin with the initial letter capitalized by convention.</li><li><strong>Superclass (if any):</strong>&nbsp;The name of the class’s parent (superclass), if any, preceded by the keyword extends. A class can only extend (subclass) one parent.</li><li><strong>Interfaces (if any):</strong>&nbsp;A comma-separated list of interfaces implemented by the class, if any, preceded by the keyword implements. A class can implement more than one interface.</li><li><strong>Body:</strong>&nbsp;The class body is surrounded by braces, { }.</li></ol><p class="ql-align-justify"><strong>An object&nbsp;</strong>is a basic unit of Object-Oriented Programming that represents real-life entities. A typical Java program creates many objects, which as you know, interact by invoking methods. The objects are what perform your code, they are the part of your code visible to the viewer/user. An object mainly consists of:&nbsp;</p><ol><li><strong>State</strong>: It is represented by the attributes of an object. It also reflects the properties of an object.</li><li><strong>Behavior</strong>: It is represented by the methods of an object. It also reflects the response of an object to other objects.</li><li><strong>Identity</strong>: It is a unique name given to an object that enables it to interact with other objects.</li><li><a href="https://www.geeksforgeeks.org/methods-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Method</strong></a><strong>:</strong>&nbsp;A method is a collection of statements that perform some specific task and return the result to the caller. A method can perform some specific task without returning anything. Methods allow us to&nbsp;<strong>reuse</strong>&nbsp;the code without retyping it, which is why they are considered&nbsp;<strong>time savers</strong>. In Java, every method must be part of some class, which is different from languages like&nbsp;<a href="https://www.geeksforgeeks.org/c-programming-language/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">C</a>,&nbsp;<a href="https://www.geeksforgeeks.org/c-plus-plus/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">C++</a>, and&nbsp;<a href="https://www.geeksforgeeks.org/python-programming-language/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Python</a>.&nbsp;</li></ol><p class="ql-align-justify">&nbsp;</p><p class="ql-align-justify"><strong>&nbsp;class and objects one simple java program :&nbsp;&nbsp;&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">public class GFG {

    static String Employee_name;
    static float Employee_salary;

    static void set(String n, float p) {
        Employee_name  = n;
        Employee_salary  = p;
    }

    static void get() {
        System.out.println("Employee name is: " +Employee_name );
        System.out.println("Employee CTC is: " + Employee_salary);
    }

    public static void main(String args[]) {
        GFG.set("Rathod Avinash", 10000.0f);
        GFG.get();
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Employee name is: Rathod Avinash
Employee CTC is: 10000.0
</pre><p class="ql-align-justify">Let us now discuss the 4 pillars of OOPs:</p><h2>Pillar 1: Abstraction</h2><p class="ql-align-justify">Data&nbsp;<a href="https://www.geeksforgeeks.org/abstraction-in-java-2" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Abstraction</a>&nbsp;is the property by virtue of which only the essential details are displayed to the user. The trivial or non-essential units are not displayed to the user. Ex: A car is viewed as a car rather than its individual components.</p><p class="ql-align-justify">Data Abstraction may also be defined as the process of identifying only the required characteristics of an object, ignoring the irrelevant details. The properties and behaviors of an object differentiate it from other objects of similar type and also help in classifying/grouping the object.</p><p class="ql-align-justify">Consider a real-life example of a man driving a car. The man only knows that pressing the accelerators will increase the car speed or applying brakes will stop the car, but he does not know how on pressing the accelerator, the speed is actually increasing. He does not know about the inner mechanism of the car or the implementation of the accelerators, brakes etc. in the car. This is what abstraction is.&nbsp;</p><p class="ql-align-justify">In Java, abstraction is achieved by&nbsp;<a href="https://www.geeksforgeeks.org/interfaces-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">interfaces</a>&nbsp;and&nbsp;<a href="https://www.geeksforgeeks.org/abstract-classes-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">abstract classes</a>. We can achieve 100% abstraction using interfaces.</p><p class="ql-align-justify">The abstract method contains only method declaration but not implementation.</p><p class="ql-align-justify">Demonstration of Abstract class</p><pre class="ql-syntax" spellcheck="false">//abstract class
abstract class GFG{
  //abstract methods declaration
  abstract void add();
  abstract void mul();
  abstract void div();
}
</pre><p><br></p><h2><strong>Pillar 2:</strong>&nbsp;Encapsulation</h2><p class="ql-align-justify">It is defined as the wrapping up of data under a single unit. It is the mechanism that binds together the code and the data it manipulates. Another way to think about encapsulation is that it is a protective shield that prevents the data from being accessed by the code outside this shield.&nbsp;</p><ul><li>Technically, in&nbsp;<a href="https://www.geeksforgeeks.org/encapsulation-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">encapsulation</a>, the variables or the data in a class is hidden from any other class and can be accessed only through any member function of the class in which they are declared.</li><li>In encapsulation, the data in a class is hidden from other classes, which is similar to what&nbsp;<strong>data-hiding</strong>&nbsp;does. So, the terms “encapsulation” and “data-hiding” are used interchangeably.</li><li>Encapsulation can be achieved by declaring all the variables in a class as private and writing public methods in the class to set and get the values of the variables.</li></ul><p class="ql-align-justify">Demonstration of Encapsulation:</p><p><br></p><pre class="ql-syntax" spellcheck="false">//Encapsulation using private modifier

//Employee class contains private data called employee id and employee name
class Employee {
    private int empid;
      private String ename;
}
</pre><p><br></p><h2><strong>Pillar 3:</strong>&nbsp;Inheritance&nbsp;</h2><p class="ql-align-justify"><a href="https://www.geeksforgeeks.org/inheritance-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Inheritance</a>&nbsp;is an important pillar of OOP (Object Oriented Programming). It is the mechanism in Java by which one class is allowed to inherit the features (fields and methods) of another class. We are achieving inheritance by using&nbsp;<strong>extends</strong>&nbsp;keyword. Inheritance is also known as “<strong>is-a</strong>” relationship.</p><p class="ql-align-justify">Let us discuss some frequently used important terminologies:</p><ul><li><strong>Superclass:&nbsp;</strong>The class whose features are inherited is known as superclass (also known as base or parent class).</li><li><strong>Subclass:</strong>&nbsp;The class that inherits the other class is known as subclass (also known as derived or extended or child class). The subclass can add its own fields and methods in addition to the superclass fields and methods.</li><li><strong>Reusability:&nbsp;</strong>Inheritance supports the concept of “reusability”, i.e. when we want to create a new class and there is already a class that includes some of the code that we want, we can derive our new class from the existing class. By doing this, we are reusing the fields and methods of the existing class.</li></ul><p class="ql-align-justify">Demonstration of Inheritance :</p><p><br></p><pre class="ql-syntax" spellcheck="false">//base class or parent class or super class
class A{
  //parent class methods
  void method1(){}
  void method2(){}
}

//derived class or child class or base class
class B extends A{  //Inherits parent class methods
  //child class methods
  void method3(){}
  void method4(){}
}
</pre><p><br></p><h2><strong>Pillar 4:</strong>&nbsp;<strong>Polymorphism</strong></h2><p class="ql-align-justify">It refers to the ability of object-oriented programming languages to differentiate between entities with the same name efficiently. This is done by Java with the help of the signature and declaration of these entities. The ability to appear in many forms is called&nbsp;<a href="https://www.geeksforgeeks.org/polymorphism-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>polymorphism</strong></a>.</p><p class="ql-align-justify">E.g.</p><p><br></p><pre class="ql-syntax" spellcheck="false">sleep(1000) //millis

sleep(1000,2000) //millis,nanos
</pre><p><br></p><p class="ql-align-justify"><strong><em>Note:</em></strong><em>&nbsp;Polymorphism in Java is mainly of 2 types:&nbsp;</em></p><ol><li><a href="https://www.geeksforgeeks.org/overloading-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Overloading</em></a></li><li><a href="https://www.geeksforgeeks.org/overriding-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Overriding&nbsp;</em></a></li></ol><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to Demonstrate Polymorphism

// This class will contain
// 3 methods with same name,
// yet the program will
// compile &amp; run successfully
public class Sum {

    // Overloaded sum().
    // This sum takes two int parameters
    public int sum(int x, int y)
    {
        return (x + y);
    }

    // Overloaded sum().
    // This sum takes three int parameters
    public int sum(int x, int y, int z)
    {
        return (x + y + z);
    }

    // Overloaded sum().
    // This sum takes two double parameters
    public double sum(double x, double y)
    {
        return (x + y);
    }

    // Driver code
    public static void main(String args[])
    {
        Sum s = new Sum();
        System.out.println(s.sum(10, 20));
        System.out.println(s.sum(10, 20, 30));
        System.out.println(s.sum(10.5, 20.5));
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">30
60
31.0
</pre><p><br></p><h2>Conclusion</h2><p class="ql-align-justify">The Object Oriented Programming (OOPs) concept in Java is a powerful way to organize and write code. It uses key ideas like classes, objects, inheritance, polymorphism, encapsulation, and abstraction to create flexible and reusable code. By using the Java OOPs concept, programmers can build complex applications more efficiently, making the code easier to manage, understand, and modify. Overall, Java’s OOPs concepts help in creating robust and scalable software solutions. To explore more Java concepts you can enroll&nbsp;<a href="https://www.geeksforgeeks.org/courses/free-java-course-online" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">free Java course</a>&nbsp;offered by GeeksforGeeks.</p><h2>Object Oriented Programming (OOPs) Concept in Java – FAQ</h2><p><br></p><h3>What is OOPs concept in Java?</h3><blockquote><em>OOPs (Object-Oriented Programming) is a programming paradigm based on the concept of objects, which can contain data in the form of fields (attributes or properties) and code in the form of procedures (methods or functions). In Java, OOPs concepts include encapsulation, inheritance, polymorphism, and abstraction.</em></blockquote><h3>Why is OOPs important in Java?</h3><blockquote><em>OOPs helps in organizing and structuring code in a more manageable way, making it easier to maintain and scale Java applications. It also promotes code reusability, modularity, and flexibility, leading to efficient and robust software development.</em></blockquote><h3>What are the main principles of OOPs in Java?</h3><blockquote><em>The main principles of OOPs in Java are encapsulation, inheritance, polymorphism, and abstraction. Encapsulation ensures that the internal state of an object is hidden and can only be accessed through public methods. Inheritance allows one class to inherit properties and behavior from another. Polymorphism enables objects to be treated as instances of their parent class. Abstraction focuses on hiding the implementation details and showing only the necessary information to the outside world.</em></blockquote><h3>How is OOPs implemented in Java?</h3><blockquote><em>In Java, OOPs is implemented through classes and objects. A class serves as a blueprint for creating objects, which are instances of that class. Each object has its own set of attributes (variables) and methods (functions). By following OOPs concepts like encapsulation, inheritance, polymorphism, and abstraction, Java developers can design well-structured and maintainable code.</em></blockquote><h3>What are the advantages of using OOPs in Java?</h3><blockquote><em>Some advantages of using OOPs in Java include code reusability, modularity, flexibility, scalability, and easier maintenance. OOPs enables developers to model real-world entities as objects, leading to more intuitive and organized code. It also supports features like inheritance and polymorphism, which enhance the extensibility and readability of Java applications.</em></blockquote><h3>Can you provide an example of OOPs concept implementation in Java?</h3><blockquote><em>Sure! An example of OOPs concept implementation in Java is creating a ‘Car’ class with attributes like ‘make’, ‘model’, and ‘year’, along with methods like ‘start()’, ‘accelerate()’, and ‘stop()’. By instantiating objects from the ‘Car’ class and calling its methods, we can simulate the behavior of different car instances in a structured and object-oriented manner.</em></blockquote>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('44d1da49-3b30-4125-8d95-2d9dc5846043'::uuid, 1, '156a6bf7-dc81-4bce-956a-7a0e7998feb8'::uuid, 'LESSON'::public.resource_type, 'Classes and Objects in Java', NULL, '<p>In Java, classes and objects are basic concepts of Object Oriented Programming (OOPs) that are used to represent real-world concepts and entities. The class represents a group of objects having similar properties and behavior. For example, the animal type&nbsp;<strong>Dog</strong>&nbsp;is a class while a particular dog named&nbsp;<strong>Tommy&nbsp;</strong>is an object of the&nbsp;<strong>Dog</strong>&nbsp;class.</p><p>In this article, we will discuss Java objects and classes and how to implement them in our program.</p><h2>Java Classes</h2><p>A class in Java is a set of objects which shares common characteristics/ behavior and common properties/ attributes. It is a user-defined blueprint or prototype from which objects are created. For example, Student is a class while a particular student named Ravi is an object.</p><h3>Properties of Java Classes</h3><ol><li>Class is not a real-world entity. It is just a template or blueprint or prototype from which objects are created.</li><li>Class does not occupy memory.</li><li>Class is a group of variables of different data types and a group of methods.</li></ol><ul><li class="ql-indent-1">A Class in Java can contain:Data member</li><li class="ql-indent-1">Method</li><li class="ql-indent-1">Constructor</li><li class="ql-indent-1">Nested Class</li><li class="ql-indent-1">Interface</li></ul><h3>Class Declaration in Java</h3><pre class="ql-syntax" spellcheck="false">access_modifier class &lt;class_name&gt;
{
    data member;
    method;
    constructor;
    nested class;
    interface;
}
</pre><p><br></p><h3><strong>Example of Java Class</strong></h3><pre class="ql-syntax" spellcheck="false">// Java Program for class example

class Student {
    // data member (also instance variable)
    int id;
    // data member (also instance variable)
    String name;

    public static void main(String args[])
    {
        // creating an object of
        // Student
        Student s1 = new Student();
        System.out.println(s1.id);
        System.out.println(s1.name);
    }
}
</pre><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">0
null
</pre><p><br></p><p><strong>Output 1</strong></p><pre class="ql-syntax" spellcheck="false">0
null
</pre><p><strong>Output 2</strong></p><pre class="ql-syntax" spellcheck="false">GeeksForGeeks
</pre><p><strong>Output 3</strong></p><pre class="ql-syntax" spellcheck="false">GeeksForGeeks
</pre><h3>Components of Java Classes</h3><p>&nbsp;In general, class declarations can include these components, in order:&nbsp;</p><ol><li><strong><em>Modifiers</em></strong><em>: A class can be public or has default access (Refer&nbsp;</em><a href="https://www.geeksforgeeks.org/access-specifiers-for-classes-or-interfaces-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>this</em></a><em>&nbsp;for details).</em></li><li><strong><em>Class keyword:&nbsp;</em></strong><em>class keyword is used to create a class.</em></li><li><strong><em>Class name:</em></strong><em>&nbsp;The name should begin with an initial letter (capitalized by convention).</em></li><li><strong><em>Superclass(if any):</em></strong><em>&nbsp;The name of the class’s parent (superclass), if any, preceded by the keyword extends. A class can only extend (subclass) one parent.</em></li><li><strong><em>Interfaces(if any):</em></strong><em>&nbsp;A comma-separated list of interfaces implemented by the class, if any, preceded by the keyword implements. A class can implement more than one interface.</em></li><li><strong><em>Body:</em></strong><em>&nbsp;The class body&nbsp;is surrounded by braces, { }.</em></li></ol><p>Constructors are used for initializing new objects. Fields are variables that provide the state of the class and its objects, and methods are used to implement the behavior of the class and its objects.</p><p>There are various types of classes that are used in real-time applications such as&nbsp;<a href="https://www.geeksforgeeks.org/inner-class-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">nested classes</a>,&nbsp;<a href="https://www.geeksforgeeks.org/anonymous-inner-class-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">anonymous classes</a>, and&nbsp;<a href="https://www.geeksforgeeks.org/lambda-expressions-java-8/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">lambda expressions</a>.</p><h2>Java Objects</h2><p>An object in Java is a basic unit of Object-Oriented Programming&nbsp;and represents real-life entities. Objects are the instances of a class that are created to use the attributes and methods of a class.&nbsp;A typical Java program creates many objects, which as you know, interact by invoking methods. An object consists of :&nbsp;</p><ol><li><strong>State</strong>: It is represented by attributes of an object. It also reflects the properties of an object.</li><li><strong>Behavior</strong>: It is represented by the methods of an object. It also reflects the response of an object with other objects.</li><li><strong>Identity</strong>: It gives a unique name to an object and enables one object to interact with other objects.</li></ol><p>Example of an object: dog</p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230515233144/Classes-and-Objects-in-java-1-768.webp"><em>Java Objects</em></p><p>Objects correspond to things found in the real world. For example, a graphics program may have objects such as “circle”, “square”, and “menu”. An online shopping system might have objects such as “shopping cart”, “customer”, and “product”.&nbsp;&nbsp;</p><blockquote><strong><em>Note:&nbsp;</em></strong><em>When we create an object which is a non primitive data type, it’s always allocated on the heap memory.</em></blockquote><h3>Declaring Objects (Also called instantiating a class)</h3><p>When an object of a class is created, the class is said to be&nbsp;<strong>instantiated</strong>. All the instances share the attributes and the behavior of the class. But the values of those attributes, i.e. the state are unique for each object. A single class may have any number of instances.</p><p><strong>Example:</strong></p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230515233145/Classes-and-Objects-in-java-2-768.webp"><em>Java Object Declaration</em></p><p>As we declare variables like (type name;). This notifies the compiler that we will use the name to refer to data whose type is type. With a primitive variable, this declaration also reserves the proper amount of memory for the variable. So for reference variables ,&nbsp;the type must be strictly a concrete class name. In general, we&nbsp;<strong>can’t</strong>&nbsp;create objects of an abstract class or an interface.&nbsp;&nbsp;</p><pre class="ql-syntax" spellcheck="false">Dog tuffy;
</pre><p>If we declare a reference variable(tuffy) like this, its value will be undetermined(null) until an object is actually created and assigned to it. Simply declaring a reference variable does not create an object.</p><h3>Initializing a Java object</h3><p>The new operator instantiates a class by allocating memory for a new object and returning a reference to that memory. The new operator also invokes the class&nbsp;constructor.&nbsp;</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">// Class Declaration

public class Dog {
    // Instance Variables
    String name;
    String breed;
    int age;
    String color;

    // Constructor Declaration of Class
    public Dog(String name, String breed, int age,
               String color)
    {
        this.name = name;
        this.breed = breed;
        this.age = age;
        this.color = color;
    }

    // method 1
    public String getName() { return name; }

    // method 2
    public String getBreed() { return breed; }

    // method 3
    public int getAge() { return age; }

    // method 4
    public String getColor() { return color; }

    @Override public String toString()
    {
        return ("Hi my name is " + this.getName()
                + ".\nMy breed,age and color are "
                + this.getBreed() + "," + this.getAge()
                + "," + this.getColor());
    }

    public static void main(String[] args)
    {
        Dog tuffy
            = new Dog("tuffy", "papillon", 5, "white");
        System.out.println(tuffy.toString());
    }
}
</pre><p><br></p><p><strong style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);">Output</strong></p><pre class="ql-syntax" spellcheck="false">Hi my name is tuffy.
My breed,age and color are papillon,5,white
</pre><p><br></p><p><strong>Initialize by using method/function:</strong></p><pre class="ql-syntax" spellcheck="false">public class GFG {
    // sw=software
    static String sw_name;
    static float sw_price;

    static void set(String n, float p)
    {
        sw_name = n;
        sw_price = p;
    }

    static void get()
    {
        System.out.println("Software name is: " + sw_name);
        System.out.println("Software price is: "
                           + sw_price);
    }

    public static void main(String args[])
    {
        GFG.set("Visual studio", 0.0f);
        GFG.get();
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Software name is: Visual studio
Software price is: 0.0
</pre><p>This class contains a single constructor. We can recognize a constructor because its declaration uses the same name as the class and it has no return type. The Java compiler differentiates the constructors based on the number and the type of the arguments. The constructor in the&nbsp;<em>Dog</em>&nbsp;class takes four arguments. The following statement provides “tuffy”, “papillon”,5, and “white” as values for those arguments:</p><pre class="ql-syntax" spellcheck="false">Dog tuffy = new Dog("tuffy","papillon",5, "white");
</pre><p>The result of executing this statement can be illustrated as :</p><p class="ql-align-center"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230515233146/Classes-and-Objects-in-java-3-768.webp"><em>Memory Allocation of Java Objects</em></p><blockquote><strong><em>Note:&nbsp;</em></strong><em>All classes have at least&nbsp;</em><strong><em>one</em></strong><em>&nbsp;constructor. If a class does not explicitly declare any, the Java compiler automatically provides a no-argument constructor, also called the default constructor. This default constructor calls the class parent’s no-argument constructor (as it contains only one statement i.e super();), or the&nbsp;Object&nbsp;class constructor if the class has no other parent (as the Object class is the parent of all classes either directly or indirectly).&nbsp;</em></blockquote><h2>Ways to Create an Object of a Class</h2><p>There are four ways to create objects in Java. Strictly speaking, there is only one way(by using a&nbsp;<em>new</em>&nbsp;keyword), and the rest internally use a&nbsp;<em>new</em>&nbsp;keyword.&nbsp;</p><h3><strong>1. Using new keyword</strong></h3><p>It is the most common and general way to create an object in Java.&nbsp;</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">// creating object of class Test
Test t = new Test();
</pre><h3><strong>2. Using Class.forName(String className) method</strong></h3><p>There is a pre-defined class in java.lang package with name Class. The forName(String className) method returns the Class object associated with the class with the given string name. We have to give a fully qualified name for a class. On calling the new Instance() method on this Class object returns a new instance of the class with the given string name.</p><pre class="ql-syntax" spellcheck="false">// creating object of public class Test
// consider class Test present in com.p1 package
Test obj = (Test)Class.forName("com.p1.Test").newInstance();
</pre><h3><strong>3. Using clone() method</strong></h3><p>clone() method is present in the Object class. It creates and returns a copy of the object.</p><pre class="ql-syntax" spellcheck="false">// creating object of class Test
Test t1 = new Test();
// creating clone of above object
Test t2 = (Test)t1.clone();
</pre><h3><strong>4. Deserialization</strong></h3><p>De-serialization is a technique of reading an object from the saved state in a file. Refer to&nbsp;<a href="https://www.geeksforgeeks.org/serialization-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Serialization/De-Serialization in Java</a></p><pre class="ql-syntax" spellcheck="false">FileInputStream file = new FileInputStream(filename);
ObjectInputStream in = new ObjectInputStream(file);
Object obj = in.readObject();
</pre><h3>Creating multiple objects by one type only (A good practice)&nbsp;</h3><p>In real-time, we need different objects of a class in different methods. Creating a number of references for storing them is not a good practice&nbsp;and therefore we declare a static reference variable and use it whenever required. In this case, the wastage of memory is less. The objects that are not referenced anymore will be destroyed by the&nbsp;<a href="https://www.geeksforgeeks.org/garbage-collection-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Garbage Collector</a>&nbsp;of Java.&nbsp;</p><p>Example:</p><pre class="ql-syntax" spellcheck="false">Test test = new Test();
test = new Test();
</pre><p>In the inheritance system, we use a parent class reference variable to store a sub-class object. In this case, we can switch into different subclass objects using the same referenced variable.&nbsp;</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">class Animal {}
class Dog extends Animal {}
class Cat extends Animal {}
public class Test
{
    // using Dog object
    Animal obj = new Dog();
    // using Cat object
    obj = new Cat();
}
</pre><h2>Anonymous Objects in Java</h2><p>Anonymous objects are objects that are instantiated but are not stored in a reference variable.&nbsp;&nbsp;</p><ul><li>They are used for immediate method calls.</li><li>They will be destroyed after method calling.</li><li>They are widely used in different libraries. For example,&nbsp;in AWT libraries, they are used to perform some action on capturing an event(eg a key press).</li><li>In the example below, when a key button(referred to by the btn) is pressed, we are simply creating an anonymous object of EventHandler class for just calling the handle method.</li></ul><pre class="ql-syntax" spellcheck="false">btn.setOnAction(new EventHandler()
{
    public void handle(ActionEvent event)
    {
        System.out.println("Hello World!");
    }
});
</pre><p><br></p><h2>Conclusion</h2><p>Mastering the concepts of classes and objects is essential for any Java programmer. These foundational elements of Java allow for the creation of robust and scalable software designs. Understanding how to effectively use classes and objects can help you write more organized and modular code, which is easier to manage and extend. To further hone your skills in Java programming, including advanced concepts and practical applications, consider signing up for our&nbsp;<a href="https://www.geeksforgeeks.org/courses/free-java-course-online" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Free Java Course</a>. This course will deepen your understanding and expand your abilities in Java.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1007e2b6-9304-4db9-92af-3f3f7a992a0a'::uuid, 2, '156a6bf7-dc81-4bce-956a-7a0e7998feb8'::uuid, 'LESSON'::public.resource_type, 'Access Modifiers in Java', NULL, '<p>in Java, Access modifiers help to restrict the scope of a class, constructor, variable, method, or data member. It provides security, accessibility, etc to the user depending upon the access modifier used with the element. Let us learn about Java Access Modifiers, their types, and the uses of access modifiers in this article.</p><h2>Types of Access Modifiers in Java</h2><p>There are four types of access modifiers available in Java:&nbsp;</p><ol><li>Default – No keyword required</li><li>Private</li><li>Protected</li><li>Public</li></ol><h3><span style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230409122917/Access-Modifiers-in-Java-1-768.webp"></span><strong>1. Default Access Modifier</strong></h3><p>When no access modifier is specified for a class, method, or data member – It is said to be having the&nbsp;<strong>default</strong>&nbsp;access modifier by default.&nbsp;The data members, classes, or methods that are not declared using any access modifiers i.e. having default access modifiers are accessible&nbsp;<strong>only within the same package</strong>.</p><p>In this example, we will create two packages and the classes in the packages will be having the default access modifiers and we will try to access a class from one package from a class of the second package.</p><p><strong>Program 1:</strong></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate default modifier
package p1;

// Class Geek is having Default access modifier
class Geek
{
    void display()
    {
        System.out.println("Hello World!");
    }
}
</pre><p><br></p><p><strong>Program 2:</strong></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate error while
// using class from different package with
// default modifier
package p2;
import p1.*;

// This class is having default access modifier
class GeekNew
{
    public static void main(String args[])
    {
        // Accessing class Geek from package p1
        Geek obj = new Geek();

        obj.display();
    }
}
</pre><p><br></p><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">Compile time error

</pre><h3><strong>2. Private Access Modifier</strong></h3><p>The private access modifier is specified using the keyword&nbsp;<strong>private</strong>.&nbsp;The methods or data members declared as private are accessible only&nbsp;<strong>within the class</strong>&nbsp;in which they are declared.</p><ul><li>Any other&nbsp;<strong>class of&nbsp;</strong>the&nbsp;<strong>same package will not be able to access</strong>&nbsp;these members.</li><li>Top-level classes or interfaces can not be declared as private because</li><li class="ql-indent-1">private means “only visible within the enclosing class”.</li><li class="ql-indent-1">protected means “only visible within the enclosing class and any subclasses”</li></ul><p>Hence these modifiers in terms of application to classes, apply only to nested classes and not on top-level classes</p><p>In this example, we will create two classes A and B within the same package p1. We will declare a method in class A as private and try to access this method from class B and see the result.</p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate error while
// Using class from different package with

// Private Modifier
package p1;

// Class A
class A {
    private void display()
    {
        System.out.println("GeeksforGeeks");
    }
}

// Class B
class B {
    public static void main(String args[])
    {
        A obj = new A();
        // Trying to access private method
        // of another class
        obj.display();
    }
}
</pre><p><br></p><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">error: display() has private access in A
        obj.display();

</pre><h3><strong>3. Protected Access Modifier</strong></h3><p>The protected access modifier is specified using the keyword&nbsp;<strong>protected</strong>.</p><p>The methods or data members declared as protected are&nbsp;<strong>accessible within the same package or subclasses in different packages.</strong></p><p>In this example, we will create two packages p1 and p2. Class A in p1 is made public, to access it in p2. The method display in class A is protected and class B is inherited from class A and this protected method is then accessed by creating an object of class B.</p><p><strong>Program 1:</strong></p><pre class="ql-syntax" spellcheck="false">// Java Program to Illustrate
// Protected Modifier
package p1;

// Class A
public class A {
    protected void display()
    {
        System.out.println("GeeksforGeeks");
    }
}
</pre><p><br></p><p><strong style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);">Program 2:</strong></p><pre class="ql-syntax" spellcheck="false">// Java program to illustrate
// protected modifier
package p2;

// importing all classes in package p1
import p1.*;

// Class B is subclass of A
class B extends A {
    public static void main(String args[])
    {
        B obj = new B();
        obj.display();
    }
}
</pre><p><br></p><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">GeeksforGeeks
</pre><h2><strong>Public Access modifier</strong></h2><p>The public access modifier is specified using the keyword&nbsp;<strong>public</strong>.&nbsp;</p><ul><li>The public access modifier has the&nbsp;<strong>widest scope</strong>&nbsp;among all other access modifiers.</li><li>Classes, methods, or data members that are declared as public are&nbsp;<strong>accessible from everywhere</strong>&nbsp;in the program. There is no restriction on the scope of public data members.</li></ul><h4><strong>Program 1:</strong></h4><pre class="ql-syntax" spellcheck="false">// Java program to illustrate
// public modifier
package p1;
public class A
{
public void display()
    {
        System.out.println("GeeksforGeeks");
    }
}
</pre><p><br></p><h4><strong>Program 2:</strong></h4><pre class="ql-syntax" spellcheck="false">package p2;
import p1.*;
class B {
    public static void main(String args[])
    {
        A obj = new A();
        obj.display();
    }
}
</pre><p><br></p><p><strong>Output:</strong></p><pre class="ql-syntax" spellcheck="false">GeeksforGeeks
</pre><p><strong>Important Points:</strong></p><ul><li>If other programmers use your class, try to use the most restrictive access level that makes sense for a particular member. Use private unless you have a good reason not to.</li><li>Avoid public fields except for constants.</li><li><br></li><li><img src="https://media.geeksforgeeks.org/wp-content/uploads/20240516114231/Access-Modifiers-in-Java-2.webp"></li></ul><h2>Algorithm to use access modifier in Java</h2><h4><em>Here’s a basic algorithm for using access modifiers in Java:</em></h4><ul><li><strong><em>Define a class:</em></strong><em>&nbsp;Create a class that represents the object you want to manage.</em></li><li><strong><em>Define instance variables:&nbsp;</em></strong><em>Within the class, define instance variables that represent the data you want to manage.</em></li><li><em>Specify an access modifier: For each instance variable, specify an access modifier that determines the visibility of the variable. The three main access modifiers in Java are private, protected, and public.</em></li><li><strong><em>Use private for variables that should only be accessible within the class:</em></strong><em>&nbsp;If you want to prevent access to a variable from outside the class, use the private access modifier. This is the most restrictive access modifier and provides the greatest level of encapsulation.</em></li><li><strong><em>Use protected for variables that should be accessible within the class and its subclasses</em></strong><em>: If you want to allow access to a variable from within the class and its subclasses, use the protected access modifier. This is less restrictive than private and provides some level of inheritance.</em></li><li><strong><em>Use public for variables that should be accessible from anywhere</em></strong><em>: If you want to allow access to a variable from anywhere, use the public access modifier. This is the least restrictive access modifier and provides the least amount of encapsulation.</em></li><li><strong><em>Use accessor and mutator methods to manage access to the variables:&nbsp;</em></strong><em>In order to access and modify the variables, use accessor (getter) and mutator (setter) methods, even if the variables have a public access modifier. This provides a level of abstraction and makes your code more maintainable and testable.</em></li></ul>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e15ce5cf-b45b-477c-b9cb-856c32489e7a'::uuid, 3, '156a6bf7-dc81-4bce-956a-7a0e7998feb8'::uuid, 'LESSON'::public.resource_type, 'Java Constructors', NULL, '<p>Java constructors or constructors in Java is a terminology used to construct something in our programs. A constructor in Java is a&nbsp;<strong>special method</strong>&nbsp;that is used to initialize objects. The constructor is called when an object of a class is created. It can be used to set initial values for object attributes.</p><h2>What are Constructors in Java?</h2><p>In Java, a Constructor is a block of codes similar to the method. It is called when an instance of the class is created. At the time of calling the constructor, memory for the object is allocated in the memory. It is a special type of method that is used to initialize the object. Every time an object is created using the new() keyword, at least one constructor is called. to explore more Java Constructor&nbsp;<a href="https://www.geeksforgeeks.org/courses/free-java-course-online" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Free Java course</a>&nbsp;to get an in-depth of Java construction.</p><h3><strong>Example of Java Constructor</strong></h3><p>Below is the implementation of Java Constructors:</p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to demonstrate
// Constructor
import java.io.*;

// Driver Class
class Geeks {

    // Constructor
    Geeks()
    {
        super();
        System.out.println("Constructor Called");
    }

    // main function
    public static void main(String[] args)
    {
        Geeks geek = new Geeks();
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Constructor Called
</pre><blockquote><strong><em>Note:</em></strong><em>&nbsp;It is not necessary to write a constructor for a class. It is because the java compiler creates a default constructor (constructor with no arguments) if your class doesn’t have any.</em></blockquote><p><br></p><h3><strong>How Java Constructors are Different From Java Methods?</strong></h3><ul><li>Constructors must have the same name as the class within which it is defined it is not necessary for the method in Java.</li><li>Constructors do not return any type while method(s) have the return type or&nbsp;<strong>void</strong>&nbsp;if does not return any value.</li><li>Constructors are called only once at the time of Object creation while method(s) can be called any number of times.</li></ul><p>Now let us come up with the syntax for the constructor being invoked at the time of object or instance creation.</p><p><br></p><pre class="ql-syntax" spellcheck="false">class Geek
{
    .......
    // A Constructor
    Geek() {
    }
    .......
}
// We can create an object of the above class
// using the below statement. This statement
// calls above constructor.
Geek obj = new Geek();
</pre><p><br></p><p class="ql-align-justify">The first line of a constructor is a call to super() or this(), (a call to a constructor of a super-class or an overloaded constructor), if you don’t type in the call to super in your constructor the compiler will provide you with a non-argument call to super at the first line of your code, the super constructor must be called to create an object:</p><p>If you think your class is not a subclass it actually is, every class in Java is the subclass of a class&nbsp;<strong>object&nbsp;</strong>even if you don’t say extends object in your class definition.</p><h2><strong>Need of Constructors in Java</strong></h2><p>Think of a Box. If we talk about a box class then it will have some class variables (say length, breadth, and height). But when it comes to creating its object(i.e Box will now exist in the computer’s memory), then can a box be there with no value defined for its dimensions? The answer is N<strong>o</strong>.&nbsp;</p><p>So constructors are used to assign values to the class variables at the time of object creation, either explicitly done by the programmer or by Java itself (default constructor).</p><h3><strong>When Java Constructor is called?</strong></h3><p>Each time an object is created using a&nbsp;<strong>new()</strong>&nbsp;keyword, at least one constructor (it could be the default constructor) is invoked to assign initial values to the&nbsp;<strong>data members&nbsp;</strong>of the same class. Rules for writing constructors are as follows:</p><ul><li>The constructor(s) of a class must have the same name as the class name in which it resides.</li><li>A constructor in Java can not be abstract, final, static, or Synchronized.</li><li>Access modifiers can be used in constructor declaration to control its access i.e which other class can call the constructor.</li></ul><p>So by far, we have learned constructors are used to initialize the object’s state. Like&nbsp;<a href="https://www.geeksforgeeks.org/methods-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">methods</a>, a constructor also contains a collection of statements(i.e. instructions) that are executed at the time of Object creation.</p><h2>Types of Constructors in Java</h2><p>Now is the correct time to discuss the types of the constructor, so primarily there are three types of constructors in Java are mentioned below:</p><ul><li>Default Constructor</li><li>Parameterized Constructor</li><li>Copy Constructor</li></ul><h3><strong>1. Default Constructor in Java</strong></h3><p>A constructor that has no parameters is known as default the constructor. A default constructor is invisible. And if we write a constructor with no arguments, the compiler does not create a default constructor. It is taken out. It is being overloaded and called a parameterized constructor. The default constructor changed into the parameterized constructor. But Parameterized constructor can’t change the default constructor. The default constructor can be implicit or explicit. If we don’t define explicitly, we get an implicit default constructor. If we manually write a constructor, the implicit one is overridded.</p><p><br></p><p><strong style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);">Example:</strong></p><pre class="ql-syntax" spellcheck="false">// Java Program to demonstrate
// Default Constructor
import java.io.*;

// Driver class
class GFG {

    // Default Constructor
    GFG() { System.out.println("Default constructor"); }

    // Driver function
    public static void main(String[] args)
    {
        GFG hello = new GFG();
    }
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Default constructor
</pre><blockquote><strong><em>Note:&nbsp;</em></strong><em>Default constructor provides the default values to the object like 0, null, etc. depending on the type.</em></blockquote><h3><strong>2. Parameterized Constructor in Java</strong></h3><p>A constructor that has parameters is known as parameterized constructor. If we want to initialize fields of the class with our own values, then use a parameterized constructor.</p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">// Java Program for Parameterized Constructor
import java.io.*;
class Geek {
    // data members of the class.
    String name;
    int id;
    Geek(String name, int id)
    {
        this.name = name;
        this.id = id;
    }
}
class GFG {
    public static void main(String[] args)
    {
        // This would invoke the parameterized constructor.
        Geek geek1 = new Geek("Avinash", 68);
        System.out.println("GeekName :" + geek1.name
                           + " and GeekId :" + geek1.id);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">GeekName :Avinash and GeekId :68
</pre><blockquote><strong><em>Remember: Does constructor return any value?</em></strong></blockquote><blockquote><em>There are no “return value” statements in the constructor, but the constructor returns the current class instance. We can write ‘return’ inside a constructor.</em></blockquote><p>Now the most important topic that comes into play is the strong incorporation of OOPS with constructors known as constructor overloading. Just like methods, we can overload constructors for creating objects in different ways. The compiler differentiates constructors on the basis of the number of parameters, types of parameters, and order of the parameters.&nbsp;</p><p><br></p><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">// Java Program to illustrate constructor overloading
// using same task (addition operation ) for different
// types of arguments.

import java.io.*;

class Geek {
    // constructor with one argument
    Geek(String name)
    {
        System.out.println("Constructor with one "
                           + "argument - String : " + name);
    }

    // constructor with two arguments
    Geek(String name, int age)
    {

        System.out.println(
            "Constructor with two arguments : "
            + " String and Integer : " + name + " " + age);
    }

    // Constructor with one argument but with different
    // type than previous..
    Geek(long id)
    {
        System.out.println(
            "Constructor with one argument : "
            + "Long : " + id);
    }
}

class GFG {
    public static void main(String[] args)
    {
        // Creating the objects of the class named ''Geek''
        // by passing different arguments

        // Invoke the constructor with one argument of
        // type ''String''.
        Geek geek2 = new Geek("Shikhar");

        // Invoke the constructor with two arguments
        Geek geek3 = new Geek("Dharmesh", 26);

        // Invoke the constructor with one argument of
        // type ''Long''.
        Geek geek4 = new Geek(325614567);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Constructor with one argument - String : Shikhar
Constructor with two arguments :  String and Integer : Dharmesh 26
Constructor with one argument : Long : 325614567
</pre><h3>3. Copy Constructor in Java</h3><p>Unlike other constructors copy constructor is passed with another object which copies the data available from the passed object to the newly created object.</p><blockquote><strong><em>Note:&nbsp;</em></strong><em>In Java,there is no such inbuilt copy constructor available like in other programming languages such as C++, instead we can create our own copy constructor by passing the object of the same class to the other instance(object) of the class.</em></blockquote><p><strong>Example:</strong></p><pre class="ql-syntax" spellcheck="false">// Java Program for Copy Constructor
import java.io.*;

class Geek {
    // data members of the class.
    String name;
    int id;

    // Parameterized Constructor
    Geek(String name, int id)
    {
        this.name = name;
        this.id = id;
    }

    // Copy Constructor
    Geek(Geek obj2)
    {
        this.name = obj2.name;
        this.id = obj2.id;
    }
}
class GFG {
    public static void main(String[] args)
    {
        // This would invoke the parameterized constructor.
        System.out.println("First Object");
        Geek geek1 = new Geek("Avinash", 68);
        System.out.println("GeekName :" + geek1.name
                           + " and GeekId :" + geek1.id);

        System.out.println();

        // This would invoke the copy constructor.
        Geek geek2 = new Geek(geek1);
        System.out.println(
            "Copy Constructor used Second Object");
        System.out.println("GeekName :" + geek2.name
                           + " and GeekId :" + geek2.id);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">First Object
GeekName :Avinash and GeekId :68

Copy Constructor used Second Object
GeekName :Avinash and GeekId :68
</pre><p>To know deep down about constructors there are two concepts been widely used as listed below:&nbsp;</p><ul><li><a href="https://www.geeksforgeeks.org/constructor-chaining-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Constructor Chaining</a></li><li><a href="https://www.geeksforgeeks.org/copy-constructor-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Copy Constructor</a></li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1a3f81f4-039b-4cdb-8fbe-f1bff33d2498'::uuid, 0, 'dab9a305-9d53-48ce-938c-d4a1241d270a'::uuid, 'VIDEO'::public.resource_type, 'Inheritance in Java', NULL, '', 'https://www.youtube.com/watch?v=Zs342ePFvRI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('dd2e1e6b-7583-4347-a88c-0ea3c54b90e4'::uuid, 1, 'dab9a305-9d53-48ce-938c-d4a1241d270a'::uuid, 'VIDEO'::public.resource_type, 'Abstraction in Java', NULL, '', 'https://www.youtube.com/watch?v=Lvnb83qt57g');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e1259eba-2e49-452e-b4e6-93e14875f2bf'::uuid, 2, 'dab9a305-9d53-48ce-938c-d4a1241d270a'::uuid, 'VIDEO'::public.resource_type, 'Encapsulation in Java', NULL, '', 'https://www.youtube.com/watch?v=eboNNUADeIc');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('dac8cada-b63b-42ea-aaca-844f2399a965'::uuid, 3, 'dab9a305-9d53-48ce-938c-d4a1241d270a'::uuid, 'VIDEO'::public.resource_type, 'Polymorphism in Java', NULL, '', 'https://www.youtube.com/watch?v=2hkngtWLGvE');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('cd2d1998-1dca-4462-9fa8-c9ee6e48314e'::uuid, 0, '8381fccd-9458-45b6-9f10-cad145d3ea4b'::uuid, 'LESSON'::public.resource_type, 'Java Methods', NULL, '<p>The<strong>&nbsp;method in Java</strong>&nbsp;or Methods of Java is a collection of statements that perform some specific tasks and return the result to the caller. A Java method can perform some specific tasks without returning anything. Java Methods allows us to&nbsp;<strong>reuse</strong>&nbsp;the code without retyping the code. In Java, every method must be part of some class that is different from languages like C, C++, and Python.&nbsp;</p><ul><li>A method is like a function i.e. used to expose the behavior of an object.</li><li>It is a set of codes that perform a particular task.</li></ul><h3>Syntax of Method:</h3><pre class="ql-syntax" spellcheck="false">&lt;access_modifier&gt; &lt;return_type&gt; &lt;method_name&gt;( list_of_parameters)
{
    //body
}
</pre><p><strong>Advantage of Method:</strong></p><ul><li>Code Reusability</li><li>Code Optimization&nbsp;</li></ul><blockquote><strong><em>Note:</em></strong><em>&nbsp;Methods are time savers and help us to reuse the code without retyping the code.&nbsp;</em></blockquote><h3>Method Declaration</h3><p>In general, method declarations have 6 components:</p><p><strong>1. Modifier:</strong>&nbsp;It defines the&nbsp;<strong>access type</strong>&nbsp;of the method i.e. from where it can be accessed in your application. In Java, there 4 types of access specifiers.&nbsp;</p><ul><li><strong>public:</strong>&nbsp;It is<strong>&nbsp;</strong>accessible in all classes in your application.</li><li><strong>protected:</strong>&nbsp;It is accessible within the class in which it is defined and in its subclasses.</li><li><strong>private:</strong>&nbsp;It is<strong>&nbsp;</strong>accessible only within the class in which it is defined.</li><li><strong>default:</strong>&nbsp;It is declared/defined without using any modifier. It is accessible within the same class and package within which its class is defined.</li></ul><blockquote><strong><em>Note:</em></strong><em>&nbsp;It is&nbsp;</em><strong><em>Optional&nbsp;</em></strong><em>in syntax.</em></blockquote><p><strong>2. The return type:</strong>&nbsp;The data type of the value returned by the method or void if does not return a value. It is&nbsp;<strong>Mandatory&nbsp;</strong>in syntax.</p><p><strong>3. Method Name:</strong>&nbsp;the rules for field names apply to method names as well, but the convention is a little different. It is&nbsp;<strong>Mandatory&nbsp;</strong>in syntax.</p><p><strong>4. Parameter list:</strong>&nbsp;Comma-separated list of the input parameters is defined, preceded by their data type, within the enclosed parenthesis. If there are no parameters, you must use empty parentheses ().&nbsp;It is&nbsp;<strong>Optional&nbsp;</strong>in syntax.</p><p><strong>5. Exception list:</strong>&nbsp;The exceptions you expect by the method can throw; you can specify these exception(s). It is&nbsp;<strong>Optional&nbsp;</strong>in syntax.</p><p><strong>6. Method body:</strong>&nbsp;it is enclosed between braces. The code you need to be executed to perform your intended operations.&nbsp;It is&nbsp;<strong>Optional&nbsp;</strong>in syntax.</p><p><span style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20240717150503/1.webp"></span></p><h2>Types of Methods in Java</h2><p class="ql-align-justify">There are two types of methods in Java:</p><h3><strong>1. Predefined Method</strong></h3><p class="ql-align-justify">In Java, predefined methods are the method that is already defined in the Java class libraries is known as predefined methods. It is also known as the standard library method or built-in method. We can directly use these methods just by calling them in the program at any point.&nbsp;</p><h3><strong>2. User-defined Method</strong></h3><p class="ql-align-justify">The method written by the user or programmer is known as a user-defined method. These methods are modified according to the requirement.</p><h3><strong>Ways to Create Method in Java</strong></h3><p>There are two ways to create a method in Java:</p><p><strong>1. Instance Method:</strong>&nbsp;Access the instance data using the object name. Declared inside a class.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">// Instance Method
void method_name(){
  body // instance area
}
</pre><p><strong>2. Static Method:</strong>&nbsp;Access the static data using class name. Declared inside class with&nbsp;<strong>static&nbsp;</strong>keyword.</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">//Static Method
static void method_name(){
  body // static area
}
</pre><h3>Method Signature:</h3><p>It consists of the method name and a parameter list (number of parameters, type of the parameters, and order of the parameters). The return type and exceptions are not considered as part of it.&nbsp;</p><p>Method Signature of the above function:&nbsp;&nbsp;</p><pre class="ql-syntax" spellcheck="false"> max(int x, int y) Number of parameters is 2, Type of parameter is int.
</pre><h2>Naming a Method</h2><p>In&nbsp;<a href="https://www.geeksforgeeks.org/courses/free-java-course-online" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java language</a>&nbsp;method name is typically a single word that should be a&nbsp;<strong>verb</strong>&nbsp;in lowercase or a multi-word, that begins with a&nbsp;<strong>verb</strong>&nbsp;in lowercase followed by an&nbsp;<strong>adjective, noun.&nbsp;</strong>After the first word, the first letter of each word should be capitalized.&nbsp;</p><p><strong>Rules to Name a Method:</strong></p><ul><li>While defining a method, remember that the method name must be a&nbsp;<strong>verb</strong>&nbsp;and start with a&nbsp;<strong>lowercase</strong>&nbsp;letter.</li><li>If the method name has more than two words, the first name must be a verb followed by an adjective or noun.</li><li>In the multi-word method name, the first letter of each word must be in&nbsp;<strong>uppercase</strong>&nbsp;except the first word. For example, findSum, computeMax, setX, and getX.</li></ul><p>Generally, a method has a unique name within the class in which it is defined but sometimes a method might have the same name as other method names within the same class as&nbsp;<a href="https://www.geeksforgeeks.org/overloading-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">method overloading is allowed in Java</a>.</p><h2>Method Calling</h2><p>The method needs to be called for use its functionality. There can be three situations when a method is called:&nbsp;</p><p>A method returns to the code that invoked it when:&nbsp;&nbsp;</p><ul><li>It completes all the statements in the method.</li><li>It reaches a return statement.</li><li>Throws an exception.</li></ul><p><strong>Example:</strong></p><p><br></p><pre class="ql-syntax" spellcheck="false">// Java Program to Illustrate Methods

// Importing required classes
import java.io.*;

// Class 1
// Helper class
class Addition {

    // Initially taking sum as 0
    // as we have not started computation
    int sum = 0;

    // Method
    // To add two numbers
    public int addTwoInt(int a, int b)
    {

        // Adding two integer value
        sum = a + b;

        // Returning summation of two values
        return sum;
    }
}

// Class 2
// Helper class
class GFG {

    // Main driver method
    public static void main(String[] args)
    {

        // Creating object of class 1 inside main() method
        Addition add = new Addition();

        // Calling method of above class
        // to add two integer
        // using instance created
        int s = add.addTwoInt(1, 2);

        // Printing the sum of two numbers
        System.out.println("Sum of two integer values :"
                           + s);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Sum of two integer values :3
</pre><p><br></p><p><strong>Example 2:</strong></p><pre class="ql-syntax" spellcheck="false">// Java Program to Illustrate Method Calling
// Via Different Ways of Calling a Method

// Importing required classes
import java.io.*;

// Class 1
// Helper class
class Test {

    public static int i = 0;

    // Constructor of class
    Test()
    {

        // Counts the number of the objects of the class
        i++;
    }

    // Method 1
    // To access static members of the class and
    // and for getting total no of objects
    // of the same class created so far
    public static int get()
    {

        // statements to be executed....
        return i;
    }

    // Method 2
    // Instance method calling object directly
    // that is created inside another class ''GFG''.

    // Can also be called by object directly created in the
    // same class and from another method defined in the
    // same class and return integer value as return type is
    // int.
    public int m1()
    {

        // Display message only
        System.out.println(
            "Inside the method m1 by object of GFG class");

        // Calling m2() method within the same class.
        this.m2();

        // Statements to be executed if any
        return 1;
    }

    // Method 3
    // Returns nothing
    public void m2()
    {

        // Print statement
        System.out.println(
            "In method m2 came from method m1");
    }
}

// Class 2
// Main class
class GFG {

    // Main driver method
    public static void main(String[] args)
    {

        // Creating object of above class inside the class
        Test obj = new Test();

        // Calling method 2 inside main() method
        int i = obj.m1();

        // Display message only
        System.out.println(
            "Control returned after method m1 :" + i);

        // Call m2() method
        // obj.m2();
        int no_of_objects = Test.get();

        // Print statement
        System.out.print(
            "No of instances created till now : ");

        System.out.println(no_of_objects);
    }
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Inside the method m1 by object of GFG class
In method m2 came from method m1
Control returned after method m1 :1
No of instances created till now : 1

</pre><p>The control flow of the above program is as follows:&nbsp;</p><p><span style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20240717150619/2.webp"></span></p><h2>Passing Parameters to a method</h2><p>There are some cases when we don’t know the number of parameters to be passed or an unexpected case to use more parameters than declared number of parameters. In such cases we can use</p><ul><li>Passing Array as an Argument</li><li>Passing Variable-arguments as an Argument</li><li>Method Overloading.</li></ul><h2><strong>Memory Allocation for Methods Calls</strong></h2><p>Methods calls are implemented through a stack. Whenever a method is called a stack frame is created within the stack area and after that, the arguments passed to and the local variables and value to be returned by this called method are stored in this stack frame and when execution of the called method is finished, the allocated stack frame would be deleted. There is a stack pointer register that tracks the top of the stack&nbsp;which is adjusted accordingly.</p><p><br></p><p><strong>Example:</strong>&nbsp;pseudo-code for implementing methods</p><pre class="ql-syntax" spellcheck="false">// Define a class
public class Example {

    // Define instance variables
    private int number;
    private String name;

    // Define accessor (getter) methods
    public int getNumber() {
      return number;
    }

    public String getName() {
      return name;
    }

    // Define mutator (setter) methods
    public void setNumber(int number)
    {
        this.number = number;
    }

    public void setName(String name) { this.name = name; }

    // Define other methods
    public void printDetails()
    {
        System.out.println("Number: " + number);
        System.out.println("Name: " + name);
    }
}

// Use the methods in another part of the code
Example example = new Example();
example.setNumber(123);
example.setName("GFG Write");
example.printDetails();
</pre><p><br></p><h3>There are several advantages to using methods in Java, including:</h3><ul><li><strong>Reusability</strong>: Methods allow you to write code once and use it many times, making your code more modular and easier to maintain.</li><li><strong>Abstraction</strong>: Methods allow you to abstract away complex logic and provide a simple interface for others to use. This makes your code more readable and easier to understand.</li><li><strong>Improved readability</strong>: By breaking up your code into smaller, well-named methods, you can make your code more readable and easier to understand.</li><li><strong>Encapsulation</strong>: Methods allow you to encapsulate complex logic and data, making it easier to manage and maintain.</li><li><strong>Separation of concern</strong>s: By using methods, you can separate different parts of your code and assign different responsibilities to different methods, improving the structure and organization of your code.</li><li><strong>Improved modularity</strong>: Methods allow you to break up your code into smaller, more manageable units, improving the modularity of your code.</li><li><strong>Improved testability</strong>: By breaking up your code into smaller, more manageable units, you can make it easier to test and debug your code.</li><li><strong>Improved performance:</strong>&nbsp;By organizing your code into well-structured methods, you can improve performance by reducing the amount of code that needs to be executed and by making it easier to cache and optimize your code.</li></ul>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5c11d71d-dd0b-44bb-bedf-518987ea11c8'::uuid, 1, '8381fccd-9458-45b6-9f10-cad145d3ea4b'::uuid, 'LESSON'::public.resource_type, 'Abstract Class in Java', NULL, '<p class="ql-align-justify">In Java, abstract class is declared with the abstract keyword. It may have both abstract and non-abstract methods(methods with bodies). An abstract is a Java modifier applicable for classes and methods in Java but<em>&nbsp;not for Variables</em>. In this article, we will learn the use of abstract classes in Java.</p><h2>What is Abstract Class in Java?</h2><p>Java abstract class is a class that can not be initiated by itself, it needs to be subclassed by another class to use its properties. An abstract class is declared using the “abstract” keyword in its class definition.</p><h3><strong>Illustration of Abstract class</strong></h3><pre class="ql-syntax" spellcheck="false">abstract class Shape
{
    int color;
    // An abstract function
    abstract void draw();
}
</pre><p class="ql-align-justify">In Java, the following some&nbsp;<em>important observations&nbsp;</em>about abstract classes are as follows:</p><ol><li>An instance of an abstract class can not be created.</li><li>Constructors are allowed.</li><li>We can have an abstract class without any abstract method.</li><li>There can be a&nbsp;<strong>final method</strong>&nbsp;in abstract class but any abstract method in class(abstract class) can not be declared as final&nbsp;or in simpler terms final method can not be abstract itself as it will yield an error: “Illegal combination of modifiers: abstract and final”</li><li>We can define static methods in an abstract class</li><li>We can use the&nbsp;<strong>abstract keyword</strong>&nbsp;for declaring&nbsp;<strong><em>top-level classes (Outer class) as well as inner classes</em></strong>&nbsp;as abstract</li><li>If a<strong>&nbsp;class</strong>&nbsp;contains at least&nbsp;<strong>one abstract method&nbsp;</strong>then compulsory should declare a class as abstract&nbsp;</li><li>If the<strong>&nbsp;Child class</strong>&nbsp;is unable to provide implementation to all abstract methods of the<strong>&nbsp;Parent class&nbsp;</strong>then we should declare that&nbsp;<strong>Child class as abstract&nbsp;</strong>so that the next level Child class should provide implementation to the remaining abstract method</li></ol><h2>Examples of Java Abstract Class&nbsp;</h2><p><br></p><h3>1. Example of Abstract Class that has Abstract method</h3><p class="ql-align-justify"><strong>Below is the implementation of the above topic:</strong></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Abstract class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>abstract</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Sunstar {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>abstract</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">printInfo();</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Abstraction performed using extends</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Employee </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Sunstar {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">printInfo()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">String name = </code><code style="background-color: initial; color: blue;">"avinash"</code><code style="background-color: initial; color: black;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">age = </code><code style="color: rgb(0, 153, 0); background-color: initial;">21</code><code style="color: black; background-color: initial;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>float</strong></code> <code style="color: black; background-color: initial;">salary = </code><code style="color: rgb(0, 153, 0); background-color: initial;">222</code><code style="color: black; background-color: initial;">.2F;</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(name);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(age);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(salary);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Base class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Base {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Sunstar s = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Employee();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">s.printInfo();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">avinash
21
222.2
</pre><h3>2. Abstract Class having constructor, data member, and methods</h3><p class="ql-align-justify">Elements abstract class can have</p><ul><li>data member</li><li>abstract method</li><li>method body (non-abstract method)</li><li>constructor</li><li>main() method.</li></ul><p class="ql-align-justify"><strong>Below is the implementation of the above topic:</strong></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to implement Abstract Class</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// having constructor, data member, and methods</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*;</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>abstract</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Subject {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Subject() { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Learning Subject"</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>abstract</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">syllabus();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">Learn(){</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Preparing Right Now!"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">IT </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Subject {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">syllabus(){</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"C , Java , C++"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Subject x=</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">IT();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">x.syllabus();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">x.Learn();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Learning Subject
C , Java , C++
Preparing Right Now!
</pre><h2><br></h2><h2>Properties of Abstract class</h2><p class="ql-align-justify">Let us elaborate on these observations and do justify them with help of clean java programs as follows.</p><h3><strong>Observation 1</strong></h3><p class="ql-align-justify">In Java, just like in C++ an instance of an abstract class cannot be created, we can have references to abstract class type though. It is as shown below via the clean Java program.</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><strong>Example</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">// Java Program to Illustrate
// that an instance of Abstract
// Class can not be created
&nbsp;
// Class 1
// Abstract class
abstract class Base {
&nbsp;&nbsp;&nbsp;&nbsp;abstract void fun();
}
&nbsp;
// Class 2
class Derived extends Base {
&nbsp;&nbsp;&nbsp;&nbsp;void fun()
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("Derived fun() called");
&nbsp;&nbsp;&nbsp;&nbsp;}
}
&nbsp;
// Class 3
// Main class
class Main {
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;// Main driver method
&nbsp;&nbsp;&nbsp;&nbsp;public static void main(String args[])
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Uncommenting the following line will cause
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// compiler error as the line tries to create an
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// instance of abstract class. Base b = new Base();
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// We can have references of Base type.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Base b = new Derived();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b.fun();
&nbsp;&nbsp;&nbsp;&nbsp;}
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Derived fun() called
</pre><h3><strong>Observation 2</strong></h3><p class="ql-align-justify">Like C++, an&nbsp;<strong>abstract class</strong>&nbsp;can contain&nbsp;<strong>constructors</strong>&nbsp;in Java. And a constructor of an abstract class is called when an instance of an inherited class is created. It is as shown in the program below as follows:&nbsp;</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><strong>Example:</strong></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to Illustrate Abstract Class </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Can contain Constructors</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Class 1</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Abstract class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>abstract</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Base {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Constructor of class 1</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Base()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Print statement</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Base Constructor Called"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Abstract method inside class1</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>abstract</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">fun();</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Class 2</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Derived </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Base {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Constructor of class2</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Derived()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Derived Constructor Called"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Method of class2</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">fun()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Derived fun() called"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Class 3</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Main class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG {</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Main driver method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String args[])</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Creating object of class 2</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// inside main() method</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Derived d = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Derived();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">d.fun();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><br></p><pre class="ql-syntax" spellcheck="false">OutputBase Constructor Called
Derived Constructor Called
Derived fun() called
</pre><p><br></p><h2>Conclusion</h2><p class="ql-align-justify">Points to remember from this article are mentioned below:</p><ul><li>An abstract class is a class that can not be initiated by itself, it needs to be subclassed by another class to use its properties.</li><li>An abstract class can be created using “abstract” keywords.</li><li>We can have an abstract class without any abstract method.</li></ul><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate
// method overriding in java


// Base Class
class Parent {
	void show() { System.out.println("Parent''s show()"); }
}


// Inherited class
class Child extends Parent {
	// This method overrides show() of Parent
	@Override void show()
	{
		System.out.println("Child''s show()");
	}
}


// Driver class
class Main {
	public static void main(String[] args)
	{
		// If a Parent type reference refers
		// to a Parent object, then Parent''s
		// show is called
		Parent obj1 = new Parent();
		obj1.show();


		// If a Parent type reference refers
		// to a Child object Child''s show()
		// is called. This is called RUN TIME
		// POLYMORPHISM.
		Parent obj2 = new Child();
		obj2.show();
	}
}

</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Parent''s show()
Child''s show()

</pre><h2><br></h2><h2><strong>Rules for Java Method Overriding</strong></h2><p><br></p><h3><strong>1. Overriding and Access Modifiers</strong></h3><p>The&nbsp;<a href="https://www.geeksforgeeks.org/access-modifiers-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">access modifier</a>&nbsp;for an overriding method can allow more, but not less, access than the overridden method. For example, a protected instance method in the superclass can be made public, but not private, in the subclass. Doing so will generate a compile-time error.&nbsp;</p><p><br></p><pre class="ql-syntax" spellcheck="false">// A Simple Java program to demonstrate
// Overriding and Access-Modifiers


class Parent {
	// private methods are not overridden
	private void m1()
	{
		System.out.println("From parent m1()");
	}


	protected void m2()
	{
		System.out.println("From parent m2()");
	}
}


class Child extends Parent {
	// new m1() method
	// unique to Child class
	private void m1()
	{
		System.out.println("From child m1()");
	}


	// overriding method
	// with more accessibility
	@Override public void m2()
	{
		System.out.println("From child m2()");
	}
}


// Driver class
class Main {
	public static void main(String[] args)
	{
		Parent obj1 = new Parent();
		obj1.m2();
		Parent obj2 = new Child();
		obj2.m2();
	}
}

</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">From parent m2()
From child m2()

</pre><h3><br></h3><h3><strong>2. Final methods can not be overridden</strong></h3><p>If we don’t want a method to be overridden, we declare it as&nbsp;<a href="https://www.geeksforgeeks.org/final-keyword-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">final</a>. Please see&nbsp;<a href="https://www.geeksforgeeks.org/using-final-with-inheritance-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Using Final with Inheritance</a>.&nbsp;</p><p><br></p><pre class="ql-syntax" spellcheck="false">// A Java program to demonstrate that
// final methods cannot be overridden
&nbsp;
class Parent {
&nbsp;&nbsp;&nbsp;&nbsp;// Can''t be overridden
&nbsp;&nbsp;&nbsp;&nbsp;final void show() {}
}
&nbsp;
class Child extends Parent {
&nbsp;&nbsp;&nbsp;&nbsp;// This would produce error
&nbsp;&nbsp;&nbsp;&nbsp;void show() {}
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">13: error: show() in Child cannot override show() in Parent
    void show() {  }
         ^
  overridden method is final
</pre><h3><br></h3><h3><strong>3. Static methods can not be overridden(Method Overriding vs Method Hiding):&nbsp;</strong></h3><p>When you define a static method with the same signature as a static method in the base class, it is known as&nbsp;<a href="https://www.geeksforgeeks.org/can-we-overload-or-override-static-methods-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">method hiding</a>. The following table summarizes what happens when you define a method with the same signature as a method in a super-class.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('89f5ba34-efa4-4c18-940f-9745175c2749'::uuid, 2, '8381fccd-9458-45b6-9f10-cad145d3ea4b'::uuid, 'LESSON'::public.resource_type, 'Overriding in Java', NULL, '<p>In Java, Overriding is a feature that allows a subclass or child class to provide a specific implementation of a method that is already provided by one of its super-classes or parent classes. When a method in a subclass has the same name, the same parameters or signature, and the same return type(or sub-type) as a method in its super-class, then the method in the subclass is said to&nbsp;<em>override</em>&nbsp;the method in the super-class.</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230515230306/Overriding-in-Java-3-768.webp"></p><p>Method overriding is one of the ways by which Java achieves&nbsp;<a href="https://www.geeksforgeeks.org/dynamic-method-dispatch-runtime-polymorphism-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Run Time Polymorphism</a>. The version of a method that is executed will be determined by the object that is used to invoke it. If an object of a parent class is used to invoke the method, then the version in the parent class will be executed, but if an object of the subclass is used to invoke the method, then the version in the child class will be executed. In other words,&nbsp;<em>it is the type of the object being referred to</em>&nbsp;(not the type of the reference variable) that determines which version of an overridden method will be executed.</p><h2>Example of Method Overriding in Java</h2><p>Below is the implementation of the Java Method Overriding:</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to show that</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// if the static method is redefined by</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// a derived class, then it is not</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// overriding, it is hiding</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Static method in base class</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// which will be hidden in subclass</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">m1()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"From parent "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ </code><code style="background-color: initial; color: blue;">"static m1()"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Non-static method which will</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// be overridden in derived class</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">m2()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"From parent "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ </code><code style="background-color: initial; color: blue;">"non - static(instance) m2() "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Child </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// This method hides m1() in Parent</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">m1()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"From child static m1()"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// This method overrides m2() in Parent</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: gray;">@Override</code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">m2()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"From child "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ </code><code style="background-color: initial; color: blue;">"non - static(instance) m2() "</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Driver class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Main {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Parent obj1 = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Child();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// As per overriding rules this</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// should call to class Child static</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// overridden method. Since static</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// method can not be overridden, it</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// calls Parent''s m1()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj1.m1();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Here overriding works</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// and Child''s m2() is called</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj1.m2();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">From parent static m1()
From child non - static(instance) m2()

</pre><h3><strong>4. Private methods can not be overridden</strong></h3><p><a href="https://www.geeksforgeeks.org/can-override-private-methods-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Private methods&nbsp;</a>cannot be overridden as they are bonded during compile time. Therefore we can’t even override private methods in a subclass.(See&nbsp;<a href="https://www.geeksforgeeks.org/can-override-private-methods-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">this</a>&nbsp;for details).</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">SuperClass {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>private</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">privateMethod()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"This is a private method in SuperClass"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">publicMethod()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"This is a public method in SuperClass"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">privateMethod();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">SubClass </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">SuperClass {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// This is a new method with the same name as the</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// private method in SuperClass</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>private</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">privateMethod()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"This is a private method in SubClass"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// This method overrides the public method in SuperClass</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">publicMethod()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"This is a public method in SubClass"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">privateMethod(); </code><code style="background-color: initial; color: rgb(0, 130, 0);">// calls the private method in</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// SubClass, not SuperClass</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Test {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">SuperClass obj1 = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">SuperClass();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj1.publicMethod(); </code><code style="background-color: initial; color: rgb(0, 130, 0);">// calls the public method in</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// SuperClass</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">SubClass obj2 = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">SubClass();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj2.publicMethod(); </code><code style="background-color: initial; color: rgb(0, 130, 0);">// calls the overridden public</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// method in SubClass</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">This is a public method in SuperClass
This is a private method in SuperClass
This is a public method in SubClass
This is a private method in SubClass

</pre><h3><strong>5. The overriding method must have the same return type (or subtype)</strong></h3><p>From Java 5.0 onwards it is possible to have different return types for an overriding method in the child class, but the child’s return type should be a sub-type of the parent’s return type. This phenomenon is known as the&nbsp;<a href="https://www.geeksforgeeks.org/covariant-return-types-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>covariant return type</strong></a>.</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">SuperClass {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: black; background-color: initial;">Object method()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"This is the method in SuperClass"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>return</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>new</strong></code> <code style="color: black; background-color: initial;">Object();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">SubClass </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">SuperClass {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: black; background-color: initial;">String method()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"This is the method in SubClass"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>return</strong></code> <code style="color: blue; background-color: initial;">"Hello, World!"</code><code style="color: black; background-color: initial;">;</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Test {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">SuperClass obj1 = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">SuperClass();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj1.method();</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">SubClass obj2 = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">SubClass();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj2.method();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">This is the method in SuperClass
This is the method in SubClass

</pre><h3><strong>6. Invoking overridden method from sub-class</strong></h3><p>We can call the parent class method in the overriding method using the&nbsp;<a href="https://www.geeksforgeeks.org/super-keyword/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">super keyword</a>.&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// A Java program to demonstrate that overridden</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// method can be called from sub-class</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Base Class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">show() { System.out.println(</code><code style="color: blue; background-color: initial;">"Parent''s show()"</code><code style="color: black; background-color: initial;">); }</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Inherited class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Child </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// This method overrides show() of Parent</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: gray;">@Override</code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">show()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>super</strong></code><code style="background-color: initial; color: black;">.show();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Child''s show()"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Driver class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Main {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Parent obj = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Child();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj.show();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Parent''s show()
Child''s show()

</pre><h2><strong>Overriding and Constructor</strong></h2><p>We can not override the constructor as the parent and child class can never have a constructor with the same name(The constructor name must always be the same as the Class name).</p><h2><strong>Overriding and Exception-Handling</strong></h2><p>Below are two rules to note when overriding methods related to exception handling.</p><h3><strong>Rule #1</strong></h3><p>If the super-class overridden method does not throw an exception, the subclass overriding method can only throw the&nbsp;<a href="https://www.geeksforgeeks.org/checked-vs-unchecked-exceptions-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">unchecked exception</a>, throwing a checked exception will lead to a compile-time error.&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to demonstrate overriding when</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// superclass method does not declare an exception</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">m1() { System.out.println(</code><code style="color: blue; background-color: initial;">"From parent m1()"</code><code style="color: black; background-color: initial;">); }</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">m2() { System.out.println(</code><code style="color: blue; background-color: initial;">"From parent&nbsp;m2()"</code><code style="color: black; background-color: initial;">); }</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Child </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: gray;">@Override</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// no issue while throwing unchecked exception</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">m1() </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>throws</strong></code> <code style="color: black; background-color: initial;">ArithmeticException</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"From child m1()"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: gray;">@Override</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// compile-time error</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// issue while throwing checked exception</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">m2() </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>throws</strong></code> <code style="color: black; background-color: initial;">Exception</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"From child m2"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">error: m2() in Child cannot override m2() in Parent
    void m2() throws Exception{ System.out.println("From child m2");}
         ^
  overridden method does not throw Exception
</pre><h3><strong>Rule #2</strong></h3><p>If the superclass overridden method does throw an exception, the subclass overriding method can only throw the same, subclass exception. Throwing parent exceptions in the&nbsp;<a href="https://www.geeksforgeeks.org/exceptions-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Exception hierarchy</a>&nbsp;will lead to compile time error. Also, there is no issue if the subclass overridden method is not throwing any exception.&nbsp;</p><ul><li>Java</li></ul><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java program to demonstrate overriding when</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// superclass method does declare an exception</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">m1() </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>throws</strong></code> <code style="color: black; background-color: initial;">RuntimeException</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"From parent m1()"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Child1 </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: gray;">@Override</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// no issue while throwing same exception</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">m1() </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>throws</strong></code> <code style="color: black; background-color: initial;">RuntimeException</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"From child1 m1()"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Child2 </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: gray;">@Override</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// no issue while throwing subclass exception</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">m1() </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>throws</strong></code> <code style="color: black; background-color: initial;">ArithmeticException</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"From child2 m1()"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Child3 </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: gray;">@Override</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// no issue while not throwing any exception</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">m1()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"From child3 m1()"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Child4 </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: gray;">@Override</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// compile-time error</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// issue while throwing parent exception</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">m1() </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>throws</strong></code> <code style="color: black; background-color: initial;">Exception</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"From child4 m1()"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">error: m1() in Child4 cannot override m1() in Parent
    void m1() throws Exception
         ^
  overridden method does not throw Exception
</pre><h3><strong>Overriding and Abstract Method</strong></h3><p>Abstract methods in an interface or abstract class are meant to be overridden in derived concrete classes otherwise a compile-time error will be thrown.</p><h3><strong>Overriding and Synchronized/strictfp Method</strong></h3><p>The presence of a synchronized/strictfp modifier with the method has no effect on the rules of overriding, i.e. it’s possible that a synchronized/strictfp method can override a non-synchronized/strictfp one and vice-versa.</p><blockquote><strong><em>Note:</em></strong></blockquote><ol><li><em>In C++, we need</em><a href="https://www.geeksforgeeks.org/virtual-functions-and-runtime-polymorphism-in-c-set-1-introduction/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>&nbsp;virtual keyword</em></a><em>&nbsp;to achieve overriding or&nbsp;</em><a href="https://www.geeksforgeeks.org/dynamic-method-dispatch-runtime-polymorphism-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><em>Run Time Polymorphism</em></a><em>. In Java, methods are virtual by default.</em></li><li><em>We can have multilevel method-overriding.&nbsp;</em></li></ol><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// A Java program to demonstrate</code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// multi-level overriding</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Base Class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">show() { System.out.println(</code><code style="color: blue; background-color: initial;">"Parent''s show()"</code><code style="color: black; background-color: initial;">); }</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Inherited class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Child </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Parent {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// This method overrides show() of Parent</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">show() { System.out.println(</code><code style="color: blue; background-color: initial;">"Child''s show()"</code><code style="color: black; background-color: initial;">); }</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Inherited class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GrandChild </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>extends</strong></code> <code style="color: black; background-color: initial;">Child {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// This method overrides show() of Parent</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>void</strong></code> <code style="color: black; background-color: initial;">show()</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"GrandChild''s show()"</code><code style="background-color: initial; color: black;">);</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Driver class</code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Main {</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args)</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Parent obj1 = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">GrandChild();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj1.show();</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">}</code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">GrandChild''s show()

</pre><h2><strong>Method Overriding vs Method Overloading</strong></h2><p>1.&nbsp;<a href="https://www.geeksforgeeks.org/method-overloading-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Overloading</a>&nbsp;is about the same method having different signatures. Overriding is about the same method, and same signature but different classes connected through inheritance.&nbsp;</p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230515230305/Overriding-in-Java-2-768.webp"></p><p>2. Overloading is an example of compiler-time polymorphism and overriding is an example of run-time<a href="https://www.geeksforgeeks.org/dynamic-method-dispatch-runtime-polymorphism-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">&nbsp;polymorphism</a>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('73ac229b-67c2-4840-b8cd-dfe585546186'::uuid, 3, '8381fccd-9458-45b6-9f10-cad145d3ea4b'::uuid, 'LESSON'::public.resource_type, 'Method Overloading in Java', NULL, '<p>In Java, Method Overloading allows different methods to have the same name, but different signatures where the signature can differ by the number of input parameters or type of input parameters, or a mixture of both.</p><p>Method overloading in Java is also known as<strong><em>&nbsp;</em></strong><a href="https://www.geeksforgeeks.org/compile-time-polymorphism-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong><em>Compile-time Polymorphism</em></strong></a><strong><em>, Static Polymorphism, or&nbsp;</em></strong><a href="https://www.geeksforgeeks.org/difference-between-early-and-late-binding-in-java" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong><em>Early binding</em></strong></a>. In Method overloading compared to the parent argument, the child argument will get the highest priority.</p><h2>Example of Method Overloading</h2><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate working of method
// overloading in Java
&nbsp;&nbsp;
public class Sum {
&nbsp;&nbsp;&nbsp;&nbsp;// Overloaded sum(). This sum takes two int parameters
&nbsp;&nbsp;&nbsp;&nbsp;public int sum(int x, int y) { return (x + y); }
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;// Overloaded sum(). This sum takes three int parameters
&nbsp;&nbsp;&nbsp;&nbsp;public int sum(int x, int y, int z)
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (x + y + z);
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;// Overloaded sum(). This sum takes two double
&nbsp;&nbsp;&nbsp;&nbsp;// parameters
&nbsp;&nbsp;&nbsp;&nbsp;public double sum(double x, double y)
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (x + y);
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;// Driver code
&nbsp;&nbsp;&nbsp;&nbsp;public static void main(String args[])
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sum s = new Sum();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s.sum(10, 20));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s.sum(10, 20, 30));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s.sum(10.5, 20.5));
&nbsp;&nbsp;&nbsp;&nbsp;}
}
</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">30
60
31.0
</pre><p class="ql-align-justify">&nbsp;</p><h2>Different Ways of Method Overloading in Java</h2><ul><li>Changing the Number of Parameters.</li><li>Changing Data Types of the Arguments.</li><li>Changing the Order of the Parameters of Methods</li></ul><h3>1. Changing the Number of Parameters</h3><p class="ql-align-justify">Method overloading can be achieved by changing the number of parameters while passing to different methods.</p><p class="ql-align-justify"><strong>Below is the implementation of the above method:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to Illustrate Method Overloading </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// By Changing the Number of Parameters </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Importing required classes </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Class 1 </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Helper class </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Product { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Method 1 </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Multiplying two integer values </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">multiply(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">a, </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">b) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">prod = a * b; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>return</strong></code> <code style="color: black; background-color: initial;">prod; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Method 2 </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Multiplying three integer values </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">multiply(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">a, </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">b, </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">c) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">prod = a * b * c; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>return</strong></code> <code style="color: black; background-color: initial;">prod; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">} </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Class 2 </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Main class </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Main driver method </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Creating object of above class inside main() </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// method </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Product ob = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Product(); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Calling method to Multiply 2 numbers </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">prod1 = ob.multiply(</code><code style="color: rgb(0, 153, 0); background-color: initial;">1</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Printing Product of 2 numbers </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println( </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"Product of the two integer value :"</code> <code style="color: black; background-color: initial;">+ prod1); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Calling method to multiply 3 numbers </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">prod2 = ob.multiply(</code><code style="color: rgb(0, 153, 0); background-color: initial;">1</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">3</code><code style="color: black; background-color: initial;">); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Printing product of 3 numbers </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println( </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"Product of the three integer value :"</code> <code style="color: black; background-color: initial;">+ prod2); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Product of the two integer value :2
Product of the three integer value :6
</pre><h3>2. Changing Data Types of the Arguments</h3><p class="ql-align-justify">In many cases, methods can be considered Overloaded if they have the same name but have different parameter types, methods are considered to be overloaded.</p><p class="ql-align-justify"><strong>Below is the implementation of the above method:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to Illustrate Method Overloading </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// By Changing Data Types of the Parameters </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Importing required classes </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Class 1 </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Helper class </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Product { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Multiplying three integer values </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">Prod(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">a, </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">b, </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">c) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">prod1 = a * b * c; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>return</strong></code> <code style="color: black; background-color: initial;">prod1; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Multiplying three double values. </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>double</strong></code> <code style="color: black; background-color: initial;">Prod(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>double</strong></code> <code style="color: black; background-color: initial;">a, </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>double</strong></code> <code style="color: black; background-color: initial;">b, </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>double</strong></code> <code style="color: black; background-color: initial;">c) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>double</strong></code> <code style="color: black; background-color: initial;">prod2 = a * b * c; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>return</strong></code> <code style="color: black; background-color: initial;">prod2; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">} </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Product obj = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Product(); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>int</strong></code> <code style="color: black; background-color: initial;">prod1 = obj.Prod(</code><code style="color: rgb(0, 153, 0); background-color: initial;">1</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">2</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">3</code><code style="color: black; background-color: initial;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println( </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"Product of the three integer value :"</code> <code style="color: black; background-color: initial;">+ prod1); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>double</strong></code> <code style="color: black; background-color: initial;">prod2 = obj.Prod(</code><code style="color: rgb(0, 153, 0); background-color: initial;">1.0</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">2.0</code><code style="color: black; background-color: initial;">, </code><code style="color: rgb(0, 153, 0); background-color: initial;">3.0</code><code style="color: black; background-color: initial;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println( </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: blue;">"Product of the three double value :"</code> <code style="color: black; background-color: initial;">+ prod2); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Product of the three integer value :6
Product of the three double value :6.0
</pre><h3>3. Changing the Order of the Parameters of Methods</h3><p class="ql-align-justify">Method overloading can also be implemented by rearranging the parameters of two or more overloaded methods. For example, if the parameters of method 1 are (String name, int roll_no) and the other method is (int roll_no, String name) but both have the same name, then these 2 methods are considered to be overloaded with different sequences of parameters.</p><p class="ql-align-justify"><strong>Below is the implementation of the above method:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Java Program to Illustrate Method Overloading </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// By changing the Order of the Parameters </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Importing required classes </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>import</strong></code> <code style="color: black; background-color: initial;">java.io.*; </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Class 1 </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Helper class </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Student { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Method 1 </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">StudentId(String name, </code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">roll_no) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Name :"</code> <code style="color: black; background-color: initial;">+ name + </code><code style="color: blue; background-color: initial;">" "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ </code><code style="background-color: initial; color: blue;">"Roll-No :"</code> <code style="color: black; background-color: initial;">+ roll_no); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Method 2 </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">StudentId(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">roll_no, String name) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Again printing name and id of person </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"Roll-No :"</code> <code style="color: black; background-color: initial;">+ roll_no + </code><code style="color: blue; background-color: initial;">" "</code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">+ </code><code style="background-color: initial; color: blue;">"Name :"</code> <code style="color: black; background-color: initial;">+ name); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">} </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Class 2 </code></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Main class </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">GFG { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Main function </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Creating object of above class </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Student obj = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Student(); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Passing name and id </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Note: Reversing order </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj.StudentId(</code><code style="background-color: initial; color: blue;">"Spyd3r"</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: rgb(0, 153, 0);">1</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj.StudentId(</code><code style="background-color: initial; color: rgb(0, 153, 0);">2</code><code style="background-color: initial; color: black;">, </code><code style="background-color: initial; color: blue;">"Kamlesh"</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Name :Spyd3r Roll-No :1
Roll-No :2 Name :Kamlesh
</pre><h3><strong>What if the exact prototype does not match with arguments?</strong></h3><p class="ql-align-justify">&nbsp;Priority-wise, the compiler takes these steps:</p><ul><li><a href="https://www.geeksforgeeks.org/type-conversion-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Type Conversion</a>&nbsp;but to a higher type(in terms of range) in the same family.</li><li>Type conversion to the next higher family(suppose if there is no long data type available for an int data type, then it will search for the float data type).</li></ul><p class="ql-align-justify"><span style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20230711135513/Method-Overloading-in-Java-1-768.png"></span><strong>Let’s take an example to clarify the concept:</strong></p><ul><li>Java</li></ul><p><br></p><p><br></p><p><code style="color: rgb(0, 130, 0); background-color: initial;">// Demo Class </code></p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">Demo { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">show(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>int</strong></code> <code style="color: black; background-color: initial;">x) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"In int"</code> <code style="color: black; background-color: initial;">+ x); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">show(String s) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"In String"</code> <code style="color: black; background-color: initial;">+ s); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">show(</code><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>byte</strong></code> <code style="color: black; background-color: initial;">b) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">System.out.println(</code><code style="background-color: initial; color: blue;">"In byte"</code> <code style="color: black; background-color: initial;">+ b); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">} </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="color: rgb(0, 102, 153); background-color: initial;"><strong>class</strong></code> <code style="color: black; background-color: initial;">UseDemo { </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>public</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>static</strong></code> <code style="color: rgb(0, 102, 153); background-color: initial;"><strong>void</strong></code> <code style="color: black; background-color: initial;">main(String[] args) </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">{ </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>byte</strong></code> <code style="color: black; background-color: initial;">a = </code><code style="color: rgb(0, 153, 0); background-color: initial;">25</code><code style="color: black; background-color: initial;">; </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">Demo obj = </code><code style="background-color: initial; color: rgb(0, 102, 153);"><strong>new</strong></code> <code style="color: black; background-color: initial;">Demo(); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// it will go to </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// byte argument </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj.show(a); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// String </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj.show(</code><code style="background-color: initial; color: blue;">"hello"</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Int </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj.show(</code><code style="background-color: initial; color: rgb(0, 153, 0);">250</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// Since char is </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// not available, so the datatype </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// higher than char in terms of </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// range is int. </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj.show(</code><code style="background-color: initial; color: blue;">''A''</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// String </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj.show(</code><code style="background-color: initial; color: blue;">"A"</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;</code>&nbsp;</p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// since float datatype </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// is not available and so it''s higher </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// datatype, so at this step their </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: rgb(0, 130, 0);">// will be an error. </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">obj.show(</code><code style="background-color: initial; color: rgb(0, 153, 0);">7.5</code><code style="background-color: initial; color: black;">); </code></p><p><code style="background-color: initial;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code style="background-color: initial; color: black;">} </code></p><p><code style="color: black; background-color: initial;">}</code></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">./UseDemo.java:46: error: no suitable method found for show(double)
        obj.show(7.5);
           ^
    method Demo.show(int) is not applicable
      (argument mismatch; possible lossy conversion from double to int)
    method Demo.show(String) is not applicable
      (argument mismatch; double cannot be converted to String)
    method Demo.show(byte) is not applicable
      (argument mismatch; possible lossy conversion from double to byte)
1 error
</pre><h2><br></h2><h2>Advantages of Method Overloading&nbsp;</h2><ul><li>Method overloading improves the Readability and reusability of the program.</li><li>Method overloading reduces the complexity of the program.</li><li>Using method overloading, programmers can perform a task efficiently and effectively.</li><li>Using method overloading, it is possible to access methods performing related functions with slightly different arguments and types.</li><li>Objects of a class can also be initialized in different ways using the constructors.</li></ul>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2ad3fd47-b94c-4ae6-a0bb-57f51e4ada23'::uuid, 4, '8381fccd-9458-45b6-9f10-cad145d3ea4b'::uuid, 'LESSON'::public.resource_type, 'Static class in Java', NULL, '<p class="ql-align-justify">Java allows a class to be defined within another class. These are called&nbsp;<strong>Nested Classes</strong>. Classes can be static which most developers are aware of, henceforth some classes can be made static in Java. Java supports&nbsp;<a href="https://www.geeksforgeeks.org/static-keyword-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Static Instance Variables</a>,&nbsp;<a href="https://www.geeksforgeeks.org/static-keyword-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Static Methods</a>,&nbsp;<a href="https://www.geeksforgeeks.org/g-fact-79/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Static Block</a>, and Static Classes.&nbsp;The class in which the nested class is defined is known as the&nbsp;<strong>Outer Class</strong>. Unlike top-level classes,&nbsp;<strong>Nested classes can be Static</strong>. Non-static nested classes are also known as&nbsp;<strong>Inner classes</strong>.</p><blockquote><strong><em>Note:</em></strong><em>&nbsp;The top level class cannot be static in java, to create a static class we must create a nested class and then make it static.</em></blockquote><p class="ql-align-justify">An instance of an inner class cannot be created without an instance of the outer class. Therefore, an inner class instance can access all of the members of its outer class, without using a reference to the outer class instance. For this reason, inner classes can help make programs simple and concise.&nbsp;</p><blockquote class="ql-align-justify"><strong><em>Remember:</em></strong><em>&nbsp;In static class, we can easily create objects.</em></blockquote><h2><strong>Differences between Static and Non-static Nested Classes</strong></h2><p class="ql-align-justify">The following are major differences between static nested classes and inner classes.&nbsp;</p><ol><li>A static nested class may be instantiated without instantiating its outer class.</li><li>Inner classes can access both static and non-static members of the outer class. A static class can access only the static members of the outer class.</li></ol>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('056366c7-a252-44a6-923b-9ca9cd5e4d47'::uuid, 5, '8381fccd-9458-45b6-9f10-cad145d3ea4b'::uuid, 'LESSON'::public.resource_type, 'Anonymous Inner Class in Java', NULL, '<p><a href="https://www.geeksforgeeks.org/nested-classes-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Nested Classes in Java</a>&nbsp;is prerequisite required before adhering forward to grasp about anonymous Inner class. It is an inner class without a name and for which only a single object is created. An anonymous inner class can be useful when making an instance of an object with certain “extras” such as overriding methods of a class or interface, without having to actually subclass a class.</p><blockquote><strong><em>Tip:</em></strong><em>&nbsp;Anonymous inner classes are useful in writing implementation classes for listener interfaces in graphics programming.&nbsp;</em></blockquote><p>The syntax of an anonymous class expression is like the invocation of a constructor, except that there is a class definition contained in a block of code.&nbsp;</p><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">// Test can be interface,abstract/concrete class
Test t = new Test()
{
   // data members and methods
   public void test_method()
   {
      ........
      ........
    }
};
</pre><p>Now let us do discuss the difference between regular class(normal classes) and Anonymous Inner class</p><ul><li>A normal class can implement any number of interfaces but the anonymous inner class can implement only one interface at a time.</li><li>A regular class can extend a class and implement any number of interfaces simultaneously. But anonymous Inner class can extend a class or can implement an interface but not both at a time.</li><li>For regular/normal class, we can write any number of constructors but we can’t write any constructor for anonymous Inner class because the anonymous class does not have any name and while defining constructor class name and constructor name must be same.</li></ul><p><strong>Accessing Local Variables of the Enclosing Scope, and Declaring and Accessing Members of the Anonymous Class&nbsp;</strong></p><p>Like local classes, anonymous classes can capture variables; they have the same access to local variables of the enclosing scope:&nbsp;&nbsp;</p><ul><li>An anonymous class has access to the members of its enclosing class.</li><li>An anonymous class cannot access local variables in its enclosing scope that are not declared as final or effectively final.</li><li>Like a nested class, a declaration of a type (such as a variable) in anonymous class shadows any other declarations in the enclosing scope that have the same name.</li></ul><p><br></p><p>Anonymous classes also have the same restrictions as local classes with respect to their members:&nbsp;</p><ul><li>We cannot declare static initializers or member interfaces in an anonymous class.</li><li>An anonymous class can have static members provided that they are constant variables.</li></ul><blockquote><br></blockquote><blockquote><strong><em>Note:&nbsp;</em></strong><em>We can declare the following in anonymous classes as follows:</em></blockquote><ul><li><em>Fields</em></li><li><em>Extra methods (even if they do not implement any methods of the supertype)</em></li><li><em>Instance initializers</em></li><li><em>Local classes</em></li></ul><p><strong>Ways:</strong></p><p>Anonymous inner classes are generic created via below listed two ways as follows:&nbsp;</p><ol><li>Class (may be abstract or concrete)</li><li>Interface</li></ol><p>Now let us take an example with which we will understand anonymous inner class, let us take a simple program</p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate Need for
// Anonymous Inner class

// Interface
interface Age {

    // Defining variables and methods
    int x = 21;
    void getAge();
}

// Class 1
// Helper class implementing methods of Age Interface
class MyClass implements Age {

    // Overriding getAge() method
    @Override public void getAge()
    {
        // Print statement
        System.out.print("Age is " + x);
    }
}

// Class 2
// Main class
// AnonymousDemo
class GFG {
    // Main driver method
    public static void main(String[] args)
    {
        // Class 1 is implementation class of Age interface
        MyClass obj = new MyClass();

        // calling getage() method implemented at Class1
        // inside main() method
        obj.getAge();
    }
}
</pre><p><br></p><p><strong>Output:</strong></p><p><span style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20211027122247/Screenshot20211027at122142PM.png"></span></p><p><br></p><p><strong>Output explanation:</strong></p><p>In the above program, interface Age is created with getAge() method and x=21.&nbsp;Myclass is written as an implementation class of Age interface. As done in Program, there is no need to write a&nbsp;separate class Myclass. Instead,&nbsp;directly copy the code of Myclass into this parameter, as shown here:&nbsp;</p><pre class="ql-syntax" spellcheck="false">Age oj1 = new Age()
{
    @Override
    public void getAge()
    {
        System.out.print("Age is " + x);
    }
};
</pre><p><br></p><h3>Types of Anonymous Inner Class</h3><p>Based on declaration and behavior, there are 3 types of anonymous Inner classes:&nbsp;</p><ol><li>Anonymous Inner class that extends a class</li><li>Anonymous Inner class that implements an interface</li><li>Anonymous Inner class that defines inside method/constructor argument</li></ol><p><br></p><p><strong>Type 1:&nbsp;</strong>Anonymous Inner class that extends a class</p><p>We can have an anonymous inner class that extends a class. For example, we know that we can create a thread by extending a Thread class. Suppose we need an immediate thread but we don’t want to create a class that extends&nbsp;<a href="https://www.geeksforgeeks.org/java-lang-thread-class-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Thread class</a>&nbsp;all the time. With the help of this type of Anonymous Inner class, we can define a ready thread.</p><p><br></p><p><strong>Type 2:&nbsp;</strong>Anonymous Inner class that implements an interface</p><p>We can also have an anonymous inner class that implements an interface. For example, we also know that by implementing Runnable interface we can create a Thread. Here we use an anonymous Inner class that implements an interface.</p><p><br></p><p><strong>Type 3:&nbsp;</strong>Anonymous Inner class that defines inside method/constructor argument</p><p>Anonymous inner classes in method/constructor arguments are often used in graphical user interface (GUI) applications. To get you familiar with syntax lets have a look at the following program that creates a thread using this type of Anonymous Inner class</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4dcf20a4-bc67-4ef6-bea9-921006f85ac2'::uuid, 0, 'a50d6805-4a02-4f49-a6fd-2bacb212df7e'::uuid, 'VIDEO'::public.resource_type, 'Interfaces in Java', NULL, '', 'https://www.youtube.com/watch?v=GhslBwrRsnw');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b0279416-ae0d-45f5-b1b7-fe756d87b671'::uuid, 1, 'a50d6805-4a02-4f49-a6fd-2bacb212df7e'::uuid, 'LESSON'::public.resource_type, 'Differences between Interface and Class in Java', NULL, '<h2><strong>Classes in Java</strong></h2><p>A&nbsp;<a href="https://www.geeksforgeeks.org/types-of-classes-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">class</a>&nbsp;is a user-defined blueprint or prototype from which objects are created.&nbsp;It represents the set of properties or methods that are common to all objects of one type. In general, class declarations can include these components, in order:&nbsp;</p><ol><li><strong>Modifiers</strong>: A class can be public or has default access (Refer to&nbsp;<a href="https://www.geeksforgeeks.org/access-specifiers-for-classes-or-interfaces-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">this</a>&nbsp;for details).</li><li><strong>Class name:</strong>&nbsp;The name should begin with an initial letter (capitalized by convention).</li><li><strong>Superclass(if any):</strong>&nbsp;The name of the class’s parent (superclass), if any, preceded by the keyword extends. A class can only extend (subclass) one parent.</li><li><strong>Interfaces(if any):</strong>&nbsp;A comma-separated list of interfaces implemented by the class, if any, preceded by the keyword implements. A class can implement more than one interface.</li><li><strong>Body:</strong>&nbsp;The class body&nbsp;surrounded by braces, { }.</li></ol><p>Constructors are used for initializing new objects. Fields are variables that provide the state of the class and its objects, and methods are used to implement the behavior of the class and its objects.</p><p><strong>Example:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate Class


// Class Declaration
public class Dog {


	// Instance Variables
	String name;
	String breed;
	int age;
	String color;


	// Constructor Declaration of Class
	public Dog(String name, String breed, int age,
			String color)
	{
		this.name = name;
		this.breed = breed;
		this.age = age;
		this.color = color;
	}


	// method 1
	public String getName() { return name; }


	// method 2
	public String getBreed() { return breed; }


	// method 3
	public int getAge() { return age; }


	// method 4
	public String getColor() { return color; }


	@Override public String toString()
	{
		return ("Hi my name is " + this.getName()
				+ ".\nMy breed, age and color are "
				+ this.getBreed() + ", " + this.getAge()
				+ ", " + this.getColor());
	}


	public static void main(String[] args)
	{
		Dog tuffy
			= new Dog("tuffy", "papillon", 5, "white");
		System.out.println(tuffy.toString());
	}
}

</pre><p><br></p><p><strong>Output</strong></p><pre class="ql-syntax" spellcheck="false">Hi my name is tuffy.
My breed, age and color are papillon, 5, white
</pre><h2><strong>Interface</strong>&nbsp;in Java</h2><p>Like a class, an&nbsp;<a href="https://www.geeksforgeeks.org/interfaces-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">interface</a>&nbsp;can have methods and variables, but the methods declared in the interface are by default abstract (only method signature, nobody).</p><ul><li>Interfaces specify what a class must do and not how. It is the blueprint of the class.</li><li>An Interface is about capabilities like a Player may be an interface and any class implementing Player must be able to (or must implement) move(). So it specifies a set of methods that the class has to implement.</li><li>If a class implements an interface and does not provide method bodies for all functions specified in the interface, then the class must be declared abstract.</li><li>A Java library example is&nbsp;<a href="https://www.geeksforgeeks.org/comparator-interface-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Comparator Interface</a>. If a class implements this interface, then it can be used to sort a collection.</li></ul><p><strong>Syntax:</strong></p><pre class="ql-syntax" spellcheck="false">interface &lt;interface_name&gt; {

    // declare constant fields
    // declare methods that abstract
    // by default.
}
</pre><p><br></p><p><strong>Example:</strong>&nbsp;</p><pre class="ql-syntax" spellcheck="false">// Java program to demonstrate
// working of interface.
import java.io.*;


// A simple interface
interface in1 {
	// public, static and final
	final int a = 10;


	// public and abstract
	void display();
}


// A class that implements the interface.
class testClass implements in1 {


	// Implementing the capabilities of
	// interface.
	public void display() { System.out.println("Geek"); }


	// Driver Code
	public static void main(String[] args)
	{
		testClass t = new testClass();
		t.display();
		System.out.println(a);
	}
}

</pre><p><br></p><p><strong style="background-color: rgb(255, 255, 255); color: rgb(39, 50, 57);">Output</strong></p><pre class="ql-syntax" spellcheck="false">OutputGeek
10
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('77f35a2a-b1a2-4054-b8ad-b552ac1277ab'::uuid, 2, 'a50d6805-4a02-4f49-a6fd-2bacb212df7e'::uuid, 'VIDEO'::public.resource_type, 'functional interface in java', NULL, '', 'https://www.youtube.com/watch?v=LEJ1kGHSXdA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8584d191-f4fb-42ce-a91d-63eb2553331e'::uuid, 3, 'a50d6805-4a02-4f49-a6fd-2bacb212df7e'::uuid, 'VIDEO'::public.resource_type, 'Nested Interface in Java', NULL, '', 'https://www.youtube.com/watch?v=B7tNX_uzt2U');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('217dc750-0448-42db-8eb5-adaafbc90c4e'::uuid, 0, '19c589d7-2a7f-4036-bb83-6acbcfa5ac5b'::uuid, 'LESSON'::public.resource_type, 'Collections in Java', NULL, '<p>Any group of individual objects that are represented as a single unit is known as a Java Collection of Objects. In Java, a separate framework named the&nbsp;<em>“Collection Framework”</em>&nbsp;has been defined in JDK 1.2 which holds all the Java Collection Classes and Interface in it.&nbsp;</p><p>In Java, the Collection interface (<strong>java.util.Collection</strong>) and Map interface (<strong>java.util.Map</strong>) are the two main “root” interfaces of Java collection classes.</p><h3>What You Should Learn in Java Collections?</h3><ul><li><a href="https://www.geeksforgeeks.org/list-interface-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">List Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/abstractlist-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Abstract List Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/abstractsequentiallist-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Abstract Sequential List Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/arraylist-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Array List</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/java-util-vector-class-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Vector Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/stack-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Stack Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/linked-list-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">LinkedList Class</a></li><li><a href="https://www.geeksforgeeks.org/queue-interface-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Queue Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/blockingqueue-interface-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Blocking Queue Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/abstractqueue-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">AbstractQueue Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/priority-queue-class-in-java-2/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">PriorityQueue Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/priorityblockingqueue-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">PriorityBlockingQueue Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/concurrentlinkedqueue-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">ConcurrentLinkedQueue Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/arrayblockingqueue-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">ArrayBlockingQueue Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/delayqueue-class-in-java-with-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">DelayQueue Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/linkedblockingqueue-class-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">LinkedBlockingQueue Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/linkedtransferqueue-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">LinkedTransferQueue</a></li><li><a href="https://www.geeksforgeeks.org/deque-interface-java-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Deque Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/blockingdeque-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">BlockingDeque Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/concurrentlinkeddeque-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">ConcurrentLinkedDeque Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/arraydeque-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">ArrayDeque Class</a></li><li><a href="https://www.geeksforgeeks.org/set-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Set Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/abstractset-class-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Abstract Set Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/copyonwritearrayset-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">CopyOnWriteArraySet Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/enumset-class-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">EnumSet Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/concurrenthashmap-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">ConcurrentHashMap Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/hashset-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">HashSet Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/linkedhashset-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">LinkedHashSet Class</a></li><li><a href="https://www.geeksforgeeks.org/sortedset-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">SortedSet Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/navigableset-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">NavigableSet Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/treeset-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">TreeSet</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/concurrentskiplistset-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">ConcurrentSkipListSet Class</a></li><li><a href="https://www.geeksforgeeks.org/map-interface-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Map Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/sortedmap-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">SortedMap Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/navigablemap-interface-in-java-with-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">NavigableMap Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/concurrentmap-interface-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">ConcurrentMap Interface</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/treemap-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">TreeMap Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/abstractmap-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">AbstractMap Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/concurrenthashmap-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">ConcurrentHashMap Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/enummap-class-java-example/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">EnumMap Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/java-util-hashmap-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">HashMap Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/identityhashmap-class-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">IdentityHashMap Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/linkedhashmap-class-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">LinkedHashMap Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/hashtable-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">HashTable Class</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/java-util-properties-class-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Properties Class</a></li><li>Other Important Concepts</li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/how-to-convert-hashmap-to-arraylist-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">How to convert HashMap to ArrayList</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/randomly-select-items-from-a-list-in-java/?ref=rp" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Randomly select items from a List</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/how-to-add-all-items-from-a-collection-to-an-arraylist-in-java/?ref=rp" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">How to add all items from a collection to an ArrayList</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/conversion-of-java-maps-to-list/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Conversion of Java Maps to List</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/array-to-arraylist-conversion-in-java/?ref=rp" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Array to ArrayList Conversion</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/arraylist-array-conversion-java-toarray-methods/?ref=rp" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">ArrayList to Array Conversion</a></li><li class="ql-indent-1"><a href="https://www.geeksforgeeks.org/array-vs-arraylist-in-java/?ref=rp" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Differences between Array and ArrayList</a></li></ul><p>&nbsp;&nbsp;</p><p><br></p><h2>&nbsp;</h2><h2><strong>What is a Framework in Java?</strong></h2><p>A framework is a set of classes and interfaces which provide a ready-made architecture. In order to implement a new feature or a class, there is no need to define a framework. However, an optimal object-oriented design always includes a framework with a collection of classes such that all the classes perform the same kind of task.&nbsp;To get more about the framework in Java you can explore&nbsp;<a href="https://www.geeksforgeeks.org/courses/free-java-course-online" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">Java free programming course</a>, this course</p><h3><strong>Need for a Separate Collection Framework in Java</strong></h3><p>Before the Collection Framework(or before JDK 1.2) was introduced, the standard methods for grouping Java objects (or collections) were&nbsp;<strong>Arrays</strong>&nbsp;or&nbsp;<strong>Vectors</strong>, or&nbsp;<strong>Hashtables</strong>. All of these collections had no common interface. Therefore, though the main aim of all the collections is the same, the implementation of all these collections was defined independently and had no correlation among them. And also, it is very difficult for the users to remember all the different&nbsp;<a href="https://www.geeksforgeeks.org/methods-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>methods</strong></a>, syntax, and&nbsp;<a href="https://www.geeksforgeeks.org/constructors-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>constructors</strong></a>&nbsp;present in every collection class.&nbsp;</p><p><br></p><h3><strong>Advantages of the Java Collection Framework</strong></h3><p>Since the lack of a collection framework gave rise to the above set of disadvantages, the following are the advantages of the collection framework.&nbsp;</p><ol><li><strong>Consistent API:</strong>&nbsp;The API has a basic set of interfaces like&nbsp;<em>Collection</em>,&nbsp;<em>Set</em>,&nbsp;<em>List</em>, or&nbsp;<em>Map</em>, all the classes (ArrayList, LinkedList, Vector, etc) that implement these interfaces have&nbsp;<em>some</em>&nbsp;common set of methods.</li><li>&nbsp;</li><li><strong>Reduces programming effort:</strong>&nbsp;A programmer doesn’t have to worry about the design of the Collection but rather he can focus on its best use in his program. Therefore, the basic concept of Object-oriented programming (i.e.) abstraction has been successfully implemented.</li><li>&nbsp;</li><li><strong>Increases program speed and quality:</strong>&nbsp;Increases performance by providing high-performance implementations of useful data structures and algorithms because in this case, the programmer need not think of the best implementation of a specific data structure. He can simply use the best implementation to drastically boost the performance of his algorithm/program.</li></ol><h2>Hierarchy of the Collection Framework in Java</h2><p>The utility package, (java.util) contains all the classes and interfaces that are required by the collection framework. The collection framework contains an interface named an iterable interface which provides the iterator to iterate through all the collections. This interface is extended by the main collection interface which acts as a root for the collection framework. All the collections extend this collection interface thereby extending the properties of the iterator and the methods of this interface. The following figure illustrates the hierarchy of the collection framework.&nbsp;</p><p><span style="color: rgb(39, 50, 57); background-color: rgb(255, 255, 255);"><img src="https://media.geeksforgeeks.org/wp-content/uploads/20240726145939/Collections-in-Java.png"></span></p><p>Before understanding the different components in the above framework, let’s first understand a class and an interface.&nbsp;</p><ul><li><a href="https://www.geeksforgeeks.org/classes-objects-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Class</strong></a><strong>:</strong>&nbsp;A class is a user-defined blueprint or prototype from which objects are created. It represents the set of properties or methods that are common to all objects of one type.</li><li>&nbsp;</li><li><a href="https://www.geeksforgeeks.org/interfaces-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Interface</strong></a><strong>:</strong>&nbsp;Like a class, an interface can have methods and variables, but the methods declared in an interface are by default abstract (only method signature, nobody). Interfaces specify what a class must do and not how. It is the blueprint of the class.</li></ul><p><br></p><h2>Interfaces that Extend the Java Collections Interface</h2><p>The collection framework contains multiple interfaces where every interface is used to store a specific type of data. The following are the interfaces present in the framework.&nbsp;</p><h3><strong>1.&nbsp;</strong><a href="https://www.geeksforgeeks.org/iterable-interface-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Iterable Interface</strong></a></h3><p>This is the root interface for the entire collection framework. The collection interface extends the iterable interface. Therefore, inherently, all the interfaces and classes implement this interface. The main functionality of this interface is to provide an iterator for the collections. Therefore, this interface contains only one abstract method which is the iterator. It returns the&nbsp;</p><pre class="ql-syntax" spellcheck="false">Iterator iterator();
</pre><h3><strong>2.&nbsp;</strong><a href="https://www.geeksforgeeks.org/collection-interface-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>Collection Interface</strong></a></h3><p>This interface extends the iterable interface and is implemented by all the classes in the collection framework. This interface contains all the basic methods which every collection has like adding the data into the collection, removing the data, clearing the data, etc. All these methods are implemented in this interface because these methods are implemented by all the classes irrespective of their style of implementation. And also, having these methods in this interface ensures that the names of the methods are universal for all the collections. Therefore, in short, we can say that this interface builds a foundation on which the collection classes are implemented.</p><h3><strong>3.&nbsp;</strong><a href="https://www.geeksforgeeks.org/list-interface-java-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>List Interface</strong></a></h3><p>This is a child interface of the collection interface. This interface is dedicated to the data of the list type in which we can store all the ordered collections of the objects. This also allows duplicate data to be present in it. This list interface is implemented by various classes like ArrayList, Vector, Stack, etc. Since all the subclasses implement the list, we can instantiate a list object with any of these classes.&nbsp;</p><p><strong>For example:&nbsp;</strong></p><pre class="ql-syntax" spellcheck="false">List &lt;T&gt; al = new ArrayList&lt;&gt; ();&nbsp;
List &lt;T&gt; ll = new LinkedList&lt;&gt; ();&nbsp;
List &lt;T&gt; v = new Vector&lt;&gt; ();&nbsp;
Where T is the type of the object
</pre><p><strong><em>The classes which implement the List interface are as follows:</em></strong></p><h4><strong>i).&nbsp;</strong><a href="https://www.geeksforgeeks.org/arraylist-in-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);"><strong>ArrayList</strong></a></h4><p>ArrayList provides us with dynamic arrays in Java. Though, it may be slower than standard arrays but can be helpful in programs where lots of manipulation in the array is needed. The size of an ArrayList is increased automatically if the collection grows or shrinks if the objects are removed from the collection. Java ArrayList allows us to randomly access the list. ArrayList can not be used for&nbsp;<a href="https://www.geeksforgeeks.org/primitive-data-type-vs-object-data-type-in-java-with-examples/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">primitive types</a>, like int, char, etc. We will need a&nbsp;<a href="https://www.geeksforgeeks.org/wrapper-classes-java/" rel="noopener noreferrer" target="_blank" style="color: var(--article-tags-color);">wrapper class</a>&nbsp;for such cases.&nbsp;</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c7027b91-dbf8-4566-9e25-1d47a6aec870'::uuid, 1, '19c589d7-2a7f-4036-bb83-6acbcfa5ac5b'::uuid, 'VIDEO'::public.resource_type, 'ArrayList in Java', NULL, '', 'https://www.youtube.com/watch?v=NbYgm0r7u6o');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3f97e3f4-b9d8-4e05-982a-ff81a5fd5542'::uuid, 2, '19c589d7-2a7f-4036-bb83-6acbcfa5ac5b'::uuid, 'VIDEO'::public.resource_type, 'Vector Class in Java', NULL, '', 'https://www.youtube.com/watch?v=s2h_lYgbkPI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f5cd5ab3-8f21-43cd-9987-da5b904f0659'::uuid, 3, '19c589d7-2a7f-4036-bb83-6acbcfa5ac5b'::uuid, 'VIDEO'::public.resource_type, 'LinkedList in Java', NULL, '', 'https://www.youtube.com/watch?v=YQQio9BGWgs');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('58959945-8174-44a4-8bb7-77635d499992'::uuid, 4, '19c589d7-2a7f-4036-bb83-6acbcfa5ac5b'::uuid, 'VIDEO'::public.resource_type, 'Map and HashMap in Java', NULL, '', 'https://www.youtube.com/watch?v=H62Jfv1DJlU');
-- End of chapter resource Java 2

-- Chapter resource Java 3
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('076bcf50-c2ae-482d-9a6a-c45826cae43d'::uuid, 1, 'ae337470-89de-46ce-b0ad-d8e723897a69'::uuid, 'CODE'::public.resource_type, 'Nest this', 'b6484e21-6937-489c-b031-b71767994755'::uuid, 'Determine the Quarter of a Given Month', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6d7579a0-7f73-4018-828c-dd95b209e8b9'::uuid, 0, '5b46ff16-e2ea-47b4-99a3-959f5aaebe2b'::uuid, 'LESSON'::public.resource_type, 'What is Threading?', NULL, '<h1>What is Threading?</h1><p><strong>This article describes what threading is, and how it’s used in concurrent programs to improve the performance and efficiency of an application.</strong></p><h2>Introduction</h2><p>When you first start out programming, it’s likely that you are presented with&nbsp;<strong>sequential programs</strong>. These types of programs run instructions in a defined order, with a beginning and an end. Only one instruction is being performed at a time at any given moment.</p><p>For most applications, a primary requirement is that they be&nbsp;<em>fast</em>&nbsp;and&nbsp;<em>efficient</em>. To help meet this goal, we have to implement&nbsp;<strong>concurrent programs</strong>. These types of programs can support multiple flows of execution at the same time. This capability can help a programmer write code that completes two or more tasks at the same time!</p><p>Concurrency is a more advanced domain in programming, but modern programming languages have made it easier to get started with. Though there are different ways of achieving concurrency, the solution that is most commonly used in the application layer of a program is “threading.”</p><h2>What is a thread?</h2><p>The building blocks of concurrent programs or processes are&nbsp;<strong>threads</strong>. Like sequential programs, a single thread has a beginning and an end, and only a single point of execution. However, multiple threads can run at the same time! A program or process usually has multiple threads running simultaneously, leveraging the context of the program, acting on shared resources between other threads, and ensuring that any one thread does not impede the other threads from completing a task.</p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-java/threading/ART-1622-ThreadsOverview-ForImplementation.svg"></span></p><p>In the diagram above, we can see that a process can start and execute multiple threads. By default, a process has a single thread of execution called the&nbsp;<strong>main thread</strong>. From that initial thread, we can create more threads to launch different independent tasks. We don’t consider the process to be complete until&nbsp;<em>all</em>&nbsp;of the threads that it has started are finished. When a thread completes its execution, we say that it&nbsp;<strong>joins</strong>&nbsp;back into the main thread.</p><h2>When to use threads</h2><p>Suppose you’re buying some clothes in an online store. When you click a button to add a shirt to your cart, several tasks may need to be performed before it lands there. This might include:</p><ul><li>checking the store’s inventory for that shirt</li><li>making a record in a database to reserve that shirt for you</li><li>seeing if there are any active sales or promotions</li><li>finding other recommended clothing based on your purchase</li><li>and potentially even more tasks!</li></ul><p>While all of these are being performed, you would still want to be able to browse the rest of the site, and maybe start your next purchase for a pair of socks too!</p><p>Without threading, you would have to wait for all of those tasks to be completed sequentially before being able to perform any other actions on the site. Using a multithreaded program, however, the online store can create and track independent tasks for each of the actions required to add the shirt to the cart, while still allowing you to browse the remainder of the store. Multi-threading has created a better online shopping experience for you!</p><p>As illustrated by the online store scenario, it is best to use threading when your program has tasks that need to be performed in parallel, and you do not wish for your program’s main thread to become unresponsive or unusable while the tasks are being performed. When a program has the ability to perform more tasks in less time, we say that threading has increased its&nbsp;<strong>throughput</strong>.</p><h2>Context of a thread</h2><p>For a program to execute properly, it needs to have several things in its&nbsp;<strong>context</strong>. A program’s context includes variables, function names, a history of function calls (the “call stack”), and more. A thread that runs within a program has its own context so that it can run independently without impacting other threads.</p><p>Sometimes, we have to share some information (a context) between threads as well. For example, in the online store example, each of the threads for the inventory-check task, the recommender task, and the reservation task need to know the product ID number for the shirt. Since all of the threads are launched from the same main thread (starting from when you clicked the “Add to Cart” button), they all have access to the product ID that was present in that main thread’s context.</p><p>When reading shared information in a multi-threaded program, there’s usually nothing to worry about in terms of&nbsp;<em>managing shared state</em>. However, when multiple threads are&nbsp;<em>writing</em>&nbsp;to the same resource, and manipulating its state, we can run into issues where multiple threads are changing a value based on a potentially out-of-date previous state. The solution to this issue is called thread&nbsp;<strong>synchronization</strong>. Different programming languages implement synchronization in different ways, and we will learn more about how programs can use synchronization to solve issues with managing shared state.</p><h2>Conclusion</h2><p>The multi-threaded architecture and paradigm for programs is one of the most fundamental patterns in programming. Most non-trivial applications use multiple threads to ensure that the tasks that they need to run are fast and efficient, and leverage the resources of the computer that they’re running on in the most effective way. Get started with implementing some multi-threaded programs to see how it all comes together!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7db1f082-3f9b-406c-8eb4-062eee96aa7a'::uuid, 0, '8c33cc8c-3671-4312-8689-d935a7026109'::uuid, 'LESSON'::public.resource_type, 'Intro', NULL, '<h3>Introduction</h3><p>As computer users we are familiar with the response computer programs have from&nbsp;<a href="https://www.codecademy.com/resources/docs/java/user-input" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">user input</a>&nbsp;and&nbsp;<a href="https://www.codecademy.com/resources/docs/java/output" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">output</a>. This lesson helps show the flip side of how programmers can code a Java program that considers, interprets, and responds to input and output. As this is your first adventure into the realms of more advanced Java, we want to encourage you to explore the Java documentation, the official technical data that goes along with each version of Java that is released.</p><p>Java is a powerful programming language that provides us with many ways to read input and write output to consoles,&nbsp;<a href="https://www.codecademy.com/resources/docs/java/files" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">files</a>, etc. In this lesson, we will learn about some of the built-in&nbsp;<a href="https://www.codecademy.com/resources/docs/java/classes" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">classes</a>&nbsp;that are useful for completing these tasks, specifically, reading and writing text to a file. Some of these classes include:</p><p>ClassDefinition<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><a href="https://docs.oracle.com/javase/9/docs/api/java/lang/System.html#out" rel="noopener noreferrer" target="_blank">System.out</a></code>A class that holds functions to display out in a terminal or command prompt application.<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><a href="https://www.codecademy.com/courses/learn-intermediate-java/lessons/java-input-and-output/exercises/link" rel="noopener noreferrer" target="_blank">Scanner</a></code>A class used to read input passed into a Java program.<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><a href="https://docs.oracle.com/javase/9/docs/api/java/io/FileWriter.html" rel="noopener noreferrer" target="_blank">FileWriter</a></code>A class that holds functions to convert byte data into readable text files.<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><a href="https://docs.oracle.com/javase/9/docs/api/java/io/FileReader.html" rel="noopener noreferrer" target="_blank">FileReader</a></code>A class that has functions that convert input from files to byte data for a Java program to use.</p><p>We will also learn how to handle potential exceptions that occur due to input and output in a Java program and introduce&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">FileInputStream</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">FileOutputStream</code>&nbsp;two classes used for reading and writing binary information from files that will be very useful in our continued exploration of Java serialization. By the end of this lesson, we will have successfully run a Java program through the terminal that is capable of reading and writing to the file system!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('45390f26-959e-4ebe-b7ae-2479fba737df'::uuid, 1, '8c33cc8c-3671-4312-8689-d935a7026109'::uuid, 'CODE'::public.resource_type, 'In and Out', 'b6484e21-6937-489c-b031-b71767994756'::uuid, 'Calculate sum of cubes', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('573a6bd3-0130-4a4b-af8e-34a0c4e3373d'::uuid, 2, '8c33cc8c-3671-4312-8689-d935a7026109'::uuid, 'LESSON'::public.resource_type, 'Java and the Command Line', NULL, '<h1>Java and the Command Line</h1><p><strong>A brief overview of running Java through the command line.</strong></p><p>While there are many IDEs with built-in execution capabilities (Eclipse and IntelliJ for example), Java can also be run directly from the command line.</p><p>In this article, we’ll cover how to download and run Java on your personal computer, as well as how to utilize the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>String[] args</strong></code>&nbsp;parameter of the main method.</p><h2>Downloading Java</h2><p>You more than likely have already interacted with a version of Java on your computer as many programs use it to operate. This version of Java, the version that is used simply to run programs, is called the&nbsp;<strong><em>Java Runtime Environment</em></strong>, and essentially takes the compiled Java byte code and allows those generic files to be run specifically on your type of computer. This is one of the core principles that has allowed Java to become as popular as it has.</p><p>As a developer though, you need the&nbsp;<strong><em>Java Development Kit</em></strong>, or JDK, which allows you access to the classes and interfaces of the core Java language that you use here on Codecademy such as&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>System.out.println()</strong></code>. The current version of Java we have here at Codecademy can be found by typing the command&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>java --version</strong></code>&nbsp;into a terminal when you are doing a lesson.</p><p>Java’s JDK is available (for free) through Oracle’s website. There are several types, each with a specific purpose and you can explore these use cases on Oracle’s website, the vast majority of Java development though, occurs in the&nbsp;<strong><em>SE or Standard Edition</em></strong>&nbsp;of the JDK. You can find the most recent version of the JDK&nbsp;<a href="https://www.oracle.com/java/technologies/downloads/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">here</a>, and older versions of Java, such as Java 9 like we are using&nbsp;<a href="https://www.oracle.com/java/technologies/downloads/archive/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">here</a>.</p><h2>Compiling Java</h2><p>Before you can run the program from the command line, you must compile it. Open your terminal or command prompt (depending on OS), and navigate to the directory where the file you want to run is located. Once there, use&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>javac</strong></code>&nbsp;and the filename to compile:</p><pre class="ql-syntax" spellcheck="false">javac MyClass.java

</pre><blockquote><em>If you’re new to the command line or need a refresher on navigation, take a look at our command line </em><a href="https://www.codecademy.com/learn/learn-the-command-line/modules/learn-the-command-line-navigation/cheatsheet" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);"><em>cheatsheet</em></a><em> for more guidance.</em></blockquote><p>This creates the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>.class</strong></code>&nbsp;file that can be executed. However, if there are any bugs found in your program, they will be flagged at this point, and the executable&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>.class</strong></code>&nbsp;file will not be created. You won’t be able to run the file until it compiles with no issues.</p><h2>Running Java</h2><p>Once you have your executable file, use&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>java</strong></code>&nbsp;and the name of the class to run it:</p><pre class="ql-syntax" spellcheck="false">java MyClass

</pre><p><strong>Note:</strong>&nbsp;Do&nbsp;<em>not</em>&nbsp;include the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>.java</strong></code>&nbsp;or&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>.class</strong></code>&nbsp;suffixes, only use the name of the class.</p><p>Let’s say we had the following Java class:</p><pre class="ql-syntax" spellcheck="false">public class HelloWorld {
&nbsp;&nbsp;public static void main(String[] args) {
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("Hello world!");
&nbsp;&nbsp;}
}

</pre><p>We would compile this using:</p><pre class="ql-syntax" spellcheck="false">javac HelloWorld.java

</pre><p>Then run it using:</p><pre class="ql-syntax" spellcheck="false">java HelloWorld

</pre><p>It would output the following:</p><pre class="ql-syntax" spellcheck="false">Hello world!

</pre><h2>main Method Parameters</h2><p>Each Java program must have a main method, and every main method contains the parameters&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>String[] args</strong></code>, but what does that mean?</p><p><code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>args</strong></code>&nbsp;is an array of&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>String</strong></code>s that is passed to the program when it’s run. (Click&nbsp;<a href="https://www.codecademy.com/courses/java-for-programmers/articles/arrays-java-for-programming" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">here</a>&nbsp;for a refresher on arrays in Java.) We don’t&nbsp;<em>need</em>&nbsp;to pass anything in, but we can if we want to. For example, we can edit our&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>HelloWorld</strong></code>&nbsp;class to use elements from&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>args</strong></code>:</p><pre class="ql-syntax" spellcheck="false">public class HelloWorld {
&nbsp;&nbsp;public static void main(String[] args) {
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("Hello world, my name is " +&nbsp;args[0] +&nbsp;"!");
&nbsp;&nbsp;}
}

</pre><p>Note that we access the elements of the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>args</strong></code>&nbsp;array the same way we would access the elements of any other array.</p><p>Let’s use the new&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>HelloWorld</strong></code>&nbsp;class to introduce ourselves! First, we’ll compile our class the same way we did before:</p><pre class="ql-syntax" spellcheck="false">javac HelloWorld.java

</pre><p>Next we’ll run it. However, this time, we’ll add in a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>String</strong></code>&nbsp;argument:</p><pre class="ql-syntax" spellcheck="false">java HelloWorld Batman

</pre><p>The program will output the following:</p><pre class="ql-syntax" spellcheck="false">Hello world, my name is Batman!

</pre><p>Two extra takes aways from the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>main</strong></code>&nbsp;method:</p><ul><li>All arguments passed via the command line, like&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>Batman</strong></code>&nbsp;is above, are passed in as Strings. So if we have a program that asks the user to input their name and age via the command line, we have to treat the age as a String until we parse (convert it from a String) the age into an integer.</li><li>A Java program, in fact, most Java programs, is made up of many, many files. Some of these files will have&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>main</strong></code>&nbsp;methods and others will not, when we use the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>java</strong></code>&nbsp;command, we are specifying which Java class inside the program that we should look for the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>main</strong></code>&nbsp;method in.</li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('96147a67-4504-4524-ba9f-ba472ccd3ba4'::uuid, 3, '8c33cc8c-3671-4312-8689-d935a7026109'::uuid, 'LESSON'::public.resource_type, 'What Is an IDE?', NULL, '<h1>What Is an IDE?</h1><p><strong>Learn about the Integrated Development Environment, an application that makes programming easier!</strong></p><h2>What is an IDE?</h2><p>An IDE, or Integrated Development Environment, enables programmers to consolidate the different aspects of writing a computer program.</p><p>IDEs increase programmer productivity by combining common activities of writing software into a single application: editing source code, building executables, and debugging.</p><h3>Editing Source Code</h3><p>Writing code is an important part of programming. We start with a blank file, write a few lines of code, and a program is born! IDEs facilitate this process with features like syntax highlighting and autocomplete.</p><h4>Syntax Highlighting</h4><p>An IDE that knows the syntax of your language can provide visual cues. Keywords, words that have special meaning like&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>class</strong></code>&nbsp;in Java, are highlighted with different colors.</p><p>Compare these two code samples:</p><pre class="ql-syntax" spellcheck="false">// without syntax highlighting

public class NiceDay {
&nbsp;&nbsp;public static void main(String[] args) {
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("It''s a&nbsp;nice day out!");
&nbsp;&nbsp;}
}

// with syntax highlighting

public class NiceDay {
&nbsp;&nbsp;public static void main(String[] args) {
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("It''s a&nbsp;nice day out!");
&nbsp;&nbsp;}
}

</pre><p>Syntax highlighting makes code easier to read by visually clarifying different elements of language syntax.</p><h4>Autocomplete</h4><p>When the IDE knows your programming language, it can anticipate what you’re going to type next!</p><p>We’ve seen statements with&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>System.out.println()</strong></code>&nbsp;quite a bit so far. In an IDE, we might see&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>System</strong></code>&nbsp;as an autocomplete option after only typing&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>Sy</strong></code>. This saves keystrokes so the programmer can focus on logic in their code.</p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://content.codecademy.com/courses/learn-java/revised-2019/autocomplete_v2.gif"></span></p><h3>Building Executables</h3><p>Java is a compiled language. Before programs run, the source code of a&nbsp;<strong>.java</strong>&nbsp;file must be transformed into an executable&nbsp;<strong>.class</strong>&nbsp;by the compiler. Once compiled, the program can be run from the terminal.</p><p>This compilation process is necessary for every program, so why not have the IDE do it for us? IDEs provide automated build processes for languages, so the act of compiling and executing code is abstracted away, like in Codecademy lessons.</p><h3>Debugging</h3><p>No programmer avoids writing bugs and programs with errors.</p><p>When a program does not run correctly, IDEs provide debugging tools that allow programmers to examine different variables and inspect their code in a deliberate way.</p><p>IDEs also provide hints while coding to prevent errors&nbsp;<strong>before</strong>&nbsp;compilation.</p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://content.codecademy.com/courses/learn-java/revised-2019/debugging_v2.png"></span></p><h2>Coding On Your Computer</h2><p>The biggest benefit to using an IDE is that it allows you to code and run Java programs on your own computer. We recommend&nbsp;<a href="https://www.jetbrains.com/idea/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">IntelliJ IDEA</a>, which you can download for&nbsp;<a href="https://www.jetbrains.com/idea/download/#section=mac" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">macOS</a>,&nbsp;<a href="https://www.jetbrains.com/idea/download/#section=windows" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Windows</a>, or&nbsp;<a href="https://www.jetbrains.com/idea/download/#section=linux" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Linux</a>.</p><p>You should&nbsp;<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">download and install Java</a>&nbsp;to your computer before using an IDE.</p><p>Here are two videos that walk through how to set up an IDE and run Java code.</p><ul><li><a href="https://youtu.be/TjYTpEOiNAI" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Mac</a></li><li><a href="https://youtu.be/6FmUcUMkZVQ" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Windows</a></li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('43b07e28-9c67-4b1d-9cd7-40179b828010'::uuid, 4, '8c33cc8c-3671-4312-8689-d935a7026109'::uuid, 'LESSON'::public.resource_type, 'Running Java Programs', NULL, '<h1>Running Java Programs</h1><p><strong>This article will cover running complex Java programs and passing multiple arguments.</strong></p><h3>Housekeeping</h3><p>Let’s begin by revisiting some foundational knowledge:</p><ul><li><a href="https://www.codecademy.com/courses/java-for-programmers/articles/java-for-programmers-java-and-the-command-line" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Java and the Command Line</a>: This article walks through how to download Java and run a basic Java program through the command line.</li><li><a href="https://www.codecademy.com/courses/learn-java/articles/what-is-an-ide" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">What is an IDE?</a>: This article provides an overview of the benefits of an IDE and links to how to download the IDE IntelliJ on your computer.</li></ul><p>After having successfully run a basic Java program, and exploring the uses of the IDE you have installed, it is time to take it one step further by learning how to run complex Java programs and how to pass multiple arguments.</p><h3>Running Complex Java Programs</h3><p>We have already seen how to run a Java program that is exclusively one single file and class. Now, let’s learn how to run a program that has multiple files. It is common to find that developers use multiple files to organize code, especially when defining multiple objects. It is also recommended that you save your files for a single Java program in one directory for ease of access.</p><p>Let’s start off by creating the following files:</p><p>Note: Often, you will find that the Java file which holds the main method follows the naming convention&nbsp;<strong>_____Driver.java</strong>. This is because this is the class that “drives,” or carries out, the tasks of the program. This practice stems from C++ programming which divides its files into more complex&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>header</strong></code>&nbsp;files and&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>implementation</strong></code>&nbsp;files.</p><p><strong>TransportBike.java</strong></p><pre class="ql-syntax" spellcheck="false">import java.io.*;
public class TransportBike {
&nbsp;&nbsp;public void wheels() {
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("A bike has two wheels.");
&nbsp;&nbsp;}
}

</pre><p><strong>TransportCar.java</strong></p><pre class="ql-syntax" spellcheck="false">import java.io.*;
public class TransportCar {
&nbsp;&nbsp;public void wheels() {
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("A car has four wheels.");
&nbsp;&nbsp;}
}

</pre><p><strong>TransportationDriver.java</strong></p><pre class="ql-syntax" spellcheck="false">import java.io.*;
public class TransportationDriver {
&nbsp;&nbsp;public static void main(String[] args) {
&nbsp;&nbsp;&nbsp;&nbsp;TransportBike harley =&nbsp;new TransportBike();
&nbsp;&nbsp;&nbsp;&nbsp;TransportCar toyota =&nbsp;new TransportCar();
&nbsp;&nbsp;&nbsp;&nbsp;harley.wheels();
&nbsp;&nbsp;&nbsp;&nbsp;toyota.wheels();
&nbsp;&nbsp;&nbsp;}
}

</pre><h5>Compilation Method 1</h5><p>Once we have saved the following files in the same directory, our first step will be to compile all the files using the following commands:</p><pre class="ql-syntax" spellcheck="false">javac TransportBike.java
javac TransportCar.java
javac TransportationDriver.java

</pre><h5>Compilation Method 2</h5><p>You may also choose to compile all files in the same line:</p><pre class="ql-syntax" spellcheck="false">javac TransportBike.java TransportCar.java TransportationDriver.java

</pre><h5>Compilation Method 3</h5><p>Since these files all start with the same title, you may also choose to compile them using a regex as follows:</p><pre class="ql-syntax" spellcheck="false">javac Transport*.java

</pre><h5>Compilation Method 4</h5><p>One more way to compile these files is by calling the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>javac</strong></code>&nbsp;command on the file that holds the main method:</p><pre class="ql-syntax" spellcheck="false">javac TransportationDriver.java

</pre><p>This works because as the compiler reaches a definition that is unknown to it, such as the first instance of&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>TransportBike</strong></code>, it will search the current folder for any&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>.class</strong></code>&nbsp;files that match that signature. If no&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>.class</strong></code>&nbsp;files are found, it will look for&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>.java</strong></code>&nbsp;files and then attempt to compile them so that it knows how to represent the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>TransportBike</strong></code>&nbsp;object.</p><h3>Running the Program</h3><p>The next step after compiling is running the program. For the example we are using, you will enter the following into the command prompt to tell the JVM (Java Virtual Machine) which file has the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>main</strong></code>&nbsp;method that you want to run:</p><pre class="ql-syntax" spellcheck="false">java TransportationDriver

</pre><p>The program will output the following:</p><pre class="ql-syntax" spellcheck="false">A bike has two wheels.
A car has four wheels.

</pre><h3>Passing Multiple Arguments</h3><p>In the article&nbsp;<a href="https://www.codecademy.com/courses/java-for-programmers/articles/java-for-programmers-java-and-the-command-line" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Java and the Command Line</a>, we learned how to pass a single string argument into a program. Let’s now look at how to pass multiple arguments to the main function.</p><p>In the main function of a Java program, you will see that an array gets passed into a parameter variable. This means that multiple variables can get passed in and will be saved as a string array.</p><p>Let’s modify the code from our&nbsp;<strong>TransportationDriver.java</strong>&nbsp;file to require two arguments to be passed in:</p><pre class="ql-syntax" spellcheck="false">import java.io.*;
public class TransportationDriver {
&nbsp;&nbsp;public static void main(String[] args) {
&nbsp;&nbsp;&nbsp;&nbsp;TransportBike harley =&nbsp;new TransportBike();
&nbsp;&nbsp;&nbsp;&nbsp;TransportCar toyota =&nbsp;new TransportCar();
&nbsp;&nbsp;&nbsp;&nbsp;harley.wheels();
&nbsp;&nbsp;&nbsp;&nbsp;toyota.wheels();
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(args[0] +&nbsp;" and " +&nbsp;args[1] +&nbsp;" want to purchase a&nbsp;bike.");
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(args[1] +&nbsp;" wants to purchase a&nbsp;car.");
&nbsp;&nbsp;}
}

</pre><h5>Method 1: From the command line</h5><p>Once we have compiled our files, we will run this program using the following command:</p><pre class="ql-syntax" spellcheck="false">java TransportationDriver Customer1 Customer2

</pre><p>Note: A space between the variables we pass acts as a delimiter. It lets the program know that these are two separate arguments that are being passed in.</p><h5>Method 2: Input file</h5><p>You may also choose to pass input into a program using a text file. Let’s first save the following text to a file:</p><pre class="ql-syntax" spellcheck="false">Customer1 Customer2

</pre><p>The code in&nbsp;<strong>TransportationDriver.java</strong>&nbsp;will also have to be modified to use the Scanner class. The scanner class is what will help the program read our&nbsp;<strong>.txt</strong>&nbsp;file.</p><pre class="ql-syntax" spellcheck="false">import java.io.*;
import java.util.Scanner;
public class TransportationDriver {
&nbsp;&nbsp;public static void main(String[] args) {
&nbsp;&nbsp;&nbsp;&nbsp;TransportBike harley =&nbsp;new TransportBike();
&nbsp;&nbsp;&nbsp;&nbsp;TransportCar toyota =&nbsp;new TransportCar();
&nbsp;&nbsp;&nbsp;&nbsp;String fileName =&nbsp;args[0];
&nbsp;&nbsp;&nbsp;&nbsp;Scanner input =&nbsp;new Scanner(fileName);
&nbsp;&nbsp;&nbsp;&nbsp;String person1 =&nbsp;input.next();
&nbsp;&nbsp;&nbsp;&nbsp;String person2 =&nbsp;input.next();
&nbsp;&nbsp;&nbsp;&nbsp;harley.wheels();
&nbsp;&nbsp;&nbsp;&nbsp;toyota.wheels();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(person1 +&nbsp;" and " +&nbsp;person2 +&nbsp;" want to purchase a&nbsp;bike.");
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(person2 +&nbsp;" wants to purchase a&nbsp;car.");
&nbsp;&nbsp;}
}

</pre><p>Once we have saved our text file to the same directory and compiled our Java files, we will run this program using the following command:</p><pre class="ql-syntax" spellcheck="false">java TranportationDriver input.txt

</pre><p>The program will output the following no matter which method we use:</p><pre class="ql-syntax" spellcheck="false">A bike has two wheels.
A car has four wheels.
Customer1 and Customer2 want to purchase a&nbsp;bike.
Customer2 wants to purchase a&nbsp;car.

</pre><h3>Review</h3><p>You now have the skills and tools required to run complex Java programs that are made up of multiple files. You also know how to pass multiple arguments when running a program. Great job!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e372b70d-fa9d-4b64-81da-b9493955e11c'::uuid, 0, '950f31d7-a518-43ad-9b8b-4cf268edaeb7'::uuid, 'LESSON'::public.resource_type, 'What is serialization', NULL, '<h1>What Is Serialization?</h1><p><strong>Learn what serialization is and why it’s useful.</strong></p><p>So far, object-oriented programming (OOP) has made our code more modular and reusable with the use of objects. One of the benefits of using objects is the ability for them to encapsulate state (or data) to use within our program, but what if we wanted to store an object’s state in a file or send it over a network? As a matter of fact, we can do this by&nbsp;<em>serializing</em>&nbsp;our objects.</p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-java/serialization/ART1620-StreamOfBytes.gif"></span></p><p>Serialization describes the process of taking an object’s state and transforming it into a&nbsp;<em>stream</em>&nbsp;of&nbsp;<em>bytes</em>. Let’s discuss the terminology further:</p><ul><li>A stream is an abstract definition of a sequence of data that is made available over time.</li><li>A byte is an 8 bit (0s or 1s) group of data.</li><li>A stream of bytes is a sequence of bytes that is made available over time.</li></ul><p>To serialize an object, its fields and their types are stored in the form of bytes. These bytes are then able to be written to memory, a file, a database, or sent over a network with all the information necessary to recreate the object.</p><h3>Deserialization</h3><p>You may be wondering, “This is great and all but how do I get my object back from this stream of bytes?” This is where deserialization comes in.</p><p>Deserialization as the name suggests, does the opposite of serialization and converts a stream of bytes back into an object. Using both serialization and deserialization gives us the flexibility to persist our objects and get them back when needed.</p><p>There are a couple of important details to note about serialization and deserialization:</p><ul><li>The stream of bytes created by serialization only includes the member variables of an object and not its methods.</li><li>Deserialization creates a copy of the original object. This copy shares the same state but is an entirely new object in memory.</li></ul><p>Many programming languages like Java, C++, etc. support serialization and deserialization but differ in how they implement the process. Ultimately, this gives us the flexibility to work with the objects in, say Java, and also be able to work with a copy of that object in C++.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b40b7220-3ff5-4873-a455-4769a68f7aaf'::uuid, 1, '950f31d7-a518-43ad-9b8b-4cf268edaeb7'::uuid, 'LESSON'::public.resource_type, 'Serialization introduction', NULL, '<p>Often when creating Java applications and working with objects, we find the need to persist them. Specifically, we need to be able to store an object’s state (member fields) in&nbsp;<a href="https://www.codecademy.com/resources/docs/java/files" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">files</a>, in memory, or in a database. Java provides the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Serializable</code>&nbsp;interface to do just that.</p><p>Remember that an interface describes the behavior a class should have and by having our class implement&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Serializable</code>&nbsp;it can be serialized by the Java Virtual Machine (JVM).</p><p>Let’s look at how this is done:</p><pre class="ql-syntax" spellcheck="false">public class Person implements Serializable {
&nbsp;&nbsp;private String name;
&nbsp;&nbsp;private int age;
}

</pre><p>In the example above we’ve defined a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Person</code>&nbsp;class that implements&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Serializable</code>. By implementing&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Serializable</code>, the JVM will know how and what to do when a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Person</code>&nbsp;object needs to be serialized (we’ll look at this more later).</p><p>Notice that we didn’t need to override a method and implement it for us to be able to serialize a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Person</code>&nbsp;object. This is because&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Serializable</code>&nbsp;is a&nbsp;<em>marker</em>&nbsp;interface. A marker interface provides run time information to the JVM about the class and does not have any&nbsp;<a href="https://www.codecademy.com/resources/docs/java/methods" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">methods</a>&nbsp;associated with it.</p><p>Over the course of this lesson, we’ll continue learning about the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Serializable</code>&nbsp;interface and how serialization works in Java.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('80a78de1-96a5-4e3b-9187-518c2b1e9210'::uuid, 2, '950f31d7-a518-43ad-9b8b-4cf268edaeb7'::uuid, 'CODE'::public.resource_type, 'Medieval Serial', 'b6484e21-6937-489c-b031-b71767994758'::uuid, 'Check prime number', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0bfcb8f4-e7b0-4036-bb3b-3da3bbc45037'::uuid, 0, 'e3f8ad78-37b7-454d-8c2c-26313baa49b6'::uuid, 'LESSON'::public.resource_type, 'Generics', NULL, '<p>When using Java, we often write&nbsp;<a href="https://www.codecademy.com/resources/docs/java/classes" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">classes</a>&nbsp;and algorithms that work around certain&nbsp;<a href="https://www.codecademy.com/resources/docs/java/data-types" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data types</a>. Let’s look at the following&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">class</code>&nbsp;as an example:</p><pre class="ql-syntax" spellcheck="false">public class StringBox {
&nbsp;&nbsp;public String myString;
}

</pre><p>In the example above, we have a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">StringBox</code>&nbsp;class which represents a real-world box of words. This class’s&nbsp;<a href="https://www.codecademy.com/resources/docs/java/methods" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">methods</a>&nbsp;perform all of their computations with regards to the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">String myString</code>&nbsp;field. What if we wanted a box of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>s? We could create a new class:</p><pre class="ql-syntax" spellcheck="false">public class IntegerBox {
&nbsp;&nbsp;public int myInt;
}

</pre><p>The example above meets our requirements, but as the program grows and we need more types of boxes, it will become unmanageable. We can solve this problem by using&nbsp;<a href="https://www.codecademy.com/resources/docs/java/generics" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);"><em>generics</em></a>.</p><p>Generics, like the name implies, allow us to create generic classes and methods by specifying a type parameter. We can make&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">StringBox</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">IntegerBox</code>&nbsp;into a generic&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Box</code>&nbsp;class like so:</p><pre class="ql-syntax" spellcheck="false">public class Box&lt;T&gt; {
&nbsp;&nbsp;private T data;
}

</pre><p>In the example above, we created a generic&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Box</code>&nbsp;class with a type parameter&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">T</code>. All class methods perform their computation around the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">T</code>-type parameter We can now specify that we want a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">String</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Integer</code>, or any other type of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Box</code>&nbsp;by specifying a type argument.</p><p>In the example above, we created a generic&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Box</code>&nbsp;class with a type parameter&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">T</code>. All class methods perform their computation around the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">T</code>-type parameter</p><p>Over the course of this lesson, we’ll continue learning about generics in Java and their use cases.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('22506fbb-62c4-422e-bb07-d37d26806bec'::uuid, 1, 'e3f8ad78-37b7-454d-8c2c-26313baa49b6'::uuid, 'CODE'::public.resource_type, 'Generics this', 'b6484e21-6937-489c-b031-b71767994743'::uuid, 'Palindrome integer', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d7a7ab15-864a-44b7-b43b-04e423019541'::uuid, 2, 'e3f8ad78-37b7-454d-8c2c-26313baa49b6'::uuid, 'LESSON'::public.resource_type, 'Collections', NULL, '<p>In Java, we often need to write programs that work with groups (or collections) of objects. Recall that an array is an object that holds multiple objects of the same type (also known as its&nbsp;<em>elements</em>) but is limited by its fixed size and functionality. Java provides a&nbsp;<em>Collections Framework</em>&nbsp;to help overcome the limits of an array and provide more complex functionality to meet different collection needs.</p><p>The&nbsp;<a href="https://www.codecademy.com/resources/docs/java/collections" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">collections</a>&nbsp;framework provides data structures (through&nbsp;<a href="https://www.codecademy.com/resources/docs/java/interfaces" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">interfaces</a>&nbsp;and implementing classes) and algorithms, which perform common tasks on collections. The collections framework allows us to focus on the important parts of our program and not on low-level implementation details (like needing to implement a dynamic sizing collection).</p><p>The collections framework provides a hierarchical relationship between its interfaces, making the various implementations compatible with each other and thus making our code scalable and flexible. All the interfaces in the collections framework are generic, which allows us to use optimized and tested “plumbing” for our specific&nbsp;<a href="https://www.codecademy.com/resources/docs/java/data-types" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data types</a>.</p><p>As we go through the lesson, we will explore the collections framework interfaces and implementations, their relationship to&nbsp;<a href="https://www.codecademy.com/resources/docs/java/generics" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">generics</a>, and the operations we can perform.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6d117ce3-014f-4539-ac90-771b6756d28c'::uuid, 3, 'e3f8ad78-37b7-454d-8c2c-26313baa49b6'::uuid, 'CODE'::public.resource_type, 'Be a collector', 'b6484e21-6937-489c-b031-b71767994758'::uuid, 'Check prime number', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5c3acfa9-9048-43e2-96f9-4394a36f5e67'::uuid, 0, 'ae337470-89de-46ce-b0ad-d8e723897a69'::uuid, 'LESSON'::public.resource_type, 'Nesting', NULL, '<p>Let’s begin by defining what a nested class is! A&nbsp;<em>nested class</em>&nbsp;is a&nbsp;<a href="https://www.codecademy.com/resources/docs/java/classes?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">class</a>&nbsp;that can be found within another class. The process of a class being enclosed in another is known as&nbsp;<em>encapsulation</em>. Nested classes allow programmers to rationally organize and group classes that may be closely related in a Java program.</p><p>There are two main types of nested classes:&nbsp;<em>non-static</em>&nbsp;(also known as&nbsp;<em>inner</em>) nested classes, and&nbsp;<em>static</em>&nbsp;nested classes. The type of nested class determines whether it has access to other elements (static and non-static) within its encapsulating class. We will delve deeper into this topic in the coming exercises.</p><p>One significant benefit of implementing nested classes is that they provide an extra level of security by giving programmers the power to control the amount of access one class may have to another class and its&nbsp;<a href="https://www.codecademy.com/resources/docs/java/methods" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">methods</a>.</p><p>For the rest of this lesson, we will be reviewing the different types of nested classes and how they can be implemented in a program. We will also learn about&nbsp;<em>shadowing</em>&nbsp;in relation to nested classes.</p><p><br></p><p>As mentioned in the previous exercise, there are two types of nested classes:&nbsp;<em>non-static</em>&nbsp;(also known as inner) nested, and&nbsp;<em>static</em>. Let’s take a closer look at what makes these two types of&nbsp;<a href="https://www.codecademy.com/resources/docs/java/classes" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">classes</a>&nbsp;different.</p><h4>Non-static(inner)</h4><p>Non-static nested classes can have access to both static and non-static members of the class that it is declared within. They are also known as inner classes. A non-static nested class is closely associated with the class enclosing it. So to reference a non-static nested class outside its scope, a programmer would have to also reference its encompassing class.</p><h4>Static</h4><p>A static nested class is not the same as an inner class because a static nested class cannot access all classes,&nbsp;<a href="https://www.codecademy.com/resources/docs/java/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>, and&nbsp;<a href="https://www.codecademy.com/resources/docs/java/methods" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">methods</a>&nbsp;of the enclosing class. They can only access other static members of their encompassing class. Static nested classes also don’t have access to non-static members of the Java program. Unlike non-static nested classes, static nested classes don’t need to be referenced with the association of their encompassing class.</p><p><br></p><p>Now that we’ve reviewed the main differences between non-static nested and static nested&nbsp;<a href="https://www.codecademy.com/resources/docs/java/classes" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">classes</a>, let’s break down how to implement the use of a non-static nested class. For more clarity, from here on, we may refer to the non-static nested class as the inner class and the class that it is encapsulated within as the outer class.</p><p>To declare a non-static nested class within an outer class, you may use the following code:</p><pre class="ql-syntax" spellcheck="false">class Outer {
&nbsp;&nbsp;String outer;
&nbsp;&nbsp;// Assign values using constructor
&nbsp;&nbsp;public Outer(String name) {
&nbsp;&nbsp;&nbsp;&nbsp;this.outer =&nbsp;name;
&nbsp;&nbsp;}

&nbsp;&nbsp;// private method
&nbsp;&nbsp;private String getName() {
&nbsp;&nbsp;&nbsp;&nbsp;return this.outer;
&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;// Non-static nested class
&nbsp;&nbsp;class Inner {
&nbsp;&nbsp;&nbsp;&nbsp;String inner;
&nbsp;&nbsp;&nbsp;&nbsp;String outer;
&nbsp;&nbsp;}
}

</pre><p>Notice how the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Inner</code>&nbsp;class does not have the keyword&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">static</code>&nbsp;preceding it. It is also important that we review what the keyword&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><em>this</em></code>&nbsp;means in Java code.&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">this</code>&nbsp;is a keyword that a class uses to reference itself.</p><p>To instantiate a non-static nested class that can access other members of the outer class, first, we need to instantiate an object of the outer class:</p><pre class="ql-syntax" spellcheck="false">Outer outer =&nbsp;new Outer();

</pre><p>Next, we can instantiate an inner class object:</p><pre class="ql-syntax" spellcheck="false">Outer.Inner inner =&nbsp;outer.new Inner();

</pre><p>Note that we use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">outer</code>&nbsp;object along with the keyword&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">new</code>&nbsp;to create an instance of the inner class.</p><p>This step shows us an example of how a non-static class can access other static and non-static classes from the outer class. In the code below, take a look at a modified version of the Inner class from our previous example:</p><pre class="ql-syntax" spellcheck="false">// Non-static nested class
class Inner {
&nbsp;&nbsp;String inner;
&nbsp;&nbsp;String outer;
&nbsp;&nbsp;public String getOuter() {
&nbsp;&nbsp;// Instantiate outer class to use its method
&nbsp;&nbsp;outer =&nbsp;Outer.this.getName();
}
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c2a4137c-e8bc-4876-957c-182635f18c55'::uuid, 1, '5b46ff16-e2ea-47b4-99a3-959f5aaebe2b'::uuid, 'LESSON'::public.resource_type, 'Threading', NULL, '<p>So far, we have learned about threads and how they work in theory. Before we put it into practice, we should have a strong understanding of what kinds of problems multi-threaded programs are best suited to solve.</p><p>Threading can solve problems where there is a lot of waiting to be done. When one task is in a “waiting” or “blocked” state, another one can start. This is useful for programs in which a long-running computation needs to be done, or when a task must wait on a response from an external source such as fetching an image from a server.</p><p>In the following exercise, you’ll see how a program could be forced to “wait” for a task’s completion. As you complete it, start thinking about what tasks could be performed in threads, concurrently, to save some time.</p><p><br></p><p><br></p><h3>Instructions</h3><ol><li><span style="color: transparent;">Checkpoint 1 Enabled</span></li><li class="ql-align-right"><strong>1.</strong></li><li>In&nbsp;<strong>FortuneTeller.java</strong>, you can see a program that consults another class,&nbsp;<strong>CrystalBall.java</strong>, to get a prediction for different kinds of questions! The crystal ball takes some time to muse before giving an answer, depending on the difficulty of the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Question</code>.</li><li>As a refresher on compiling Java code, compile the java code (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">*.java</code>), and then try running the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">FortuneTeller</code>&nbsp;program in the terminal. Observe the behavior of this program.</li><li>Click the&nbsp;<strong>Run</strong>&nbsp;button once the program has finished and you’re ready to move on. (Note: This step might take a few seconds, wait until the button stops spinning.)</li></ol><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f218468d-7e25-41f2-8a96-d663e465b8b9'::uuid, 2, '5b46ff16-e2ea-47b4-99a3-959f5aaebe2b'::uuid, 'LESSON'::public.resource_type, 'Virtual Threading', NULL, '<h1>Virtual Threading</h1><p><strong>Learn about virtual threading in Java</strong></p><h2>Introduction</h2><p>In JDK 19, Java introduced the concept of virtual threads to be used in applications requiring concurrency. Traditionally, writing multithreading applications relied on the use of an inefficient platform thread. Virtual threads, built upon platform threads, are a significant improvement in terms of efficiency and resource allocation.</p><p>Multithreading is unavoidable! Almost every application in modern times requires some amount of multithreading as it likely relies on IO (input/output - think keyboard, mouse, a display, and any other type of device intended for human interaction), network calls (requesting information from the web), and in some cases, complex mathematical computations. Therefore, it is crucial to have an efficient way to implement multithreading.</p><p>In this article, we will explore the concept of a virtual thread, why it is more efficient than a traditional platform thread, how to share data between threads, and how to implement structured concurrency using a virtual thread.</p><h2>The Problem with Platform Threads</h2><p>A platform thread, the traditional way of implementing multithreading, is inefficient because it is implemented as a thin wrapper around an OS thread. To create a thread, an operating system must allocate roughly 20MB of RAM and 1 ms of CPU processing time. Therefore, a Java program requiring many threads running concurrently will place a lot of strain on the resources of the computer it is running on. Consider the following code that runs 10,000 separate tasks implemented using platform threads:</p><pre class="ql-syntax" spellcheck="false">public class SoManyThreads {&nbsp;
&nbsp;&nbsp;public static void main(String[] args) {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;int numberOfThreads =&nbsp;10000;
&nbsp;&nbsp;&nbsp;&nbsp;for (int i =&nbsp;0; i &lt; numberOfThreads; i++) {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread thread =&nbsp;new Thread(new Runnable() {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void run() {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(Thread.currentThread().threadId() +&nbsp;" is running");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});
&nbsp;&nbsp;&nbsp;&nbsp;thread.start();
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;}
}

</pre><p>Running this many concurrent tasks using platform threads is incredibly resource-intensive and this program is likely to crash as the operating system may not be able to provide the requisite resources for 10,000 threads.</p><blockquote><em>Note: This sample of code is intended to stand for a server handling 10,000 network requests. A real server must likely handle more than 10,000 network requests. This style of reserving a thread for every task is called a thread-per-request style. </em></blockquote><h2>Virtual Threads</h2><p>A thread that is used for a network or IO call will spend most of its time idle as it awaits the response from the network or IO device. The concept of a virtual thread is built upon the exploitation of this fact. To improve efficiency, instead of reserving one thread for each separate task, several tasks are grouped and executed on one platform thread.</p><p>A task is&nbsp;<em>mounted</em>&nbsp;on a thread when it is ready to execute its function and is&nbsp;<em>unmounted</em>&nbsp;when it is awaiting an external response. When a task is&nbsp;<em>unmounted</em>, the resources are released and allocated to another task that is ready to finish executing. With this mechanism, every task behaves as if it were its own thread, hence the name&nbsp;<em>virtual thread</em>. The Java Virtual Machine handles the grouping, mounting, and unmounting of the tasks on a platform thread.</p><p>In Java, virtual threads belong to the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>Thread</strong></code>&nbsp;class and are used like so:</p><pre class="ql-syntax" spellcheck="false">Thread.ofVirtual().start(Runnable someThread);

</pre><p>Since virtual threads belong to the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>Thread</strong></code>&nbsp;class, we can use&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>join()</strong></code>&nbsp;to block a parent thread from exiting until a child thread has completed executing as we would for a traditional platform thread.</p><p>Here is the code for running 10,000 threads using virtual threads instead of platform threads:</p><pre class="ql-syntax" spellcheck="false">public class SoManyThreads {&nbsp;
&nbsp;&nbsp;public static void main(String[] args) {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;int numberOfThreads =&nbsp;10000;
&nbsp;&nbsp;&nbsp;&nbsp;for (int i =&nbsp;0; i &lt; numberOfThreads; i++) {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread thread =&nbsp;Thread.ofVirtual().start(new Runnable() {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void run() {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(Thread.currentThread().threadId() +&nbsp;" is running");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;}
}

</pre><p>These threads will run efficiently. However, since many virtual threads run on one platform thread,&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>Thread.currentThread().threadId()</strong></code>&nbsp;will print out the ID of the virtual thread’s parent platform thread. The previous code created virtual threads and ran them immediately because of the call to&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>start()</strong></code>. To create virtual threads now and start them later, we do that like so:</p><pre class="ql-syntax" spellcheck="false">public class SoManyThreads {&nbsp;
&nbsp;&nbsp;public static void main(String[] args) {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;int numberOfThreads =&nbsp;10000;
&nbsp;&nbsp;&nbsp;&nbsp;for (int i =&nbsp;0; i &lt; numberOfThreads; i++) {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread thread =&nbsp;Thread.ofVirtual().unstarted(new Runnable() {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void run() {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(Thread.currentThread().threadId() +&nbsp;" is running");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;}
}

</pre><p>We can start running all of the threads by calling the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>start()</strong></code>&nbsp;method like so:</p><pre class="ql-syntax" spellcheck="false">thread.start();

</pre><h3>Using Structured Concurrency with Virtual Threads</h3><p>Concurrency is the technique of executing relatively independent tasks in parallel to save run time. In Java, concurrency is implemented using the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>ExecutorService</strong></code>&nbsp;class. Consider the following example that represents a server for an online shopping store handling requests to fetch information about an order of a particular user:</p><pre class="ql-syntax" spellcheck="false">public class ConcurrencyExample {&nbsp;
&nbsp;&nbsp;public static void main(String[] args) {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;ExecutorService executorService =&nbsp;Executors.newFixedThreadPool(3);
&nbsp;&nbsp;&nbsp;&nbsp;// We can assume the fetch functions have the relevant information of a&nbsp;user.
&nbsp;&nbsp;&nbsp;&nbsp;Future&lt;String&gt; userName =&nbsp;executorService.submit(fetchUserName());
&nbsp;&nbsp;&nbsp;&nbsp;Future&lt;String&gt; userID =&nbsp;executorService.submit(fetchUserID());
&nbsp;&nbsp;&nbsp;&nbsp;Future&lt;String&gt; orderNumber =&nbsp;executorService.submit(fetchOrderNumber());
&nbsp;&nbsp;&nbsp;&nbsp;executorService.shutdown();
&nbsp;&nbsp;&nbsp;&nbsp;// Get results from the completed tasks
&nbsp;&nbsp;&nbsp;&nbsp;try {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String result1 =&nbsp;userName.get();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String result2 =&nbsp;userID.get();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String result3 =&nbsp;orderNumber.get();
&nbsp;&nbsp;&nbsp;&nbsp;} catch (InterruptedException |&nbsp;ExecutionException e) {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;}
}

</pre><p>This is a form of unstructured concurrency. Fetching a user’s username, ID, and order number can be independent operations. However, the following problem exists: if, for some reason, the user does not have a registered&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>userName</strong></code>&nbsp;(meaning they are not registered on the site), the tasks of&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>fetchID()</strong></code>&nbsp;and&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>fetchOrder()</strong></code>&nbsp;will continue to execute in search of information for a non-existent user thereby wasting time and other resources. This inherent problem of unstructured concurrency leads to code that is hard to maintain and debug. To fix this problem, it is preferable to use&nbsp;<em>structured concurrency</em>&nbsp;instead. Structured concurrency combines the benefits of a consecutive code (if one step fails, the whole code fails) with the time-saving benefits of running concurrent code.</p><p>Virtual threads are excellent candidates for running structured concurrency as they can run several tasks on one platform thread. Virtual threads are used for structured concurrency by using the following Java code:</p><pre class="ql-syntax" spellcheck="false">Executors.newVirtualThreadPerTaskExecutor()

</pre><p>Here is the previous code refactored to use structured concurrency via virtual threads:</p><pre class="ql-syntax" spellcheck="false">public class ConcurrencyExample{
&nbsp;&nbsp;public static void main(String[] args) {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;try (ExecutorService executorService =&nbsp;Executors.newVirtualThreadPerTaskExecutor()) {&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// We can assume the fetch functions have the relevant information of a&nbsp;user
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Future&lt;String&gt; userName =&nbsp;executorService.submit(fetchUserName());
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Future&lt;String&gt; userID =&nbsp;executorService.submit(fetchUserID());
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Future&lt;String&gt; orderNumber =&nbsp;executorService.submit(fetchOrderNumber());
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;}
}

</pre><h2>Sharing Data using Scoped Values</h2><p>While tasks are running, there may be a case where data between threads must be shared. In concurrent programming, the way to do this was to use a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>ThreadLocal</strong></code>&nbsp;variable. A&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>ThreadLocal</strong></code>&nbsp;variable is a public static variable that belongs to the class, but a separate instance of which is created in each thread. The problem with a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>ThreadLocal</strong></code>&nbsp;variable used in virtual threads is that because virtual threads allow the creation of many threads, there will consequently be many instances of a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>ThreadLocal</strong></code>&nbsp;variable, rendering them too unmanageable due to their amount. To solve this problem, it is preferable to use a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>ScopedValue</strong></code>&nbsp;variable instead. A&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>ScopedValue</strong></code>&nbsp;variable belongs to the class and does not allow the creation of multiple instances of itself.</p><p>To use a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>ScopedValue</strong></code>&nbsp;variable, syntax similar to the following should be added to any code using virtual threads:</p><pre class="ql-syntax" spellcheck="false">private static final ScopedValue&lt;String&gt; someString =&nbsp;ScopedValue.newInstance();
ScopedValue.where(someString, "StringValue", virtualThread);

</pre><h2>Advantages and Disadvantages of Virtual Threads</h2><p>Virtual threads have proven to be helpful in applications where several tasks are slated to run concurrently, and each task awaits some form of external response, such as IO or a network call. However, there are situations in which a virtual thread cannot be used. In the case where a thread must run some form of complex calculation, it does not make sense to use a virtual thread because the task will not be idle as the CPU is under constant use. When this is the case, there is no other choice but to rely on a standard platform thread. A second scenario when a virtual thread can’t be used is when a task executes a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>synchronized</strong></code>&nbsp;block of code. A&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>synchronized</strong></code>&nbsp;block of code prevents other threads from accessing a specific piece of data in the interest of protecting it from being incorrectly processed. When a virtual thread executes&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>synchronized</strong></code>&nbsp;code, the virtual thread cannot be unmounted until the block of code is finished executing, even if the thread is idle. When this happens, we say the virtual thread is&nbsp;<em>pinned</em>&nbsp;to the parent platform thread. When this is the case, we lose the advantages we gain from unmounting an idle thread. In this case, we again are forced to use standard platform threads.</p><h2>Conclusion</h2><p>As we have seen, virtual threads, in some cases, offer a great advantage in multithreaded programming over the traditional platform thread. By taking advantage of the idleness of some tasks as they await the response of an external resource, we can temporarily reallocate resources to other tasks, thereby allowing us to run multiple tasks on one single thread. This style of programming greatly improves concurrent programming and places less strain on computational resources. While this is a great improvement in multithreading, it is by no means a complete replacement for traditional platform threads.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5f707e77-c89b-49a6-b7ab-91c85a2c4e29'::uuid, 3, '5b46ff16-e2ea-47b4-99a3-959f5aaebe2b'::uuid, 'CODE'::public.resource_type, 'Multi task', 'b6484e21-6937-489c-b031-b71767994736'::uuid, 'Sum of an array', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8b2eceba-132d-4d70-921b-c35c14c227be'::uuid, 0, '6ca77614-89a5-46ad-8338-b13e519c365a'::uuid, 'LESSON'::public.resource_type, 'Regex', NULL, '<p>Have you ever wondered how search engines like Google Search can interpret the text you type and return results accurately to your inquiry?</p><p>Aside from the higher-level steps of crawling, indexing, and ranking, and also ignoring the layers of machine learning behind the information Google has at its disposal, Google, and any other search engine needs a way to interpret and use what you type. It needs to functionally accept whatever you put into that search bar and return results. This process poses the following question:</p><p>“How do I generalize all possible inputs but still retain accuracy and precision in the results?”</p><p>The answer is&nbsp;<a href="https://www.codecademy.com/resources/docs/general/regular-expressions?page_ref=catalog" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);"><em>regular expressions</em></a>, or&nbsp;<em>regex</em>&nbsp;for short.</p><p>A regex is a pattern represented by a sequence of characters. They’re used in search engines, word processors, text editors, and many other places due to their general use cases and base functionality. Many programming languages provide regex capabilities either from libraries or built straight into the language. Java is one such language that has an entire package dedicated to regex.</p><p>In the simplest sense, regex can be used to perform text search and text replace operations. It’s always first represented as a&nbsp;<em>search pattern</em>, which is used to define what exactly is being searched for when scanning text. Many unique ways were developed to add as much utility and specification as possible when creating search patterns. In all regards, search patterns put an emphasis on precision despite the “catch-all” genericness it has to consider.</p><p>Regex can be broken into the following categories:</p><ul><li>Character&nbsp;<a href="https://www.codecademy.com/resources/docs/java/classes" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Classes</a>&nbsp;and Capture Groups</li><li>Escaped Characters</li><li>Quantifiers</li><li>Alternation</li></ul><p>We’re going to learn about these categories and how to read, write, and manipulate regex search patterns in Java. Java doesn’t have a built-in regex class, so we import a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">java.util.regex</code>&nbsp;package to work with&nbsp;<a href="https://www.codecademy.com/resources/docs/java/regular-expressions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">regular expressions</a>.</p><p>Let’s start with talking about this&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">java.util.regex</code>&nbsp;package and how it implements regex!</p><p><br></p><h3>The Pattern Class</h3><p>2 min</p><p>Java’s&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">java.util.regex</code>&nbsp;package contains two vital classes:</p><ul><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Pattern</code>&nbsp;Class</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Matcher</code>&nbsp;Class</li></ul><p>We’ll start with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Pattern</code>&nbsp;class which is what we use to define a pattern we want to find in a string. We create a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Pattern</code>&nbsp;like so:</p><pre class="ql-syntax" spellcheck="false">Pattern pattern =&nbsp;Pattern.compile("Codecademy");
Pattern pattern =&nbsp;Pattern.compile("codecademy", Pattern.CASE_INSENSITIVE);

</pre><p>This method compiles a pattern object in such a way as to designate a given string as the pattern to be used to perform regex operations.</p><p>Note the second parameter. It’s optional but contains some useful flags we can set that affect how the regex search is performed. Some examples include:</p><ul><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Pattern.CASE_INSENSITIVE</code>&nbsp;- The case of letters will be ignored when performing a search.</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Pattern.LITERAL</code>&nbsp;- Special characters in the pattern will not have any special meaning and will be treated as ordinary characters when performing a search.</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Pattern.UNICODE_CASE</code>&nbsp;- Use it together with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">CASE_INSENSITIVE</code>&nbsp;flag to also ignore the case of letters outside of the English alphabet.</li></ul><p>To match a string against a pattern, we need to use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Matcher</code>&nbsp;class. We will discuss this in the next exercise.</p><p><br></p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('451cbadf-6f5a-46e8-82da-e0243ab193dd'::uuid, 1, '6ca77614-89a5-46ad-8338-b13e519c365a'::uuid, 'CODE'::public.resource_type, 'The Matcher Class', 'b6484e21-6937-489c-b031-b71767994760'::uuid, 'Check triangle from side length', '');
-- End of chapter resource Java 3

-- Chapter resource Go 1
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('70854613-c7e2-4d6c-980e-d4f2596dd02a'::uuid, 8, 'e2b94a56-02f6-4b21-9d0d-578a8406c386'::uuid, 'LESSON'::public.resource_type, 'The switch Statement', NULL, '<h3>The switch Statement</h3><p><br></p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statements are great for checking multiple conditions. However, we can find ourselves needing to check so many conditions that writing all the necessary&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statements can feel tedious. For example:</p><pre class="ql-syntax" spellcheck="false">clothingChoice := "sweater"

if clothingChoice == "shirt" {
&nbsp;&nbsp;fmt.Println("We have shirts in S&nbsp;and M&nbsp;only.")
} else if clothingChoice == "polos" {
&nbsp;&nbsp;fmt.Println("We have polos in M, L, and XL.")
} else if clothingChoice == "sweater" {
&nbsp;&nbsp;fmt.Println("We have sweaters in S, M, L, and XL.")
} else {
&nbsp;&nbsp;fmt.Println("Sorry, we don''t carry that.")
}

</pre><p>In the code above, we have a series of conditions checking for a value that matches a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">clothingChoice</code>&nbsp;variable. Our code works fine, but imagine if we needed to check more values! Having to write additional&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statements sounds like a pain!</p><p>Instead, we can use a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><a href="https://www.codecademy.com/resources/docs/go/switch" rel="noopener noreferrer" target="_blank">switch</a></code>&nbsp;statement that uses alternative syntax that is easier to read and write. Below is an example of a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">switch</code>&nbsp;statement:</p><pre class="ql-syntax" spellcheck="false">clothingChoice := "sweater"

switch clothingChoice {
case "shirt":
&nbsp;&nbsp;fmt.Println("We have shirts in S&nbsp;and M&nbsp;only.")
case "polos":
&nbsp;&nbsp;fmt.Println("We have polos in M, L, and XL.")
case "sweater":
&nbsp;&nbsp;fmt.Println("We have sweaters in S, M, L, and XL.")
case "jackets":
&nbsp;&nbsp;fmt.Println("We have jackets in all sizes.")
default:
&nbsp;&nbsp;fmt.Println("Sorry, we don''t carry that")
}
// Prints: We have sweaters in S, M, L, and XL.

</pre><p><br></p><p>Let’s break down what happens in a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">switch</code>&nbsp;statement:</p><ul><li>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">switch</code>&nbsp;keyword initiates the statement and is followed by a value. In the example, the value after&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">switch</code>&nbsp;is compared to the value after each&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">case</code>, until there is a match.</li><li>Inside the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">switch</code>&nbsp;block,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">{ ... }</code>, there are multiple&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">case</code>s. The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">case</code>&nbsp;keyword checks if the expression matches the specified value that comes after it. The value following the first&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">case</code>&nbsp;is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"shirt"</code>. Since the value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">clothingChoice</code>&nbsp;is not the same as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"shirt"</code>, that&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">case</code>‘s code does not run.</li><li>The value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">clothingChoice</code>&nbsp;is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"sweater"</code>, so the third&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">case</code>‘s code runs and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"We have sweaters in S, M, L, and XL."</code>&nbsp;is printed. No more&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">case</code>&nbsp;statements are checked.</li><li>At the end of our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">switch</code>&nbsp;statement is a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">default</code>&nbsp;statement. If none of the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">case</code>s are true, then the code in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">default</code>&nbsp;statement will run.</li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a488fb05-c1ce-400d-ae49-08cbf99412c0'::uuid, 0, 'e2a436a9-f706-4785-927b-e1fb7dab0e2d'::uuid, 'LESSON'::public.resource_type, 'What is a Function?', NULL, '<h3>What is a Function?</h3><p><br></p><p>In programming, a function is a block of code designed to be reused. As programmers, we want to find solutions to problems, but we also don’t want to do additional work when it’s not necessary. Let’s start with an example, say we needed to double a number:</p><pre class="ql-syntax" spellcheck="false">x := 5
doubleX := 5 *&nbsp;2

</pre><p>Great, but what if we need to double another number?</p><pre class="ql-syntax" spellcheck="false">y := 3
doubleY := 3 *&nbsp;2

</pre><p>And another??</p><pre class="ql-syntax" spellcheck="false">z := 25
doubleZ := 25 *&nbsp;2

</pre><p>These short bits of code could build up to a lot of time and effort (just to double a number!) That’s where&nbsp;<a href="https://www.codecademy.com/resources/docs/go/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>&nbsp;can really help out. We can use a function to define the logic for us to perform this task, and&nbsp;<em>call it</em>&nbsp;(execute its code) when we need it:</p><pre class="ql-syntax" spellcheck="false">func doubleNum(num int) int {
&nbsp;&nbsp;return num *&nbsp;2
}

</pre><p>Don’t worry too much about the syntax for now, but it should look pretty familiar since we’ve worked with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function many times before (Reminder: one of the major differences is that the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;doesn’t have to be called, because the compiler already knows to run it). Our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">doubleNum()</code>&nbsp;function will allow us to plug in numbers and it returns an integer that’s twice the number given! Also, if our outputs start looking weird, e.g. our numbers aren’t doubling, but tripling instead, we know that the cause is likely our function. We can jump straight to fixing our function’s code rather than looking through each statement like we had for&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">doubleX</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">doubleY</code>, and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">doubleZ</code>. Our code becomes much more streamlined:</p><pre class="ql-syntax" spellcheck="false">fmt.Println(doubleNum(x)) // Prints: 10
fmt.Println(doubleNum(y)) // Prints: 6
fmt.Println(doubleNum(z)) // Prints: 50

</pre><p>We’ll go over more examples of how to create and use functions, when they can be accessed, and how to defer within a function later in this lesson. In a nutshell, we’ll see how&nbsp;<em>functions</em>&nbsp;function.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('99aa67aa-2d00-4e17-8d4d-7a5de8ca776e'::uuid, 1, 'e2a436a9-f706-4785-927b-e1fb7dab0e2d'::uuid, 'LESSON'::public.resource_type, 'Using Functions', NULL, '<h3>Using Functions</h3><p><br></p><p>As we saw before, we can bundle code in a function and call that function when we need the code inside it to run. We’ll be going over function syntax starting with a simple function definition:</p><pre class="ql-syntax" spellcheck="false">func summonNicole() {
&nbsp;&nbsp;fmt.Println("Hey Nicole, get over here!")
}

</pre><p>Above, we defined a function called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">summonNicole()</code>&nbsp;and, within the&nbsp;<em>body</em>&nbsp;of the function (the part between the curly braces) we print out a message. It’s important to note that the code inside the function body does not run until we&nbsp;<em>call</em>&nbsp;the function. We call a function by using its name followed by parentheses somewhere outside the definition of the function. Our whole&nbsp;<strong>main.go</strong>&nbsp;file could look like this:</p><pre class="ql-syntax" spellcheck="false">package main

import "fmt"

func summonNicole() {
&nbsp;&nbsp;fmt.Println("Hey Nicole, get over here!")
}

func main() {
&nbsp;&nbsp;// We call our function for the first time
&nbsp;&nbsp;summonNicole()

&nbsp;&nbsp;// We call our function for the second time
&nbsp;&nbsp;summonNicole()
}

</pre><p>In our example, we defined the function&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">summonNicole()</code>&nbsp;and called it twice inside our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function. Notice that our function definition exists outside of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>, but calling&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">summonNicole()</code>&nbsp;occurs inside our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function. This produces the following output in the terminal:</p><pre class="ql-syntax" spellcheck="false">Hey Nicole, get over here!
Hey Nicole, get over here!

</pre><p>Now, let’s create our own&nbsp;<a href="https://www.codecademy.com/resources/docs/go/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('18f5b0fd-2020-4af8-a034-d6636eaeb334'::uuid, 0, 'cfcc50cd-8701-4236-90fe-083138f78a08'::uuid, 'LESSON'::public.resource_type, 'From the Get Go', NULL, '<h3>From the Get Go</h3><p><br></p><p>Go, or Golang, is a language that was&nbsp;<a href="https://go.dev/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">developed by Google</a>&nbsp;for in-house software development, to make their software easier to write, maintain and build.</p><p>Go has quickly become very popular in the world of development, often used for writing APIs and DevOps tools. Go sits in the middle between low-level languages and high-level languages, often offering the advantages of both.</p><p>Go:</p><ul><li>Uses a similar syntax to many other languages, including ‘C’.</li><li>Produces code that runs fast and uses very little&nbsp;<a href="https://www.codecademy.com/resources/docs/go/memory" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">memory</a>.</li><li>Run across many platforms.</li><li>Provides simple syntax for multi-threaded programs.</li><li>Provides some object-oriented features.</li><li>Has garbage collection.</li></ul><p>Before we can make full use of Go, we first have to learn how to read and run a Go program. Once you’ve finished the entire lesson, read our&nbsp;<a href="https://www.codecademy.com/articles/setting-up-go-locally" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">guide for developing Go locally</a>&nbsp;to compile and run Go programs on your own computer!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('988b71aa-3dd7-48f1-974f-2c926390f3fd'::uuid, 1, 'cfcc50cd-8701-4236-90fe-083138f78a08'::uuid, 'LESSON'::public.resource_type, 'Compiling Files', NULL, '<p>Now we know what Go is for, let’s learn how to use the Go Compiler to compile a file into an executable.</p><p>In our terminal, we type in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go build</code>&nbsp;followed by the name of our file and press&nbsp;Enter. If we wanted to run a file called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">greet.go</code>, the command will look like:</p><pre class="ql-syntax" spellcheck="false">go build greet.go

</pre><p>While nothing obvious is shown after we run our command, Go has created our program’s executable file. If we type in the command&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">ls</code>, we’ll see our original Go program and its executable file.</p><pre class="ql-syntax" spellcheck="false">ls
greet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;greet.go

</pre><p>To execute the file, we call:</p><pre class="ql-syntax" spellcheck="false">./greet

</pre><p>Now let’s&nbsp;<em>go</em>&nbsp;one step further and actually do it!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9b04298b-0d9b-4c7d-9ba1-f2fd99fe0716'::uuid, 2, 'cfcc50cd-8701-4236-90fe-083138f78a08'::uuid, 'LESSON'::public.resource_type, 'Running Files', NULL, '<p>Great, we were able to use the Go compiler to build an executable. We can run that executable as many times as we want.</p><p>But what happens if we ever wanted to change our program? We would have to compile another executable file and then run that file. Imagine having to do that every single time!</p><p>Thankfully, we have the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go run</code>&nbsp;command followed by the name of the Go file. We can use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go run</code>&nbsp;command like so:</p><pre class="ql-syntax" spellcheck="false">go run greet.go

</pre><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go run</code>&nbsp;command compiles the code (like&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go build</code>) and executes it. Unlike&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go build</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go run</code>&nbsp;will NOT create an executable file in our current folder.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d5b92a3c-0aa4-4704-8b7c-79a78ceb7555'::uuid, 3, 'cfcc50cd-8701-4236-90fe-083138f78a08'::uuid, 'LESSON'::public.resource_type, 'Our Program So Far: Packages', NULL, '<h3>Our Program So Far: Packages</h3><p><br></p><p>Now that we understand how to compile and run Go programs, let’s take a look at Go packages.</p><p>Projects can contain many&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.go</code>&nbsp;files, organized into packages. Each package is like a directory:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.go</code>&nbsp;files to do with one part of your program can go in one package, other&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.go</code>&nbsp;files to do with something else can go into another package. If we were writing a calculator program, we could put the files for the calculation in package&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">calc</code>&nbsp;and the files for input &amp; output in package&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">io</code>.</p><h4>Our Program So Far</h4><pre class="ql-syntax" spellcheck="false">package main

import "fmt"

func main () {
&nbsp;&nbsp;fmt.Println("Hello World")
}

</pre><h5>Package Declaration</h5><p>Let’s focus on the first line&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">package main</code>. This line is called a&nbsp;<em>package declaration</em>&nbsp;and it tells the Go compiler to which package this ‘.go’ file belongs. If this package declaration is ‘package main’, then this program will be compiled into an executable.</p><h5>Whitespace</h5><p>Next is a blank line. Go generally ignores these blank lines, they’re considered&nbsp;<em>whitespace</em>&nbsp;(new lines, spaces, and tabs). While our program doesn’t need the line break, it makes our code easier to read.</p><h5>Import Statement</h5><p>Then we have an&nbsp;<em>import statement</em>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">import "fmt"</code>. The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">import</code>&nbsp;keyword allows us to use code from other packages, in this case the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Println</code>&nbsp;function from the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt</code>&nbsp;package. Note how the package name is enclosed with double quotes&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"</code>.</p><p>Now that we know how we declare &amp; use Go packages, let’s discuss&nbsp;<a href="https://www.codecademy.com/resources/docs/go/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('969d0cce-81e5-4c62-8f23-20882640f956'::uuid, 4, 'cfcc50cd-8701-4236-90fe-083138f78a08'::uuid, 'LESSON'::public.resource_type, 'Our Program So Far: main Function', NULL, '<h3>Our Program So Far: main Function</h3><p><br></p><p>Now that we know how to declare &amp; use Go packages, let’s look through the rest of the code:</p><pre class="ql-syntax" spellcheck="false">func main () {
&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println("Hello World")
}

</pre><h4><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main</code>&nbsp;Function</h4><p>We use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">func</code>&nbsp;keyword to declare the&nbsp;<a href="https://www.codecademy.com/content-items/22ba32684094429aa3d0066e5bc1a274?draft=true&amp;bypass_cache=true" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Go function</a>&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main</code>:</p><ul><li>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">func</code>&nbsp;keyword denotes the start of a function declaration.</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">func</code>&nbsp;is followed by the name of the function:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main</code>.</li><li>After the name there follows a pair of parentheses&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">()</code>&nbsp;and a set of curly braces&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">{}</code>.</li><li>The function code is written inside the set of curly braces.</li></ul><h4>Function Code</h4><p>The code inside a function is indented. The code here invokes the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Println</code>&nbsp;function in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt</code>&nbsp;package (that we imported earlier) to print the message&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Hello World"</code>.</p><h4>Invoking&nbsp;<a href="https://www.codecademy.com/resources/docs/go/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Functions</a></h4><p>Normally when we write functions, you need to write code to&nbsp;<em>invoke</em>&nbsp;them, otherwise they are unused. However, the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main</code>&nbsp;function is&nbsp;<em>different</em>&nbsp;if it resides in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main</code>&nbsp;package.</p><p>When we have a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main</code>&nbsp;function in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main</code>&nbsp;package, this is special to Go. When compiled, an executable is produced, and when run, the executable uses the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main</code>&nbsp;function as the starting point.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('10337018-7a27-4b54-9bd7-b1a4bc25a311'::uuid, 5, 'cfcc50cd-8701-4236-90fe-083138f78a08'::uuid, 'LESSON'::public.resource_type, 'Importing Multiple Packages', NULL, '<h3>Importing Multiple Packages</h3><p><br></p><p>Previously, we imported a single package,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt</code>. This package is useful but it is only one in a&nbsp;<a href="https://golang.org/pkg/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">list of many included with Go</a>.</p><p>The standard packages are so useful that you will often use multiple packages in each&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.go</code>&nbsp;file.</p><h4>Importing Multiple Packages</h4><p>To import multiple packages, we can add multiple&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">import</code>&nbsp;statements:</p><pre class="ql-syntax" spellcheck="false">import "package1"
import "package2"

</pre><p>Or use a single&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">import</code>&nbsp;with parentheses:</p><pre class="ql-syntax" spellcheck="false">import (
&nbsp;&nbsp;"package1"
&nbsp;&nbsp;"package2"
)

</pre><h4>Package Aliases</h4><p>We can also provide an&nbsp;<em>alias</em>&nbsp;to a package by specifying an alias name before the package name.</p><pre class="ql-syntax" spellcheck="false">import (
&nbsp;&nbsp;p1 "package1"
&nbsp;&nbsp;"package2"
)

</pre><p>In the example above we’ve aliased&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">package1</code>&nbsp;as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">p1</code>&nbsp;and now we can call&nbsp;<a href="https://www.codecademy.com/resources/docs/go/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>&nbsp;from&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">package1</code>&nbsp;by using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">p1</code>&nbsp;like:</p><pre class="ql-syntax" spellcheck="false">p1.SampleFunc()

</pre><p>Instead of:</p><pre class="ql-syntax" spellcheck="false">package1.SampleFunc()
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9c80a46a-2c83-42bc-933d-89ec2ea7dd3c'::uuid, 6, 'cfcc50cd-8701-4236-90fe-083138f78a08'::uuid, 'LESSON'::public.resource_type, 'Comments', NULL, '<h3>Comments</h3><p><br></p><p>Now we have completed the basics of using packages, let’s move on to comments.</p><h4>Before Commenting…</h4><p>“Don’t comment bad code — rewrite it.” — Brian W. Kernighan and P. J. Plaugher.</p><p>Try to make code as clean and self-explanatory&nbsp;<em>before</em>&nbsp;adding comments. They should be the icing on the cake rather than the filling!</p><p>Comments are useful for:</p><ul><li>Explaining what the code does &amp; why something was done a certain way</li><li>Outlining important or fragile blocks of code, which require extra care</li><li>Noting down what we need to do when we are writing the code</li><li>Disabling code without deleting it</li><li>Adding information to be picked up by the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go doc</code>&nbsp;tool (more on that later)</li></ul><h4>Types</h4><p>There are two types of comments in Go.</p><h5>Line Comments</h5><p>Line comments start with a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">//</code>&nbsp;and the rest of the line is ignored by the compiler.</p><pre class="ql-syntax" spellcheck="false">// This entire line is ignored by the compiler
// fmt.Println("Does NOT print")
fmt.Println("This gets printed!") // This part gets ignored

</pre><p>Note how you can add a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">//</code>&nbsp;<em>after</em>&nbsp;the code,&nbsp;<em>without affecting it</em>.</p><h5>Block Comments</h5><p>Block comments can span multiple lines. They start with a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">/*</code>&nbsp;and end with a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">*/</code>, enveloping everything inside:</p><pre class="ql-syntax" spellcheck="false">/*
This is ignored.
This is also ignored.
fmt.Println("This WON''T print!")
*/

</pre><p>In the example above we’ve commented out all three lines using a block comment.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('02b1f820-25fb-43ed-aa51-b896ee957302'::uuid, 2, 'e2a436a9-f706-4785-927b-e1fb7dab0e2d'::uuid, 'LESSON'::public.resource_type, 'Scope', NULL, '<h3>Scope</h3><p><br></p><p>A function definition creates something called a&nbsp;<em>scope</em>. We’ve referenced scope before in our&nbsp;<a href="https://www.codecademy.com/courses/learn-go/lessons/learn-go-conditionals/exercises/scoped-short-declaration-statement" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">conditionals exercise about scoped short declarations</a>&nbsp;but it’s important to recognize how scope plays a huge role in&nbsp;<a href="https://www.codecademy.com/resources/docs/go/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>&nbsp;and programming overall!</p><p>Scope is a concept that refers to where the values and functions are defined and where they can be accessed. For instance, when a variable is defined within a function, that variable is only accessible within that function. When we try to access that same variable from a different function, we get an error because we can’t do it. Each function has its own specific scope, take a look at the code:</p><pre class="ql-syntax" spellcheck="false">package main

import "fmt"

func performAddition() {
&nbsp;&nbsp;x := 5
&nbsp;&nbsp;y := 7
&nbsp;&nbsp;fmt.Println("The sum of", x, "and", y, "is", x +&nbsp;y)
}

func main() {
&nbsp;&nbsp;performAddition()
&nbsp;&nbsp;fmt.Println("What if", x, "was different?")
}

</pre><p>The above code exits with the following error:</p><pre class="ql-syntax" spellcheck="false">./main.go:12:26: undefined: x

</pre><p>The error is raised because the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">x</code>&nbsp;in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>‘s print statement&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Println("What if", x, "was different?")</code>&nbsp;is in a different scope than the defined&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">x</code>&nbsp;inside&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">performAddition()</code>. It’s not possible to directly refer to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">performAddition()</code>‘s&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">x</code>&nbsp;variable in the scope of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>.</p><p>There are three different scopes present in this example:</p><ul><li>The global scope, which contains the function definitions for&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">performAddition()</code>.</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">performAddition()</code>&nbsp;has a local scope, which defines&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">x</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">y</code>.</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;has a local scope also. It can access&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">performAddition()</code>&nbsp;because that’s defined on the same scope level as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;but can’t access the internals of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">performAddition</code>‘s scope (i.e.,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">x</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">y</code>).</li></ul><p>This differentiation of scope keeps the&nbsp;<em>namespace</em>, the available&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;and keywords, cleaner as a result. You can only refer to variables or functions defined within a specific namespace.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6c1b68b6-cc79-442b-8d64-0c00dabac852'::uuid, 7, 'cfcc50cd-8701-4236-90fe-083138f78a08'::uuid, 'LESSON'::public.resource_type, 'Go Resources', NULL, '<h3>Go Resources</h3><p><br></p><p>There are many resources available to help us learn Go.</p><h5>Go Doc</h5><p>Go includes a program&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go doc</code>&nbsp;for extracting and viewing documentation from&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.go</code>&nbsp;files. For information about a package, use the command&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go doc</code>&nbsp;followed by the package name.</p><pre class="ql-syntax" spellcheck="false">go doc fmt

</pre><p>For information about a package function, use the command&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">go doc</code>&nbsp;followed by the package name, a period then the function name.</p><pre class="ql-syntax" spellcheck="false">go doc fmt.Println

</pre><h5>Google’s Go Website</h5><ul><li><a href="https://golang.org/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Go’s official website</a></li><li><a href="https://go.dev/doc/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Go’s official documentation</a></li></ul><h5>Other Websites</h5><ul><li><a href="https://discuss.codecademy.com/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Codecademy’s Forums</a></li><li><a href="https://stackoverflow.com/questions/tagged/go" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Stack Overflow’s Go questions</a></li></ul><h5>Google Search</h5><p>When searching for information about Go, you may want to consider searching&nbsp;<strong>Golang</strong>&nbsp;instead of&nbsp;<strong>Go</strong>, as it is more specific.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1cff2be7-c332-497c-a087-fe10abaec613'::uuid, 8, 'cfcc50cd-8701-4236-90fe-083138f78a08'::uuid, 'CODE'::public.resource_type, 'Gopher it', 'b6484e21-6937-489c-b031-b71767994761'::uuid, 'Determine number of days in a month', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('937bf200-a909-43ce-8101-134777c1ae5a'::uuid, 0, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'Values and Variables', NULL, '<h3>Values and Variables</h3><p><br></p><p>Programs, like the ones we write in Go, are excellent at processing and performing operations on data. But in programming, “data” can be so many different things. Data can be numbers, boolean values (true/false),&nbsp;<a href="https://www.codecademy.com/resources/docs/go/strings" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">strings</a>&nbsp;(blocks of text), or combinations thereof.</p><p>In this lesson, we’ll be covering how to store “data” by creating and using&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;in Go.</p><p>We’re going to look into the different ways we can interact with these values (like adding two numbers together, or creating a longer message from two strings). We’re also going to discuss&nbsp;<a href="https://www.codecademy.com/resources/docs/go/data-types" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data types</a>, the specific divisions that Go uses to “expect” certain qualities from variables. By creating and assigning values to our variables, we’ll understand the limitations and benefits of using different data types.</p><p>We’ll also cover how to read Go error messages — creating and using variables adds a new level of complexity to our programs to make these errors much more likely. This will be a good learning process, life as a programmer involves reading and interpreting these error messages quite often!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0656b4d2-8f87-4aba-a6b4-405bb14a2d5f'::uuid, 1, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'Literals', NULL, '<h3>Literals</h3><p><br></p><p>In Go, values can be many things. Just to name a few, values can be numbers (like&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">109</code>), or text wrapped in quotes (like&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Hello world"</code>). These values can be written into code as is, and are called&nbsp;<em>literals</em>. They are literally what they say they are.</p><p>We can perform arithmetic in Go with literals (or named values, covered in the next exercise) using the following operators:</p><ul><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">+</code>&nbsp;to add</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">-</code>&nbsp;to subtract</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">*</code>&nbsp;to multiply</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">/</code>&nbsp;to divide</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%</code>&nbsp;to take the remainder (the&nbsp;<em>modulus operator</em>) between two numbers.</li></ul><pre class="ql-syntax" spellcheck="false">fmt.Println(20 *&nbsp;3) // Prints: 60
fmt.Println(55.21 /&nbsp;5) // Prints: 11.042
fmt.Println(9 %&nbsp;2) // Prints: 1

</pre><p><br></p><p>Imagine the code above as appearing inside the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main</code>&nbsp;function body of a Go program. In this snippet, we used the Go programming language as a calculator. We printed out the product of multiplying&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">20</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">3</code>&nbsp;(<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">60</code>). We next printed out the quotient of dividing&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">55.21</code>&nbsp;by&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">5</code>&nbsp;(<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">11.042</code>). We lastly printed out the remainder left over after dividing&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">9</code>&nbsp;by&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">2</code>&nbsp;(<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">9</code>&nbsp;divided by&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">2</code>&nbsp;has a remainder of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>).</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4ebfed64-8c3f-46f1-8a70-c3bc4225bfc2'::uuid, 2, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'Constants', NULL, '<h3>Constants</h3><p><br></p><p>In addition to literal (aka&nbsp;<em>unnamed</em>) values, there are also&nbsp;<em>named</em>&nbsp;values. Naming a value in Go means creating a word that will represent that value. One example of named values are&nbsp;<em>constants</em>, which cannot be updated while the program is running. Another example of named values are&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);"><em>variables</em></a>&nbsp;which we can update their value. We’ll focus on constants in this exercise and discuss variables at length in later exercises.</p><p>We use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">const</code>&nbsp;keyword to create a constant. We immediately assign a value to the constant using a literal. Throughout the rest of the program, we can use the constant’s name instead of the literal.</p><pre class="ql-syntax" spellcheck="false">const funFact =&nbsp;"Hummingbirds'' wings can beat up to 200 times a&nbsp;second."

fmt.Println("Did you know?")
fmt.Println(funFact)

</pre><p><br></p><p>Which prints:</p><pre class="ql-syntax" spellcheck="false">Did you know?
Hummingbirds'' wings can beat up to 200 times a&nbsp;second.

</pre><p><br></p><p>Above, we created a constant named&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">funFact</code>, which contains the text&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Hummingbirds'' wings can beat up to 200 times a second."</code>. We were then able to print out this value using the names we applied. This is useful if a value doesn’t change throughout a program and it also helps to convey the developer’s intention of keeping a consistent value.</p><p>Let’s also take a second to examine the peculiar name,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">funFact</code>. Constants have names without spaces: spaces aren’t allowed! This means that for us to have descriptive names (and it is important to have descriptive names so that we can read the code we’ve written) we need to use camelCase or PascalCase, capitalizing each subsequent word instead of adding spaces.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1fbd3287-c673-4ed7-9974-88a9de52e96b'::uuid, 3, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'What is a Data Type?', NULL, '<h3>What is a Data Type?</h3><p><br></p><p>Programming languages need to process and organize data. That data is stored as binary numbers (numbers consisting of 0’s and 1’s) in the&nbsp;<a href="https://www.codecademy.com/resources/docs/go/memory" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">memory</a>&nbsp;of your computer. In this way, binary numbers are used to represent many different things.&nbsp;<em>Data types</em>&nbsp;are designations by a programming language about what information is being stored. Go comes with a number of&nbsp;<em>basic types</em>,&nbsp;<a href="https://www.codecademy.com/resources/docs/go/data-types" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data types</a>&nbsp;built into the programming language. It’s also possible to create your own types that combine these basic types into something more complex, but let’s first cover the data that you can store by default in Go.</p><p>Go has three basic categories for numbers:</p><ul><li>Integers, or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>s, are whole/counting numbers. You would use an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>&nbsp;to count the number of books on a shelf, the number of products in a warehouse, the number of people on a website, etc…</li><li>Floating-point numbers, or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">float</code>s, can include fractional data. You would use a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">float</code>&nbsp;to store distances, percentages, and other quantities that required division or precision.</li><li>Complex numbers,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">complex</code>, are pairs of floating-point numbers where the second part of the pair is marked with the “imaginary” unit&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">i</code>. Complex numbers are particularly useful when reasoning in 2-dimensional space and have other utilizations that make them relevant for involved calculations, but we won’t be discussing them at length in this course.</li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('41c4dc61-4c30-4cca-92cd-d0bb2f821b0c'::uuid, 4, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'Basic Numeric Types in Go', NULL, '<h3>Basic Numeric Types in Go</h3><p><br></p><p>Go has 15 different numeric types that fall into the three categories:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">float</code>, and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">complex</code>. That means there are fifteen different ways to describe a number in Go. This includes 11 different integer types, 2 different floating-point types, and 2 different complex number types. These types all recognize different sets of numbers as valid. An integer can’t store the number&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">8.6132</code>, for instance.</p><p>Beyond being broken down into the three categories, types also indicate how many bits (binary digits) will be used to represent the data. Fewer bits means fewer different possible values for the data, enforced as a strict minimum and maximum value for integers and less precision for floats and complex numbers. Fewer bits also means less data to save, so it will use less of a computer’s&nbsp;<a href="https://www.codecademy.com/resources/docs/go/memory" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">memory</a>&nbsp;to hold onto that data. So, while it may be tempting to use types that can take a larger range of values, it can slow down a computer’s performance or cause the computer to run out of memory.</p><p>Integers are further broken down into two categories:&nbsp;<em>signed</em>&nbsp;and&nbsp;<em>unsigned</em>. Signed integers can be negative, but unsigned integers can only be positive. This means that the minimum value for an unsigned integer is always 0. Since it can ignore the possibility of a negative value, an unsigned integer’s maximum value is much higher than a signed integer with the same number of bits.</p><p>Go also has a&nbsp;<em>boolean</em>&nbsp;type. Booleans are either&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>. Go only needs one bit to store a boolean value:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">0</code>&nbsp;represents&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>&nbsp;represents&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5542eb27-5743-444d-b59c-eee93e27803b'::uuid, 5, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'What is a Variable?', NULL, '<h3>What is a Variable?</h3><p><br></p><p>Now that we have some background on what types are, we can talk about what&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;are and how we make and use them. A variable is a named value (like a constant) with the added feature that it can change during the running of a program. If we’re working with a value in various places in our program, we can store that value in a variable to easily access it later.</p><p>Variables are defined with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">var</code>&nbsp;keyword and two pieces of information: the name that we will use to refer to them and the type of data stored in the variable. Since variables can be updated we don’t even need to assign a value initially. Here’s a couple of variable definitions:</p><pre class="ql-syntax" spellcheck="false">var lengthOfSong uint16
var isMusicOver bool
var songRating float32

</pre><p>Above, we created three variables:</p><ul><li>An unsigned 16-bit integer called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">lengthOfSong</code>.</li><li>A boolean value called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">isMusicOver</code>.</li><li>A 32-bit float called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">songRating</code>.</li></ul><p>Notice that our variable names also follow the same naming convention of constants, using camelCase with a descriptive name.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('dee43a58-be62-46fc-8242-5571b5d9d8de'::uuid, 6, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'Reading Go Errors', NULL, '<h3>Reading Go Errors</h3><p><br></p><p>There is no shame in having your code fail to run. Programming errors and exceptions happen all the time and learning to read and understand them is an indispensable tool in a programmer’s toolbox.</p><p>When the Go compiler raises an error the program’s binary cannot get created and without the binary, our computer cannot execute the program’s code. Go tries to tell you what the issue is by offering you the following pieces of information: the name of the file where something went wrong, the line number in that file where Go noticed an issue, and the column number (the number of characters from the left) on that line where the error occurred. One common error occurs when Go language’s compiler recognizes that there is a defined variable that isn’t used in the program. Take for example:</p><pre class="ql-syntax" spellcheck="false">package main

func main() {
&nbsp;&nbsp;var numberWheels int8
}

</pre><p><br></p><p>When we attempt to run&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main.go</code>&nbsp;and on line 4 of our file we define the variable&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">numberWheels</code>&nbsp;that we don’t use anywhere else in the program we will see the following message:</p><pre class="ql-syntax" spellcheck="false">./main.go:4:7: numberWheels declared and not used

</pre><p><br></p><p>Notice that the error message contains the file name (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main.go</code>), the line that causes the error to be raised (line&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">4</code>) and specifically the location (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">7</code>&nbsp;characters to the right of the line break). If we remove the variable from our program or use it somewhere we appease Go’s compiler and can run our program.</p><p>This may seem like a downside to a language, something that keeps you from expressing your freedom and personality as a programmer, but it is designed to discover possible errors in your program sooner rather than later. An unused variable is a waste of&nbsp;<a href="https://www.codecademy.com/resources/docs/go/memory" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">memory</a>, but it can also be a typo or an unintended omission. In this case, Go’s somewhat hardline stance is to keep programmers from wondering why their code isn’t working the way they expect by refusing to run until some action is taken on this unused definition.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0c8e00f3-6ef1-44d5-accc-a35ddb9f25f4'::uuid, 7, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'Assigning Variables', NULL, '<h3>Assigning Variables</h3><p><br></p><p><a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Variables</a>&nbsp;are placeholder names that we use to refer to values that we intend to update over the course of our program. Updating our variable is also called&nbsp;<em>assigning</em>&nbsp;a value to a variable. In order to assign values to variables, we can use the assignment operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">=</code>) followed by a value.</p><pre class="ql-syntax" spellcheck="false">var kilometersToMars int32

kilometersToMars =&nbsp;62100000

</pre><p>In the example above, we first declare our variable using the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">var</code>&nbsp;keyword, the name&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">kilometersToMars</code>, and its type&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int32</code>. Then, we assign&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">62100000</code>&nbsp;to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">kilometersToMars</code>. Now when we need to know how many kilometers it is to mars, we can access the value using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">kilometersToMars</code>!</p><p>Another way to assign our variable is:</p><pre class="ql-syntax" spellcheck="false">var kilometersToMars int32 =&nbsp;62100000

</pre><p>In our latest example, we declare&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">kilometersToMars</code>, assign the type (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int32</code>) and&nbsp;<em>initialize</em>&nbsp;it (assign a variable it’s first value) with a value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">62100000</code>. This syntax is helpful if we know exactly what type we want our variable to have and if we know what specific value to initialize it to.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('08d9679e-73ed-4f86-9384-4614f1ace60e'::uuid, 8, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'Strings', NULL, '<p>We’ve talked about numeric types so far, but Go offers a few other built-in types. One particularly useful type is called a&nbsp;<em>string</em>. A string is Go’s type for storing and processing text. In a general programming sense, “string” is a term for text of any length, and the name is chosen to evoke a&nbsp;<em>sequence</em>&nbsp;of data.</p><p>Below, we declared two string variables:</p><pre class="ql-syntax" spellcheck="false">var nameOfSong string
var nameOfArtist string

</pre><p>Afterward, we assign a value to the&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">=</code>&nbsp;sign. Surround the text you want to store with double-quotation marks (i.e.,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"</code>, the single-quote&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">''</code>&nbsp;has a special other meaning and isn’t used to define strings):</p><pre class="ql-syntax" spellcheck="false">nameOfSong =&nbsp;"Stop Stop"
nameOfArtist =&nbsp;"The Julie Ruin"

</pre><p>You can use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">+</code>&nbsp;operator on&nbsp;<a href="https://www.codecademy.com/resources/docs/go/strings" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">strings</a>&nbsp;to join them, this is known as&nbsp;<em>string concatenation</em>. Note that&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">+</code>&nbsp;does not add in additional spaces or punctuation.</p><pre class="ql-syntax" spellcheck="false">var description string
description =&nbsp;nameOfSong +&nbsp;" is by: " +&nbsp;nameOfArtist +&nbsp;"."
fmt.Println(description)
// Prints "Stop Stop is by: The Julie Ruin.

</pre><p>As mentioned before, strings are very useful, so let’s practice using them in our own code.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7b0d13cc-5897-4cc4-87e8-b59984b6acb1'::uuid, 9, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'Zero Values', NULL, '<p>Even before we assign anything to our&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;they hold a value. Go’s designers attempted to make these “sensible defaults” that we can anticipate based on the variable’s types. All numeric variables have a value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">0</code>&nbsp;before assignment. String variables have a default value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">""</code>, which is also known as the empty string because it contains no characters. Boolean variables have a default value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>. For example:</p><p><br></p><pre class="ql-syntax" spellcheck="false">var classTime uint32
var averageGrade float32
var teacherName string
var isPassFail bool

fmt.Println(classTime) // Prints 0
fmt.Println(averageGrade) // Prints 0
fmt.Println(teacherName) // Doesn''t print anything
fmt.Println(isPassFail) // Prints false

</pre><p><br></p><p>Above we declared four variables, an unsigned 32-bit int, a 32-bit floating point number, a string, and a boolean. Without assigning any of the variables to a value we print them out to see their default value. The two numbers print the same result,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">0</code>, a valid value for both types. The empty string, when printed, displays nothing. The boolean value prints&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('880305cd-cc4c-43b2-b2f5-56f7b65c3231'::uuid, 10, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'Inferring Type', NULL, '<p>There is a way to declare a variable without explicitly stating its type using the short declaration&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">:=</code>&nbsp;operator. We might use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">:=</code>&nbsp;operator if we know what value we want our variable to store when creating it. For instance:</p><pre class="ql-syntax" spellcheck="false">nuclearMeltdownOccurring := true
radiumInGroundWater := 4.521
daysSinceLastWorkplaceCatastrophe := 0
externalMessage := "Everything is normal. Keep calm and carry on."

</pre><p><br></p><p>Above, we were able to define a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">bool</code>, a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">float</code>, an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>, and a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">string</code>&nbsp;without specifying the type. We used the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">:=</code>&nbsp;to create a variable and infer its type based on the value provided. Floats created in this way are of type&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">float64</code>. Integers created in this way are either&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int32</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int64</code>&nbsp;(we’ll discuss how this is determined in the next exercise).</p><p>Go also offers a separate syntax to declare a variable and infer its type. We could’ve written the same code from above as:</p><p><br></p><pre class="ql-syntax" spellcheck="false">var nuclearMeltdownOccurring =&nbsp;true
var radiumInGroundWater =&nbsp;4.521
var daysSinceLastWorkplaceCatastrophe =&nbsp;0
var externalMessage =&nbsp;"Everything is normal. Keep calm and carry on."

</pre><p><br></p><p>Notice, in the second example, that we used the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">var</code>&nbsp;keyword and the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">=</code>&nbsp;operator. In both examples, we’ve declared and initialized&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;while leaving the Go compiler to infer the type of the value assigned.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ce898cb3-1597-40d0-a327-5a7ea5782155'::uuid, 11, '74a65e05-d038-4994-8af0-686f262e6eb5'::uuid, 'LESSON'::public.resource_type, 'Default int Type', NULL, '<h3>Default int Type</h3><p><br></p><p>There is one more common way to define an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>&nbsp;in Go. Computers actually have a default length for the data in their Read-Only&nbsp;<a href="https://www.codecademy.com/resources/docs/go/memory" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Memory</a>&nbsp;(ROM). Some newer comps may have more processing power and can store/handle bigger chunks of data. These computers might be using a 64-bit architecture, but other computers still run on 32-bit architecture and work just fine. By providing the type&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">uint</code>, Go will check to see if the computer architecture is running on is 32-bit or 64-bit. Then it will either provide a 32-bit&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>&nbsp;(or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">uint</code>) or a 64-bit one depending on the computer itself.</p><p>It’s recommended to use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>&nbsp;unless there’s a reason to specify the size of the int (like knowing that value will be larger than the default type, or needing to optimize the amount of space used).</p><pre class="ql-syntax" spellcheck="false">var timesWeWereFooled int
var foolishGamesPlayed uint

</pre><p>Above, we declared two&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">timesWeWereFooled</code>&nbsp;an integer of either 32 or 64 bits.&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">foolishGamesPlayed</code>, an unsigned integer of either 32 or 64 bits.</p><pre class="ql-syntax" spellcheck="false">consolationPrizes := 2

</pre><p>When a variable is declared and assigned a value using the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">:=</code>&nbsp;operator, it will be the same type as if it were declared as an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>. In the example above,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">consolationPrize</code>&nbsp;has the type&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int</code>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('deb6c075-4703-494a-866d-244e39a987c9'::uuid, 0, '8fb0a7d4-3350-44b2-ae31-6cfe38dbf63a'::uuid, 'LESSON'::public.resource_type, 'The fmt Package', NULL, '<h3>The fmt Package</h3><p><br></p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt</code>&nbsp;is one of Go’s core packages. We’ve used it for print information to the terminal using the method&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Println()</code>.&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt</code>&nbsp;has a broader purpose, helping us&nbsp;<em>format</em>&nbsp;data, which is why it’s sometimes referred to as the format package (though it’s pronounced “fumpt”, and no that’s not a typo).</p><p>But let’s not focus on the odd pronunciation, instead, let’s go over what else we can use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt</code>&nbsp;to do! In addition to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Println()</code>, there’s also&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Print()</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Printf()</code>&nbsp;each with their own variation of how to print data. There’s also&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Sprint()</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Sprintln()</code>, and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Sprintf()</code>&nbsp;which formats but does not print anything to the terminal. We can even get user input by using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Scan()</code>. There are many more methods in&nbsp;<a href="https://golang.org/pkg/fmt/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Go’s&nbsp;</a><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><a href="https://golang.org/pkg/fmt/" rel="noopener noreferrer" target="_blank">fmt</a></code><a href="https://golang.org/pkg/fmt/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">&nbsp;package</a>, but in this lesson, we’ll focus on the ones we just mentioned.</p><p>In this lesson, we’ll cover the intricacies of using these methods, so let’s go formatting!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('378a01bc-82b2-4ab4-b79d-e42e13cff784'::uuid, 1, '8fb0a7d4-3350-44b2-ae31-6cfe38dbf63a'::uuid, 'LESSON'::public.resource_type, 'The Print Method', NULL, '<h3>The Print Method</h3><p><br></p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Println()</code>&nbsp;allows us to print to the terminal and view the data that we’re working with. It has some defaulting styling built-in that makes viewing data easier for us.&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Println()</code>&nbsp;prints its&nbsp;<em>arguments</em>&nbsp;(data provided within its parentheses&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">( )</code>) with an included space in between each argument and adds a line break at the end. Take for example:</p><pre class="ql-syntax" spellcheck="false">fmt.Println("Println", "formats", "really well")
fmt.Println("Right?")

</pre><p>Which prints:</p><pre class="ql-syntax" spellcheck="false">Println formats really well
Right?

</pre><p>Notice that our first print statement has 3 arguments and each one has an accompanying space between each argument even though we never outright included one in our code. For our second print statement, the argument is printed on the next line since&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Println()</code>&nbsp;adds a line break for us.</p><p>However, there are times we might not want the default formatting. In such cases, using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Print()</code>&nbsp;would be more appropriate:</p><pre class="ql-syntax" spellcheck="false">fmt.Print("The answer is", ": ")
fmt.Print("12")

</pre><p>The above code snippet would print:</p><pre class="ql-syntax" spellcheck="false">The answer is: 12

</pre><p>Notice that there’s no default spacing added when&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Print()</code>&nbsp;has multiple arguments. Also, since&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Print()</code>&nbsp;doesn’t add a line break after printing, the argument for the second print statement print on the same line as the first print statement’s.</p><p>Let’s compare this for ourselves.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9393bec1-f581-490e-b756-633a2d4ddedf'::uuid, 2, '8fb0a7d4-3350-44b2-ae31-6cfe38dbf63a'::uuid, 'LESSON'::public.resource_type, 'The Printf Method', NULL, '<h3>The Printf Method</h3><p><br></p><p>Using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Println()</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Print()</code>, we have the ability to concatenate&nbsp;<a href="https://www.codecademy.com/resources/docs/go/strings" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">strings</a>, i.e. combine different strings into a single string:</p><pre class="ql-syntax" spellcheck="false">guess := "C"
fmt.Println("Is", guess, "your final answer?")
// Prints: Is C&nbsp;your final answer?

</pre><p><br></p><p>With&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Printf()</code>, we can&nbsp;<em>interpolate</em>&nbsp;strings, or leave placeholders in a string and use values to fill in the placeholders. Let’s revisit the same example using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Printf()</code>:</p><pre class="ql-syntax" spellcheck="false">guess := "C"
fmt.Printf("Is %v your final answer?", guess)
// Prints: Is C&nbsp;your final answer?

</pre><p><br></p><p>The first argument we provide&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Printf()</code>&nbsp;is the string:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Is %v your final answer?"</code>. The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%v</code>&nbsp;portion is our placeholder and is known as a&nbsp;<em>verb</em>&nbsp;in Go. Verbs are identified by the combination of a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%</code>&nbsp;character followed by a letter. The specific letter informs what fills in the placeholder, in this case,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%v</code>&nbsp;gets the value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"C"</code>&nbsp;from our second argument,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">guess</code>.</p><p>As long as we provide enough arguments, we can even add multiple placeholders:</p><pre class="ql-syntax" spellcheck="false">selection1 := "soup"
selection2 := "salad"
fmt.Printf("Do I&nbsp;want %v or %v?", selection1, selection2)
// Prints: Do I&nbsp;want soup or salad?

</pre><p><br></p><p>Notice that the placement of the arguments matters! If we switched the position of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">selection1</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">selection2</code>, it would print:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Do I want salad or soup?</code>.</p><p>We’ll go over more verbs in the next exercise, but let’s first practice using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Printf()</code>&nbsp;with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%v</code>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3bb77f75-e0f3-4dc2-9d7a-2e7cadc37bea'::uuid, 3, '8fb0a7d4-3350-44b2-ae31-6cfe38dbf63a'::uuid, 'LESSON'::public.resource_type, 'Different Verbs', NULL, '<h3>Different Verbs</h3><p><br></p><p>In addition to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%v</code>, Go has a variety of useful verbs (check&nbsp;<a href="https://golang.org/pkg/fmt/#hdr-Printing" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">their documentation</a>&nbsp;for a comprehensive list). Let’s go over a few in this exercise, starting with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%T</code>:</p><pre class="ql-syntax" spellcheck="false">specialNum := 42
fmt.Printf("This value''s type is %T.", specialNum)
// Prints: This value''s type is int.

quote := "To do or not to do"
fmt.Printf("This value''s type is %T.", quote)
// Prints: This value''s type is string.

</pre><p>As seen by the example above, the verb&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%T</code>&nbsp;prints out the type of the second argument.</p><p>Now look at&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%d</code>:</p><pre class="ql-syntax" spellcheck="false">votingAge := 18
fmt.Printf("You must be %d years old to vote.", votingAge)
// Prints: You must be 18 years old to vote.

</pre><p>Using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%d</code>&nbsp;we can interpolate a number into a string! If we need to include a float:</p><pre class="ql-syntax" spellcheck="false">gpa := 3.8
fmt.Printf("You''re averaging: %f.", gpa)
// Prints: You''re averaging 3.800000.

</pre><p>With&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%f</code>, we can limit how precise we are by including a value between the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">f</code>&nbsp;like:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%.2f</code>. If we include this in our code:</p><pre class="ql-syntax" spellcheck="false">gpa := 3.8
fmt.Printf("You''re averaging: %.2f.", gpa)
// Prints: You''re averaging 3.80.
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5529340a-d0ad-4924-9520-360de4d47698'::uuid, 4, '8fb0a7d4-3350-44b2-ae31-6cfe38dbf63a'::uuid, 'LESSON'::public.resource_type, 'Sprint and Sprintln', NULL, '<h3>Sprint and Sprintln</h3><p><br></p><p>While we’ve been using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt</code>&nbsp;methods to print things out, remember, it’s the formatter package. We have other methods that don’t print&nbsp;<a href="https://www.codecademy.com/resources/docs/go/strings" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">strings</a>, but format them instead like&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Sprint()</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Sprintln()</code>.</p><pre class="ql-syntax" spellcheck="false">grade := "100"
compliment := "Great job!"
teacherSays := fmt.Sprint("You scored a&nbsp;", grade, " on the test! ", compliment)

fmt.Print(teacherSays)
// Prints: You scored a&nbsp;100 on the test! Great job!

</pre><p><br></p><p>Take a closer look at&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">teacherSays</code>&nbsp;and how calling&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Sprint()</code>&nbsp;doesn’t print out anything. Rather, it&nbsp;<em>returned</em>&nbsp;a value that we store in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">teacherSays</code>. When a value is returned, it means that a function did some computation and is giving back the computed value. Afterward, we can use the returned value for later usage. We’ll elaborate more on returns in our Go&nbsp;<a href="https://www.codecademy.com/resources/docs/go/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>&nbsp;lesson. For now, we should acknowledge that returning a value and printing it are two different things. In our code above, we’ve formatted one string by concatenating four separate strings. To see the value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">teacherSays</code>, we have to use a print statement.</p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Sprintln()</code>&nbsp;works like&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Sprint()</code>&nbsp;but it automatically includes spaces between the arguments for us (just like&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Println()</code>&nbsp;vs&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Print()</code>!):</p><pre class="ql-syntax" spellcheck="false">quote =&nbsp;fmt.Sprintln("Look ma,", "no spaces!")
fmt.Print(quote) // Prints Look ma, no spaces!

</pre><p><br></p><p>Even though we didn’t add a trailing space in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Look ma,"</code>&nbsp;or a leading space in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"no spaces!"</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">quote</code>&nbsp;is concatenated with a space in between:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Look ma, no spaces!"</code>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('72007055-bc8b-4a74-87aa-f27f1b2491cf'::uuid, 5, '8fb0a7d4-3350-44b2-ae31-6cfe38dbf63a'::uuid, 'LESSON'::public.resource_type, 'The Sprintf Method', NULL, '<h3>The Sprintf Method</h3><p><br></p><p>If we need to interpolate a string, without printing it, then we can use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Sprintf()</code>.</p><p>Just like&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Printf()</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Sprintf()</code>&nbsp;can also use verbs:</p><pre class="ql-syntax" spellcheck="false">correctAns := "A"
answer := fmt.Sprintf("And the correct answer is… %v!", correctAns)

fmt.Print(answer) // Prints: And the correct answer is… A!

</pre><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Sprintf()</code>&nbsp;works very similarly to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Printf()</code>, the major difference is that&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Sprintf()</code>&nbsp;returns its value instead of printing it out!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7dc4f479-a287-4ebd-8e91-b90627d43942'::uuid, 6, '8fb0a7d4-3350-44b2-ae31-6cfe38dbf63a'::uuid, 'LESSON'::public.resource_type, 'Getting User Input', NULL, '<h3>Getting User Input</h3><p><br></p><p>Another helpful method from the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt</code>&nbsp;package is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.Scan()</code>&nbsp;which allows us to get user input! Let’s see an example of this in action:</p><pre class="ql-syntax" spellcheck="false">fmt.Println("How are you doing?")

var response string
fmt.Scan(&amp;response)

fmt.Printf("I''m %v.", response)

</pre><p>We’ll go through this line by line: First, we print&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">How are you doing?</code>&nbsp;to the terminal. Then we declare a variable,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">response</code>&nbsp;with the type&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">string</code>.&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Scan(&amp;response)</code>&nbsp;takes the first value before a space and stores it in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">response</code>. In the terminal, we would see:</p><pre class="ql-syntax" spellcheck="false">How are you doing?

</pre><p>If we type in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">good</code>&nbsp;and press enter, we would see:</p><pre class="ql-syntax" spellcheck="false">How are you doing?
good
I''m good.

</pre><p>However, if we tried to type in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">not bad</code>:</p><pre class="ql-syntax" spellcheck="false">How are you doing?
not bad
I''m not.

</pre><p>Only the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">not</code>&nbsp;part is saved, since it was separated from&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">bad</code>&nbsp;by a space. If we were expecting two values, we’d need to declare two&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;ahead of time:</p><pre class="ql-syntax" spellcheck="false">fmt.Println("How are you doing?")

var response1 string
var response2 string
fmt.Scan(&amp;response1)
fmt.Scan(&amp;response2)

fmt.Printf("I''m %v %v", response1, response2)

</pre><p><br></p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fmt.Scan()</code>&nbsp;expects&nbsp;<em>addresses</em>&nbsp;for arguments, hence the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&amp;</code>&nbsp;before&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">response1</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">response2</code>. We’ll cover more about addresses in a later lesson. For now, let’s get comfortable with the syntax.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6e38302f-36fd-4737-8d7f-e9bb4514736b'::uuid, 0, 'e2b94a56-02f6-4b21-9d0d-578a8406c386'::uuid, 'LESSON'::public.resource_type, 'What are Conditionals?', NULL, '<h3>What are Conditionals?</h3><p><br></p><p>We make decisions every day based on certain conditions.</p><p>Is the alarm ringing? If so, turn it off. Is it raining? If so, bring an umbrella. Is the ice cream truck parked outside? If so, it’s time for a treat.</p><p>We can also implement this decision-making ability in our programs using&nbsp;<a href="https://www.codecademy.com/resources/docs/go/conditionals" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);"><em>conditionals</em></a>. Conditionals check on values and, depending on their status (if the values turn out to be&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>), executes an appropriate block of code in response.</p><p>In this lesson we’ll cover:</p><ul><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>, and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;statements.</li><li>comparison&nbsp;<a href="https://www.codecademy.com/resources/docs/go/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>.</li><li>logical operators.</li><li>the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><a href="https://www.codecademy.com/resources/docs/go/switch" rel="noopener noreferrer" target="_blank">switch</a></code>&nbsp;statement.</li><li>short declarations in conditionals.</li><li>how to use conditionals in randomized conditions.</li></ul><p>If you’re ready, Go on to the next exercise. Else, come back when you’re ready!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('412194e7-4838-49a6-ab40-8701e594686e'::uuid, 1, 'e2b94a56-02f6-4b21-9d0d-578a8406c386'::uuid, 'LESSON'::public.resource_type, 'The if Statement', NULL, '<h3>The if Statement</h3><p><br></p><p>What if…? What if we’re hungry? If it’s raining? If the alarm’s ringing?</p><p>We would do something in response to these conditions.</p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statements work very similarly to our own decision-making process. Let’s look at Go’s&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statement:</p><pre class="ql-syntax" spellcheck="false">alarmRinging := true
if alarmRinging {
&nbsp;&nbsp;fmt.Println("Turn off the alarm!!")
}

</pre><p><br></p><p>In our example, we have a variable&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">alarmRinging</code>&nbsp;that has a value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>. Then we have an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statement that checks if the condition next to the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;keyword is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>. Then we have an opening curly brace&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">{</code>&nbsp;with code inside followed by a closing curly brace&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">}</code>. If the condition is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>, then the code in between the curly braces&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">{ }</code>&nbsp;is executed. In this case,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Turn off the alarm!!"</code>&nbsp;is printed to the console.</p><p>In our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statement we could have provided parentheses, like so:</p><pre class="ql-syntax" spellcheck="false">if (alarmRinging) {
&nbsp;&nbsp;fmt.Println("Turn off the alarm!!")
}

</pre><p><br></p><p>The parentheses are optional and can make it easier to read, but typically, we’ll see the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statement written without parentheses.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('553592c1-40e9-46c5-a7dc-c8c2a7353ba6'::uuid, 2, 'e2b94a56-02f6-4b21-9d0d-578a8406c386'::uuid, 'LESSON'::public.resource_type, 'The else Statement', NULL, '<h3>The else Statement</h3><p><br></p><p>If we’re hungry we would go to eat something. But if we’re not hungry then we don’t. The idea is that we have a backup plan or something we can default to in case our condition isn’t met.</p><p>We can provide a default option to our conditional (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statement) by adding an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;statement:</p><pre class="ql-syntax" spellcheck="false">isHungry := false
if isHungry {
&nbsp;&nbsp;fmt.Println("Eat the cookie")
} else {
&nbsp;&nbsp;fmt.Println("Step away from the cookie...")
}

</pre><p><br></p><p>In the example above,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">isHungry</code>&nbsp;is a variable with a value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>. We’ve set up an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statement like we saw in the previous exercise. Immediately after the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statement’s closing brace is the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;keyword and its opening brace, all on the same line. The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;statement also contains a block of code wrapped by a set of curly braces. The code inside the block will execute by default if the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;condition is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>. Notice, the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;statement does&nbsp;<em>not</em>&nbsp;accept a condition.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('63b7601f-0b0e-46ae-8083-d0e6879a99e3'::uuid, 3, 'e2b94a56-02f6-4b21-9d0d-578a8406c386'::uuid, 'LESSON'::public.resource_type, 'Comparison Operators', NULL, '<h3>Comparison Operators</h3><p><br></p><p>So far we’ve been checking on boolean values (variable assigned a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;value). But, we can check more than a single value using&nbsp;<em>comparison operators</em>. Here are two commonly used comparison operators:</p><p>OperatorMeaning:<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">==</code>Is equal to<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!=</code>Is NOT equal to</p><p>To use a comparison operator, we have two values (or&nbsp;<em>operands</em>) with a comparison operator in between the two values. The combination of values and the operator is&nbsp;<em>evaluated</em>&nbsp;by Go’s compiler which looks at the left value, compares it to the right value, and decides on a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;value. Let’s take a look at&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">==</code>&nbsp;first:</p><pre class="ql-syntax" spellcheck="false">"password1" == "password1" // Evaluates to true
"password1" == "badpass"&nbsp;&nbsp;&nbsp;// Evaluates to false

</pre><p><br></p><p>When we use comparison&nbsp;<a href="https://www.codecademy.com/resources/docs/go/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>, we check the left value against the right value. It can be helpful to think of comparison statements as questions. When the answer is “yes”, the statement evaluates to true, and when the answer is “no”, the statement evaluates to false. The above code’s first example would be asking: is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"password1"</code>&nbsp;the same as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"password1"</code>? Yes it is, so&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"password1" == "password1"</code>&nbsp;evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>. We can read the second example as, is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"badpass"</code>&nbsp;the same as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"password1"</code>? No,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"badpass"</code>&nbsp;is not the same as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"password1"</code>&nbsp;so it evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>.</p><p>Let’s take a look at the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!=</code>&nbsp;operator in action:</p><pre class="ql-syntax" spellcheck="false">123 != 12 // Evaluates to true
123 != 123 // Evaluates to false

</pre><p><br></p><p>Above, the first line checks if&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">123</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">12</code>&nbsp;are&nbsp;<strong>not</strong>&nbsp;equivalent and since the integers are different values, it evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>. This time we can think of the question as: is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">123</code>&nbsp;NOT the same as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">12</code>? Yes, they’re not the same, so it evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>. The same idea persists for the second example: is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">123</code>&nbsp;<strong>not</strong>&nbsp;the same as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">123</code>? No, they are the same, so it evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>.</p><p>It can be very helpful to take a second to think through how the operands are being compared before committing it to code. Let’s practice that now!</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('40ccf9b9-1128-4ff1-8237-a591264f46a8'::uuid, 4, 'e2b94a56-02f6-4b21-9d0d-578a8406c386'::uuid, 'LESSON'::public.resource_type, 'Comparison Operators Continued', NULL, '<h3>Comparison Operators Continued</h3><p><br></p><p>There are more comparison operators that we haven’t covered and they may seem familiar from math class:</p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&lt;</code> Less than</p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&gt;</code> Greater than</p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&lt;=</code> Less than or equal to</p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&gt;=</code> Greater than or equal to</p><p>Like the previous exercise, we’re still using the comparison operators to compare the left hand value against the right hand value. For instance:</p><pre class="ql-syntax" spellcheck="false">100 &lt; 200 // Evaluates to true

</pre><p>We can read this example as, “Is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">100</code>&nbsp;less than&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">200</code>? Yes, that is true.</p><p>Let’s look at one more example with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&lt;=</code>:</p><pre class="ql-syntax" spellcheck="false">100.5 &lt;= 100.5 // Evaluates to true

</pre><p>Just like the less than operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&lt;</code>), we want to check if the left hand value is less than OR equal to the right hand value. Since&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">100.5</code>&nbsp;is less than or equal to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">100.5</code>, it evaluates as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d40efc1b-4b5a-408d-a00c-d7651a58fd77'::uuid, 5, 'e2b94a56-02f6-4b21-9d0d-578a8406c386'::uuid, 'LESSON'::public.resource_type, 'Logical Operators (And, Or)', NULL, '<h3>Logical Operators (And, Or)</h3><p><br></p><p>In the previous exercises we checked one condition at a time. But what if we wanted to check multiple conditions at a time? To do so, we can use&nbsp;<em>logical operators</em>. There are three logical operators:</p><p>OperatorMeaning:<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&amp;&amp;</code>And<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">||</code>Or<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!</code>Not</p><p>In this exercise, we’ll focus on the first two,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&amp;&amp;</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">||</code>. When we use the And (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&amp;&amp;</code>) operator, we are checking that both expressions are true:</p><pre class="ql-syntax" spellcheck="false">if storeLights == "on" &amp;&amp; doorsOpen {
&nbsp;&nbsp;fmt.Println("You can enter the store!")
}

</pre><p><br></p><p>When using the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&amp;&amp;</code>&nbsp;operator, both conditions must evaluate to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;for the entire condition to evaluate to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;and execute. Otherwise, if either condition evaluate as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>, the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&amp;&amp;</code>&nbsp;condition will evaluate to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;and the code inside the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;block will not execute.</p><p>If we only care about either condition being true, we can use the Or (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">||</code>) operator:</p><pre class="ql-syntax" spellcheck="false">if day == "Saturday" || day == "Sunday" {
&nbsp;&nbsp;fmt.Println("Enjoy the weekend!")
} else {
&nbsp;&nbsp;fmt.Println("Do some work.")
}

</pre><p><br></p><p>When using the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">||</code>&nbsp;operator, only one of the conditions must evaluate to true for the overall statement to evaluate to true. In the code example above, if either&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">day == "Saturday"</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">day == "Sunday"</code>&nbsp;is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;the statement’s code block will execute. If the first operand in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">||</code>&nbsp;expression evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>, the second operand won’t even be checked. Only if&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">day == "Saturday"</code>&nbsp;evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;will&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">day == "Sunday"</code>&nbsp;be evaluated. The code in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;statement above will execute only if both comparisons evaluate to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>.</p><p>Let’s implement these&nbsp;<a href="https://www.codecademy.com/resources/docs/go/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>&nbsp;to add an additional layer of logic!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d80ba8bc-f91b-4be1-a56d-435f1e5fa4b1'::uuid, 6, 'e2b94a56-02f6-4b21-9d0d-578a8406c386'::uuid, 'LESSON'::public.resource_type, 'Logical Operators (Not)', NULL, '<h3>Logical Operators (Not)</h3><p><br></p><p>Our last logical operator is the not (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!</code>) operator. It&nbsp;<em>negates</em>&nbsp;(reverses) the value of a boolean. For example:</p><pre class="ql-syntax" spellcheck="false">bored := true
fmt.Println(!bored) // Prints false

tired := false;
fmt.Println(!tired) // Prints true

</pre><p>Notice that the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!</code>&nbsp;operator will either take a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;value and pass back&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>, or it will take a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;value and pass back&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>.</p><p>Let’s see how to incorporate the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!</code>&nbsp;operator.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0d31b26f-596a-4157-acd8-3f8550b01af8'::uuid, 7, 'e2b94a56-02f6-4b21-9d0d-578a8406c386'::uuid, 'LESSON'::public.resource_type, 'The else if Statement', NULL, '<h3>The else if Statement</h3><p><br></p><p>We can add different conditions to our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if...else</code>&nbsp;statements using an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statement. Adding an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statement allows us to check another condition after our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statement checks its condition. In fact, we can add as many&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statements as we’d like to make more complex conditionals!</p><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statement always comes after an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statement. If we have an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;statement, then the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;comes before it. The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statement also takes a condition. Let’s take a look at the syntax:</p><pre class="ql-syntax" spellcheck="false">position := 2

if position == 1 {
&nbsp;&nbsp;fmt.Println("You won the gold!")
} else if position == 2 {
&nbsp;&nbsp;fmt.Println("You got the silver medal.")
} else if position == 3 {
&nbsp;&nbsp;fmt.Println("Great job on bronze.")
} else {
&nbsp;&nbsp;fmt.Println("Sorry, better luck next time?")
}

</pre><p>Notice that we’re able to use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statements to evaluate separate conditions and allow for different possible outcomes.&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>/<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>/<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;statements are read from top to bottom, so the first condition that evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;is the only block of code that gets executed.</p><p>In the example above, since&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">position == 1</code>&nbsp;evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>, the first block of code isn’t executed. Then, we get to our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statement and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">position == 2</code>&nbsp;evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>, the code inside the first&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else if</code>&nbsp;statement is executed. The rest of the conditions are not evaluated. If none of the conditions evaluated to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>, then the code in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;statement would have executed.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('addc45fa-7ce8-47bb-acff-0e8f262cbc2f'::uuid, 3, 'e2a436a9-f706-4785-927b-e1fb7dab0e2d'::uuid, 'LESSON'::public.resource_type, 'Returning Values from Functions', NULL, '<h3>Returning Values from Functions</h3><p><br></p><p>While&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;and their values are scoped to their&nbsp;<a href="https://www.codecademy.com/resources/docs/go/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>, we do have built-in ways of passing information out of their native functions and into another namespace. Let’s describe the way that information can be sent from within a function to the&nbsp;<em>call site</em>, the place where the function is called. This is done by&nbsp;<em>returning</em>&nbsp;a value — when we return a value, we pass the value to another place in our code. A function can be given a return&nbsp;<em>type</em>, the type of a value that will be returned by the function. At the call site, the return value can be stored within a variable of the same type as the function’s return.</p><pre class="ql-syntax" spellcheck="false">func getLengthOfCentralPark() int32 {
&nbsp;&nbsp;var lengthInBlocks int32
&nbsp;&nbsp;lengthInBlocks =&nbsp;51
&nbsp;&nbsp;return lengthInBlocks
}

</pre><p>Above, we wrote the function&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">getLengthOfCentralPark()</code>, we can also decide the return type by adding a type after the set of parentheses. In this case, our function has a return type of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int32</code>. Then, inside the function, we declare a variable&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">lengthInBlocks</code>&nbsp;with a value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">51</code>. In our last line, we have our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">return</code>&nbsp;statement. A return statement tells the function to pass back a value (or multiple values) and stops the function from executing any more code, i.e. if we put more code after our return statement, it would not run! Our function is all set up, we need to now call it in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>:</p><pre class="ql-syntax" spellcheck="false">func main() {
&nbsp;&nbsp;var centralParkLength int32
&nbsp;&nbsp;centralParkLength =&nbsp;getLengthOfCentralPark()
&nbsp;&nbsp;fmt.Println(centralParkLength) // Prints: 51
}

</pre><p>Inside&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;we were able to create a variable&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">centralParkLength</code>&nbsp;with type&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int32</code>&nbsp;and store the&nbsp;<em>result</em>&nbsp;(the returned value) from&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">getLengthOfCentralPark()</code>&nbsp;into&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">centralParkLength</code>. Then we can check the value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">centralParkLength</code>&nbsp;by printing it, which confirms what we said about&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">return</code>&nbsp;by printing the number 51. Even though we can’t access&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">lengthInBlocks</code>&nbsp;from&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">getLengthOfCentralPark()</code>&nbsp;directly, we can access the information we need through the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">return</code>&nbsp;keyword!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('988ddb99-0680-496b-93da-8ea34051fdd8'::uuid, 4, 'e2a436a9-f706-4785-927b-e1fb7dab0e2d'::uuid, 'LESSON'::public.resource_type, 'Using Function Parameters', NULL, '<h3>Using Function Parameters</h3><p><br></p><p>We know that&nbsp;<a href="https://www.codecademy.com/resources/docs/go/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>&nbsp;can return information, but we can also provide functions with information using&nbsp;<em>parameters</em>. Function parameters are&nbsp;<a href="https://www.codecademy.com/resources/docs/go/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;that are used within the function to use in some sort of computation or calculation. When calling a function, we give&nbsp;<em>arguments</em>, which are the values that we want those parameter variables to take. We give our function parameters types when defining the function:</p><pre class="ql-syntax" spellcheck="false">func multiplier(x int32, y int32) int32 {
&nbsp;&nbsp;return x *&nbsp;y
}

</pre><p>In the function above, we added information inside our parentheses, that is where parameters belong. Our first parameter is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">x</code>&nbsp;and it has a type of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int32</code>. Our second parameter,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">y</code>&nbsp;also has a type of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int32</code>. After the parentheses is something we’ve seen before: the type of our return value. Since both parameters have the same type, we could write it as:</p><pre class="ql-syntax" spellcheck="false">func multiplier(x, y int32) int32 {
&nbsp;&nbsp;return x *&nbsp;y
}

</pre><p>See how we wrote&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int32</code>&nbsp;once at the end of our list of parameters instead of writing&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">int32</code>&nbsp;after each parameter?</p><p>Let’s now call our function with literal values as arguments:</p><pre class="ql-syntax" spellcheck="false">func main() {
&nbsp;&nbsp;var product int32
&nbsp;&nbsp;product =&nbsp;multiplier(25, 4)
&nbsp;&nbsp;fmt.Println(product) // Prints: 100
}

</pre><p>We can also call our function with variables as arguments:</p><pre class="ql-syntax" spellcheck="false">func main() {
&nbsp;&nbsp;var mainX, mainY, newProduct int32
&nbsp;&nbsp;mainX =&nbsp;6
&nbsp;&nbsp;mainY =&nbsp;7
&nbsp;&nbsp;newProduct =&nbsp;multiplier(mainX, mainY)
&nbsp;&nbsp;fmt.Println(newProduct) // Prints: 42
}

</pre><p>Notice in both cases, our functions worked as expected with the provided arguments! But, it’s important that we provide enough arguments. Our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">multiplier()</code>&nbsp;function has two parameters, so it expects two arguments. If we don’t, the Go compiler throws an error that reads&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">not enough arguments in call to (functionName)</code>&nbsp;or in our case:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">not enough arguments in call to multiplier</code>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('30ac8e32-dee4-43c7-9842-9cf35bab7159'::uuid, 5, 'e2a436a9-f706-4785-927b-e1fb7dab0e2d'::uuid, 'LESSON'::public.resource_type, 'Reusing Code with Functions', NULL, '<h3>Reusing Code with Functions</h3><p><br></p><p><a href="https://www.codecademy.com/resources/docs/go/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Functions</a>&nbsp;are great for code reuse, this means that when you find yourself repeating the same pattern over and over, it might be a good idea to try and&nbsp;<em>abstract</em>&nbsp;it into a function. When you abstract your pattern into a function, this means we take the logic it takes to solve our problem and generalize it into a function to solve multiple problems. Let’s say you need to square numbers:</p><pre class="ql-syntax" spellcheck="false">fmt.Println(5 *&nbsp;5)
fmt.Println(6 *&nbsp;6)
// ...
fmt.Println(100 *&nbsp;100)

</pre><p>This can quickly get out of hand! Writing all of this down does not align with your programming chops since you can write a function to handle this problem!</p><pre class="ql-syntax" spellcheck="false">func squareNum(num int) {
&nbsp;&nbsp;fmt.Println(num *&nbsp;num)
}

</pre><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">squareNum()</code>&nbsp;abstracts the logic for squaring a number into one single place! If you decide something about your formula is wrong, then you only have to change that code in a single place!</p>', '');
-- End of chapter resource Go 1

-- Chapter resource PHP 1
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c15c8aea-d8e1-400a-a7e2-0097c70d579e'::uuid, 4, 'a5e61ef9-11cd-4295-aec7-c6e3695dd072'::uuid, 'LESSON'::public.resource_type, 'Todo: Learn PHP', NULL, '<h3>Todo: Learn PHP</h3><p><br></p><p>Before moving on, let’s take a quick look at a working PHP application.</p><p>We’re going to show you an example of PHP being used on the back-end to create a dynamic website sent to the browser. When a visitor to the website, in this case you, modifies the task list, a request is made for a new web page. The PHP code runs again in the back-end and delivers a new version of the site with updated HTML.</p><p>The todo list example is frequently used when demonstrating a web framework or technology. It provides a way to exhibit how the CRUD (Create, Read, Update, Delete) behaviors are implemented using a specific technology.</p><p><br></p><p>Within a todo app, the functionality is typically:</p><ul><li>Add new items to the list (Create)</li><li>View the existing list (Read)</li><li>Change the completion status of each item (Update)</li><li>Remove items from the list (Delete)</li></ul>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0ce6c723-b2ac-41df-a1b2-f7c7e1e9f4dc'::uuid, 5, 'a5e61ef9-11cd-4295-aec7-c6e3695dd072'::uuid, 'CODE'::public.resource_type, 'Final chapter code question', 'b6484e21-6937-489c-b031-b71767994748'::uuid, 'Check square number', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('54dfaa64-300d-4e40-9812-f15495675121'::uuid, 3, 'a5e61ef9-11cd-4295-aec7-c6e3695dd072'::uuid, 'LESSON'::public.resource_type, 'PHP Comments', NULL, '<p>Sometimes, we want to include text in our files that we don’t want the computer to execute or display to the end user. We can do this with&nbsp;<a href="https://www.codecademy.com/resources/docs/php/comments" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;"><em>comments</em></a>. Comments can be used to annotate our code to make it clearer to ourselves or others. They are also useful to prevent lines of code from being executed without deleting them.</p><p>In PHP, there are two main ways to add comments to our code. The first is single line comments. These are typically used for short explanations or points of clarification. Either&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">#</code>&nbsp;or&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">//</code>&nbsp;can be used to create a single line comment. Anything on the same line after these symbols is not executed by PHP.</p><p><br></p><p>For example:</p><pre class="ql-syntax" spellcheck="false">// I&nbsp;will always remember this
echo "Hello world"; // My first PHP statement

</pre><p>or</p><pre class="ql-syntax" spellcheck="false"># I&nbsp;will always remember this
echo "Hello, World!"; # My first PHP statement

</pre><p>The second type of comment is a multi-line comment. This is used for longer descriptions, a more detailed guide on how to properly use the section of code, or to prevent several lines of code from being executed. These comments are started with&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">/*</code>&nbsp;and ended with&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">*/</code>.</p><p><br></p><p>For example:</p><pre class="ql-syntax" spellcheck="false">/* "I''ve never thought of PHP as more
than a&nbsp;simple tool to solve problems."
- Rasmus Lerdorf */
echo "Hello, World!";
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('89507b90-79be-459a-a16c-cf6e3b844a22'::uuid, 0, 'a5e61ef9-11cd-4295-aec7-c6e3695dd072'::uuid, 'LESSON'::public.resource_type, 'History of PHP', NULL, '<h3>History of PHP</h3><p><br></p><p>PHP was created in 1994 and is one of the foundational technologies of modern web development. Given all the new technologies used today, is there still a place for PHP?</p><p>PHP remains one of the widest used server-side technologies on the internet. It provides the underlying code for many popular content management systems (CMS) including&nbsp;<a href="https://wordpress.com/" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">WordPress</a>,&nbsp;<a href="https://www.drupal.org/" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">Drupal</a>, and&nbsp;<a href="https://www.joomla.org/" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">Joomla</a>. A&nbsp;<em>CMS</em>&nbsp;allows users to create and update their own websites without having to write a lot of complex code themselves.</p><p>PHP also provides the underlying code for many e-commerce sites including&nbsp;<a href="https://woocommerce.com/" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">WooCommerce</a>&nbsp;and&nbsp;<a href="https://magento.com/" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">Magento</a>. These e-commerce platforms offer a number of tools for selling products online. This way companies can focus on other aspects of their business without having to implement complex programming logic from scratch.</p><p><br></p><p>PHP contains built-in functionality for interacting with web data,&nbsp;<em>Vanilla PHP</em>, or PHP without any other tools, can be used on its own to create web application back-ends. But we don’t have to reinvent the wheel every time! Once we’re comfortable with the basics of the PHP language, we have our pick of powerful PHP frameworks to choose from! These frameworks provide scaffolding and solutions to common problems in back-end web development. Some popular PHP frameworks are&nbsp;<a href="https://laravel.com/" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">Laravel</a>,&nbsp;<a href="https://cakephp.org/" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">CakePHP</a>, and&nbsp;<a href="https://symfony.com/" rel="noopener noreferrer" target="_blank" style="color: var(--color-primary); background-color: transparent;">Symfony</a>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e1bf4684-7544-4b47-82e3-bc6341c6dac1'::uuid, 1, 'a5e61ef9-11cd-4295-aec7-c6e3695dd072'::uuid, 'LESSON'::public.resource_type, 'How is PHP used in HTML?', NULL, '<h3>How is PHP used in HTML?</h3><p><br></p><p>PHP is often used to build&nbsp;<em>dynamic web pages</em>. A&nbsp;<em>dynamic web page</em>&nbsp;is one where each visitor to the website gets a customized page that can look different than how the site looks to another visitor. This is in contrast to&nbsp;<em>static web pages</em>&nbsp;which provide the same content to each visitor.</p><p><img src="https://content.codecademy.com/courses/introduction-to-php/php_static_dynamic.svg"></p><p>In order to create this dynamic behavior, PHP was designed to work closely with HTML. PHP can be used directly in-line with an HTML document. When the web site is delivered from the back-end to the front-end, the PHP content is executed and added to the HTML to form one HTML document. The start of in-line PHP is denoted with&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">&lt;?php</code>&nbsp;and the end is denoted with&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">?&gt;</code>.</p><p><br></p><p>As an example, consider the following code:</p><pre class="ql-syntax" spellcheck="false">&lt;p&gt;This HTML will get delivered as is&lt;/p&gt;
&lt;?php echo "&lt;p&gt;But this code is interpreted by PHP and turned into HTML&lt;/p&gt;";?&gt;

</pre><p><br></p><p>In PHP, the&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">echo</code>&nbsp;keyword is used to output text. The text in this case is everything between the double quotes (<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">"</code>). An instruction written in PHP is called a&nbsp;<em>statement</em>. A semicolon (<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">;</code>) is required at the end of each statement in PHP.</p><p><br></p><p>So when the code above is executed, it outputs the text into the HTML file and the front-end will receive the following HTML document:</p><pre class="ql-syntax" spellcheck="false">&lt;p&gt;This HTML will get delivered as is&lt;/p&gt;
&lt;p&gt;But this code is interpreted by PHP and turned into HTML&lt;/p&gt;
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('be8d738a-886a-4356-bcc3-bb7015e5edb6'::uuid, 2, 'a5e61ef9-11cd-4295-aec7-c6e3695dd072'::uuid, 'LESSON'::public.resource_type, 'How is PHP Executed?', NULL, '<h3>How is PHP Executed?</h3><p><br></p><p>In the previous exercise, we explored how PHP can be sent from the back-end to the front-end where it is received as HTML to be displayed by a browser.</p><p>PHP is flexible and can also be executed from the terminal. We can use PHP as a general purpose programming language to write programs that give simple instructions to the computer without involving HTML or the web. When this is done, the output of the program is logged to the terminal. This is useful when testing functionality or for writing simple local programs.</p><p><br></p><p>When writing a PHP script file, we still need to denote that we are beginning our PHP code using&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">&lt;?php</code>, but the closing tag is no longer required. It is typically left out by convention.</p><p>For example, if the following code were placed in&nbsp;<strong>index.php</strong>:</p><pre class="ql-syntax" spellcheck="false">&lt;?php
echo "Hello, World!";

</pre><p><br></p><p>When the code above is run,&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">"Hello, World!"</code>&nbsp;will be output to the terminal.</p><p>Generally, PHP ignores whitespace (tabs, spaces, new lines), so this code yields the same result as the previous example:</p><pre class="ql-syntax" spellcheck="false">&lt;?php
echo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Hello, World!";

</pre><p><br></p><p>You may be surprised that this code also works:</p><pre class="ql-syntax" spellcheck="false">&lt;?php
Echo "Hello, World!";

</pre><p><br></p><p>Unlike many other languages, PHP is not always case-sensitive, so&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">Echo</code>&nbsp;is a valid statement in PHP. However, it’s best practice to use standard casing – in this case,&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">echo</code>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('66c39096-6eb7-4b2b-856c-2c2a9a99bea9'::uuid, 0, '9de0422e-9805-4e86-bee8-01e09df4bd7d'::uuid, 'LESSON'::public.resource_type, 'Strings', NULL, '<h3>Strings</h3><p><br></p><p><br></p><p><img src="https://content.codecademy.com/courses/php-strings-variables/PHP_m2l1e1.svg"></p><p><br></p><p>In everyday conversation, we use the word data to refer to any sort of information. This information is often a list of numbers, like a company’s monthly expenses or statistics about an athlete’s performance. However, in programming, data means something very specific. It’s still information, but that information takes the form of a few specific types.</p><p><br></p><p>The PHP language has different ways of handling different types of data. Which actions the computer can perform and how the computer stores the data in memory will vary based on the type. In this lesson, we’ll be learning about the&nbsp;<em>string</em>&nbsp;data type.</p><p><br></p><p>Strings are words or pieces of text that the computer treats as a single item. A string is a sequence of characters. It can be any length and contain any letters, numbers, symbols, or spaces surrounded by quotation marks.</p><pre class="ql-syntax" spellcheck="false">echo "My first string"; // Prints: My first string

</pre><p><br></p><p>It’s important to distinguish between strings and the rest of the code in a PHP program. Every part of a program is text, but strings are the parts we intend to keep as data—not as instructions to be executed by computer. In this lesson we’re going to focus on strings wrapped in double quotation marks (if you’re curious, you can check out&nbsp;<a href="http://php.net/manual/en/language.types.string.php" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">the official PHP documentation</a>&nbsp;to see other types of PHP strings).</p><p><br></p><p>In later lessons, we’ll be using PHP to create custom HTML documents enabling dynamic web pages. As we learn the basics, however, we’ll be writing simple PHP only programs that run in the terminal.</p><p><br></p><p>Let’s make some strings!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d12f5289-0554-4cc7-a4ce-884819a30939'::uuid, 1, '9de0422e-9805-4e86-bee8-01e09df4bd7d'::uuid, 'LESSON'::public.resource_type, 'Escape Sequences', NULL, '<h3>Escape Sequences</h3><p><br></p><p>We use quotation marks to indicate the start and end of a string. The quotation marks tell the computer that we want everything inside them to be treated as a single piece of data. </p><p>But how do we include quotation marks inside a string?</p><p><br></p><p>Consider the following string:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"She said "hi" to the dog."</code></p><p><br></p><p>In the code above, the quotes around “hi” are intended to be part of the string, but the computer will actually see two strings&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"She said "</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">" to the dog."</code>&nbsp;with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hi</code>&nbsp;in between. Since&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hi</code>&nbsp;won’t be recognized as valid PHP it will result in an error:</p><pre class="ql-syntax" spellcheck="false">echo "She said "hi" to the dog."; //syntax error, unexpected ''hi'' (T_STRING)

</pre><p><br></p><p>In order to indicate which quotation marks the computer should view as instructions vs which it should view as simply characters, PHP allows for&nbsp;<em>escape sequences</em>. An escape sequence usually consists of a backslash (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">\</code>) immediately followed by another character.</p><pre class="ql-syntax" spellcheck="false">echo "She said \"hi\" to the dog."; // Prints: She said "hi" to the dog.

</pre><p><br></p><p>Quotation marks aren’t the only symbol requiring an escape sequence. When we print multiple strings, PHP will print them to the same line by default:</p><pre class="ql-syntax" spellcheck="false">echo "1. Go to gym";
echo "2. Cook dinner";

</pre><p><br></p><p>The code above will output&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1. Go to gym2. Cook dinner</code>. To print the second string on a new line, we can use the newline escape sequence (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">\n</code>):</p><pre class="ql-syntax" spellcheck="false">echo "1. Go to gym";
echo "\n2. Cook dinner";
/* Prints
1. Go to gym
2. Cook dinner
*/

</pre><p>You don’t need to worry about other escape sequences yet, but if you’d like to see the full list you can find one in&nbsp;<a href="http://php.net/manual/en/language.types.string.php#language.types.string.syntax.double" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">the PHP documentation</a>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('806ff49f-b84b-4650-92b4-a4cda0073db1'::uuid, 2, '9de0422e-9805-4e86-bee8-01e09df4bd7d'::uuid, 'LESSON'::public.resource_type, 'String Concatenation', NULL, '<h3>String Concatenation</h3><p><br></p><p>It can be useful to combine two strings together. This process is called&nbsp;<em>string concatenation</em>, and we can use the concatenation operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.</code>) to do this.</p><p><br></p><p>An&nbsp;<em>operator</em>&nbsp;is a character that performs a task in our code. The computer will take the string to the left of the concatenation operator, combine it with the string to the right, and return the resulting single string. Let’s see an example of string concatenation:</p><pre class="ql-syntax" spellcheck="false">echo "one" .&nbsp;"two"; // Prints: onetwo

</pre><p><br></p><p>Notice how the string “onetwo” was printed. The computer won’t make any assumptions for us—it will combine the strings exactly as they are without adding any spaces or line-breaks. If we want spaces, we’ll have to add any spaces we want ourselves. Here we added a space to the string&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"one "</code>:</p><pre class="ql-syntax" spellcheck="false">echo "one " .&nbsp;"two"; // Prints: one two

</pre><p><br></p><p>We can also combine, or chain, our operations to get a final result:</p><pre class="ql-syntax" spellcheck="false">echo "one" .&nbsp;" " .&nbsp;"two" .&nbsp;" " .&nbsp;"three"; // Prints: one two three

</pre><p><br></p><p>The concatenation operator takes two strings (the&nbsp;<em>operands</em>) and produces a string as a result (the return value). As we delve deeper into PHP, we’ll learn about other kinds of&nbsp;<a href="https://www.codecademy.com/resources/docs/php/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>. Most will take one or two operands, but there’s even one that takes three.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d2ab330e-d139-44c6-ac3e-ac9b0f587048'::uuid, 3, '9de0422e-9805-4e86-bee8-01e09df4bd7d'::uuid, 'LESSON'::public.resource_type, 'Variables', NULL, '<h3>Variables</h3><p><br></p><p>Let’s say I have a really long string in my program, and I’m going to need to use it multiple times. Do I have to type the string out every time I need to use it? The answer is “no”.&nbsp;<a href="https://www.codecademy.com/resources/docs/php/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Variables</a>&nbsp;are a fundamental programming concept designed to address this concern. With variables, we store values so that we can easily reuse them throughout a program.</p><p>Before we can use variables in our code, we need to declare and assign them.</p><p><em>Declaring</em>&nbsp;a variable is the process of reserving a word, the&nbsp;<em>variable name</em>, which we’ll be able to refer to in our code. It’s good practice to name the variable in a way that describes the data it holds.</p><p><em>Assignment</em>&nbsp;is the process of associating that variable name with a specific value so that everytime we use the variable’s name the computer will grab that value.</p><p><img src="https://content.codecademy.com/courses/php-strings-variables/PHP_m2l1e4n.gif"></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('799fbfce-692a-4849-8f82-ef03ee753c48'::uuid, 4, '9de0422e-9805-4e86-bee8-01e09df4bd7d'::uuid, 'LESSON'::public.resource_type, 'Creating Variables', NULL, '<h3>Creating Variables</h3><p><br></p><p>Let’s look at an example of creating a variable:</p><pre class="ql-syntax" spellcheck="false">$my_name =&nbsp;"Aisle Nevertell";

</pre><p>In the code above, we’re actually doing two things with a single statement: we’re&nbsp;<em>declaring</em>&nbsp;a new variable by giving it the name&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">my_name</code>. We’re also&nbsp;<em>assigning</em>&nbsp;it the value&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Aisle Nevertell"</code>. The variable&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$my_name</code>&nbsp;now holds the value&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Aisle Nevertell"</code>.</p><p>To declare a variable we use the dollar sign character (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$</code>) followed by our chosen variable name. The dollar sign is known as a&nbsp;<em>sigil</em>; it’s a character that allows the computer to see quickly that something is a variable.</p><p>To assign it a value we use another operator: the assignment operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">=</code>) followed by the value we’re assigning to the variable.</p><p>Though it can occasionally be useful to separate these actions, we’ll most often be declaring and assigning&nbsp;<a href="https://www.codecademy.com/resources/docs/php/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;at the same time.</p><p><img src="https://content.codecademy.com/courses/php-strings-variables/PHP_m2l1e5.svg"></p><p>In PHP, variables names can contain numbers, letters, and underscores (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">_</code>), but they have to start with either a letter or an underscore. Variable names are case sensitive, meaning that PHP will treat the variables&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$my_example</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$My_example</code>&nbsp;as two different variables.</p><p><br></p><p>One common convention when naming PHP variables is to use an underscore between words on variable names with more than one word in their name. This is known as&nbsp;<em>snake case</em>:</p><pre class="ql-syntax" spellcheck="false">$mood =&nbsp;":)";
$favorite_food =&nbsp;"Red curry with eggplant";
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('55eb3ca4-ca2a-486a-ac1e-c0a262f4f87a'::uuid, 5, '9de0422e-9805-4e86-bee8-01e09df4bd7d'::uuid, 'CODE'::public.resource_type, 'Variable test', 'b6484e21-6937-489c-b031-b71767994755'::uuid, 'Determine the Quarter of a Given Month', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b4c44e60-81ad-4ec1-817c-0274e9a6d1cc'::uuid, 6, '9de0422e-9805-4e86-bee8-01e09df4bd7d'::uuid, 'LESSON'::public.resource_type, 'Variable Parsing', NULL, '<h3>Variable Parsing</h3><p><br></p><p>In the last exercise, we saw how concatenating a number of strings and string&nbsp;<a href="https://www.codecademy.com/resources/docs/php/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;got annoying. There’s an easier way!</p><p>PHP strings allow us to place variables directly into double quoted strings. These variables will be&nbsp;<em>parsed</em>&nbsp;which means the computer will read the variables as the value they hold rather than see them as just a sequence of characters.</p><pre class="ql-syntax" spellcheck="false">$dog_name =&nbsp;"Tadpole";
$favorite_food =&nbsp;"salmon";
$color =&nbsp;"brown";

echo "I have a&nbsp;$color dog named $dog_name and her favorite food is $favorite_food.";
// Prints: I&nbsp;have a&nbsp;brown dog named Tadpole and her favorite food is salmon.

</pre><p>PHP string parsing is incredibly useful. Whenever PHP sees a dollar sign (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$</code>) inside a string it will assume all the characters next to it (until it reaches a character that couldn’t be included in a variable name) are a part of the variable name.</p><p><br></p><p>Sometimes this can get complicated. Consider the following example:</p><pre class="ql-syntax" spellcheck="false">$toy =&nbsp;"frisbee";
echo "Alex likes playing with $toys";

</pre><p>The code above will cause an error. Why? The computer was looking for a variable&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$toys</code>&nbsp;and couldn’t find one.</p><p><br></p><p>Fear not! PHP allows us to specifically indicate the variable name by wrapping it in curly braces to avoid any confusion. We’ll include the dollar sign followed by the variable name wrapped in curly braces:</p><pre class="ql-syntax" spellcheck="false">$dog_name =&nbsp;"Tadpole";
$favorite_food =&nbsp;"treat";
$color =&nbsp;"brown";

echo "I have a&nbsp;${color}ish dog named $dog_name and her favorite food is ${favorite_food}s.";
// Prints: I&nbsp;have a&nbsp;brownish dog named Tadpole and her favorite food is treats.
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b3a42b72-d91d-464b-8259-0e42aa1331b2'::uuid, 7, '9de0422e-9805-4e86-bee8-01e09df4bd7d'::uuid, 'LESSON'::public.resource_type, 'Concatenating Assignment Operator', NULL, '<h3>Concatenating Assignment Operator</h3><p><br></p><p>We can assign and reassign&nbsp;<a href="https://www.codecademy.com/resources/docs/php/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;to the values that result from operations:</p><pre class="ql-syntax" spellcheck="false">$full_name =&nbsp;"Aisle" .&nbsp;" Nevertell";
echo $full_name; // Prints: Aisle Nevertell

</pre><p>During assignment, the computer will first evaluate everything to the right of the assignment operator and return a single value.</p><p>In the code above, the computer will concatenate the strings&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Aisle"</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">" Nevertell"</code>&nbsp;into the value&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Aisle Nevertell"</code>. It will then assign this string as the value to the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$full_name</code>&nbsp;variable.</p><p>This is true even for more complex operations:</p><pre class="ql-syntax" spellcheck="false">$full_name =&nbsp;"Aisle" .&nbsp;" " .&nbsp;"Nevertell" .&nbsp;" " .&nbsp;"Nomaderwat";
echo $full_name; // Prints: Aisle Nevertell Nomaderwat

</pre><p>One theme you may notice as you learn a programming language’s syntax is that common actions that programmers need to do a lot often have a shortcut. Consider the following:</p><pre class="ql-syntax" spellcheck="false">$full_name =&nbsp;"Aisle";
$full_name =&nbsp;$full_name .&nbsp;" Nevertell";
echo $full_name; // Prints: Aisle Nevertell

</pre><p>In the code above, we have the variable&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$full_name</code>&nbsp;assigned the value&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Aisle"</code>. We want to reassign&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$full_name</code>&nbsp;to its current value appended with the string&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">" Nevertell"</code>.</p><p>Believe it or not, this is such a common task that PHP offers a shorthand notation, the concatenating assignment operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.=</code>). Let’s compare the same action but using this alternate operator:</p><pre class="ql-syntax" spellcheck="false">$full_name =&nbsp;"Aisle";
$full_name .= " Nevertell";
echo $full_name; // Prints: Aisle Nevertell

</pre><p><br></p><p>It may seem funny to provide a shortcut to save just a few characters of typing, but when operations are performed often enough, those keystrokes can really add up. This syntax is also faster and easier to read which makes code easier to maintain.</p><p>One important thing to note is that even though PHP is often flexible about whitespace, it is inflexible with the concatenating assignment operator—the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">=</code>&nbsp;characters must not have any spaces or other whitespace characters between them.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7b1c690d-4d1b-46e0-b8df-6ad6634dec81'::uuid, 8, '9de0422e-9805-4e86-bee8-01e09df4bd7d'::uuid, 'CODE'::public.resource_type, 'Concat this', 'b6484e21-6937-489c-b031-b71767994748'::uuid, 'Check square number', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('86f10f05-bea0-41dc-b667-6a0818f7b6b0'::uuid, 0, 'a2c14269-e7dd-493b-9d19-3a6fe8a28cc4'::uuid, 'LESSON'::public.resource_type, 'Numbers', NULL, '<h3>Numbers</h3><p><br></p><p>Numbers and arithmetic operations are a fundamental part of programming. In this lesson, we’ll learn how to use and manipulate numbers in PHP.</p><p>PHP has two number&nbsp;<a href="https://www.codecademy.com/resources/docs/php/data-types" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data types</a>. The&nbsp;<em>integer</em>&nbsp;data type includes positive and negative whole numbers (such as 3, 4599, -98, and 0). The&nbsp;<em>floating point</em>&nbsp;data type is used to represent decimal numbers (such as 4.98273, 2.1, -9.7, -182736.8).</p><pre class="ql-syntax" spellcheck="false">echo 5; // Prints: 5
echo -22.8; // Prints: -22.8

</pre><p>We can also declare&nbsp;<a href="https://www.codecademy.com/resources/docs/php/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;and assign numbers as their values:</p><pre class="ql-syntax" spellcheck="false">$my_int =&nbsp;78;
$my_float =&nbsp;-897.21;

echo $my_int; // Prints: 78
echo $my_float; // Prints: -897.21

</pre><p>In the code above, we created the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$my_int</code>&nbsp;variable and assigned the integer value of 78 to it. Next, we created the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$my_float</code>&nbsp;variable and assigned the floating point value of -897.21 to it.</p><p>Let’s practice making number variables!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('04680416-b2a5-42bd-8a0c-3e84afc73122'::uuid, 1, 'a2c14269-e7dd-493b-9d19-3a6fe8a28cc4'::uuid, 'CODE'::public.resource_type, 'Print number', 'b6484e21-6937-489c-b031-b71767994741'::uuid, 'List odd divisor', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0bf9452e-1169-47f9-8fa6-1f94d39bc349'::uuid, 2, 'a2c14269-e7dd-493b-9d19-3a6fe8a28cc4'::uuid, 'LESSON'::public.resource_type, 'Addition and Subtraction', NULL, '<p>PHP provides several&nbsp;<a href="https://www.codecademy.com/resources/docs/php/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>&nbsp;we can use on numbers. Let’s start with two that are likely familiar: the addition (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">+</code>) and subtraction (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">-</code>) operators:</p><pre class="ql-syntax" spellcheck="false">echo 5 +&nbsp;1; // Prints: 6
echo 6.6 +&nbsp;1.2; // Prints: 7.8
echo 198263 -&nbsp;263;&nbsp;&nbsp;// Prints: 198000
echo -22.8 -&nbsp;19.1; // Prints: -41.9

</pre><p><br></p><p>Most of the time, we don’t have to worry about which type of number we’re using. We can add a float to an integer, subtract an integer from a float, and so on.</p><p>One quirk is that operators will return integers whenever the result of the operation evaluates to a whole number. So&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">8.9 + 1.1</code>&nbsp;will return&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">10</code>, an integer, and not&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">10.0</code>&nbsp;even though both of the operands in the calculation were floating point numbers.</p><p>Let’s do some adding and subtracting!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('bbac3480-dc57-4a81-9b13-7031381bef16'::uuid, 3, 'a2c14269-e7dd-493b-9d19-3a6fe8a28cc4'::uuid, 'LESSON'::public.resource_type, 'Using Number Variables', NULL, '<h3>Using Number Variables</h3><p><br></p><p>We can use number&nbsp;<a href="https://www.codecademy.com/resources/docs/php/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>&nbsp;on&nbsp;<a href="https://www.codecademy.com/resources/docs/php/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;that hold number values:</p><pre class="ql-syntax" spellcheck="false">$tadpole_age =&nbsp;7;
$lily_age =&nbsp;6;
$age_difference =&nbsp;$tadpole_age -&nbsp;$lily_age;
echo $age_difference; // Prints 1

</pre><p><br></p><p>Let’s look at another example of performing operations with number variables:</p><pre class="ql-syntax" spellcheck="false">$favorite_num =&nbsp;22;
echo $favorite_num +&nbsp;1; // Prints 23
echo $favorite_num; //Prints 22

</pre><p><br></p><p>In the code above, we created the variable&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$favorite_num</code>&nbsp;then we used&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">echo</code>&nbsp;to print that value plus 1. Note that we didn’t reassign the value of the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$favorite_num</code>&nbsp;variable, so it still had the value 22 when we printed it on the last line.</p><p>We reassign number variables using the assignment operator:</p><pre class="ql-syntax" spellcheck="false">$age =&nbsp;82;
echo $age; // Prints: 82

$age =&nbsp;$age +&nbsp;2;
echo $age; // Prints: 84
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2c329aa7-5720-4e3d-92f9-94608e263f52'::uuid, 4, 'a2c14269-e7dd-493b-9d19-3a6fe8a28cc4'::uuid, 'LESSON'::public.resource_type, 'Multiplication and Division', NULL, '<h3>Multiplication and Division</h3><p><br></p><p>PHP also gives us&nbsp;<a href="https://www.codecademy.com/resources/docs/php/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>&nbsp;for performing multiplication (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">*</code>) and division (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">/</code>).</p><pre class="ql-syntax" spellcheck="false">echo 2 *&nbsp;3; // Prints: 6
echo -21 /&nbsp;7; // Prints: -3

</pre><p><br></p><p>Like with addition and subtraction, when we perform multiplication or division, the computer will return an integer whenever the operation evaluates to a whole number.</p><p>The reverse is also true:</p><pre class="ql-syntax" spellcheck="false">$num_cookies =&nbsp;24;
$num_friends =&nbsp;7;
$cookies_per_friend =&nbsp;$num_cookies /&nbsp;$num_friends;
echo $cookies_per_friend; // Prints: 3.4285714285714

</pre><p><br></p><p>In the code above, we performed an operation on two integers that didn’t divide into each other evenly, so the computer returned a floating point number.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('db14ca22-0500-45a1-a897-a0c1b249932b'::uuid, 5, 'a2c14269-e7dd-493b-9d19-3a6fe8a28cc4'::uuid, 'LESSON'::public.resource_type, 'Exponentiation', NULL, '<h3>Exponentiation</h3><p><br></p><p>PHP give us an operator for raising a number to the power of another number: the exponentiation operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">**</code>).</p><p>For example, we can square a number by raising it to the power of 2:</p><pre class="ql-syntax" spellcheck="false">echo 4 ** 2; // Prints: 16

</pre><p><br></p><p>We can also use this operator on floats and negative numbers:</p><pre class="ql-syntax" spellcheck="false">echo 2.89 ** 3.2;&nbsp;&nbsp;// Prints: 29.845104015297
echo 10 ** -1; // Prints: 0.1

</pre><p><br></p><p>For PHP to interpret this operator correctly it can’t have any spaces between the two&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">*</code>&nbsp;characters:</p><pre class="ql-syntax" spellcheck="false">echo 2 *&nbsp;* 3; // Will result in an error
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d67ded0c-2416-4606-9c4b-461992e1134e'::uuid, 6, 'a2c14269-e7dd-493b-9d19-3a6fe8a28cc4'::uuid, 'CODE'::public.resource_type, 'Do math', 'b6484e21-6937-489c-b031-b71767994221'::uuid, 'Sum of two integer', '');
-- End of chapter resource PHP 1

-- Chapter resource PHP 2
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c7f1f792-d18d-4b4f-af44-acf3bc53b287'::uuid, 1, '0621ff93-8959-4440-ae90-46665005f1f2'::uuid, 'LESSON'::public.resource_type, 'Database-Driven Website with PHP', NULL, '<h1>Database-Driven Website with PHP</h1><p><strong>Learn how to create a database-driven website using XAMPP.</strong></p><p><br></p><h2>Introduction</h2><p>When creating a database-driven website in PHP, you’ll often work with an existing site or template and add database functionality to parts. In this tutorial, we will start with a basic website for our dog grooming business and work to add our price list to the database for easier updating.</p><p>Please ensure you have installed and configured XAMPP from the&nbsp;<a href="https://www.codecademy.com/courses/learn-intermediate-php/articles/php-going-off-platform" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Going Off-Platform with PHP</a>&nbsp;article before you continue.</p><p>By the end of this tutorial, you’d have completed the following:</p><ul><li>Run PHP application locally using XAMPP.</li><li>Create a database using PHP.</li><li>Create and populate a table with custom data.</li><li>Connect the PHP application to the database.</li><li>Use data from the database in the PHP application.</li></ul><p><br></p><h2>Project Setup</h2><p>To get started with this tutorial, make sure you download&nbsp;<a href="https://static-assets.codecademy.com/Courses/intermediate-php/data-driven-website/data-driven-websites-with-php.zip" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">the starting and solution code</a>. When you complete the steps in this tutorial, compare your code with the code in the&nbsp;<strong>solution-code</strong>&nbsp;folder and see how you did!</p><p>The&nbsp;<strong>starting-code</strong>&nbsp;folder contains the following:</p><ul><li><strong>css</strong>&nbsp;folder containing&nbsp;<strong>bootstrap.min.css</strong>,&nbsp;<strong>index.css</strong>, and&nbsp;<strong>services.css</strong>&nbsp;files</li><li><strong>img</strong>&nbsp;folder containing&nbsp;<strong>bg.jpg</strong>&nbsp;file</li><li><strong>contact.php</strong>&nbsp;file</li><li><strong>index.php</strong>&nbsp;file</li><li><strong>services.php</strong>&nbsp;file</li></ul><p><br></p><p>Move the contents of the&nbsp;<strong>starting-code</strong>&nbsp;folder into the&nbsp;<strong>htdocs</strong>&nbsp;folder of XAMPP, then go to&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>http://localhost</strong></code>. You should see the following:</p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-php/data-driven-website/homepage.png"></span></p><p><br></p><p><strong>Note</strong>: This project uses the&nbsp;<a href="https://getbootstrap.com/2.0.4/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Twitter Bootstrap CSS framework</a>&nbsp;for styling. This is an easy-to-use starter kit that provides styled components for websites, such as menus. Don’t worry if you don’t know how to use Bootstrap, though! In this article, we won’t be modifying the look and feel of the website. We’ll only be replacing some of the static elements with PHP so that the values come from the database.</p><p><br></p><h2>Getting Started</h2><h3>Navigate to Services Page</h3><p>Our work will be on the Services page, so navigate to that page using the Services link at the top or go to&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>http://localhost/services.php</strong></code>. Take a look at the services that our salon offers!</p><p><br></p><h3>Create the User and Database</h3><p>Additionally, we’re going to need to create a database table. To do that, we’ll need a database and a user who can access it. XAMPP has PHPMyAdmin installed by default. Make sure the MySQL Database server is running on the XAMPP control panel and open a new tab to&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>http://localhost/phpmyadmin</strong></code>&nbsp;to access it. You should see this page:</p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-php/data-driven-website/phpmyadmin.png"></span></p><p><br></p><p>We’ll need to create a user account and a database for this project. Go to User Accounts in the top bar.</p><p><br></p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-php/data-driven-website/user_accounts_page.png"></span></p><p><br></p><p>Click the “Add user account” button under the list of users.</p><p><br></p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-php/data-driven-website/add_salon_user.png"></span></p><p><br></p><p>We’ll name our user&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>salon</strong></code>&nbsp;and give it the password&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>salon</strong></code>&nbsp;as well. Set the hostname as&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>localhost</strong></code>.&nbsp;<strong>Make sure you click the checkbox to ‘Create database with same name and grant all privileges.’</strong>&nbsp;and then scroll down to click the “Go” button at the bottom of the webpage. This should create a new user and database named salon.</p><h3>Create the Table</h3><p><br></p><p>Click the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>salon</strong></code>&nbsp;database in the lefthand sidebar of the page to access the database. Now we’ll create a new table.</p><p><br></p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-php/data-driven-website/add_table_page.png"></span></p><p>We’re going to create a table called&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>services</strong></code>&nbsp;with three columns:</p><ul><li>A column called&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>id</strong></code>, type&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>INT</strong></code>, which is a Primary key and is Auto Incrementing.</li><li class="ql-indent-1">Primary key means that it will be indexed by the database for easier retrieval and that it must be unique for every row.</li><li class="ql-indent-1">Auto Increment means that the database will take care of giving it that unique number (1, 2, 3, etc.).</li><li>A column called&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>name</strong></code>, type&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>VARCHAR</strong></code>, length&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>255</strong></code>.</li><li class="ql-indent-1">Type&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>VARCHAR</strong></code>&nbsp;means that the database will store up to 255 characters (the length we provided), but in an efficient way, only storing the actual characters and not the full 255.</li><li>A column called&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>price</strong></code>, type&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>DOUBLE</strong></code>, length&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>5,2</strong></code>.</li><li class="ql-indent-1">The length of the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>DOUBLE</strong></code>&nbsp;column means that it will store up to five numbers before the decimal point and exactly two after, such as ‘9.99’ or ‘99999.00’.</li></ul><p><br></p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-php/data-driven-website/table_creation_page.png"></span></p><p><br></p><p>Click “Save” to finish creating the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>services</strong></code>&nbsp;table with the three columns.</p><h3><br></h3><h3>Add Data to the Table</h3><p>Finally, we’re going to need some data. Make sure you’re in the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>services</strong></code>&nbsp;table, or click it in the left sidebar. Then click “Insert” in the top bar.</p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-php/data-driven-website/services_insert_data.png"></span></p><p>Let’s create the three services we have on our webpage:</p><p>We’ll name the first row&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>Wash</strong></code>, leaving the ID column blank—the database will create a value for us. And we’ll give it the price&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>15</strong></code>. Press “Go” and see that inserted the row.</p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-php/data-driven-website/insert_data_page.png"></span></p><p>Go ahead and insert the next two rows, leaving the ID blank:&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>Trim</strong></code>&nbsp;for $25 and&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>Full Grooming</strong></code>&nbsp;for $50. Then go to the “Browse” page for the table in the top bar and verify that all three rows have been created.</p><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-php/data-driven-website/data_table.png"></span></p><h2>Connecting to the Database in PHP</h2><h3>Connect to the Database</h3><p>We’re ready to get started coding! In your code editor, create a file called&nbsp;<strong>connect.php</strong>&nbsp;in the&nbsp;<strong>htdocs</strong>&nbsp;folder and write a function called&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>connect()</strong></code>&nbsp;to connect to the database and return a DB connection instance. This looks like the connection function you learned in the&nbsp;<a href="https://www.codecademy.com/courses/learn-intermediate-php/lessons/php-connecting-to-databases" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Connecting to Databases</a>&nbsp;lesson, but the connection string is slightly modified for MySQL instead of PostgreSQL.</p><pre class="ql-syntax" spellcheck="false">&lt;?php
// Connect to the database and return the database object
function connect() {
&nbsp;&nbsp;$hostname =&nbsp;''localhost'';

&nbsp;&nbsp;// Set the database name
&nbsp;&nbsp;$dbname =&nbsp;''salon'';
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;// Set the username and password with permissions to the database
&nbsp;&nbsp;$username =&nbsp;''salon'';
&nbsp;&nbsp;$password =&nbsp;''salon'';
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;// Create the DSN (data source name) by combining the database type, hostname, and dbname
&nbsp;&nbsp;$dsn =&nbsp;"mysql:host=$hostname;dbname=$dbname";
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;// Create the try/catch block here
&nbsp;&nbsp;try {
&nbsp;&nbsp;&nbsp;&nbsp;// Connect to the database and return the database object
&nbsp;&nbsp;&nbsp;&nbsp;return new PDO($dsn, $username, $password);
&nbsp;&nbsp;} catch (Exception $e) {
&nbsp;&nbsp;&nbsp;&nbsp;// If an error is thrown, catch it, echo the message, then exit
&nbsp;&nbsp;&nbsp;&nbsp;echo($e-&gt;getMessage());
&nbsp;&nbsp;}
}

</pre><h3><br></h3><h3>Include the Connect Function</h3><p>Open the&nbsp;<strong>services.php</strong>&nbsp;file in your code editor program. Then, include the&nbsp;<strong>connect.php</strong>&nbsp;file at the top of the&nbsp;<strong>services.php</strong>&nbsp;page. Create a variable called&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$db</strong></code>&nbsp;and set it to the result of the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>connect()</strong></code>&nbsp;function.</p><pre class="ql-syntax" spellcheck="false">&lt;?php
include "connect.php";
$db =&nbsp;connect();
?&gt;

</pre><p>Refresh the “Services” page to make sure you do not see an error at the top. If you do, double-check that your connection string is correct and that the MySQL service is running.</p><h2><br></h2><h2>Using the Data</h2><h3>Write the Query</h3><p>First, we’ll use the stored data in our database to display the store’s current prices on the webpage.</p><p>For each block of services in the&nbsp;<strong>services.php</strong>&nbsp;page, we’ll create a database query that gets the price of that service and stores it in a variable called&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$price</strong></code>.</p><p>Navigate to the Wash card section. Below the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>&lt;!-- Wash Card --&gt;</strong></code>&nbsp;comment, we will get the price for our Wash service.</p><pre class="ql-syntax" spellcheck="false">&lt;!-- Wash Card --&gt;
&lt;?php
$serviceQuery =&nbsp;$db-&gt;query("SELECT price FROM services WHERE name =&nbsp;''Wash''");
$serviceResult =&nbsp;$serviceQuery-&gt;fetch(PDO::FETCH_ASSOC);
$price =&nbsp;$serviceResult[''price''];
?&gt;

</pre><p><br></p><p>Now, display the price data. Replace the static value&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$10</strong></code>&nbsp;with the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$price</strong></code>&nbsp;value in the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>&lt;h1&gt;</strong></code>&nbsp;element in the card. Remember to keep the dollar sign before the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$price</strong></code>&nbsp;value.</p><pre class="ql-syntax" spellcheck="false">&lt;h1 class="card-title pricing-card-title"&gt;$&lt;?=$price;?&gt;&lt;/h1&gt;

</pre><p><br></p><p>Great! When you refresh the “Services” page, you should now see the price correctly displayed for our Wash service.</p><h3><br></h3><h3>Complete the Page</h3><p>Go ahead and do the same for the other two service cards.</p><h4>Trim Card</h4><pre class="ql-syntax" spellcheck="false">&lt;!-- Trim Card --&gt;
&lt;?php
$serviceQuery =&nbsp;$db-&gt;query("SELECT price FROM services WHERE name =&nbsp;''Trim''");
$serviceResult =&nbsp;$serviceQuery-&gt;fetch(PDO::FETCH_ASSOC);
$price =&nbsp;$serviceResult[''price''];
?&gt;

</pre><p>Edit the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>&lt;h1&gt;</strong></code>&nbsp;tag to display the price for our trim service from our database.</p><pre class="ql-syntax" spellcheck="false">&lt;h1 class="card-title pricing-card-title"&gt;$&lt;?=$price;?&gt;&lt;/h1&gt;

</pre><h4>Full Grooming Card</h4><pre class="ql-syntax" spellcheck="false">&lt;!-- Full Grooming Card --&gt;
&lt;?php
$serviceQuery =&nbsp;$db-&gt;query("SELECT price FROM services WHERE name =&nbsp;''Full Grooming''");
$serviceResult =&nbsp;$serviceQuery-&gt;fetch(PDO::FETCH_ASSOC);
$price =&nbsp;$serviceResult[''price''];
?&gt;

</pre><p><br></p><p>Edit the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>&lt;h1&gt;</strong></code>&nbsp;tag to display the price for our full grooming service from our database.</p><pre class="ql-syntax" spellcheck="false">&lt;h1 class="card-title pricing-card-title"&gt;$&lt;?=$price;?&gt;&lt;/h1&gt;

</pre><p>Now, all of our service pricing data on the website reflects the data in our database!</p><p><br></p><h2>Review</h2><p>In this tutorial, we first ran the example code on our own web server. We created a database using PHPMyAdmin, and we created and populated a table with service pricing data. Then we wrote code to connect to the database and use that data in our webpage. Take a look at the&nbsp;<strong>solution-code</strong>&nbsp;folder to compare your work with our solution code.</p><p>Great job! You’ve completed the first step in creating database-driven websites using PHP.</p><p><br></p><h2>Where To Go From Here</h2><p>Great job connecting to the database and using that data. A lot of the hard work is done, and we can use what we’ve built so far to further enhance our website.</p><p>There are many ways to improve what we’ve done so far, and I’m sure you’ve already noticed some! Some further improvements might be:</p><ul><li>Store the service descriptions in the table rows with the name and prices. Maybe even loop through the database query results to display the blocks on the services page!</li><li>Finish up the Contact page - embed a map to the salon, and add a contact form that emails the owner.</li><li>Create a login page and a page that allows the salon owner to update the prices.</li><li>Can you think of how you might use a new table to allow clients to request service bookings online?</li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b244601a-a657-4636-be46-a36ab7f5fd35'::uuid, 0, '2a71f618-bdc8-4737-a48d-faa16bf1158c'::uuid, 'LESSON'::public.resource_type, 'Welcome to Learn Intermediate PHP', NULL, '<h1>Welcome to Learn Intermediate PHP</h1><p><br></p><p><strong>A brief overview of what you will learn in this course.</strong></p><h3>What will you learn?</h3><p>PHP is a widely used server-side programming language that’s become increasingly fast and powerful over the years. In this course, you’ll expand your knowledge in PHP to learn how to create dynamic web applications using requests, databases, files, and APIs. After this course, you will be able to:</p><ul><li>Connect user data to a PostgreSQL database.</li><li>Display data from a database as HTML.</li><li>Use external APIs in PHP applications.</li><li>Handle files.</li><li>Work with PHP off-platform using the XAMPP package.</li></ul><p><br></p><p>Learning is social. Whatever you’re working on, be sure to connect with the Codecademy community in the&nbsp;<a href="https://discuss.codecademy.com/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">forums</a>. Remember to check in with the community regularly, including for things like asking for code reviews on your project work and providing code reviews to others in the&nbsp;<a href="https://discuss.codecademy.com/c/project/1833" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">projects category</a>, which can help to reinforce what you’ve learned.</p><h3>What should you know before starting this course?</h3><p><br></p><p>We recommend that you take the&nbsp;<a href="https://www.codecademy.com/learn/learn-php" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Learn PHP</a>&nbsp;course or have introductory knowledge in PHP. We also recommend that you’ve taken the&nbsp;<a href="https://www.codecademy.com/learn/paths/design-databases-with-postgresql" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Designing Databases with PostgreSQL</a>&nbsp;course or have experience in using databases like PostgreSQL and MySQL.</p><h3>What will you create?</h3><p><br></p><p>Throughout this course, you will be tasked with putting what you learned into practice. Here is a preview of a project featured in this course:</p><ul><li><a href="https://www.codecademy.com/courses/learn-intermediate-php/projects/php-code-club" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">CodeClub</a></li></ul><p><span style="color: var(--color-text); background-color: rgb(255, 255, 255);"><img src="https://static-assets.codecademy.com/Courses/intermediate-php/codeclub.gif"></span></p><p>Add create, read, update, and delete (CRUD) functionality for CodeClub members and membership tiers using your knowledge of performing database operations with PHP.</p><p>We are excited for you to start your journey into Learn Intermediate PHP!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('22d3bd53-4e12-4a12-88c0-9eda267cb55b'::uuid, 1, '2a71f618-bdc8-4737-a48d-faa16bf1158c'::uuid, 'LESSON'::public.resource_type, 'Introduction', NULL, '<h3>Introduction</h3><p><br></p><p>In our previous lesson, we looked at how to handle user input from forms. Combining PHP with a database will let us store the user input to use in our applications. In this lesson, we will learn how to use PostgreSQL to store large amounts of structured data and perform complex operations.</p><p>Let’s take a look at how we will structure our application. We will use PHP to:</p><ul><li>Process information</li><li>Apply business logic</li><li>Communicate with customers, vendors, and services</li><li>Tell the database which operations to perform and when</li></ul><p>We will connect a PostgreSQL database to:</p><ul><li>Store data</li><li>Read, write, update, and delete data when PHP instructs it</li></ul><p>There are several ways to connect PHP to a database. In this lesson, we will be using&nbsp;<a href="https://www.php.net/manual/en/book.pdo.php" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">PDO (PHP Data Objects)</a>. PDO comes out of the box with all supported PHP versions. It provides a layer of abstraction that lets us write code for many popular database systems such as PostgreSQL, MySQL, MariaDB, and SQLite.</p><p>Once we connect PHP to PostgreSQL, we’ll learn how to interact with the database securely, identify and fix insecure statements, and catch errors during our program’s execution.</p><p>Let’s get started with learning how to combine PHP with PostgreSQL to create powerful and dynamic user experiences!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1bf9f25c-00eb-4270-a955-784765a6daa5'::uuid, 2, '2a71f618-bdc8-4737-a48d-faa16bf1158c'::uuid, 'LESSON'::public.resource_type, 'Connecting to the Database', NULL, '<h3>Connecting to the Database</h3><p><br></p><p>When working with databases, you may have used a graphical tool such as Postbird, PgAdmin, or PhpMyAdmin. These tools are&nbsp;<strong>clients</strong>, which create a connection to the database&nbsp;<strong>server</strong>&nbsp;and send commands to it.</p><p>Similarly, we will be setting up PHP to act as a client which will send queries to PostgreSQL.</p><p>To connect to a server, a client needs to know where it is. We provide this information in the form of a&nbsp;<strong>DSN</strong>&nbsp;(data source name), which holds our database type (PostgreSQL), hostname, and database name. The&nbsp;<strong>hostname</strong>&nbsp;contains the location of the database. If PostgreSQL is running on the same host (computer) as PHP, we use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">localhost</code>. If it’s running on a remote server, we use its IP address or domain name. For Codecademy’s environment, we will use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">/tmp</code>.</p><pre class="ql-syntax" spellcheck="false">// Assign variables for the hostname and database name
$hostname =&nbsp;''/tmp'';
$dbname =&nbsp;''ccuser'';

// Create the DSN (data source name)
$dsn =&nbsp;"pgsql:host=$hostname;dbname=$dbname";

</pre><p>The first part of the DSN is the&nbsp;<strong>prefix</strong>, where we specify which database system to use. For PostgreSQL, that is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">pgsql</code>. Then we add a colon, followed by a key/value pair containing the hostname and database name, separated by a semi-colon. The DSN uses a precise format, so it’s important not to include spaces or extra characters.</p><p>We’ll also need to store the username and password of an account with the correct permissions for the database.</p><pre class="ql-syntax" spellcheck="false">$username =&nbsp;''ccuser'';
$password =&nbsp;''pass'';

</pre><p>We’ll start the connection by creating a database object from the PDO class and instantiating it using the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">new</code>&nbsp;keyword. The PDO constructor takes the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$dsn</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$username</code>, and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$password</code>&nbsp;<a href="https://www.codecademy.com/resources/docs/php/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;as its arguments in that order. If the connection is successful, the database object will be assigned to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$db</code>.</p><pre class="ql-syntax" spellcheck="false">$db =&nbsp;new PDO($dsn, $username, $password);

</pre><p>After we complete our database operations, we will end the connection by setting the database object and any of its references to null. We can do this with:</p><pre class="ql-syntax" spellcheck="false">$db =&nbsp;null;
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d61ca880-2971-45fe-9c4d-9261d06e5756'::uuid, 3, '2a71f618-bdc8-4737-a48d-faa16bf1158c'::uuid, 'LESSON'::public.resource_type, 'Creating Queries', NULL, '<h3>Creating Queries</h3><p><br></p><p>Now that we’ve created a database object,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$db</code>, we can call its methods to fetch data from the database.</p><p>Let’s take a look at an example database. It contains a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">books</code>&nbsp;table with a list of books with their&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">id</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">title</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">author</code>, and published&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">year</code>.</p><p>idtitleauthoryear1Don QuixoteMiguel de Cervantes16052Robinson CrusoeDaniel Defoe17193Pride and PrejudiceJane Austen18134EmmaJane Austen18165A Tale of Two CitiesCharles Dickens1859</p><p>We’ll begin with a query to fetch book titles. We’ll use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">query()</code>&nbsp;method on the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$db</code>&nbsp;object to create and execute the query. We can do this by referencing the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$db</code>&nbsp;object with the object operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">-&gt;</code>) before calling the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">query()</code>&nbsp;method.</p><pre class="ql-syntax" spellcheck="false">// Create the query
$bookQuery =&nbsp;$db-&gt;query(''SELECT title FROM books'');

</pre><p>Does the syntax in parenthesis look familiar? That’s because it’s a regular SQL query that is understood by the database.</p><p>Now let’s fetch the result of the query and assign it to the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$book</code>&nbsp;variable. We do this by calling the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fetch()</code>&nbsp;method on&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$bookQuery</code>.</p><pre class="ql-syntax" spellcheck="false">// Fetch the first book and assign it to $book
$book =&nbsp;$bookQuery-&gt;fetch();

</pre><p>Although our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">SELECT</code>&nbsp;statement above queries the database for&nbsp;<em>all</em>&nbsp;book titles, the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fetch()</code>&nbsp;method returns only&nbsp;<em>one</em>&nbsp;result.</p><p>To return a list of&nbsp;<em>all</em>&nbsp;book titles, we can use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fetchAll()</code>&nbsp;method instead:</p><pre class="ql-syntax" spellcheck="false">// Fetch all books and assign them to $books
$books =&nbsp;$bookQuery-&gt;fetchAll();

</pre><p>If we use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">print_r</code>&nbsp;to look at the value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$book</code>, we’ll see that the data is returned as both an ordered (indexed) and associative array.</p><pre class="ql-syntax" spellcheck="false">Array (&nbsp;[title] =&gt; Don Quixote [0] =&gt; Don Quixote )

</pre><p>We can change that by setting a&nbsp;<a href="https://www.php.net/manual/en/pdo.constants.php" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);"><strong>fetch mode</strong></a>, which tells PDO in what format to return our data. To get our book as an associative array, we pass&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">PDO::FETCH_ASSOC</code>&nbsp;as an argument to the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fetch()</code>&nbsp;method.</p><pre class="ql-syntax" spellcheck="false">// Fetch the next row and assign the result to $book
$book =&nbsp;$bookQuery-&gt;fetch(PDO::FETCH_ASSOC);

</pre><p>If we check&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$book</code>&nbsp;now, we’ll see:</p><pre class="ql-syntax" spellcheck="false">Array (&nbsp;[title] =&gt; Don Quixote )
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('59a1a818-6aeb-4320-ae13-87e9aada6135'::uuid, 4, '2a71f618-bdc8-4737-a48d-faa16bf1158c'::uuid, 'LESSON'::public.resource_type, 'SQL Injection', NULL, '<h3>SQL Injection</h3><p><br></p><p>Although we can use PHP to send SQL queries to PostgreSQL, sometimes SQL queries can be dangerous.</p><p>For example, how would we write a query that lets a user get a book’s details by providing its ID?</p><pre class="ql-syntax" spellcheck="false">// Get the ID from the frontend
$id =&nbsp;$_POST[''id''];

// Like this?
$booksQuery =&nbsp;$db-&gt;query(''SELECT *&nbsp;FROM books WHERE id =&nbsp;'' .&nbsp;$id);

</pre><p>But what if instead of entering a number, a malicious user enters&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1 or 1 = 1</code>?</p><p>Then the database will run this query:</p><pre class="ql-syntax" spellcheck="false">$booksQuery =&nbsp;$db-&gt;query(''SELECT *&nbsp;FROM books WHERE id =&nbsp;1 or 1&nbsp;= 1'');

</pre><p>And since 1 = 1 is always true, the database will return&nbsp;<em>every</em>&nbsp;row from the books table. While returning all books might not be a big problem, an attacker can use the same technique to return a list of all users, passwords, and other confidential information!</p><p><strong>SQL injection</strong>&nbsp;happens when a malicious user provides a SQL command instead of data, and the database executes it. We can prevent SQL injection by telling the database which values should be treated&nbsp;<em>only</em>&nbsp;as data.</p><p>We do that with&nbsp;<strong>prepared statements</strong>.</p><p><br></p><p>A&nbsp;<strong>prepared statement</strong>&nbsp;is a pre-defined template containing SQL and optionally&nbsp;<strong>placeholders</strong>. We use placeholders to tell the database where to place the data we will provide when executing the statement.</p><p><br></p><p>We create prepared statements using the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$db</code>&nbsp;object’s&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">prepare()</code>&nbsp;method. And instead of appending the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$id</code>&nbsp;variable, we use the&nbsp;<strong>placeholder</strong>&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">:id</code>&nbsp;.</p><pre class="ql-syntax" spellcheck="false">// Get the ID from the frontend
$id =&nbsp;$_POST[''id''];

// Create a&nbsp;prepared statement
$bookQuery =&nbsp;$db-&gt;prepare(''SELECT *&nbsp;FROM books WHERE id =&nbsp;:id'');

</pre><p><br></p><p>The next step is to run the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">execute()</code>&nbsp;method, and pass in an array with a key-value pair which maps our placeholders to&nbsp;<a href="https://www.codecademy.com/resources/docs/php/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>.</p><pre class="ql-syntax" spellcheck="false">// Map :id to $id
$bookQuery-&gt;execute([''id'' =&gt; $id]);

</pre><p><br></p><p>The final step is to fetch the result:</p><pre class="ql-syntax" spellcheck="false">$book =&nbsp;$bookQuery-&gt;fetch(PDO::FETCH_ASSOC);
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4006c292-a40e-4311-93e2-af4c3cfc4145'::uuid, 5, '2a71f618-bdc8-4737-a48d-faa16bf1158c'::uuid, 'LESSON'::public.resource_type, 'Exception Handling', NULL, '<h3>Exception Handling</h3><p><br></p><p>So, how did you do with all those exercises? If your experience was anything like ours, you probably didn’t get everything right the first time. In fact, to let you in on a little secret, even the best programmers make mistakes.</p><p><br></p><p>And sometimes, even when our code works well, there can be issues beyond our control. For example, PHP might be unable to connect to the database, or a third-party service we rely on, such as a payment processor or an email delivery service, might be down.</p><p><br></p><p>How do we handle such problems? PHP provides us with&nbsp;<strong>exception handling</strong>, which lets us rescue our program from such situations and tell it what to do next.</p><p>We do this using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><strong>try</strong></code><strong>/</strong><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><strong>catch</strong></code>&nbsp;blocks.</p><p><br></p><p>We start with a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">try</code>&nbsp;block, which tells the PHP interpreter to&nbsp;<em>try</em>&nbsp;executing some code:</p><pre class="ql-syntax" spellcheck="false">try {
&nbsp;&nbsp;&nbsp;&nbsp;// Charge user''s credit card
&nbsp;&nbsp;&nbsp;&nbsp;// Add transaction to the database
&nbsp;&nbsp;&nbsp;&nbsp;// Email receipt to user
}

</pre><p><br></p><p>If an exception is&nbsp;<strong>thrown</strong>, it will be&nbsp;<strong>caught</strong>, and PHP will immediately begin running code in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">catch</code>&nbsp;block.</p><pre class="ql-syntax" spellcheck="false">// When an exception occurs
catch (Exception $e) {
&nbsp;&nbsp;&nbsp;&nbsp;// Rollback transaction
&nbsp;&nbsp;&nbsp;&nbsp;// Add error to the log
&nbsp;&nbsp;&nbsp;&nbsp;// Notify user that an error occurred
}

</pre><p><br></p><p>The argument to the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">catch</code>&nbsp;block is the exception object which will catch&nbsp;<em>all</em>&nbsp;exceptions thrown. Assigning the exception object to the variable&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$e</code>&nbsp;lets us call several useful methods to help us troubleshoot the exception.</p><pre class="ql-syntax" spellcheck="false">// Echo out the exception object''s message which often has useful information
echo $e-&gt;getMessage();
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('533cabf1-fbda-414d-afda-b86fdc469715'::uuid, 6, '2a71f618-bdc8-4737-a48d-faa16bf1158c'::uuid, 'LESSON'::public.resource_type, 'Displaying Data in HTML', NULL, '<h1>Displaying Data in HTML</h1><p><strong>Learn how to display data received from a database in HTML using loops.</strong></p><p><br></p><p>In the&nbsp;<a href="https://www.codecademy.com/courses/learn-intermediate-php/lessons/php-connecting-to-databases" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-yellow);">Connecting to Databases</a>&nbsp;lesson, we looked at how to interact with a database using PHP. In this article, we’ll learn how to render data we receive from a database onto a webpage.</p><h2><br></h2><h2>Checking Data Exists</h2><p>Before diving into rendering data, let’s begin by ensuring that we have data to work with. After all, it is possible that the database didn’t return any results.</p><p>We can do that check with an&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>if</strong></code>&nbsp;statement:</p><pre class="ql-syntax" spellcheck="false">// Fetch the data
$data =&nbsp;$query-&gt;fetch(PDO::FETCH_ASSOC);

if ($data) {
&nbsp;&nbsp;// Render data to the page
} else {
&nbsp;&nbsp;// Let user know there are no results
}

</pre><p><br></p><p>Luckily, the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>if</strong></code>&nbsp;conditional works equally well for both&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>fetch()</strong></code>&nbsp;and&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>fetchAll()</strong></code>&nbsp;statements as:</p><ul><li>With a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>fetch()</strong></code>&nbsp;statement, the database returns&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>false</strong></code>&nbsp;if there is no result.</li><li>With a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>fetchAll()</strong></code>&nbsp;statement, if there are no results, the database returns an empty array which PHP evaluates to&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>false</strong></code>.</li></ul><h3><br></h3><h3><code style="background-color: transparent; color: rgb(79, 224, 176);">if</code>&nbsp;Statement Alternative Syntax</h3><p>When working with large or nested blocks of PHP embedded in HTML, it can sometimes be challenging to determine which closing brace matches a particular opening brace. As a solution, we can avoid surrounding our blocks with braces by using PHP’s alternative syntax for&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>if</strong></code>&nbsp;statements.</p><p>To write an&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>if</strong></code>&nbsp;statement using the alternative syntax, we replace the opening brace (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>{</strong></code>) with a colon (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>:</strong></code>), and the closing brace (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>}</strong></code>) with the closing&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>endif</strong></code>&nbsp;keyword, followed by a semi-colon (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>;</strong></code>).</p><p><br></p><p>Let’s see how our previous&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>if</strong></code>&nbsp;statement can be rewritten using the alternative syntax:</p><pre class="ql-syntax" spellcheck="false">// Fetch the data
$data =&nbsp;$query-&gt;fetch(PDO::FETCH_ASSOC);

if ($data) :
&nbsp;&nbsp;// Render data to the page
else :
&nbsp;&nbsp;// Let the user know there are no results
endif;

</pre><p><br></p><p>We can see in the above code block that the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>endif</strong></code>&nbsp;keyword closes the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>if</strong></code>&nbsp;statement instead of matching opening (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>{</strong></code>) and closing (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>}</strong></code>) braces.</p><p><br></p><h2>Looping Through Data</h2><p>Now that we checked that we have received the data, let’s loop through the data to display it as HTML elements.</p><h3>Control Loop Alternative Syntax</h3><p>PHP also lets us use the alternative syntax for control loops such as&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>for</strong></code>,&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>while</strong></code>, and&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>foreach</strong></code>&nbsp;loops.</p><p>Using the alternative syntax, we can write a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>for</strong></code>&nbsp;loop that counts down from five to one like this:</p><pre class="ql-syntax" spellcheck="false">&lt;?php for ($i =&nbsp;5; $i &gt; 0; $i--) :&nbsp;?&gt;
&nbsp;&nbsp;&lt;div&gt;&lt;?php echo $i ?&gt;&lt;/div&gt;
&lt;?php endfor; ?&gt;

</pre><p><br></p><p>In the above code, we begin by initializing&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$i</strong></code>&nbsp;to 5. Then during each iteration, we decrement its value and echo it out until it reaches zero. Notice that we use a colon (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>:</strong></code>) instead of an opening brace (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>{</strong></code>) and the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>endfor</strong></code>&nbsp;keyword followed by a semi-colon (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>;</strong></code>) instead of a closing brace (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>}</strong></code>).</p><p>This outputs:</p><pre class="ql-syntax" spellcheck="false">&lt;div&gt;5&lt;/div&gt;
&lt;div&gt;4&lt;/div&gt;
&lt;div&gt;3&lt;/div&gt;
&lt;div&gt;2&lt;/div&gt;
&lt;div&gt;1&lt;/div&gt;

</pre><p><br></p><p>Similarly, we can write a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>while</strong></code>&nbsp;loop to output a list of foods in the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$foods</strong></code>&nbsp;array using the alternative syntax:</p><pre class="ql-syntax" spellcheck="false">&lt;?php
$foods =&nbsp;[''chocolate'', ''ice cream'', ''pizza''];
$x =&nbsp;0;

while ($x &lt; count($foods)) :&nbsp;?&gt;
&nbsp;&nbsp;&lt;div&gt;I like &lt;?php echo $foods[$x++] ?&gt;&lt;/div&gt;
&lt;?php endwhile; ?&gt;

</pre><p><br></p><p>Here, we create an array of&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$foods</strong></code>&nbsp;and set the counter variable&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$x</strong></code>&nbsp;to zero. Next, we create a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>while</strong></code>&nbsp;loop to iterate over each element in the array using the counter. During each iteration, we echo&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>''I like $foods[$x]''</strong></code>, while incrementing&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$x</strong></code>&nbsp;with the increment operator (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$x++</strong></code>). Similar to the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>for</strong></code>&nbsp;loop alternative syntax, we use a colon (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>:</strong></code>) instead of an opening brace (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>{</strong></code>) and the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>endwhile</strong></code>&nbsp;keyword followed by a semi-colon (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>;</strong></code>) instead of a closing brace.</p><p><br></p><p>This outputs:</p><pre class="ql-syntax" spellcheck="false">&lt;div&gt;I like chocolate&lt;/div&gt;
&lt;div&gt;I like ice cream&lt;/div&gt;
&lt;div&gt;I like pizza&lt;/div&gt;

</pre><p><br></p><p>This time, let’s generate the same output using a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>foreach</strong></code>&nbsp;loop, again using the alternative syntax:</p><pre class="ql-syntax" spellcheck="false">&lt;?php
$foods =&nbsp;[''chocolate'', ''ice cream'', ''pizza''];

foreach ($foods as $food) :&nbsp;?&gt;
&nbsp;&nbsp;&lt;div&gt;I like &lt;?php echo $food ?&gt;&lt;/div&gt;
&lt;?php endforeach; ?&gt;

</pre><p><br></p><p>Once again, we start with an array of&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$foods</strong></code>. This time we’ll use a&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>foreach</strong></code>&nbsp;loop to iterate over each&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>$food</strong></code>&nbsp;element and output&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>I like $food</strong></code>. The opening brace is replaced by a colon&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>:</strong></code>&nbsp;here as well, and we use the&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>endforeach</strong></code>&nbsp;keyword followed by a semi-colon (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>;</strong></code>) to end the control loop.</p><p><br></p><h3>Short&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);">echo</code>&nbsp;Tag</h3><p>Another way we can make our embedded PHP code cleaner and easier to read is by using short&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>echo</strong></code>&nbsp;tags. To do so, when opening a PHP tag to&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>echo</strong></code>&nbsp;an expression, use an equals sign (<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>=</strong></code>) instead of writing&nbsp;<code style="background-color: transparent; color: rgb(79, 224, 176);"><strong>php echo</strong></code>.</p><p>Let’s look at an example:</p><pre class="ql-syntax" spellcheck="false">&lt;!-- Set $var to ''Hello world'' --&gt;
&lt;?php $var =&nbsp;''Hello world''; ?&gt;

&lt;!-- Regular echo tag --&gt;
&lt;?php echo $var ?&gt;
&lt;!-- Displays: ''Hello world'' --&gt;

&lt;!-- Short echo tag --&gt;
&lt;?= $var ?&gt;
&lt;!-- Displays: ''Hello world'' --&gt;
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7b94eeab-aaf1-4d3e-9fe1-dbf5380d228f'::uuid, 0, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'LESSON'::public.resource_type, 'File Information Operations', NULL, '<h3>File Information Operations</h3><p><br></p><p>Besides reading and writing, PHP includes several&nbsp;<a href="https://www.codecademy.com/resources/docs/php/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>&nbsp;that can provide valuable information about a file, such as whether a file exists. For the most part, these functions take a single argument; the name of the file we’d like to learn about.</p><p>We’ve actually used a file information operation already. To read the correct number of bytes from a file, we used the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">filesize</code>&nbsp;function to obtain the file size in bytes:</p><pre class="ql-syntax" spellcheck="false">$size =&nbsp;filesize("real-cool-file.txt");

</pre><p><br></p><p>Another common file information function is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">file_exists</code>:</p><pre class="ql-syntax" spellcheck="false">file_exists("reed-me.txt"); // false
file_exists("read-me.txt"); // true

</pre><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">file_exists</code>&nbsp;function takes a file name as an argument and returns a boolean value. This value is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;if the given file name exists in the current directory, or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;otherwise.</p><p>Some other common file information functions include:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><a href="https://www.php.net/manual/en/function.filetype.php" rel="noopener noreferrer" target="_blank">filetype</a></code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><a href="https://www.php.net/manual/en/function.fileperms.php" rel="noopener noreferrer" target="_blank">fileperms</a></code>, and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);"><a href="https://www.php.net/manual/en/function.is-dir.php" rel="noopener noreferrer" target="_blank">is_dir</a></code>. The full list of available functions is available in the&nbsp;<a href="https://www.php.net/manual/en/book.filesystem.php" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">official PHP documentation</a>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('edcab333-f38c-41bc-97c4-0f0a22183042'::uuid, 1, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'CODE'::public.resource_type, 'Check file exist', 'b6484e21-6937-489c-b031-b71767994763'::uuid, 'Determine the Day of the Week from a Given Date', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('52b8e79d-7074-42bf-9e44-cca15eabd01c'::uuid, 2, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'LESSON'::public.resource_type, 'Introduction', NULL, '<h3>Introduction</h3><p><br></p><p>Files are everywhere! Just about every piece of data on our computer is stored using files. For example, we could have a document saved into a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.pdf</code>&nbsp;file, a photo as a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.jpeg</code>, or a song as a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.mp4</code>. Sometimes we can even have multiple files compressed into a single file such as a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.zip</code>. These files are then organized into a structure of directories known as a file system.</p><p>As developers, it is common that we may want to work with files. Maybe we want our applications to open different PDF files or find and play a selected MP4 file. Many applications use files to store software configurations and activity logs. Learning to use programming to handle files is important to be able to write effective software! Don’t worry — PHP, as well as many other programming languages, have easy-to-use features to work with files.</p><p>To start to understand how PHP interacts with files, imagine we wanted to read a book (a sort-of real-world file). Before we can read a book, we first need to open it. When we’re finished reading, we will probably want to close the book. In PHP, to work with files, we can follow a similar process: open a file, perform some operation (such as reading or writing), and then close the file.</p><p>In this lesson, we will start to explore the basic operations of working with files in PHP. Specifically, we will learn to:</p><ul><li>Open and close a file</li><li>Read the contents of a file</li><li>Write to a file</li><li>Append to a file</li><li>Use PHP shorthand&nbsp;<a href="https://www.codecademy.com/resources/docs/php/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>&nbsp;for file operations</li><li>Retrieve important information about a file</li><li>Deal with common file handling errors and bugs</li></ul>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('091e3b64-20fe-44e0-be68-1078b233d1ed'::uuid, 3, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'LESSON'::public.resource_type, 'Error Handling and Debugging', NULL, '<h3>Error Handling and Debugging</h3><p><br></p><p>Whenever we’re working with the file system, there’s a lot that can go wrong. If a file operation is unsuccessful, PHP attempts to continue running our program as seamlessly as possible, meaning that any errors can be difficult to pin down. However, we can find out what’s wrong by looking for two indicators:</p><ol><li>The file operation returns&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>.</li><li>An error or warning message is printed to the console.</li></ol><p>To see this in action, let’s take a look at what happens if we misspell a file name:</p><pre class="ql-syntax" spellcheck="false">$read_me =&nbsp;file_get_contents("reed-me.txt");
echo $read_me;

</pre><p><br></p><p>This should print the contents of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">read-me.txt</code>, but because we got the file name wrong, this won’t work. In fact, we might not even know that an error occurred — sometimes, all we’ll see is a blank screen. This is because&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">file_get_contents</code>&nbsp;returned&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>, a value that&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">echo</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">print</code>&nbsp;statements display as an empty string.</p><p>Ideally, our applications would let us know about the error using some sort of error message. To make this happen, we can check the value returned from&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">file_get_contents</code>&nbsp;and handle failure cases explicitly:</p><pre class="ql-syntax" spellcheck="false">$read_me =&nbsp;file_get_contents("reed-me.txt");
if ($read_me == false) {
&nbsp;&nbsp;&nbsp;&nbsp;echo "Cannot read file";
} else {
&nbsp;&nbsp;&nbsp;&nbsp;echo $read_me;
}

</pre><p><br></p><p>Like other file operations in PHP,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">file_get_contents</code>&nbsp;indicates errors by returning&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>. By explicitly handling this scenario, we can make bugs much easier to diagnose.</p><p>PHP can also inform us of the problem by printing a message to the console:</p><pre class="ql-syntax" spellcheck="false">PHP Warning:&nbsp;&nbsp;file_get_contents(reed-me.txt): Failed to open stream: No such file or directory in index.php on line 2
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ec5b1065-7099-4fd6-ba93-d44b7e95e87f'::uuid, 4, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'LESSON'::public.resource_type, 'Opening and Closing Files', NULL, '<h3>Opening and Closing Files</h3><p><br></p><p>Depending on what we want to do with a file, the file handling process can vary. However, the first and last steps will always be the same; we will open the file first, and close it when we’re finished.</p><p>Let’s first take a look at how to open a file. If for instance we wanted to open a file called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"my-file.txt"</code>, here’s how we could open it:</p><pre class="ql-syntax" spellcheck="false">fopen("my-file.txt", "r");

</pre><p>In PHP, we can use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fopen</code>&nbsp;(short for “file open”) function to open a file. Let’s break down the syntax in the above example:</p><ul><li>The first argument is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"my-file.txt"</code>; the name of the file we’d like to open. This assumes&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">my-file.txt</code>&nbsp;is located in the same directory as the PHP script opening it, but if the file is located elsewhere, we can provide the path to the file (e.g.,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">../some-location/my-file.txt</code>).</li><li>The second argument is the mode,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"r"</code>. The mode describes the type of access we want for the file we’re opening. In this case, the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">r</code>&nbsp;stands for read mode. This means we can read the file from our code, but if we wanted to write to the file, we’d need to use a different mode.</li></ul><p>There are 11 total modes that can be used with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fopen</code>. We’ll cover a few of them in this lesson.</p><p>It is important to note that the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fopen</code>&nbsp;function returns a reference to the opened file, called a file pointer. This allows us to interact with the file from other parts of our code. However, in order to use the file pointer, we’ll need to assign it to a variable.</p><p>Let’s update our code from earlier to include this crucial component:</p><pre class="ql-syntax" spellcheck="false">$file =&nbsp;fopen("my-file.txt", "r");

</pre><p>In the above code, we’re assigning the result of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fopen</code>&nbsp;(a reference to our opened file,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">my-file.txt</code>) to a variable called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$file</code>. We’ll use this variable to access the file from our code and to close the file when we’re done.</p><p>Lastly, as we have already alluded to, whenever we’re finished with an open file, we’ll need to close it. By assigning the file pointer to a variable, we can easily close the file using the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fclose</code>&nbsp;function. Here’s how we can use it:</p><pre class="ql-syntax" spellcheck="false">fclose($file);

</pre><p>Here, we used the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fclose</code>&nbsp;function to close the file referenced by the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$file</code>&nbsp;variable,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">my-file.txt</code>. This is important because it safely disconnects the file from our application, preventing errors such as unsaved changes and data corruption. Just imagine what would happen if we never closed any of our files! Our computer’s memory (every time we open a file, we use a tiny bit of it) would eventually overload and our computer’s performance would grind to a halt. While it is not likely to happen with modern computer systems, as a best practice, always use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fclose</code>&nbsp;to close any files that aren’t in active use.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3003f43f-886a-47a4-961c-f35bf90957a3'::uuid, 5, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'CODE'::public.resource_type, 'File open practice', 'b6484e21-6937-489c-b031-b71767994761'::uuid, 'Determine number of days in a month', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('13193a8d-af7a-4095-8316-72a240759b93'::uuid, 6, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'LESSON'::public.resource_type, 'Reading a File', NULL, '<h3>Reading a File</h3><p><br></p><p>Now that we know how to open and close files, let’s take a look at how to read them. To demonstrate how this works, let’s say we have a file called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">real-cool-file.txt</code>&nbsp;with the following text:</p><pre class="ql-syntax" spellcheck="false">Wowsers!

</pre><p>First, we’ll need to open the file in read mode:</p><pre class="ql-syntax" spellcheck="false">$cool_file =&nbsp;fopen("real-cool-file.txt", "r");

</pre><p>Then, we can use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fread</code>&nbsp;function to read the file:</p><pre class="ql-syntax" spellcheck="false">$cool_text =&nbsp;fread($cool_file, 4);

</pre><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fread</code>&nbsp;function reads the given number of bytes from a file, returning the result as a string. Let’s take a closer look at how it works:</p><ul><li>The first argument,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$cool_file</code>, is the file pointer for the file we’d like to read.</li><li>The second argument,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">4</code>, is the number of bytes we’d like to read from the file. A byte is a unit of data stored on a computer. In this case, it is equivalent to one character of text.</li></ul><p>Our code reads 4 bytes of text from&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">real-cool-file.txt</code>&nbsp;into&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$cool_text</code>. If we were to then&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">echo $cool_text</code>, here’s what we would see in the console:</p><pre class="ql-syntax" spellcheck="false">Wows

</pre><p>Since we read only the first 4 bytes, we’re seeing only the first 4 characters of the file. But, what about the rest? For&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">real-cool-file.txt</code>, we can count that the file contains 8 characters, meaning that we can read the entire file by reading 8 bytes:</p><pre class="ql-syntax" spellcheck="false">$cool_text =&nbsp;fread($cool_file, 8);
echo $cool_text; // Wowsers!

</pre><p>However, in practice, we won’t always know the exact number of bytes to read. We might work with files of varying sizes or with files that are too large to count manually. Fortunately, PHP gives us the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">filesize</code>&nbsp;function to find out the size of any file. Here’s how:</p><pre class="ql-syntax" spellcheck="false">$cool_size =&nbsp;filesize("real-cool-file.txt");

</pre><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">filesize</code>&nbsp;function takes a file name as an argument, returning the size of the file in bytes. In this example, we used&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">filesize</code>&nbsp;to find the size of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">real-cool-file.txt</code>&nbsp;and store the result in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$cool_size</code>. We can then use this variable with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fread</code>&nbsp;to read the entire file, even if we didn’t know the number of bytes to read in advance:</p><pre class="ql-syntax" spellcheck="false">$cool_text =&nbsp;fread($cool_file, $cool_size);
echo $cool_text; // Wowsers!

</pre><p>When we’re finished reading the file, we’ll close it with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fclose</code>&nbsp;function:</p><pre class="ql-syntax" spellcheck="false">fclose($cool_file);
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5378b8a6-062d-49da-ab34-a6d6afb7f48d'::uuid, 7, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'CODE'::public.resource_type, 'FIle reading practice', 'b6484e21-6937-489c-b031-b71767994738'::uuid, 'Robber', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('109437bc-e0bd-4d6a-96d0-36f2ef8ad2fa'::uuid, 8, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'LESSON'::public.resource_type, 'Writing to a File', NULL, '<h3>Writing to a File</h3><p><br></p><p>Next, let’s take a look at how to write to a file! The process of writing to a file is similar to reading, except we use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fopen</code>&nbsp;function to open a file in write mode:</p><pre class="ql-syntax" spellcheck="false">$file =&nbsp;fopen("hello.txt", "w");

</pre><p><br></p><p>This opens&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hello.txt</code>&nbsp;in write mode (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">w</code>), assigning the file pointer to a new variable called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$file</code>. When opening a file in write mode,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fopen</code>&nbsp;will work in one of two ways:</p><ol><li>If the file being opened&nbsp;<em>does not</em>&nbsp;exist in the current directory, the file will be created.</li><li>If the file being opened&nbsp;<em>does</em>&nbsp;exist already, any existing content in the file will be deleted. If this isn’t what we want, we can also append to a file without erasing what’s already there — we’ll learn how in the next exercise.</li></ol><p><br></p><p>For this example, let’s assume that&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hello.txt</code>&nbsp;did not already exist. By opening the file in write mode, we created an empty file called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hello.txt</code>. We can then write to the file using the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fwrite</code>&nbsp;function:</p><pre class="ql-syntax" spellcheck="false">fwrite($file, "Hello, world!");

</pre><p><br></p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fwrite</code>&nbsp;works by taking two arguments. The first argument is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$file</code>, the file pointer we opened for&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hello.txt</code>. The second argument is the text we’d like to write: “Hello, world!”. This will write “Hello, world!” to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hello.txt</code>.</p><p><br></p><p>As long as the file pointer is open, we can call&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fwrite</code>&nbsp;as many times as we’d like. To add text on a new line, indicate the line break with a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">\n</code>:</p><pre class="ql-syntax" spellcheck="false">fwrite($file, "\n" .&nbsp;"This will be on a&nbsp;new line.");

</pre><p><br></p><p>Now, the directory where we created our PHP script contains a file,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hello.txt</code>, with the text we wrote:</p><pre class="ql-syntax" spellcheck="false">Hello, world!
This will be on a&nbsp;new line.

</pre><p><br></p><p>As always, we’ll need to close the file when we’re finished:</p><pre class="ql-syntax" spellcheck="false">fclose($file);
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ced93c52-b5df-408c-b705-4ff4b41b2746'::uuid, 9, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'CODE'::public.resource_type, 'File writing practice', 'b6484e21-6937-489c-b031-b71767994760'::uuid, 'Check triangle from side length', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('022cbb1d-9f18-4d54-afbf-3692255ea881'::uuid, 10, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'LESSON'::public.resource_type, 'Appending to a File', NULL, '<h3>Appending to a File</h3><p><br></p><p>In the previous exercise, we learned that we can write to a file by opening it in write mode (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">w</code>). When a file is opened in write mode, any existing content is deleted. Sometimes, we’ll prefer this behavior. However, other times, we’ll want to add to an existing file without erasing what’s already there. This process is known as appending. We can append in PHP by opening the file in append mode:</p><pre class="ql-syntax" spellcheck="false">$file =&nbsp;fopen("hello.txt", "a");

</pre><p><br></p><p>This opens&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hello.txt</code>&nbsp;with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fopen</code>&nbsp;function, using&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"a"</code>&nbsp;as the second argument to open the file in append mode. Unlike write mode, this tells PHP to preserve any existing content as it opens the file. However, if the file does not exist yet, PHP will still create the file.</p><p><br></p><p>Let’s see it in action using our above file&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hello.txt</code>&nbsp;with the following content:</p><pre class="ql-syntax" spellcheck="false">Hello, world!

</pre><p><br></p><p>Once we’ve opened the file, we’ll still use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fwrite</code>&nbsp;function to write to the file. Let’s try it out:</p><pre class="ql-syntax" spellcheck="false">fwrite($file, " Let’s learn PHP file handling!");

</pre><p><br></p><p>Since we opened the file in append mode, this writes to the end of the file without modifying what’s already there. If we looked at&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hello.txt</code>&nbsp;now, we would see this:</p><pre class="ql-syntax" spellcheck="false">Hello, world! Let’s learn PHP file handling!
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('588c1c33-1212-4079-bca1-398bc7c989cb'::uuid, 11, '73253625-6cf4-410f-8966-e177f8f49e95'::uuid, 'LESSON'::public.resource_type, 'Shorthand Functions', NULL, '<h3>Shorthand Functions</h3><p><br></p><p>Nice work! We can now read and write files in PHP. However, you might’ve noticed that most operations, including both reading and writing, can take quite a few steps. For example, here’s what it takes to read a file called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">my-file.txt</code>:</p><pre class="ql-syntax" spellcheck="false">$name =&nbsp;"my-file.txt";
$file =&nbsp;fopen($name, "r");
$size =&nbsp;filesize($name);
$content =&nbsp;fread($file, $size);
fclose($file);

</pre><p><br></p><p>Wouldn’t it be nice if there was an easier way? Luckily, there is! PHP offers shorthand alternatives to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fread</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fwrite</code>&nbsp;that take care of implementation details like opening the file and obtaining its size.</p><p><br></p><p>First, let’s take a look at an alternative to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fread</code>&nbsp;called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">file_get_contents</code>. To try it out, let‘s refactor our example to use the function:</p><pre class="ql-syntax" spellcheck="false">$content =&nbsp;file_get_contents("my-file.txt");

</pre><p><br></p><p>This reads&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">my-file.txt</code>&nbsp;into&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$content</code>, just as we did before — but with a fraction of the code. We only need one argument (the file name) and PHP takes care of the rest.</p><p>Likewise, PHP includes an alternative to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fwrite</code>&nbsp;called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">file_put_contents</code>. This allows us to write to a file with just one function call:</p><pre class="ql-syntax" spellcheck="false">file_put_contents("hello.txt", "Hello, world!");

</pre><p><br></p><p>This opens&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">hello.txt</code>&nbsp;in write mode, writes “Hello, world!” to the file, and closes the file in one function call. Since the file is opened in write mode, any existing content will be erased from the file. However, if we’d like to append to the file instead, we can specify this by passing&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">FILE_APPEND</code>&nbsp;as the third argument:</p><pre class="ql-syntax" spellcheck="false">file_put_contents("cool-pets.txt", "Bailey", FILE_APPEND);

</pre><p><br></p><p>To let us customize its behavior, the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">file_put_contents</code>&nbsp;function takes an optional third argument that can be set to one of a few values, including&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">FILE_APPEND</code>. These values, called flags, are constants included in the PHP language.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f0bcd7c5-546c-480b-86d2-4a5db64d1bfb'::uuid, 0, 'd0b564e1-d14d-48be-9a2e-e4cd831e1471'::uuid, 'LESSON'::public.resource_type, 'What Is JSON?', NULL, '<h1>What Is JSON?</h1><p><strong>A brief guide to understanding JSON and its use cases.</strong></p><p><br></p><h2>Introduction</h2><p>In a world inundated with data, it is becoming more important to know how to work with a variety of data. As programmers, we need to be able to transfer our populated data structures from any language we choose to a format that is recognizable and readable by other languages and platforms. Fortunately for us, there exists such a data-exchange format.</p><p><br></p><h2>What is JSON?</h2><p>JSON, or JavaScript Object Notation, is a popular, language-independent, standard format for storing and exchanging data. Adopted by&nbsp;<a href="http://ecma-international.org/" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">ECMA International</a>, an industry association founded in 1961 to standardize information and communication systems,&nbsp;<a href="http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">JSON</a>&nbsp;has become the de facto standard that facilitates storing and sending data between all&nbsp;<a href="https://www.codecademy.com/resources/blog/programming-languages/" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">programming languages</a>.</p><p><br></p><h2>Common Uses of JSON</h2><p>JSON is heavily used to facilitate data transfer in web applications between a client, such as a web browser, and a server. A typical example where such data transfer occurs is when you fill out a web form. The form data is converted from HTML to JavaScript objects to JSON objects and sent to a remote web server for processing. These transactions could be as simple as entering a search engine query to a multi-page job application.</p><p>When companies make their data public for other applications, like Spotify sharing its music library or Google sharing its map data, the information is formatted in JSON. This way, any application, regardless of language, can collect and parse the data.</p><p><br></p><p>Some of the popular web APIs that utilize JSON in data exchanges are:</p><ul><li><a href="https://developers.google.com/maps/documentation/geocoding/start" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">Google Maps</a></li><li><a href="https://developers.google.com/identity/protocols/oauth2/service-account" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">Google Auth 2.0 Authentication</a></li><li><a href="https://developers.facebook.com/docs/messenger-platform/reference/send-api" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">Facebook Social Graph API</a></li><li><a href="https://developer.spotify.com/documentation/web-api/" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">Spotify Music Web API</a></li><li><a href="https://docs.microsoft.com/en-us/linkedin/shared/integrations/people/profile-api" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">LinkedIn Profile API</a></li></ul><p><br></p><h2>JSON Syntax</h2><p>Since JSON is derived from the JavaScript programming language, its appearance is similar to that of JavaScript objects.</p><p>A sample JSON object is represented as follows:</p><pre class="ql-syntax" spellcheck="false">{
&nbsp;&nbsp;"student": {
&nbsp;&nbsp;&nbsp;&nbsp;"name": "Rumaisa Mahoney",
&nbsp;&nbsp;&nbsp;&nbsp;"age": 30,
&nbsp;&nbsp;&nbsp;&nbsp;"fullTime": true,
&nbsp;&nbsp;&nbsp;&nbsp;"languages": [&nbsp;"JavaScript", "HTML", "CSS" ],
&nbsp;&nbsp;&nbsp;&nbsp;"GPA": 3.9,
&nbsp;&nbsp;&nbsp;&nbsp;"favoriteSubject": null
&nbsp;&nbsp;}
}

</pre><p><br></p><p>Note the following syntax rules for JSON:</p><ul><li>The curly braces,&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>{..}</strong></code>, hold objects.</li><li>The square brackets,&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>[..]</strong></code>, hold arrays.</li><li>Data is stored in name-value pairs separated by a colon,&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>:</strong></code>.</li><li>Every name-value pair is separated from another pair by a comma,&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>,</strong></code>. Similarly, every item in an array is delimited by a comma as well.&nbsp;<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">Trailing commas</a>&nbsp;are forbidden.</li><li>JSON property names must be in double-quoted&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>(" ")</strong></code>&nbsp;text even though JavaScript names do not hold by this stringency.</li></ul><p><br></p><h2>JSON Data Types</h2><p>A JSON data type must be one of the following:</p><ul><li>string (double-quoted)</li><li>number (integer or floating point)</li><li>object (name-value pair)</li><li>array (comma-delimited)</li><li>boolean (true or false)</li><li>null</li></ul><p><br></p><p>Try to find all the data types in this JSON example:</p><pre class="ql-syntax" spellcheck="false">{
&nbsp;&nbsp;"student": {
&nbsp;&nbsp;&nbsp;&nbsp;"name": "Rumaisa Mahoney",
&nbsp;&nbsp;&nbsp;&nbsp;"age": 30,
&nbsp;&nbsp;&nbsp;&nbsp;"fullTime": true,
&nbsp;&nbsp;&nbsp;&nbsp;"languages": [&nbsp;"JavaScript", "HTML", "CSS" ],
&nbsp;&nbsp;&nbsp;&nbsp;"GPA": 3.9,
&nbsp;&nbsp;&nbsp;&nbsp;"favoriteSubject": null
&nbsp;&nbsp;}
}

</pre><p><br></p><p>Notably, JSON doesn’t cover every data type. Types that are not represented in JSON such as dates can be stored as a string and converted to a language-specific data structure. Here’s an acceptable internationally-recognized date format in&nbsp;<a href="https://www.iso.org/iso-8601-date-and-time-format.html" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">ISO 8601</a>:</p><pre class="ql-syntax" spellcheck="false">"2014-01-01T23:28:56.782Z"

</pre><p><br></p><p>This above format contains parts which resemble a date and time. However, as a string, it is hard for a programming language to use as is. Conveniently, every programming language has built-in JSON facilities to convert this string into a more readable and usable format, such as:</p><pre class="ql-syntax" spellcheck="false">Wed Jan 01 2014 13:28:56 GMT-1000 (Hawaiian Standard Time)

</pre><p><br></p><p>This pretty much covers the basic description of JSON, its popularity, and its syntax. Congratulations on reaching this milestone!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('11dbf208-bb72-47bc-81a5-2cd78e4a7dee'::uuid, 1, 'd0b564e1-d14d-48be-9a2e-e4cd831e1471'::uuid, 'LESSON'::public.resource_type, 'Introduction to Web APIs', NULL, '<h1>Introduction to Web APIs</h1><p><strong>Learn what APIs are and how they’re useful tools for web development.</strong></p><p><br></p><h2>What are APIs?</h2><p>An&nbsp;<em>Application Programming Interface</em>&nbsp;(<em>API</em>) is a software tool that makes it easier for developers to interact with another application to use some of that application’s functionality. Like tools in the physical world, APIs are built to solve specific, repeated, and potentially complex problems.</p><p>Imagine we needed to twist a screw into a piece of wood. We could try to take the screw and twist it in with our fingers, but that would be difficult and inefficient. Twisting one screw would be hard enough — having to do it multiple times would be near impossible! Instead, we could make the task much easier by using a tool that someone else created, in this case, a screwdriver! When used properly, the screwdriver can be used for one specific type of screw and can be reused for the same job over and over again!</p><p>Relating this analogy back to APIs, we probably don’t want to have to write up the same code for the same problems over and over again. If the right API exists to solve our problem, we could make it easier on ourselves and use the API instead. But, before we fully commit to using an API, we should go over some important considerations!</p><p><br></p><h2>Types of APIs</h2><p>There are two main categories of web APIs: browser APIs and third-party APIs.</p><p><em>Browser APIs</em>&nbsp;are specific to writing code related to browsers and give developers access to information that the browser can also access. One example is the&nbsp;<a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">geolocation API</a>&nbsp;which allows the program to know where a user is when accessing our app. This specific API requires that the user grant permissions to the browser to access their geolocation information. There are also browser APIs for audio, cryptography, VR, and much more. To see a comprehensive list of browser APIs and how to interact with them, check out&nbsp;<a href="https://developer.mozilla.org/en-US/docs/Web/API" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">MDN’s documentation of web APIs</a>.</p><p><br></p><p><em>Third-party APIs</em>&nbsp;are apps that provide some type of functionality or information from a third-party, usually a company. For example, we could use the&nbsp;<a href="https://openweathermap.org/" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">OpenWeather API</a>&nbsp;to get in-depth information about the weather in an area, forecasts, historical weather data, and more! On our own, we wouldn’t even have access to this data and we would certainly not want to write up this code ourselves just for one app!</p><p><br></p><h2>Requesting Information from a Third-party API</h2><p>Each API has a specific structure and protocol that we have to follow in order to gain access to its functionality.</p><p><br></p><h3>Rules and Requirements</h3><p>Organizations that maintain third-party APIs often set rules and requirements for how developers can interact with their APIs. For OpenWeather, we need to sign up for an account and generate a special token called an&nbsp;<em>API key</em>&nbsp;that grants our account the ability to make API requests. These API keys are unique to individual accounts and should be kept secret. OpenWeather provides some free functionality and some paid functionality. So before committing to a third-party API, check out their specifications which can often be found in the API documentation. Here’s&nbsp;<a href="https://openweathermap.org/api" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">OpenWeather’s documentation</a>&nbsp;to look over as an example.</p><p><br></p><h3>Making Requests</h3><p>Some of an API’s specifications relate to making a&nbsp;<em>request</em>&nbsp;for data. These specifications could include more parameters for specific information or the inclusion of an API key. For example, when using the OpenWeather API, we need to provide more information to search for weather information — such information could include: the name of a city, time of day, the type of forecast, etc. These specifications for making a request can also be found in the API documentation.</p><p><br></p><h3>Response Data</h3><p>After we make a successful API request, the API sends back data. Many APIs format their data using&nbsp;<a href="https://www.codecademy.com/article/what-is-json" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;"><em>JavaScript Object Notation</em>&nbsp;(<em>JSON</em>)</a>&nbsp;which looks like a JavaScript object. Here’s a quick example of what JSON data might look like:</p><pre class="ql-syntax" spellcheck="false">{
&nbsp;&nbsp;"temperature" :&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"celcius" :&nbsp;25,
&nbsp;&nbsp;},
&nbsp;&nbsp;"city": "chicago",
}

</pre><p>It’s then up to us how to determine how to&nbsp;<em>consume</em>, or use, this information in our apps. If we got back that sample JSON above, we could parse out the temperature information and display it on our app.</p><p><br></p><h2>Review</h2><p>Congrats, we’ve now gone through the basics of web APIs! Here’s a quick recap of what we covered:</p><ul><li>With web APIs, we have a tool that we can use to access the functionality and data of another application.</li><li>There are two main types of APIs: browser and third-party.</li><li class="ql-indent-1">Browser APIs require specific syntax and permissions.</li><li class="ql-indent-1">Third-party APIs have their own rules and requirements set by the organizations that maintain them.</li><li>When making a request to API, we might have to supply more details about what information we want.</li><li>If we get a successful response, we still have to decide how to consume the response data.</li></ul><p>That’s a lot to take in, but knowing that these tools exist opens up more possibilities for what we can do with our apps!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('be0fcbc1-2efb-4d95-9bf9-6a815d816ad3'::uuid, 2, 'd0b564e1-d14d-48be-9a2e-e4cd831e1471'::uuid, 'LESSON'::public.resource_type, 'Working with External APIs', NULL, '<h1>Working with External APIs</h1><p><strong>Learn how to use PHP to pull data from third-party APIs.</strong></p><p><br></p><h2>Introduction</h2><p>APIs are one of the most important components of modern web applications. With PHP, we have everything we need to build web applications — including the functionality to build our own internal APIs and work with third-party (external) APIs.</p><p>In this article, we’ll learn to fetch information from an external web API with PHP. More specifically, we will:</p><ul><li>Explore the basics of working with URL query strings</li><li>Perform a GET request on a third-party API and decode the result</li><li>Consider how to deal with errors that occur when querying an API</li></ul><p>Let’s get started!</p><p><br></p><h2>Understanding Query Strings</h2><p>Before we dive into querying an API with PHP, let’s first examine an important component of querying APIs:&nbsp;<strong>query strings</strong>.</p><p>A query string is a part of a URL that’s used to add data to a request. Located at the end of a URL, the query string consists of a question mark (<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>?</strong></code>) followed by one or more key-value pairs, known as query items or parameters. For example, the following URL can be used to look up Codecademy on Google:</p><pre class="ql-syntax" spellcheck="false">https://google.com/search?q=Codecademy

</pre><p><br></p><p>This URL includes a query string,&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>q=Codecademy</strong></code>. This means there’s a parameter named&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>q</strong></code>&nbsp;with the value&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>Codecademy</strong></code>&nbsp;— that’s how Google knows what you’re searching for!</p><p>A URL can contain as many query parameters as we see fit. For example, Google typically includes additional information in its URL for tracking purposes, such as the browser you’re using. If you search for Codecademy using Google Chrome, the URL may look like this:</p><pre class="ql-syntax" spellcheck="false">https://google.com/search?q=Codecademy&amp;sourceid=chrome

</pre><p><br></p><p>This URL includes two query parameters:</p><ul><li><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>q=Codecademy</strong></code></li><li><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>sourceid=chrome</strong></code></li></ul><p><br></p><p>When including more than one query item, the ampersand (<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>&amp;</strong></code>) separates one item from the next.</p><p>Query strings are important because they will play a vital role in our API requests, specifically if they are GET requests. We will use them later in this article to query a third-party API for data.</p><p><br></p><p><strong>Before we move on, let’s review:</strong></p><p><span style="color: var(--color-white);">Multiple choice</span></p><p><br></p><h2>Questions</h2><p>Identify the query string portion of the following URL:</p><pre class="ql-syntax" spellcheck="false">https://cool-pets.com/dogs?breed=labradoodle&amp;count=5

</pre><h2>Answer Choices</h2><p><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>https://cool-dogs.com</strong></code></p><p><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>/dogs</strong></code></p><p><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>breed=labradoodle&amp;count=5</strong></code></p><p><code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>count=5</strong></code></p><p><br></p><h2>Random User Generator API</h2><p>To start querying APIs with PHP, we’ll use the&nbsp;<a href="https://randomuser.me/" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">Random User Generator API</a>, a free third-party web API that generates random user profiles and associated data. To use the API, we will perform a GET request to&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>https://randomuser.me/api/</strong></code>. The response to this request will be a JSON object containing user profile information such as a name, email address, and phone number.</p><p>The API doesn’t require any additional information with our request, but we can customize our response by including some optional query parameters. For example, we can obtain up to 5,000 user profiles with one request by setting a&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>results</strong></code>&nbsp;parameter to the number of users we’d like to generate. To learn more about what parameters we can include in our request, check the&nbsp;<a href="https://randomuser.me/documentation" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">Random User Generator API documentation</a>.</p><p><br></p><p>Before we can use the API to make a request, let’s explore how to make API requests in PHP in the first place.</p><p><br></p><h2>Performing an API Request in PHP</h2><p>In PHP, the easiest way to query an API is by using the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><a href="https://www.php.net/manual/en/function.file-get-contents.php" rel="noopener noreferrer" target="_blank"><strong>file_get_contents()</strong></a></code><a href="https://www.php.net/manual/en/function.file-get-contents.php" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">&nbsp;function</a>. The&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>file_get_contents</strong></code>&nbsp;function can be used for file handling, and it can also query URLs, in this case, an API. For example, to perform a simple HTTP request, invoke the function with a web URL:</p><pre class="ql-syntax" spellcheck="false">file_get_contents("https://codecademy.com");

</pre><p><br></p><p>The above PHP code will perform a GET request to&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>https://codecademy.com</strong></code>, returning the response as a string. We can store the response of the call by assigning the function’s return value to a variable:</p><pre class="ql-syntax" spellcheck="false">$response =&nbsp;file_get_contents("https://codecademy.com");

</pre><p><br></p><p>Now, we will have a variable named&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>$response</strong></code>&nbsp;that is set to the result of performing a GET request to&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>https://codecademy.com</strong></code>. Don’t worry about what to do with the response just yet — we’ll learn about that in the next section!</p><p><br></p><h2>Decoding the Response</h2><p>Before we can use the response from an API request, we’ll almost always need to decode it. This is because the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>file_get_contents()</strong></code>&nbsp;function returns a string — even if the response is meant to be a different data type. This presents an issue since most APIs work with a JSON format. For example, here’s a sample response from the Random User Generator API:</p><pre class="ql-syntax" spellcheck="false">{
&nbsp;&nbsp;"results": [
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"name": {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"title": "Ms",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"first": "Maria",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"last": "Andersen"
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"email": "maria.andersen@example.com",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"phone": "86080646",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"picture": {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"large": "https://randomuser.me/api/portraits/women/69.jpg",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"medium": "https://randomuser.me/api/portraits/med/women/69.jpg",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"thumbnail": "https://randomuser.me/api/portraits/thumb/women/69.jpg"
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;],
&nbsp;&nbsp;"info": {
&nbsp;&nbsp;&nbsp;&nbsp;"seed": "92cc0be8871fa718",
&nbsp;&nbsp;&nbsp;&nbsp;"results": 1,
&nbsp;&nbsp;&nbsp;&nbsp;"page": 1,
&nbsp;&nbsp;&nbsp;&nbsp;"version": "1.4"
&nbsp;&nbsp;}
}

</pre><p><br></p><p>Like many web APIs, the Random User Generator formats its responses using JavaScript Object Notation (JSON). To work with this data in PHP, we’ll need to convert it from a string to an appropriate PHP data type, like an object or associative array, where we can access individual properties (e.g., email, phone). Here’s how:</p><pre class="ql-syntax" spellcheck="false">$data_object =&nbsp;json_decode($response);

</pre><p><br></p><p>The&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><a href="https://www.php.net/manual/en/function.json-decode.php" rel="noopener noreferrer" target="_blank"><strong>json_decode()</strong></a></code><a href="https://www.php.net/manual/en/function.json-decode.php" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">&nbsp;function</a>&nbsp;decodes a given JSON-encoded string. By default, when decoding a JSON object, the function returns an object. However, if the second argument is specified as&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>true</strong></code>, then the function can return an associative array instead:</p><pre class="ql-syntax" spellcheck="false">$data_array =&nbsp;json_decode($response, true);

</pre><p><br></p><p>Whether to obtain an object or an associative array is simply a matter of personal preference. Essentially, the only difference is the syntax we’ll use to access specific properties of the response data. For example, here’s how to print the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>info.version</strong></code>&nbsp;property of the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>$data_object</strong></code>&nbsp;variable from earlier:</p><pre class="ql-syntax" spellcheck="false">echo $data_object-&gt;info-&gt;version;

</pre><p><br></p><p>By contrast, here’s how to print the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>info.version</strong></code>&nbsp;property of the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>$data_array</strong></code>&nbsp;variable:</p><pre class="ql-syntax" spellcheck="false">echo $data_array[''info''][''version''];

</pre><p><br></p><p>Both of these will return the value&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>1.4</strong></code>&nbsp;from the JSON object we examined earlier.</p><p><br></p><h2>Handling Errors</h2><p>If there’s an unstable connection, a problem with the API’s backend, or another issue between our application and the external API, we may encounter an error. While not all such errors can be prevented, we can take appropriate steps to mitigate them.</p><p><br></p><h3>Detecting Failed Requests</h3><p>Whenever the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>file_get_contents()</strong></code>&nbsp;function cannot complete an operation successfully, the function returns&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>false</strong></code>&nbsp;and additional information is printed to the webpage or console. As with file handling, we can detect a failed HTTP request by checking the function’s return value. To see this in action, check out the following example:</p><pre class="ql-syntax" spellcheck="false">$response =&nbsp;file_get_contents("https://code-academy.com");

</pre><p><br></p><p>Someone must’ve forgotten how to spell Codecademy! Since the website&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>https://code-academy.com</strong></code>&nbsp;does not exist, this request cannot be completed successfully. We can confirm this by checking the function’s return value:</p><pre class="ql-syntax" spellcheck="false">if ($response === false) {
&nbsp;&nbsp;echo "Something went wrong!";
}

</pre><p><br></p><p>If we run the above code, the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>$response</strong></code>&nbsp;variable will be&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>false</strong></code>&nbsp;and the error message will be printed to the console. It might look something like this:</p><pre class="ql-syntax" spellcheck="false">Something went wrong!
PHP Warning:  file_get_contents(): php_network_getaddresses: getaddrinfo failed: Temporary failure in name resolution in….
</pre><h3><br></h3><h3>Handling API Errors</h3><p>Sometimes, an API may return a response, but it won’t be the one we asked for. Every API handles internal server errors (errors occurring within the API) differently, but typically, they’ll try to send a response that explains what happened. For example, if the Random User Generator is offline, we may receive a response like this:</p><pre class="ql-syntax" spellcheck="false">{
&nbsp;&nbsp;"error": "Uh oh, something has gone wrong. Please tweet us @randomapi about the issue. Thank you."
}

</pre><p><br></p><p>While this is still a JSON object, it’s missing the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>results</strong></code>&nbsp;and&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>info</strong></code>&nbsp;properties of a successful Random User Generator response. Instead, there’s only the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>error</strong></code>&nbsp;property. If we try to access a missing property, our application might not work.</p><p>That’s why it’s always a good idea to validate the response properties before using them with functions like&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><a href="https://www.php.net/manual/en/function.isset.php" rel="noopener noreferrer" target="_blank"><strong>isset()</strong></a></code>&nbsp;and&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><a href="https://www.php.net/manual/en/function.empty" rel="noopener noreferrer" target="_blank"><strong>empty()</strong></a></code>. When using the Random User Generator, this might mean checking for the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>error</strong></code>&nbsp;property before accessing the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>results</strong></code>&nbsp;or&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>info</strong></code>&nbsp;properties. For example, examine the following PHP script:</p><pre class="ql-syntax" spellcheck="false">$data =&nbsp;json_decode($response, true); // decode response
if (isset($data[''error''])) {
&nbsp;&nbsp;echo ''Error: '' .&nbsp;$data[''error'']; // print error message
} else {
&nbsp;&nbsp;echo ''Phone Number: '' .&nbsp;$data[''results''][0][''phone'']; // print phone number
}

</pre><p><br></p><p>Notice that this code will use&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>isset()</strong></code>&nbsp;to check if the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>$data</strong></code>&nbsp;array that was decoded has a value for the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>error</strong></code>&nbsp;property. Since we know from the API that this value will exist if there is indeed an error, we can return the error and avoid querying for fields that don’t exist. However, if the&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>error</strong></code>&nbsp;property is not set, we can safely assume that we can continue to query the data for the fields we want (e.g, phone number).</p><p><br></p><h2>Wrap Up</h2><p>Congratulations! We have successfully explored how to work with an external API in PHP. Let’s recap what we discussed in this article:</p><ul><li>Before using an API, make sure to review its documentation. Pay particular attention to how it handles requests, responses, and errors.</li><li>Query strings are used to provide additional information along with an API request. They consist of key-value pairs appended to the end of a URL.</li><li>The&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>file_get_contents()</strong></code>&nbsp;function can be used to perform simple API requests in PHP. When invoked with a request URL, the function returns the response as a string — or&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>false</strong></code>&nbsp;if the request is unsuccessful.</li><li>The&nbsp;<code style="color: rgb(79, 224, 176); background-color: transparent;"><strong>json_decode()</strong></code>&nbsp;function is used to parse a JSON response. Depending on the second argument, the function can return either an object or an associative array.</li><li>To handle errors in the API response, be sure to validate the response data before accessing specific properties.</li></ul><p><br></p><p>With this in mind, take some time to pick an API from the&nbsp;<a href="https://github.com/public-apis/public-apis" rel="noopener noreferrer" target="_blank" style="color: var(--color-yellow); background-color: transparent;">github repo that hosts a list of free APIs</a>. After picking a suitable option, practice using it by building a PHP application that queries the API for data. Good luck and happy coding!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a97f6727-de45-43b7-8a91-c173e18eb14e'::uuid, 0, '0621ff93-8959-4440-ae90-46665005f1f2'::uuid, 'VIDEO'::public.resource_type, 'Going Off-Platform with PHP', NULL, '', 'https://www.youtube.com/watch?v=AvYgmGS2pG0');
-- End of chapter resource PHP 2

-- chapter resource php 3
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a42fccf9-bafd-4092-b16d-2228754c935e'::uuid, 0, 'a0988f89-e5b7-4122-805c-d436c9bd1d03'::uuid, 'VIDEO'::public.resource_type, 'Intro 1', NULL, '', 'https://www.youtube.com/watch?v=Gnp1MBTsgX8&list=PLIorEuqMFFjMOoduM9Ijk7Y7Oz88lG8Q1&index=1');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f6578dfe-f3d0-478c-8603-2498ee0c6399'::uuid, 1, 'a0988f89-e5b7-4122-805c-d436c9bd1d03'::uuid, 'VIDEO'::public.resource_type, 'Intro 2', NULL, '', 'https://www.youtube.com/watch?v=SnSisDVXt9M&list=PLIorEuqMFFjMOoduM9Ijk7Y7Oz88lG8Q1&index=2');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5a1e68c7-2adf-4547-845f-d1d46ebca378'::uuid, 0, '73b55810-c89a-4a23-aaa5-ddcf93263e0f'::uuid, 'VIDEO'::public.resource_type, 'Variables', NULL, '', 'https://www.youtube.com/watch?v=Tmili-rOdJw&list=PLIorEuqMFFjMOoduM9Ijk7Y7Oz88lG8Q1&index=3');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7067bc45-8b86-4a42-8e24-d2f1f64d8e46'::uuid, 1, '73b55810-c89a-4a23-aaa5-ddcf93263e0f'::uuid, 'VIDEO'::public.resource_type, 'Data types', NULL, '', 'https://www.youtube.com/watch?v=mREk56vgkxs&list=PLIorEuqMFFjMOoduM9Ijk7Y7Oz88lG8Q1&index=4');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8cc9446b-734f-4404-b5ca-c938e3f467df'::uuid, 2, '73b55810-c89a-4a23-aaa5-ddcf93263e0f'::uuid, 'VIDEO'::public.resource_type, 'Operators', NULL, '', 'https://www.youtube.com/watch?v=Y-mCSJrXs3Y&list=PLIorEuqMFFjMOoduM9Ijk7Y7Oz88lG8Q1&index=5');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d1e15ca6-e814-4c47-97f2-14f00ed84004'::uuid, 3, '73b55810-c89a-4a23-aaa5-ddcf93263e0f'::uuid, 'VIDEO'::public.resource_type, 'Arrays', NULL, '', 'https://www.youtube.com/watch?v=_dDusFjI02Q&list=PLIorEuqMFFjMOoduM9Ijk7Y7Oz88lG8Q1&index=6');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('72e0e58e-07af-4a6a-bc3f-861228e621b6'::uuid, 4, '73b55810-c89a-4a23-aaa5-ddcf93263e0f'::uuid, 'VIDEO'::public.resource_type, 'Conditionals', NULL, '', 'https://www.youtube.com/watch?v=wgUA-a5D-_w&list=PLIorEuqMFFjMOoduM9Ijk7Y7Oz88lG8Q1&index=7');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('43eb777e-6640-40c1-9b59-a38c342aba8c'::uuid, 5, '73b55810-c89a-4a23-aaa5-ddcf93263e0f'::uuid, 'VIDEO'::public.resource_type, 'PHP 8 Match', NULL, '', 'https://www.youtube.com/watch?v=lXMRUa_UJgA&list=PLIorEuqMFFjMOoduM9Ijk7Y7Oz88lG8Q1&index=8');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ae237fd8-6274-4b69-879b-77f3dd1db245'::uuid, 6, '73b55810-c89a-4a23-aaa5-ddcf93263e0f'::uuid, 'VIDEO'::public.resource_type, 'Date and Time', NULL, '', 'https://www.youtube.com/watch?v=-jkzOI_VXLI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('127ada10-5430-4206-bcbf-b50552461dce'::uuid, 0, 'b71526ce-f195-40d6-aac6-71bd2b506e32'::uuid, 'VIDEO'::public.resource_type, 'Loops', NULL, '', 'https://www.youtube.com/watch?v=osQFwoM0Amo');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b0de4d56-3545-49bf-bb1a-e49a62cda816'::uuid, 1, 'b71526ce-f195-40d6-aac6-71bd2b506e32'::uuid, 'VIDEO'::public.resource_type, 'Project - Find the right person', NULL, '', 'https://www.youtube.com/watch?v=Wgkua5ovJJQ');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a2c53512-900a-4ae7-a93d-dc43ff48cf77'::uuid, 2, 'b71526ce-f195-40d6-aac6-71bd2b506e32'::uuid, 'VIDEO'::public.resource_type, 'Break and Continue', NULL, '', 'https://www.youtube.com/watch?v=F8Z31bQ-1x8');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('71283c97-de6c-4925-92d1-41ff149a29c8'::uuid, 3, 'b71526ce-f195-40d6-aac6-71bd2b506e32'::uuid, 'VIDEO'::public.resource_type, '3 ways to add PHP loops and conditionals inside HTML', NULL, '', 'https://www.youtube.com/watch?v=fwKmUrGOKqY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('bd5e77bd-9457-4843-bf05-8908fef29640'::uuid, 4, 'b71526ce-f195-40d6-aac6-71bd2b506e32'::uuid, 'VIDEO'::public.resource_type, 'Project - Calculate the Age in Days', NULL, '', 'https://www.youtube.com/watch?v=IRBDJI1TnIs');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c2cf3ce4-f60d-4195-857b-b1647df106a7'::uuid, 0, '591b18d4-925f-4801-ad07-c189b9af2b38'::uuid, 'VIDEO'::public.resource_type, 'Working with Files', NULL, '', 'https://www.youtube.com/watch?v=jg6Yt8WSSMI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f33fd836-ce89-47a0-9255-9f3082ff42e5'::uuid, 1, '591b18d4-925f-4801-ad07-c189b9af2b38'::uuid, 'VIDEO'::public.resource_type, 'Working with CSV files', NULL, '', 'https://www.youtube.com/watch?v=_t8RhQRxHVA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('95717e43-6936-48f0-b18a-5919031de35c'::uuid, 2, '591b18d4-925f-4801-ad07-c189b9af2b38'::uuid, 'VIDEO'::public.resource_type, 'Working with XML and JSON', NULL, '', 'https://www.youtube.com/watch?v=bLp-xAtzE_k');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8f931461-364f-4846-a075-05a8a9ed047d'::uuid, 3, '591b18d4-925f-4801-ad07-c189b9af2b38'::uuid, 'VIDEO'::public.resource_type, 'Project  - Parse Data and Find Answers', NULL, '', 'https://www.youtube.com/watch?v=4VLZG_G3mts');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e8e428f9-0af4-463f-8676-5eaa5729a0d9'::uuid, 0, '0a710ef6-4c32-4230-b9d5-fbb492156b4b'::uuid, 'VIDEO'::public.resource_type, 'Include and Require', NULL, '', 'https://www.youtube.com/watch?v=yy8QogjpuiI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2f8ef2ef-5c5e-4642-84f9-21438a9ede90'::uuid, 1, '0a710ef6-4c32-4230-b9d5-fbb492156b4b'::uuid, 'VIDEO'::public.resource_type, 'Project - Static Pages to Dynamic Website', NULL, '', 'https://www.youtube.com/watch?v=CYseHIYIu_o');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8188bfed-c651-439a-8f12-6ef227603089'::uuid, 2, '0a710ef6-4c32-4230-b9d5-fbb492156b4b'::uuid, 'VIDEO'::public.resource_type, 'Functions', NULL, '', 'https://www.youtube.com/watch?v=yDGVb5Y9wYg');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('24e26f1f-5cdf-4455-9ab2-71d821f66809'::uuid, 3, '0a710ef6-4c32-4230-b9d5-fbb492156b4b'::uuid, 'VIDEO'::public.resource_type, 'Project - Calculate distance between two places', NULL, '', 'https://www.youtube.com/watch?v=eZBu0AIWhwg');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9dbec193-3f8e-4a5a-93f7-feeef0ce026b'::uuid, 4, '0a710ef6-4c32-4230-b9d5-fbb492156b4b'::uuid, 'VIDEO'::public.resource_type, 'isset and empty', NULL, '', 'https://www.youtube.com/watch?v=mZXXYjPSkdU');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('369d2d6e-1d17-4546-ab22-3da38039a041'::uuid, 5, '0a710ef6-4c32-4230-b9d5-fbb492156b4b'::uuid, 'VIDEO'::public.resource_type, 'Working with Forms', NULL, '', 'https://www.youtube.com/watch?v=EsNIXbpm8tY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('02b808b5-2ead-4de1-a8fb-f8814cc2d3b8'::uuid, 6, '0a710ef6-4c32-4230-b9d5-fbb492156b4b'::uuid, 'VIDEO'::public.resource_type, 'Cookies', NULL, '', 'https://www.youtube.com/watch?v=aeseGKEaCDU');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ff172604-830e-4078-9cda-5bc340e1dfff'::uuid, 7, '0a710ef6-4c32-4230-b9d5-fbb492156b4b'::uuid, 'VIDEO'::public.resource_type, 'Session', NULL, '', 'https://www.youtube.com/watch?v=1fjBWXsdZz8');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('78cb9259-50a5-471d-b5be-965b83e7febf'::uuid, 0, 'fbf1cb09-c838-4e5a-8ab4-e56b0ad59d14'::uuid, 'VIDEO'::public.resource_type, 'Class ', NULL, '', 'https://www.youtube.com/watch?v=AFl6RLu0LIU');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6b0a6811-a724-4f72-9c16-0537863fdff7'::uuid, 1, 'fbf1cb09-c838-4e5a-8ab4-e56b0ad59d14'::uuid, 'VIDEO'::public.resource_type, 'Inheritance', NULL, '', 'https://www.youtube.com/watch?v=avNFdwm9L3I');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('556366c3-930d-4fae-a595-09db31850d5e'::uuid, 2, 'fbf1cb09-c838-4e5a-8ab4-e56b0ad59d14'::uuid, 'VIDEO'::public.resource_type, 'Namespace', NULL, '', 'https://www.youtube.com/watch?v=SqLLTS65QCE');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('04826ab6-737a-496c-b240-7770854a7103'::uuid, 3, 'fbf1cb09-c838-4e5a-8ab4-e56b0ad59d14'::uuid, 'VIDEO'::public.resource_type, 'Static', NULL, '', 'https://www.youtube.com/watch?v=1PcMAzliHV0');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('04cdf9a1-9a95-41de-87be-dc280ff1543b'::uuid, 4, 'fbf1cb09-c838-4e5a-8ab4-e56b0ad59d14'::uuid, 'VIDEO'::public.resource_type, 'Method Chaining', NULL, '', 'https://www.youtube.com/watch?v=HUzG5iSktLU');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('911e7456-7203-4ff3-a26d-327c35df92fc'::uuid, 5, 'fbf1cb09-c838-4e5a-8ab4-e56b0ad59d14'::uuid, 'VIDEO'::public.resource_type, 'Interface', NULL, '', 'https://www.youtube.com/watch?v=xEfPXG9sN9Q');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f8dfb72d-f8d3-415c-a746-a8f5370d178a'::uuid, 6, 'fbf1cb09-c838-4e5a-8ab4-e56b0ad59d14'::uuid, 'VIDEO'::public.resource_type, 'Abstract Class', NULL, '', 'https://www.youtube.com/watch?v=mHcalz7oU84');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3f57f9ce-e69a-46e7-8153-342c2e6f1618'::uuid, 7, 'fbf1cb09-c838-4e5a-8ab4-e56b0ad59d14'::uuid, 'VIDEO'::public.resource_type, 'Trait', NULL, '', 'https://www.youtube.com/watch?v=KFfQYUsJrIM');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f8d48ce9-c26a-45ef-952a-111f0afeb798'::uuid, 0, '19b12d44-143d-46b7-801b-2c14cdb73cfc'::uuid, 'VIDEO'::public.resource_type, 'Regular expressions', NULL, '', 'https://www.youtube.com/watch?v=ZMACwe8S5Ow');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('409f330f-fffe-476f-a6b8-d949be1ef87f'::uuid, 1, '19b12d44-143d-46b7-801b-2c14cdb73cfc'::uuid, 'VIDEO'::public.resource_type, 'How to build a router in PHP', NULL, '', 'https://www.youtube.com/watch?v=VEcXwF4BCX4');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('166be3e0-e95b-48bb-bf77-13f2da7a3fc0'::uuid, 2, '19b12d44-143d-46b7-801b-2c14cdb73cfc'::uuid, 'VIDEO'::public.resource_type, 'Validate and Sanitize Data', NULL, '', 'https://www.youtube.com/watch?v=0cImCCm3bec');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('874a49a2-0eed-4537-94c3-49a85733a322'::uuid, 3, '19b12d44-143d-46b7-801b-2c14cdb73cfc'::uuid, 'VIDEO'::public.resource_type, 'Working with Database', NULL, '', 'https://www.youtube.com/watch?v=KsRAHM2LNwg');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a776ee74-b13f-4f80-82cb-83bca107b662'::uuid, 4, '19b12d44-143d-46b7-801b-2c14cdb73cfc'::uuid, 'VIDEO'::public.resource_type, 'PHP Interacting with Python', NULL, '', 'https://www.youtube.com/watch?v=BtP-oa6FtXI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e3808219-8ff0-4d8f-85ab-657d6ecbda73'::uuid, 5, '19b12d44-143d-46b7-801b-2c14cdb73cfc'::uuid, 'VIDEO'::public.resource_type, 'Curl', NULL, '', 'https://www.youtube.com/watch?v=YCTz-QEbAJk');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('09f9ed9d-a868-4d1f-ab62-1443ca6e2cae'::uuid, 6, '19b12d44-143d-46b7-801b-2c14cdb73cfc'::uuid, 'VIDEO'::public.resource_type, 'Dependency Management', NULL, '', 'https://www.youtube.com/watch?v=h2pLQQ310-w');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8f4a93ca-5308-4c93-b57b-191d1a56658c'::uuid, 7, '19b12d44-143d-46b7-801b-2c14cdb73cfc'::uuid, 'VIDEO'::public.resource_type, 'Password Hashing and Verification', NULL, '', 'https://www.youtube.com/watch?v=bcqVgQ9M1as');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('37c44ecb-7ce9-42c1-b35d-7625665a3e0f'::uuid, 8, '19b12d44-143d-46b7-801b-2c14cdb73cfc'::uuid, 'VIDEO'::public.resource_type, 'Send SMTP Emails with PHPMailer', NULL, '', 'https://www.youtube.com/watch?v=1kBtYvfl8p0');
-- end of chapter resource php 3

-- chatper resource kotlin 1
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e74e0494-1f67-4a58-ab77-2e84b08d2fbc'::uuid, 0, '58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, 'LESSON'::public.resource_type, 'What is Kotlin?', NULL, '<h3>What is Kotlin?</h3><p><br></p><p>Welcome to the world of coding with Kotlin!</p><p>Kotlin is a programming language that, after its release in 2016 by&nbsp;<a href="https://www.jetbrains.com/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">JetBrains</a>, quickly gained popularity amongst developers due to its concise syntax, additional safety features, and compatibility with the Java programming language.</p><p>Being a general-purpose programming language, Kotlin can be used for Android development, web development, data science, and more. In 2019,&nbsp;<a href="https://android-developers.googleblog.com/2019/05/google-io-2019-empowering-developers-to-build-experiences-on-Android-Play.html" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Google announced Kotlin as their preferred language</a>&nbsp;for Android development.</p><p>The following applications use Kotlin in their tech stack:</p><ul><li>Netflix</li><li>Duolingo</li><li>Pinterest</li><li>And more!</li></ul><p>Throughout this lesson, we’ll learn about Kotlin syntax and how to run a basic program.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6122d090-789d-4dd8-ba55-d433c09d0d83'::uuid, 1, '58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, 'LESSON'::public.resource_type, 'First Kotlin Program', NULL, '<h3>First Kotlin Program</h3><p><br></p><p>What better way to start learning about Kotlin than to run a Kotlin program? Before we run our first program, let’s take a moment to understand our current environment.</p><p>Code is written and edited in something called a code editor. The code editor for a Codecademy exercise lives in the middle of the screen. If we look at the top of the editor, we will see the file name&nbsp;<strong>Hello.kt</strong>. The&nbsp;<strong>.kt</strong>&nbsp;extension signifies that the file contains Kotlin code.</p><p><br></p><p>In our code editor, there is a short Kotlin program:</p><pre class="ql-syntax" spellcheck="false">fun main() {
&nbsp;&nbsp;println("Hello, World!")
}

</pre><p><br></p><p>Don’t worry about understanding what this code means yet. All this program does is print the text&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Hello, World!"</code>&nbsp;to the output terminal, which exists on the right side of our screen. When we click&nbsp;<strong>Run</strong>, the output terminal displays our code’s final output.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3d97813f-7d1b-44f3-b107-fec597c57856'::uuid, 2, '58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, 'CODE'::public.resource_type, 'Hello world', 'b6484e21-6937-489c-b031-b71767994760'::uuid, 'Check triangle from side length', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('27f3f2ca-4413-4e4b-9e0c-82b312912db3'::uuid, 3, '58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, 'LESSON'::public.resource_type, 'The main() Function', NULL, '<h3>The main() Function</h3><p><br></p><p>Think of writing code like going on an adventure: we always need to start somewhere.</p><p>In Kotlin, the journey begins in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function.</p><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function is the “jumping off” point for our code and is the first part of our program that will execute when we run our program. It will exist in every single Kotlin project we create; in fact, without a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function present, the program will return an error.</p><p>The syntax for the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function looks like this:</p><pre class="ql-syntax" spellcheck="false">fun main() {
&nbsp;&nbsp;// Code will go here
}

</pre><ul><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fun</code>&nbsp;is a Kotlin keyword that is used to declare a function.</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main</code>&nbsp;is the required name of the starting function.</li><li>Following the function name is a pair of empty parentheses&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">()</code>.</li></ul><p><br></p><p>Code that is written inside the curly brackets (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">{ }</code>) is considered the “body” of a function. When we hit&nbsp;Enter&nbsp;to create a new line of code inside the body, the code will automatically indent itself:</p><pre class="ql-syntax" spellcheck="false">fun main() {
&nbsp;&nbsp;println("Hello, World!")
}
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2ce400d9-b8a8-43d4-92cb-dccf7249c29d'::uuid, 4, '58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, 'CODE'::public.resource_type, 'Practice', 'b6484e21-6937-489c-b031-b71767994758'::uuid, 'Check prime number', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a463f64d-0c01-4407-a80f-555b9e06b9da'::uuid, 5, '58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, 'LESSON'::public.resource_type, 'Print Statements', NULL, '<h3>Print Statements</h3><p><br></p><p>In the last exercise, we were able to display the text&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Coding is fun!</code>&nbsp;in the output terminal with the following code:</p><pre class="ql-syntax" spellcheck="false">fun main() {
&nbsp;&nbsp;println("Coding is fun!")
}

</pre><p><br></p><p>We accomplished this feat using a print statement. A&nbsp;<em>print statement</em>&nbsp;outputs values to the terminal.</p><p>When we want to use a print statement in Kotlin, we use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println()</code>&nbsp;function, which prints a value before creating a new line in the output terminal:</p><pre class="ql-syntax" spellcheck="false">println("To infinity and beyond!")

</pre><p>Any value we want to print needs to be placed within the parentheses of the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println()</code>&nbsp;statement. If we want to output text, we need to contain the text in double quotes (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">""</code>). The code in the snippet above will output:</p><pre class="ql-syntax" spellcheck="false">To infinity and beyond!

</pre><p><br></p><p>We can even use print statements to output number values and the result of expressions. For example:</p><pre class="ql-syntax" spellcheck="false">println(5 +&nbsp;5)

</pre><p><br></p><p>Will have an output of:</p><pre class="ql-syntax" spellcheck="false">10

</pre><p><br></p><p>We’ll mainly use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println()</code>&nbsp;throughout this course; however, there is another option for printing values to the output terminal:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">print()</code>.</p><p>The difference between&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println()</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">print()</code>&nbsp;is that&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println()</code>&nbsp;creates a new line after outputing a value, while&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">print()</code>&nbsp;doesn’t. For example:</p><pre class="ql-syntax" spellcheck="false">println("One")
print("Two")
print("Three")

</pre><p><br></p><p>Will output:</p><pre class="ql-syntax" spellcheck="false">One
TwoThree
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f847d7d7-0a20-4743-b689-c9b77ba87417'::uuid, 6, '58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, 'LESSON'::public.resource_type, 'Order of Execution', NULL, '<h3>Order of Execution</h3><p><br></p><p>Similar to instructions in a recipe, code is read, compiled, and executed in a top-down order.</p><p>When we run a program, a&nbsp;<a href="https://en.wikipedia.org/wiki/Compiler" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">compiler</a>&nbsp;translates our Kotlin code into something that can be read by the Java Virtual Machine (JVM). The JVM is responsible for executing code as instructions.</p><p><br></p><p>All of this happens behind the scenes between running our code and seeing its output in the terminal.</p><p>Inside the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function, the top line of the code is the first instruction that gets read by the compiler. For example, let’s create a program that contains three print statements:</p><pre class="ql-syntax" spellcheck="false">fun main() {
&nbsp;&nbsp;println("Huzzah!")
&nbsp;&nbsp;println("Woohoo!")
&nbsp;&nbsp;println("Yehaw!")
}

</pre><p><br></p><p>In the snippet above, the print statement containing&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Huzzah!"</code>&nbsp;is the first line of code in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function; therefore, it will be printed to the output terminal first followed by&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Woohoo!"</code>&nbsp;and then&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Yehaw!"</code>:</p><pre class="ql-syntax" spellcheck="false">Huzzah!
Woohoo!
Yehaw!
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('64ee6399-09f3-41f2-9334-0c37ba6b2b13'::uuid, 7, '58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, 'LESSON'::public.resource_type, 'Comments', NULL, '<h3>Comments</h3><p><br></p><p>Documenting what our code is accomplishing is a good programming practice because it makes our code understandable for both the programmer and anyone else who reads it.</p><p><em>Comments</em>&nbsp;allow us to write documentation inside of our programs.&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/comments" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Comments</a>&nbsp;can be written anywhere throughout a program and can contain text, symbols, or even code - all of which will be ignored by the compiler.</p><p><br></p><p>To write a single-line comment, type&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">//</code>&nbsp;into the program followed by the comment we want to add:</p><pre class="ql-syntax" spellcheck="false">// To be or not to be: that is the question.

</pre><p><br></p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">//</code>&nbsp;symbolizes the start of a comment. Note how text that appears in a comment has a gray font-color.</p><p>We also have the option of using a&nbsp;<em>multiline comment</em>&nbsp;which allows us to write comments throughout multiple lines. Multiline comments start with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">/*</code>&nbsp;and end with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">*/</code>:</p><pre class="ql-syntax" spellcheck="false">/*
If you prick us, do we not bleed?
If you tickle us, do we not laugh?
If you poison us, do we not die?
And if you wrong us, shall we not revenge?

- William Shakespeare, The Merchant of Venice
*/
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('24397c42-cb25-434a-9d99-6ecf5ddc5371'::uuid, 8, '58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, 'LESSON'::public.resource_type, 'Errors and Bugs', NULL, '<h3>Errors and Bugs</h3><p><br></p><p>While every programmer is different, there is one experience we all share: getting an error message. An error, or bug, causes our programs to behave in unexpected ways.</p><p>When we receive an error message, it’s almost always because of something we wrote incorrectly in our code. As a result, the compiler cannot translate our program and returns an error message.</p><p><br></p><p>There are many different kinds of errors we can encounter. This may sound daunting, but luckily the Kotlin compiler provides accurate and descriptive error messages, allowing us to quickly and efficiently locate the issue.</p><p><br></p><p>For example, take a very close look at the following code:</p><pre class="ql-syntax" spellcheck="false">fun main() {
&nbsp;&nbsp;printlnn("To err is human.")
}

</pre><p><br></p><p>When we run this, we receive the following error:</p><pre class="ql-syntax" spellcheck="false">Error.kt:2:3: error: unresolved reference: printlnn
  printlnn("To err is human.")
  ^
</pre><p><br></p><p>This error message provides a lot of useful information:</p><ul><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Error.kt</code>&nbsp;is the name of the file that contains the bug.</li><li>The first number (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">2</code>) tells us the line in which the error exists.</li><li>The second number (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">3</code>) tells us the character number in which the error lives on that line.</li><li>The text following&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">error:</code>&nbsp;describes what error we are encountering.</li></ul><p>We received this error because we wrote&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">printlnn</code>&nbsp;instead of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println</code>&nbsp;and the compiler couldn’t recognize the instruction.</p><p><br></p><p>Once we fix and rerun our code, we get the following output:</p><pre class="ql-syntax" spellcheck="false">To err is human.
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c94a1e0e-bce1-420d-b19e-a3b589921caf'::uuid, 9, '58bed5dd-76d0-4bb7-a14f-67ef99d3b74f'::uuid, 'LESSON'::public.resource_type, 'Formatting Conventions', NULL, '<h3>Formatting Conventions</h3><p><br></p><p>In programming, formatting conventions are the suggested rules for how code should be structured in a specific programming language. By following Kotlin’s formatting standards, or coding conventions, we can drastically improve the readability of our programs.</p><p>Some of Kotlin’s formatting conventions include:</p><p><br></p><p><strong>Indentation:</strong></p><p>Code within curly braces should be indented 4 spaces. While the Codecademy code editor generally uses 2 spaces, or 1 tab, for indentation, be sure to use 4 spaces when writing Kotlin code off-platform.</p><pre class="ql-syntax" spellcheck="false">fun main() {
&nbsp;&nbsp;&nbsp;&nbsp;// Code starts here
}

</pre><p><br></p><p>If we didn’t include indentation in our program, our code would still run without error; however, our code would look like a giant block of text making it hard to read. As programs get larger and more complicated, indentation for the purpose of organization becomes more essential.</p><p><br></p><p><strong>Comments:</strong></p><p>When writing a comment, add a space (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">" "</code>) between&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">//</code>&nbsp;and the start of the comment:</p><pre class="ql-syntax" spellcheck="false">// Write your comment here

</pre><p><br></p><p><strong>Curly Brackets:</strong></p><p>When creating the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function, place the opening curly bracket&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">{</code>&nbsp;on the same line as the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">main()</code>&nbsp;function construct (in this case:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fun main()</code>). The closing bracket&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">}</code>&nbsp;should be placed on its own separate line and should be vertically aligned with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">fun</code>&nbsp;keyword:</p><pre class="ql-syntax" spellcheck="false">fun main() {&nbsp;
&nbsp;&nbsp;// Code goes here
}

</pre><p><br></p><p>Keep the above conventions in mind when writing Kotlin code throughout this course and off-platform. We’ll encounter more formatting conventions as we progress through this course. To learn more, check out the coding conventions in&nbsp;<a href="https://kotlinlang.org/docs/reference/coding-conventions.html#formatting" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Kotlin’s Language Guide</a>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2c5f149a-b7ec-4746-b49e-dc428d19a22f'::uuid, 0, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'Introduction', NULL, '<h3>Introduction</h3><p><br></p><p>In this lesson, we’ll explore the building blocks of a programming language -&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/data-types" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data types</a>&nbsp;and&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>. A&nbsp;<em>data type</em>&nbsp;represents the type of value an object possesses. Here are a few of the types of data supported in Kotlin:</p><ul><li><strong>String</strong>: a sequence of characters enclosed in double quotes</li><li><strong>Integer</strong>&nbsp;(Int): whole numbers and their opposites</li><li><strong>Boolean</strong>:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;values</li></ul><p><br></p><p>Each variable in a Kotlin program will possess one of these types of data. Think of a variable as a unique, virtual container holding a certain piece of information that can then be used and referenced throughout a program.</p><p>Take a look at the animation on the right. Each item represents a variable holding a specific type of data dependent on its value. Codey packs their backpack with a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">lunchBox</code>&nbsp;holding the value&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"sandwich"</code>&nbsp;and a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">waterBottle</code>&nbsp;with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">32</code>&nbsp;ounces of water.&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">tentPacked</code>&nbsp;holds a Boolean value which represents if the tent is in Codey’s backpack. With these values, we can then write a program that checks if Codey has everything they need for their journey.</p><p>This is just one of many programs we can build with these variables. Each variable would have its own place and purpose in a program, and their respective data types determine how we can interact with them.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('349a3c31-4c25-4ce0-8db0-431930a2e2ea'::uuid, 1, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'Declaring a Mutable Variable', NULL, '<h3>Declaring a Mutable Variable</h3><p><br></p><p>Now that we’ve familiarized ourselves with the concept of&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>, let’s learn how to create a variable in Kotlin. A complete variable declaration and initialization resembles the following form:</p><pre class="ql-syntax" spellcheck="false">var variableName: Type = value
</pre><p><br></p><p><strong>Declaration</strong>:</p><ul><li>The&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">var</code>&nbsp;keyword specifies the beginning of a variable declaration. It signifies a mutable variable which means its value can change throughout the program.</li><li>Following the keyword is the name of the variable in&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">camelCase</code>&nbsp;format.&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">camelCase</code>&nbsp;refers to a naming convention where the first word is lowercased, the first letter of the second is capitalized, and so on. It’s important to create concise, yet descriptive variable names for readability and maintainability. A famous software engineer once said:</li><li><strong><em>“..I will cheerfully spend literally hours on identifier names: variable names, method names, and so forth, to make my code readable…”</em></strong>&nbsp;- Joshua Bloch</li><li>The variable name is then followed by the type of data that the variable is intended to store. The type must always be capital.</li></ul><p><br></p><p><strong>Initialization</strong>:</p><ul><li>Once the variable has been declared, we can initialize it with a value. The&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">=</code>&nbsp;sign, known as an assignment operator in programming, assigns a value to the variable.</li></ul><p><br></p><p>Let’s apply this syntax to our first Kotlin variable:</p><pre class="ql-syntax" spellcheck="false">var guitarName: String =&nbsp;"Fender Stratocaster"

</pre><p><br></p><p>The&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">guitarName</code>&nbsp;variable has been allocated a position in memory by the compiler and can now be referenced and used throughout our program.</p><p>The compiler also recognizes that this variable is mutable due to the&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">var</code>&nbsp;keyword ahead of the variable name; let’s explore what that means.</p><p>We may sometimes need to declare a variable in our program, knowing it will be of use later on, but don’t have a value to initialize it with just yet. We can do so in this way:</p><pre class="ql-syntax" spellcheck="false">var variableName: Type
</pre><p><br></p><p>Assume we’re building a music application that will listen for the notes played on a guitar. We can declare a&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">notePlayed</code>&nbsp;variable and initialize it with a value when the user plays a note:</p><pre class="ql-syntax" spellcheck="false">var notePlayed: String // declaration

notePlayed =&nbsp;"B" // initialization

println(notePlayed) // Prints: B

</pre><p><br></p><p>Notice how we did not need to use the&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">var</code>&nbsp;keyword on the second line as it is only used upon initial declaration. We’ve also omitted the type of data since this information needs to only be specified once.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1342d87f-0f95-4ed1-8c3e-0c58753b74e3'::uuid, 2, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'Declaring an Immutable Variable', NULL, '<h3>Declaring an Immutable Variable</h3><p><br></p><p>Another type of variable that exists in Kotlin is the immutable variable. The term, immutable, signifies a variable whose value cannot mutate or change after its initialization.</p><p><em>Immutable variables</em>&nbsp;are denoted by the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">val</code>&nbsp;keyword and are often referred to as constants in some languages. Here’s how they’re declared in Kotlin:</p><pre class="ql-syntax" spellcheck="false">val variableName: Type = value
</pre><p><br></p><p>Let’s see an example. The following variable contains the value of the&nbsp;<a href="https://en.wikipedia.org/wiki/Golden_ratio" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Golden Ratio</a>:</p><pre class="ql-syntax" spellcheck="false">val goldenRatio: Double =&nbsp;1.618

</pre><p><br></p><p>Since we know this value stays constant, its best to declare it with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">val</code>&nbsp;keyword as opposed to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">var</code>&nbsp;as we don’t intend on changing it. Although a declaration with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">var</code>&nbsp;would have also been accepted by the compiler, the preferred strategy is to declare&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">var</code>&nbsp;<em>only</em>&nbsp;if we’re certain the value will change somewhere throughout the program, otherwise always use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">val</code>.</p><p><br></p><p>Let’s see what happens when we try to reassign&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">goldenRatio</code>&nbsp;to another value:</p><pre class="ql-syntax" spellcheck="false">goldenRatio =&nbsp;3.2

</pre><p><br></p><p>The above line of code would result in the following error in the terminal stating that reassignment is not allowed:</p><pre class="ql-syntax" spellcheck="false">Pi.kt:5:3: error: val cannot be reassigned
  goldenRatio = 3.2
  ^
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('57186978-f472-4899-9b05-37223c963d7b'::uuid, 3, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'CODE'::public.resource_type, 'Declare variable practice', 'b6484e21-6937-489c-b031-b71767994740'::uuid, 'List divisor', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8216c519-9441-4a08-af09-afb33c52cdbf'::uuid, 4, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'Type Inference', NULL, '<h3>Type Inference</h3><p><br></p><p>In Kotlin, we can save keystrokes and optimize our variable declarations with a feature known as type inference.</p><p><em>Type inference</em>&nbsp;indicates that the compiler can infer the type of a declared variable, and its data type can be omitted in the declaration. Take a look at the following variable declaration:</p><pre class="ql-syntax" spellcheck="false">var lightsOn: Boolean =&nbsp;true

</pre><p><br></p><p>We’re explicitly stating the type of variable, but the Kotlin compiler is also intelligent enough to make this assumption even with the absence of a type:</p><pre class="ql-syntax" spellcheck="false">var lightsOn =&nbsp;true // valid declaration

</pre><p><br></p><p>The compiler recognizes that a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;value stored in a variable falls under the Boolean data type, thus the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">lightsOn</code>&nbsp;variable is a Boolean.</p><p>It’s important to know that regardless of how a variable is declared, its type cannot change throughout a program. A Boolean variable, whether explicitly stated or inferred, can&nbsp;<em>only</em>&nbsp;hold a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;value.</p><p>If we try to assign a value that’s not a Boolean:</p><pre class="ql-syntax" spellcheck="false">lightsOn =&nbsp;"no" // error

</pre><p><br></p><p>The compiler will throw the following error:</p><pre class="ql-syntax" spellcheck="false">Inference.kt:4:14: error: type mismatch: inferred type is String but Boolean was expected
  lightsOn = "no"
</pre><p><br></p><p><strong>Note</strong>: Variable declarations with explicitly specified&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/data-types" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data types</a>&nbsp;and those with inferred data types are both valid ways in creating&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>. Each syntax will be accepted by the compiler, thus choosing one or the other is simply up to the developer’s preference.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c031c2c0-77f6-46c6-9cb3-85cf3c266a6c'::uuid, 5, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'Strings & Characters', NULL, '<h3>Strings &amp; Characters</h3><p><br></p><p>In this lesson, we’ll continue working with&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;and take a deeper dive into the&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/data-types" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data types</a>&nbsp;Strings and Characters.</p><p><img src="https://content.codecademy.com/courses/php-strings-variables/PHP_m2l1e1.svg"></p><p><br></p><p>Recall that a String in Kotlin is a sequence of characters wrapped in double-quotes. Its characters can include various combinations of digits, letters, symbols, and whitespace.</p><pre class="ql-syntax" spellcheck="false">var variableName: String = "some text"
</pre><p><br></p><p>Strings are made up of characters and in Kotlin, a&nbsp;<em>character</em>&nbsp;is a data type representing a single letter, digit, or symbol wrapped in single quotes. It is denoted by the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Char</code>&nbsp;type.</p><pre class="ql-syntax" spellcheck="false">var variableName: Char = ''A''
</pre><p><br></p><p>Some things to keep in mind about characters:</p><ul><li>The character,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">''A''</code>, is not the same as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">''a''</code>&nbsp;as these letters represent different&nbsp;<a href="https://en.wikipedia.org/wiki/Unicode" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Unicodes</a>&nbsp;and won’t be recognized as equivalent by the compiler.</li><li>The character,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">''1''</code>, is not the same as the integer,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>, as these values signify two different types of data:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Char</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Int</code>.</li></ul><p><br></p><p>Reference Kotlin’s documentation to learn more about&nbsp;<a href="https://kotlinlang.org/docs/reference/basic-types.html#strings" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Strings</a>&nbsp;and&nbsp;<a href="https://kotlinlang.org/docs/reference/basic-types.html#characters" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Characters</a>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c139e974-e460-4474-bcb8-8ceb48fe739d'::uuid, 6, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'String Concatenation', NULL, '<h3>String Concatenation</h3><p><br></p><p><a href="https://www.codecademy.com/resources/docs/kotlin/strings" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Strings</a>&nbsp;in Kotlin can stand alone or be combined with other Strings in a process known as&nbsp;<em>String concatenation</em>. With a plus operator,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">+</code>, we are able to concatenate or append one String to another resulting in a new word, phrase, or sentence.</p><p><br></p><p>Take a look at the following example:</p><pre class="ql-syntax" spellcheck="false">var firstName =&nbsp;"Mike"
var lastName =&nbsp;"Wazowski"

println(firstName +&nbsp;" " +&nbsp;lastName) // Prints: Mike Wazowski

</pre><p><br></p><p>In the code above, we’ve combined the&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">firstName</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">lastName</code>&nbsp;to produce a full name with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">+</code>&nbsp;operator. Notice how we’ve added an empty String,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">" "</code>, between the two variables to create natural whitespace between the two words.</p><p>In addition to outputting the result of a concatenated String, we can also store this process in a variable for later use. For example:</p><pre class="ql-syntax" spellcheck="false">val userGreeting =&nbsp;firstName +&nbsp;" " +&nbsp;lastName +&nbsp;", how are you doing today?"

println(userGreeting)

</pre><p><br></p><p>The compiler replaces each variable with its value and outputs the final String:</p><pre class="ql-syntax" spellcheck="false">Mike Wazowski, how are you doing today?
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('591ee03b-11d1-4e0f-9755-41e22745c26d'::uuid, 7, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'String Templates', NULL, '<h3>String Templates</h3><p><br></p><p>An alternative to String concatenation is a syntax known as String templates. Many developers prefer String templates over String concatenation for its conciseness and efficiency. Take a look at the difference:</p><pre class="ql-syntax" spellcheck="false">Concatenation: "Hello, " + variableName + "!"

Template: "Hello, $variableName!"
</pre><p><br></p><p><em>String templates</em>&nbsp;contain a String with any variable names preceded by a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">$</code>&nbsp;symbol. Notice how in contrast to String concatenation, we don’t need to specify whitespace, thus saving keystrokes and limiting the amount of code we write.</p><p>Assume we’re building the following program for a travel company that provides a user with their itinerary:</p><pre class="ql-syntax" spellcheck="false">val passengerName =&nbsp;"Alex"
val trainNumber =&nbsp;2039
val timeOfDeparture =&nbsp;"16:00"
val timeOfArrival =&nbsp;"20:00"

println("Mrs. $passengerName will be on the $trainNumber train departing at $timeOfDeparture to DevCity and arriving at $timeOfArrival.")

</pre><p><br></p><p>Each variable gets evaluated within the text producing the final itinerary information:</p><pre class="ql-syntax" spellcheck="false">Mrs. Alex will be on the 2039 train departing at 16:00 to DevCity and arriving at 20:00.

</pre><p><br></p><p>String templates are widely used and are often the preferred syntax by Kotlin developers. Keep in mind that String concatenation is also a valid strategy, so it’s important to be familiar with both when collaborating with others.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('83bfe447-002f-4cb9-b8e8-b06fe294fabe'::uuid, 8, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'CODE'::public.resource_type, 'String practice', 'b6484e21-6937-489c-b031-b71767994741'::uuid, 'List odd divisor', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('66deec42-3ec8-4667-9175-31d137e27349'::uuid, 9, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'Number Types', NULL, '<h3>Number Types</h3><p><br></p><p>We’ve briefly worked with integers in the previous lesson, and in this section, we’ll take a deeper dive into the various types of numbers that exist in Kotlin.</p><p>Kotlin numbers fall into two categories: integers and decimals as part of the&nbsp;<a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-number/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Number</a>&nbsp;superclass. Take a look at the image on the right. Each book occupies a certain amount of space on the shelf depending on its size. The same goes for the various numerical data types in Kotlin. The larger a variable is in size (Bits), the more space it occupies in our computer’s memory.</p><p>The books on the left side represent 4 different types of data for an integer value:</p><p>NameBit (Size)Min ValueMax ValueLong64-9,223,372,036,854…9,223,372,036,854…Int32-2,147,483,6482,147,483,647Short16-32,76832,767Byte8-128127</p><p><br></p><p>A&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Long</code>&nbsp;variable is meant to store significantly large values, whereas a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Byte</code>&nbsp;variable cannot store a value larger than&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">127</code>. Hence, their size and occupation in memory vary.</p><p>The books on the right represent 2 various types of data for decimal or floating-point values:</p><p>NameBit (Size)Decimal Digit PrecisionDouble6415-16Float326-7</p><p><br></p><p>A&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Double</code>&nbsp;variable contains a longer, more precise decimal precision than a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Float</code>. For example:</p><pre class="ql-syntax" spellcheck="false">var doubleNum: Double =&nbsp;6.0 /&nbsp;13.0
var floatNum: Float =&nbsp;6.0f /&nbsp;13.0f
println(doubleNum) // Prints: 0.46153846153846156
println(floatNum)&nbsp;&nbsp;// Prints: 0.46153846

</pre><p>When declaring a numerical variable in Kotlin, the compiler will determine which of the above data types to assign to it. The default type for whole numbers is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Int</code>&nbsp;and the default type for decimals is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Double</code>, thus we’ll be working with these two types of data more closely throughout this lesson.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1cb6921b-42b0-42f6-974d-169bce905a77'::uuid, 10, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'Arithmetic Operators', NULL, '<p>The arithmetic&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>&nbsp;that exist in Kotlin resemble the operators we know from basic math. They can be used in various applications from calculating the average test grade for a student class to determining the total restaurant bill.</p><p>Kotlin supports the following arithmetic operators:</p><ul><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">+</code>&nbsp;addition</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">-</code>&nbsp;subtraction</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">*</code>&nbsp;multiplication</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">/</code>&nbsp;division</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%</code>&nbsp;modulus (divides and gives the remainder)</li></ul><p><br></p><p>The above arithmetic operators aside from modulus,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%</code>, should all be familiar. Modulus is a programming symbol that is used to calculate the division and return the remainder. For example:</p><pre class="ql-syntax" spellcheck="false">println(7 %&nbsp;2)

</pre><p><br></p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">7</code>&nbsp;gets divided by&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">2</code>&nbsp;and results in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">3</code>&nbsp;remainder&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>. The remainder then gets returned and printed to the terminal:</p><pre class="ql-syntax" spellcheck="false">1

</pre><p><br></p><p>Within the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println()</code>&nbsp;statement above, we built an arithmetic expression. An&nbsp;<em>arithmetic expression</em>&nbsp;is the grouping of arithmetic operators and numeric values. Take a look at some of the ways in which we can set up and use arithmetic expressions throughout a Kotlin program.</p><p>With variables:</p><pre class="ql-syntax" spellcheck="false">var operand1 =&nbsp;5.5
var operand2 =&nbsp;4.3
println(operand1 +&nbsp;operand2)
// Prints: 9.8

</pre><p><br></p><p>In a print statement:</p><pre class="ql-syntax" spellcheck="false">println(8 -&nbsp;4)
// Prints: 4

</pre><p><br></p><p>Concatenated within a String:</p><pre class="ql-syntax" spellcheck="false">println("The quotient of -9 and 3&nbsp;is " +&nbsp;-9 /&nbsp;3)
// Prints: The quotient of -9 and 3&nbsp;is -3

</pre><p><br></p><p>In the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">{ }</code>&nbsp;of a String template:</p><pre class="ql-syntax" spellcheck="false">println("The product of 6&nbsp;and 2, is ${6 *&nbsp;2}")
// Prints: The product of 6&nbsp;and 2&nbsp;is 12
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5644cfda-3353-4815-b2e1-037509fedbc4'::uuid, 11, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'Order of Operations', NULL, '<h3>Order of Operations</h3><p><br></p><p>As seen in the previous exercise, Kotlin allows us to combine or chain arithmetic expressions in order to achieve more complex calculations. When doing so, we must keep in mind the order in which each expression gets evaluated.</p><p>Most programming languages follow a certain order of operations (similar to&nbsp;<a href="https://en.wiktionary.org/wiki/PEMDAS" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">PEMDAS</a>) when evaluating such expressions. In Kotlin, this order looks like:</p><ol><li>Parentheses</li><li>Multiplication</li><li>Division</li><li>Modulus</li><li>Addition</li><li>Subtraction</li></ol><p><br></p><p>You may have noticed that we skipped over the E (Exponents) in PEMDAS. This is because Kotlin does not have an exponent operator and instead relies on the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">.pow()</code>&nbsp;function to calculate exponentiation. We’ll cover this more in-depth in the following exercise.</p><p>Let’s see a few examples of compound arithmetic expressions:</p><pre class="ql-syntax" spellcheck="false">println(5 +&nbsp;8 *&nbsp;2 /&nbsp;4 -&nbsp;3) // Prints: 6&nbsp;
println(3 +&nbsp;(5 +&nbsp;5) /&nbsp;2)&nbsp;&nbsp;&nbsp;// Prints: 8
println(3 *&nbsp;2 +&nbsp;1 *&nbsp;7)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Prints: 13

</pre><p><br></p><p>Another rule to keep in mind is when an expression contains sister operations such as multiplication and division or addition and subtraction, side by side. The compiler will evaluate this expression in a left to right order. For example:</p><pre class="ql-syntax" spellcheck="false">println(3 +&nbsp;16 /&nbsp;2 *&nbsp;4) // Prints: 35

</pre><p><br></p><p>Since we have division,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">/</code>, and multiplication,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">*</code>, side by side, the left to right order goes into effect and the expression evaluates as such:</p><p><span style="background-color: rgb(255, 255, 255); color: rgb(16, 22, 47);"><img src="https://content.codecademy.com/courses/learn-kotlin/Variables%20and%20Data%20Types/Kotlin_OrderofOperationsDiagram_v4.svg"></span></p><p>Keep in mind both sets of rules when creating complex arithmetic expressions.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6bf08c5a-f0a5-4ee1-82e8-5e877b2bb83b'::uuid, 12, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'Augmented Assignment Operators', NULL, '<h3>Augmented Assignment Operators</h3><p><br></p><p>As we build upon our programs, we’ll often need to update the values of variables following certain calculations. Assume a program that increases the current speed of a vehicle to match a speed limit of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">55</code>:</p><pre class="ql-syntax" spellcheck="false">var currentSpeed =&nbsp;45
currentSpeed =&nbsp;currentSpeed +&nbsp;10
print(currentSpeed) // Prints: 55

</pre><p><br></p><p>In order to increase and update the value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">currentSpeed</code>, we’ve added&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">10</code>&nbsp;to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">currentSpeed</code>&nbsp;and reassigned it back to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">currentSpeed</code>. Kotlin provides an even shorter syntax for operations like this with augmented assignment operators.</p><p><em>Augmented assignment operators</em>&nbsp;execute a calculation and reassign its result to a variable all in one step. Each consists of an arithmetic operator immediately followed by the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">=</code>&nbsp;operator. Take a look at the difference in syntaxes:</p><p><br></p><p><strong>Long Syntax</strong>:</p><pre class="ql-syntax" spellcheck="false">a = a + b
</pre><p><br></p><p><strong>Short Syntax with an Augmented Assignment Operator</strong>:</p><pre class="ql-syntax" spellcheck="false">a += b
</pre><p><br></p><p>Keeping the short syntax in mind, we can now refactor and optimize our previous program to its final, concise state:</p><pre class="ql-syntax" spellcheck="false">currentSpeed += 10
println(currentSpeed) // Prints: 55
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8ebfcd38-7a24-48c6-9283-17c3f831f17e'::uuid, 13, '9eaef8d4-e7c0-4528-9087-d1b3462619b2'::uuid, 'LESSON'::public.resource_type, 'Increment and Decrement Operators', NULL, '<h3>Increment and Decrement Operators</h3><p><br></p><p>In addition to augmented assignment&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>, Kotlin provides us with two arithmetic shortcuts that can be used to perform quick addition and subtraction calculations. These are known as increment and decrement operators.</p><p><br></p><p>An&nbsp;<em>increment operator</em>&nbsp;represents the addition of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>&nbsp;to a variable using two consecutive plus operators,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">++</code>:</p><pre class="ql-syntax" spellcheck="false">variableName++
</pre><p><br></p><p>The&nbsp;<em>decrement operator</em>&nbsp;represents the subtraction of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>&nbsp;from a variable using two consecutive minus operators,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">--</code>:</p><pre class="ql-syntax" spellcheck="false">variableName--
</pre><p><br></p><p>This shorthand syntax is most useful with&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/loops" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">loops</a>&nbsp;and&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/conditionals" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">conditionals</a>&nbsp;- concepts we’ll explore later in this course. For now, let’s just get familiar with the syntax.</p><p>Assume we’re writing a program that keeps track of how many apples we have in our basket whilst apple picking. 🍎</p><pre class="ql-syntax" spellcheck="false">var apples =&nbsp;5

</pre><p><br></p><p>We picked up a Gala apple, so let’s add&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>&nbsp;to our basket using an increment operator:</p><pre class="ql-syntax" spellcheck="false">apples++
println(apples) // Prints: 6&nbsp;

</pre><p><br></p><p>We ate a Honey Crisp apple from our basket, so let’s subtract&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>&nbsp;from the total:</p><pre class="ql-syntax" spellcheck="false">apples--
println(apples) // Prints: 5&nbsp;

</pre><p><strong>Note</strong>:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">++</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">+= 1</code>&nbsp;are the same operations and can be used interchangeably throughout a program.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9d82fcee-58d8-4b6d-8a2f-4de1ec8e0d51'::uuid, 0, '94236271-ebdb-46d7-b503-c965c3c37674'::uuid, 'LESSON'::public.resource_type, 'Introduction to Conditionals', NULL, '<p>When we go on adventures, sometimes the road is straightforward and other times, the road splits and we must choose a path to take.&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/conditionals" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Conditionals</a>&nbsp;are like forks in the road: they determine the direction our program takes.</p><p><br></p><p>A&nbsp;<em>conditional</em>&nbsp;is an expression that evaluates&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;values in order to control the flow of code in a program.</p><p><br></p><p>When we discussed Kotlin in terms of the order of execution, we stated that Kotlin code is compiled and executed in top-down order. This remains true; however, a conditional statement can be used to determine what instructions are executed and what instructions are ignored.</p><p><br></p><p>In this lesson, we will learn how to control the flow of code execution in our Kotlin programs.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b3a1a34f-b366-4737-920e-978c63f5369c'::uuid, 1, '94236271-ebdb-46d7-b503-c965c3c37674'::uuid, 'LESSON'::public.resource_type, 'if Expression', NULL, '<h3>if Expression</h3><p><br></p><p>An&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression is a conditional that executes a body of code only when a specified Boolean value returns&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>.</p><p><br></p><p>Assume we had a Boolean variable called&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">raining</code>:</p><pre class="ql-syntax" spellcheck="false">var raining =&nbsp;true

</pre><p><br></p><p>We can use an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression to evaluate the value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">raining</code>&nbsp;to determine whether or not we execute some code:</p><pre class="ql-syntax" spellcheck="false">if (raining) {
&nbsp;&nbsp;println("Bring an umbrella.")
}

</pre><ul><li>The expression starts with the keyword,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>.</li><li>A pair of parentheses contains a condition (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">raining</code>) that evaluates to either&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>.</li><li>Following the condition is a pair of brackets&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">{</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">}</code>&nbsp;that holds a block of code.</li></ul><p><br></p><p>The code contained within the code block of the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression will only execute if the condition is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>; otherwise, that code block will be ignored.</p><p>When we run the program above, we get the following output:</p><pre class="ql-syntax" spellcheck="false">Bring an umbrella.

</pre><p><br></p><p>The value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">raining</code>&nbsp;inside of the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>; therefore, the instruction&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println("Bring an umbrella.")</code>&nbsp;gets executed.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f828ed12-ea70-4b50-83e4-05a727ca96c9'::uuid, 2, '94236271-ebdb-46d7-b503-c965c3c37674'::uuid, 'LESSON'::public.resource_type, 'if/else Expression', NULL, '<h3>if/else Expression</h3><p><br></p><p>Often accompanying the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression is another conditional called the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;expression. The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;expression executes a block of instructions when the condition in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression has a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;value.</p><p><br></p><p>For example:</p><pre class="ql-syntax" spellcheck="false">var isHerbivore =&nbsp;false
var diet: String

if (isHerbivore) {
&nbsp;&nbsp;diet =&nbsp;"vegetables"
} else {
&nbsp;&nbsp;diet =&nbsp;"meat"
}
println("This animal can eat $diet.")

// Prints: This animal can eat meat.

</pre><p><br></p><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;expression is not followed by a condition since it will only run code if the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression’s condition is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>.</p><p>This expression is always placed as the last conditional and cannot exist without an accompanying&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9541083d-4aa1-4f22-892f-4a7aded275fc'::uuid, 3, '94236271-ebdb-46d7-b503-c965c3c37674'::uuid, 'LESSON'::public.resource_type, 'Comparison Operators', NULL, '<h3>Comparison Operators</h3><p><br></p><p>To create more complex conditions for our conditionals to evaluate, we can use comparison operators.&nbsp;<em>Comparison operators</em>&nbsp;evaluate the relationship between two values in order to return an expression as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>.</p><p>There are several comparison operators we can use in Kotlin:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&lt;</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&gt;</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&gt;=</code>, and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&lt;=</code>.</p><p><br></p><p>The&nbsp;<em>less than</em>&nbsp;operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&lt;</code>) evaluates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;if the value on the left side of the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&lt;</code>&nbsp;is smaller than the value on the right:</p><pre class="ql-syntax" spellcheck="false">var username =&nbsp;"beetle"

if (username.length &lt; 10) {
&nbsp;&nbsp;println("Please choose a&nbsp;longer username.")
}
// Prints: Please choose a&nbsp;longer username.

</pre><p><br></p><p>For the&nbsp;<em>greater than</em>&nbsp;operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&gt;</code>), if the value on the left side of the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&gt;</code>&nbsp;symbol is larger than the value on the right, the expression returns&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>:</p><pre class="ql-syntax" spellcheck="false">var username =&nbsp;"beetlejuice_beetlejuice_beetlejuice"

if (username.length &gt; 25) {
&nbsp;&nbsp;println("Please choose a&nbsp;shorter username.")
}
// Prints: Please choose a&nbsp;shorter username.

</pre><p><br></p><p>The&nbsp;<em>less than or equal to</em>&nbsp;operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&lt;=</code>) returns&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;only if the value on the left is less than or equal to the value on the right:</p><pre class="ql-syntax" spellcheck="false">var liquidTemp =&nbsp;27 // Fahrenheit

if (liquidTemp &lt;= 32) {
&nbsp;&nbsp;println("The liquid will freeze.")
} else {
&nbsp;&nbsp;println("The liquid will remain liquid.")
}
// Prints: The liquid will freeze.

</pre><p><br></p><p>The&nbsp;<em>greater than or equal to</em>&nbsp;operator&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&gt;=</code>&nbsp;will return&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;if the value on the left is greater than or equal to the value on the right:</p><pre class="ql-syntax" spellcheck="false">var liquidTemp =&nbsp;50 // Fahrenheit

if (liquidTemp &gt;= 212) {
&nbsp;&nbsp;println("The liquid will vaporize.")
} else {
&nbsp;&nbsp;println("The liquid will remain liquid.")
}
// Prints: The liquid will remain liquid.
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f72007dd-1e05-4911-82f6-c2fb18092c37'::uuid, 4, '94236271-ebdb-46d7-b503-c965c3c37674'::uuid, 'LESSON'::public.resource_type, 'Equality and Inequality Operators', NULL, '<h3>Equality and Inequality Operators</h3><p><br></p><p>Another way to compare two values is with the equality&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>.</p><p>We can use the&nbsp;<em>equality</em>&nbsp;operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">==</code>) to check if the value on the right side of the operator is equal to the value on the left. If the values are equivalent the expression will return&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>; otherwise, it will return&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>:</p><pre class="ql-syntax" spellcheck="false">var userPassword =&nbsp;"secret884"
var attemptedPassword =&nbsp;"secret884"

if (userPassword == attemptedPassword) {
&nbsp;&nbsp;println("The password you entered is correct.")
}

</pre><p><br></p><p>This code snippet will output&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"The password you entered is correct."</code>&nbsp;because&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">userPassword</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">attemptedPassword</code>&nbsp;have the same value.</p><p>On the other hand, the&nbsp;<em>inequality</em>&nbsp;operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!=</code>) is used to determine if the values on each side of the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!=</code>&nbsp;operator are different. This expression returns&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;when the two values being compared are not equal to each other.</p><p><br></p><p>We can use&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!=</code>&nbsp;to check if a gathering of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">9</code>&nbsp;people can evenly split&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">16</code>&nbsp;slices of pizza amongst themselves:</p><pre class="ql-syntax" spellcheck="false">var slicesOfPizza =&nbsp;16
var numPeople =&nbsp;9

if (slicesOfPizza %&nbsp;numPeople != 0) {
&nbsp;&nbsp;println("The pizza cannot be split evenly.")
}
// Prints: The pizza cannot be split evenly.

</pre><p>Using modulo&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">%</code>, we can find if dividing&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">16</code>&nbsp;by&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">9</code>&nbsp;has a remainder of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">0</code>. Since the remainder value does not equal&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">0</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"The pizza cannot be split evenly."</code>&nbsp;is outputted to the terminal.</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c1e48a8f-75e4-4cc4-8205-3cc291f5b1fc'::uuid, 5, '94236271-ebdb-46d7-b503-c965c3c37674'::uuid, 'LESSON'::public.resource_type, 'else-if Expressions', NULL, '<h3>else-if Expressions</h3><p><br></p><p>An&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>-<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression can be used to add a plethora of more&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/conditionals" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">conditionals</a>&nbsp;for our program to evaluate.</p><p><br></p><p>Let’s say we created a Kotlin program that determines what we will wear depending on the temperature outside. If we just use an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>/<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;expression, our options are limited:</p><pre class="ql-syntax" spellcheck="false">var temp =&nbsp;60

if (temp &gt; 65) {
&nbsp;&nbsp;println("Wear a&nbsp;t-shirt")
} else {
&nbsp;&nbsp;println("Wear a&nbsp;winter coat")
}
// Prints: Wear a&nbsp;winter coat

</pre><p><br></p><p>In real life, wearing a winter coat in 60-degree weather can cause a person to overheat. We need to wear something in between a heavy coat and a t-shirt, like a light jacket. We can place an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>-<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression in our code to represent this “in-between” situation:</p><pre class="ql-syntax" spellcheck="false">var temp =&nbsp;60

if (temp &gt; 65) {
&nbsp;&nbsp;println("Wear a&nbsp;t-shirt")
} else if (temp &gt; 45) {
&nbsp;&nbsp;println("Wear a&nbsp;light coat")
} else {
&nbsp;&nbsp;println("Wear a&nbsp;winter coat")
}
// Prints: Wear a&nbsp;light coat

</pre><p><br></p><p>Let’s examine this&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>-<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statement:</p><ul><li>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>-<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression must come after an&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression but before the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;expression.</li><li>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>-<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression contains its own condition placed within parentheses:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">temp &gt; 45</code>.</li></ul><p>The instruction&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println("Wear a light coat")</code>&nbsp;is executed only if the condition in the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;<strong>and</strong>&nbsp;the condition within the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>-<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expression is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>. If both conditions are false, the instructions in the next conditional, the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;expression, will execute.</p><p>An&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>-<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>&nbsp;expression can contain as many&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>-<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;expressions as needed. When using multiple&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">else</code>-<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">if</code>&nbsp;statements, the order in which they appear matters. The moment the program evaluates one of the conditionals as&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>, the program will execute that body of code and will not evaluate any of the conditionals that appear after.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d38295bb-9483-4a2f-93de-c65952fc3131'::uuid, 6, '94236271-ebdb-46d7-b503-c965c3c37674'::uuid, 'LESSON'::public.resource_type, 'Logical Operators', NULL, '<h3>Logical Operators</h3><p><br></p><p>Logical&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/operators" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">operators</a>&nbsp;evaluate the relationship between two or more Boolean expressions and return a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;value. There are several operators that we can use:&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&amp;&amp;</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">||</code>, and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!</code>.</p><p><br></p><p>The logical AND operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">&amp;&amp;</code>) returns&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;if and only if the expressions on both sides of the operator return&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>.</p><pre class="ql-syntax" spellcheck="false">var isSunny =&nbsp;true
var temp =&nbsp;85

if (isSunny &amp;&amp; temp &gt; 80) {
&nbsp;&nbsp;println("Wear sunglasses.")
}
// Prints: Wear sunglasses.

</pre><p><br></p><p>Since&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">isSunny</code>&nbsp;is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">temp</code>&nbsp;has a value above 80, the expression inside the condition becomes&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;so&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Wear sunglasses.</code>&nbsp;is outputted to the terminal.</p><p>The logical OR operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">||</code>) will only return&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;if at least one of the Boolean expressions being compared has a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;value.</p><pre class="ql-syntax" spellcheck="false">var isSnowing =&nbsp;false
var temp =&nbsp;38

if (isSnowing || temp &lt; 40 )&nbsp;{
&nbsp;&nbsp;println("Wear a&nbsp;scarf.")
}
// Prints: Wear a&nbsp;scarf.

</pre><p><br></p><p>Even though the first value&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">isSnowing</code>&nbsp;is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>, the full expression will return&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;because the other Boolean expression,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">temp &lt; 40</code>, is true.</p><p>The logical NOT operator, denoted by&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!</code>, will evaluate the truth value of a Boolean expression and then return its inverse. For example:</p><pre class="ql-syntax" spellcheck="false">var isSnowing =&nbsp;true
println(!isSnowing) // Prints: false

</pre><p><br></p><p>We can even add&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!</code>&nbsp;before a multi-part expression. By adding the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">!</code>&nbsp;operator to our previous code example, the Boolean expression now returns a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;value:</p><pre class="ql-syntax" spellcheck="false">var isSnowing =&nbsp;false
var temp =&nbsp;38

if (!(isSnowing || temp &lt; 40)) {
&nbsp;&nbsp;println("Wear a&nbsp;scarf.")
}
// This program will not have any output.

</pre><p><br></p><p><strong>Note:</strong>&nbsp;The truth tables displayed on the right side of the screen display the various outcomes of Boolean expressions being evaluated using logical operators.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b44a2dbc-0b65-4a47-ba59-4a93b0b57571'::uuid, 7, '94236271-ebdb-46d7-b503-c965c3c37674'::uuid, 'CODE'::public.resource_type, 'Conditional practice', 'b6484e21-6937-489c-b031-b71767994763'::uuid, 'Determine the Day of the Week from a Given Date', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ef14c879-dc50-49be-8dd5-cf9c02e5012c'::uuid, 0, 'f4865861-1ab8-4ba5-84d7-80ec3043fff2'::uuid, 'LESSON'::public.resource_type, 'Introduction to Lists', NULL, '<h3>Introduction to Lists</h3><p><br></p><p>In this section, we’re going to explore the various types of collections that exist in Kotlin. A&nbsp;<em>collection</em>&nbsp;is a group of elements that exist in a single structure. The first collection type we’ll learn about is one that’s most commonly used in Kotlin and many other programming languages: a list.</p><p>A Kotlin&nbsp;<em>list</em>&nbsp;is very much similar to a real-world list: it represents an ordered collection of elements that can contain duplicates. These elements can be of any primitive data type and represent a myriad of real-world scenarios. These can include student grades, restaurant ratings, a to-do list of tasks, and more.</p><p>Take a look at the image on the right. After a long day of sailing through the creek, Codey is going to set up camp and rest for the night. Being the environmentally friendly Kotlin developer that they are, they’ve opted to make a virtual to-do list of things they need to get done before nightfall:</p><pre class="ql-syntax" spellcheck="false">var toDo =&nbsp;listOf("gather wood", "start a&nbsp;fire", "set up tent", "eat dinner", "stargaze")

</pre><p><br></p><p>Printing the list would result in the following output:</p><pre class="ql-syntax" spellcheck="false">[gather wood, start a&nbsp;fire, set up tent, eat dinner, stargaze]

</pre><p><br></p><p>Notice how the syntax of a list in its definition is different from its output. If Kotlin isn’t your first programming language, you might recognize the output syntax with square brackets to be identical to that of an array.</p><p><br></p><p>As opposed to lists,&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/arrays" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">arrays</a>&nbsp;in Kotlin have a fixed size, thus not being the most convenient or easily applicable&nbsp;<a href="https://en.wikipedia.org/wiki/Data_structure" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">data structure</a>. For that reason, we’ll be focusing our time on exploring lists, but we encourage you to read up on arrays in Kotlin’s&nbsp;<a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-array/" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">documentation</a>.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('cd791c7e-2f8e-44c6-bae7-1cec86e39749'::uuid, 1, 'f4865861-1ab8-4ba5-84d7-80ec3043fff2'::uuid, 'LESSON'::public.resource_type, 'Creating an Immutable List', NULL, '<h3>Creating an Immutable List</h3><p><br></p><p>In Kotlin, the terms “mutable” and “immutable” apply not only to variables but also to collections. Much like an immutable variable representing a read-only value, an&nbsp;<em>immutable list</em>&nbsp;contains items that must never be altered. Its syntax is as follows:</p><pre class="ql-syntax" spellcheck="false">var/val listName = listOf(value1, value2, value3)
</pre><ul><li>For a list to be used and referenced throughout a program, it must be stored in a variable. Make sure to use keywords&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">val</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">var</code>&nbsp;in your declaration as well as a descriptive list name.</li><li>The creation of the Kotlin list begins on the right side of the assignment operator with the term,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">listOf</code>. This indicates an immutable list.</li><li>The term is then followed by a pair of parentheses that holds a collection of elements separated by commas.</li><li>Like variable declarations, the type of list can be inferred by the compiler or declared by the user. For example, a list of String values would be referenced as a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">List&lt;String&gt;</code>.</li></ul><p><br></p><p><strong>Note</strong>: Once initialized as a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">List&lt;String&gt;</code>, the list can&nbsp;<em>only</em>&nbsp;hold String values.</p><p>Keeping the above syntax in mind, let’s create an immutable list of String values that represent the countries we’ve visited:</p><p><br></p><pre class="ql-syntax" spellcheck="false">var countriesVisited =&nbsp;listOf("Japan", "Colombia", "Kenya", "Jordan")

</pre><p><br></p><p>Since&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">countriesVisited</code>&nbsp;was declared a mutable variable with the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">var</code>&nbsp;keyword, we can reassign the value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">countriesVisited</code>&nbsp;to store a different list if we’d like. However, since the list was declared immutable with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">listOf</code>, the contents of the list cannot change. They must always remain&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Japan"</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Colombia"</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Kenya"</code>, and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Jordan"</code>.</p><pre class="ql-syntax" spellcheck="false">println(countriesVisited)
// Prints: [Japan, Colombia, Kenya, Jordan]

</pre><p><br></p><p>Lastly, when printed to the screen, the list is contained within square brackets as opposed to parentheses.</p><p>We’ve learned a handful of rules and new concepts in this exercise. Don’t get discouraged if it doesn’t all stick right away; we’ll be getting ample practice throughout this lesson. Keep going, and let’s create your first Kotlin list! 📝</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('17d9052e-2945-471b-8ddd-ce9100a93b21'::uuid, 2, 'f4865861-1ab8-4ba5-84d7-80ec3043fff2'::uuid, 'LESSON'::public.resource_type, 'Accessing Elements in a List', NULL, '<h3>Accessing Elements in a List</h3><p><br></p><p>A collection is of no use to us if we can’t access or work with its contents. In order to access the elements within a list, we must reference the element’s “index”. An&nbsp;<em>index</em>&nbsp;represents a numerical position within a list.</p><pre class="ql-syntax" spellcheck="false">val oakIslandArtifacts =&nbsp;listOf("Lead cross", "Rhodolite garnet brooch", "Gold brooch")

</pre><p><br></p><p>Here’s a breakdown of the indices of the above list elements:</p><p>ElementIndex“Lead cross”0“Rhodolite garnet brooch”1“Gold brooch”2</p><p>Notice how the count begins with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">0</code>&nbsp;and not&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>; this is because Kotlin is a zero-based language and the count in every Kotlin collection begins with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">0</code>.</p><p>Keeping these indexed-positions in mind, we can construct the following syntax to access an element:</p><pre class="ql-syntax" spellcheck="false">listName[index]
</pre><p><br></p><p>The name of the list is followed by square brackets which contains the index of the element we need to access. Applying this pseudo code to our previous list, we can access each element as such:</p><pre class="ql-syntax" spellcheck="false">oakIslandArtifacts[0] // Lead cross
oakIslandArtifacts[1] // Rhodolite garnet brooch
oakIslandArtifacts[2] // Gold brooch

</pre><p><br></p><p>Each statement can be wrapped in a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println()</code>&nbsp;statement to see its output or stored in a variable for later use.</p><p><br></p><p><strong>Note</strong>: Attempting to access an element within an index that does not exist will result in an error. For instance, if there are&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">2</code>&nbsp;elements within a list, and the specified index is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">5</code>, the compiler will throw the following Out of Bound error:</p><pre class="ql-syntax" spellcheck="false">java.lang.ArrayIndexOutOfBoundsException: Index 5 out of bounds for length 2
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2fa34697-876f-4e7d-9b52-7833a913cb4a'::uuid, 3, 'f4865861-1ab8-4ba5-84d7-80ec3043fff2'::uuid, 'LESSON'::public.resource_type, 'Creating a Mutable List', NULL, '<h3>Creating a Mutable List</h3><p><br></p><p>Elements can be accessed from any list, but only with mutable lists can we change the contents of our list by adding, replacing, or removing elements. Previously we’ve only created immutable lists; in this exercise, we’ll learn how to create a mutable list and alter its contents.</p><p>The syntax for declaring a mutable list is as follows:</p><pre class="ql-syntax" spellcheck="false">var/val listName = mutableListOf(value1, value2, value3)
</pre><p><br></p><p>A mutable list is defined by the term,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">mutableListOf</code>&nbsp;as opposed to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">listOf</code>&nbsp;as we’ve seen previously. Although the syntax and structure of mutable and immutable lists are the same, the compiler knows which operations can or can’t be performed on the list given the term it’s defined with.</p><p>Assume we have a list that stores a student’s daily activities:</p><pre class="ql-syntax" spellcheck="false">var dailyActivities =&nbsp;mutableListOf("going to school", "attending tennis practice", "reading")

</pre><p><br></p><p>Now that it’s summertime and there’s no school, we would like to update the first element of our list to reflect the new season. We can take our previous knowledge of accessing elements a step further and assign a new value to an element’s indexed position with the following syntax:</p><pre class="ql-syntax" spellcheck="false">dailyActivities[0] =&nbsp;"swimming at the beach"

</pre><p><br></p><p>The value following the assignment operator will get replaced with the current value at the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">0</code>&nbsp;index. Printing the value of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">dailyActivities</code>&nbsp;will result in the following output and updated list:</p><pre class="ql-syntax" spellcheck="false">[swimming at the beach, attending tennis practice, reading]
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d0bf847f-5fc6-4ec3-b744-7274d021d95c'::uuid, 4, 'f4865861-1ab8-4ba5-84d7-80ec3043fff2'::uuid, 'LESSON'::public.resource_type, 'The size Property', NULL, '<h3>The size Property</h3><p><br></p><p>In Kotlin, the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">size</code>&nbsp;property determines the number of elements within a collection. It is not only applicable to lists but also to other collections that we’ll be working with in the coming lessons.</p><p>Similarly to the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">length</code>&nbsp;property for&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/strings" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">Strings</a>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">size</code>&nbsp;counts the number of elements in a collection and returns an Integer value.</p><p><br></p><p>Take a look at the following list of major European rivers:</p><pre class="ql-syntax" spellcheck="false">val majorRivers =&nbsp;listOf("Volga", "Danube", "Loire", "Rhine", "Elbe")

</pre><p><br></p><p>We can append&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">size</code>&nbsp;to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">majorRivers</code>&nbsp;and retrieve the number of elements in the list:</p><pre class="ql-syntax" spellcheck="false">println(majorRivers.size) // Prints: 5&nbsp;&nbsp;

</pre><p><br></p><p>Additionally, this code can be used to construct an informative String about our list:</p><pre class="ql-syntax" spellcheck="false">println("There are ${majorRivers.size} major rivers in Europe.")
// Prints: There are 5&nbsp;major rivers in Europe.&nbsp;&nbsp;

</pre><p><br></p><p>Furthermore,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">size</code>&nbsp;can be used along with an element’s index to retrieve the last element of a collection:</p><pre class="ql-syntax" spellcheck="false">println(majorRivers[majorRivers.size -&nbsp;1]) // Prints: Elbe

</pre><ul><li>Within the brackets,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">majorRivers.size</code>&nbsp;equates to&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">5</code>. Subtracting&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>&nbsp;from this value results in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">4</code>&nbsp;which becomes the final numerical index within the brackets.</li><li><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">majorRivers[4]</code>&nbsp;returns the 5th and last element in the list,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Elbe"</code>.</li></ul><p>This strategy is most commonly used when iterating over a collection or simply grabbing the last element of a list when we don’t know how many list elements there are in total. We’ll learn more about how to iterate over a collection later in the course.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('87e26da8-0ee7-4674-8220-94e199386bec'::uuid, 5, 'f4865861-1ab8-4ba5-84d7-80ec3043fff2'::uuid, 'LESSON'::public.resource_type, 'List Functions', NULL, '<h3>List Functions</h3><p><br></p><p>Every collection in Kotlin contains a series of built-in&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>&nbsp;that allow us to perform certain operations in order to retrieve information about the collection or manipulate its values.</p><p>A function that retrieves information about a list would only require read access whereas a function that changes the contents of a list would require both read and write access. As a result of this, a mutable list supports functions that possess read and write functionalities, whereas an immutable list supports functions that possess read-only operations. Let’s take a closer look:</p><p><br></p><p><strong>Mutable and immutable list functions:</strong></p><pre class="ql-syntax" spellcheck="false">var vowels =&nbsp;listOf(''A'', ''E'', ''I'', ''O'', ''U'')

</pre><p><br></p><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">contains()</code>&nbsp;function accepts a single value within its parentheses and returns a Boolean&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">true</code>&nbsp;or&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>&nbsp;depending on whether or not that value exists within a list. It does not need to change the contents of the list, thus it can be used on an immutable list.</p><pre class="ql-syntax" spellcheck="false">println(vowels.contains(''A'')) // Prints: true
println(vowels.contains(''B'')) // Prints: false

</pre><p><br></p><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">random()</code>&nbsp;function also only requires read-only access and returns a random element from the list:</p><pre class="ql-syntax" spellcheck="false">println(vowels.random()) // Prints: I

</pre><p><br></p><p><strong>Mutable ONLY list functions:</strong></p><pre class="ql-syntax" spellcheck="false">var primeNumbers =&nbsp;mutableListOf(4, 5, 7, 11, 13)&nbsp;&nbsp;

</pre><p><br></p><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">add()</code>&nbsp;function accepts a single value within its parentheses and appends that value to the end of a list:</p><pre class="ql-syntax" spellcheck="false">primeNumbers.add(17)
println(primeNumbers) // Prints: 4, 5, 7, 11, 13, 17

</pre><p><br></p><p>Since this function changes the contents of the list, it can only be used on mutable lists. Similarly, the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">remove()</code>&nbsp;function, also only used on mutable lists, accepts a single value within its parentheses and removes it from the list:</p><pre class="ql-syntax" spellcheck="false">primeNumbers.remove(4)
println(primeNumbers) // Prints: 5, 7, 11, 13, 17

</pre><p><br></p><p><strong>Note</strong>: If the value to be removed does not exist, the compiler will not throw an error and simply return&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">false</code>.</p><p>These functions are just the tip of the iceberg of what’s supported for lists in Kotlin; we encourage you to look through the documentation for&nbsp;<a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/#functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">immutable lists</a>&nbsp;and&nbsp;<a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/#functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">mutable lists</a>&nbsp;to explore other available functionalities.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2ee5d5be-7ef1-448d-a67e-ab23927b591e'::uuid, 0, '76667e3a-a1ee-40a4-8fa6-55368854902e'::uuid, 'LESSON'::public.resource_type, 'Introduction to Sets', NULL, '<h3>Introduction to Sets</h3><p><br></p><p>In this lesson, we’ll learn another fundamental Kotlin collection known as a set. A set is an un-ordered collection of unique elements. It’s most commonly applicable in programs that work with data&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/sets" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">sets</a>&nbsp;containing non-duplicate values such as usernames or passwords. Upon creating or adding elements to a set, the set automatically filters out any duplicates and always returns a unique collection.</p><p><br></p><p>As you progress through this lesson, you’ll notice that lists and sets are very common in syntax and share a multitude of built-in&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>. Their key difference lies in their purpose and behavior in a program. A developer building a program for a subway line’s train stops may choose to work with a list since trains often cross paths, whereas a program that stores bank account information would most likely be utilizing a set.</p><p><br></p><p>As we continue exploring other types of collections in Kotlin, keep in mind the similarities and differences between each one you’ve learned. A good developer doesn’t waste time memorizing every syntax in the book, but instead, focuses on understanding what tools are available and how they can be applied to a program.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('cf9d539e-8b21-4f74-a69e-bc869cd3c405'::uuid, 1, '76667e3a-a1ee-40a4-8fa6-55368854902e'::uuid, 'LESSON'::public.resource_type, 'Creating an Immutable Set', NULL, '<h3>Creating an Immutable Set</h3><p><br></p><p>As previously discussed, Kotlin collections fall under two categories: mutable and immutable, and sets are no exception. An immutable set is declared using the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">setOf</code>&nbsp;keyword and indicates a set whose values cannot change throughout a program:</p><pre class="ql-syntax" spellcheck="false">var/val setName = setOf(val1, val2, val3)
</pre><p><br></p><p><strong>Note:</strong>&nbsp;Similarly to lists, the set type can be inferred by the compiler or declared in the code. For example, a set comprised of String values would be inferred as a&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">Set&lt;String&gt;</code>.</p><p>In the code below, we are creating a new set and storing it in the variable,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">colorsOftheRainbow</code>:</p><pre class="ql-syntax" spellcheck="false">var colorsOfTheRainbow =&nbsp;setOf("red", "orange", "yellow", "green", "blue", "red")

</pre><p><br></p><p>Logging&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">colorsOfTheRainbow</code>&nbsp;to the console, notice that there is one less color in the set. The last element,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"red"</code>, was a duplicate String that the set object recognized and removed:</p><pre class="ql-syntax" spellcheck="false">println(colorsOfTheRainbow)

// Prints: [red, orange, yellow, green, blue]
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9e6e8e03-60fd-44b9-9e63-183e6baa1049'::uuid, 2, '76667e3a-a1ee-40a4-8fa6-55368854902e'::uuid, 'LESSON'::public.resource_type, 'Accessing Elements in a Set', NULL, '<h3>Accessing Elements in a Set</h3><p><br></p><p>Unlike lists, a set is an un-ordered collection, thus we can’t use square brackets and indices to retrieve its elements. However, a set is an intelligent tool that stores its elements in the order in which each element was inserted. We can utilize this order along with a function,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">elementAt()</code>, to access and retrieve elements.</p><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">elementAt()</code>&nbsp;function accepts an Integer value and returns the element at that position. This function is useful for collections that do not possess index access.</p><pre class="ql-syntax" spellcheck="false">listName.elementAt(integer)
</pre><p><br></p><p>Assume we’re writing a program that keeps track of animals that are no longer on the endangered list:</p><pre class="ql-syntax" spellcheck="false">var nonEndangered =&nbsp;setOf("Louisiana Black Bear", "Northern Brown Kiwi", "Gray Wolf", "Arabian Oryx")

</pre><p><br></p><p>To retrieve the animal,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">"Gray Wolf"</code>&nbsp;, we’d use the following syntax:</p><pre class="ql-syntax" spellcheck="false">nonEndangered.elementAt(2) // Gray Wolf

</pre><p><br></p><p>Since Kotlin is a&nbsp;<a href="https://kotlinlang.org/docs/reference/null-safety.html" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">null safe</a>&nbsp;language, it encourages developers to avoid&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">NullPointerException</code>&nbsp;errors wherever they can by using safer variations of function.</p><p>In the case that an element does not exist at a specified position, our code would throw an error:</p><pre class="ql-syntax" spellcheck="false">nonEndangered.elementAt(5) // Exception error

</pre><p><br></p><p>Exception error:</p><pre class="ql-syntax" spellcheck="false">Exception in thread "main" java.lang.IndexOutOfBoundsException: Collection doesn''t contain element at index 5.
</pre><p><br></p><p>To avoid this, we can use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">elementAtOrNull()</code>&nbsp;function, a safer variation of&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">elementAt()</code>&nbsp;to return&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">null</code>&nbsp;as opposed to an error when an element does not exist in the set:</p><pre class="ql-syntax" spellcheck="false">nonEndangered.elementAtOrNull(5) // null
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ccebe86a-ba81-4805-84c2-b44013c6f9c8'::uuid, 3, '76667e3a-a1ee-40a4-8fa6-55368854902e'::uuid, 'LESSON'::public.resource_type, 'Creating a Mutable Set', NULL, '<h3>Creating a Mutable Set</h3><p><br></p><p>With immutable sets, we don’t have much control over the contents they store, but with mutable sets, we are able to add, remove, or replace as many elements as we’d like. This allows us to work both with sets that are populated with values and empty sets, which are sets that are initialized without any values but can be populated at a later time.</p><p>To initialize an empty mutable set, we’d use the following syntax:</p><pre class="ql-syntax" spellcheck="false">var/val setName = mutableSetOf&lt;Type&gt;()
</pre><ul><li>The term,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">mutableSetOf</code>&nbsp;is used to declare a mutable set.</li><li>The term is followed by the type of data that we expect the set to hold and a pair of empty parentheses.</li></ul><p><br></p><p>Assume we’re developing a program for a building manager who would like to keep track of the apartments they own. Unfortunately, we haven’t received the apartment information from them just yet, so we create a mutable set and wait until we can populate it with values:</p><pre class="ql-syntax" spellcheck="false">var totalApts =&nbsp;mutableSetOf&lt;String&gt;()

</pre><p><br></p><p>While we wait, let’s practice declaring a set that comes prepopulated with values. The syntax is as follows:</p><pre class="ql-syntax" spellcheck="false">var/val setName = mutableSetOf(value1, value2, value3)
</pre><p><br></p><p>No need to specify the set type here as it will automatically be inferred by the compiler. Let’s see an example:</p><pre class="ql-syntax" spellcheck="false">var nycRadioStations =&nbsp;mutableSetOf(106.7, 101.1, 97.1, 103.5)

</pre><p><br></p><p>The compiler will infer&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">mutableSetOf&lt;Double&gt;</code>&nbsp;from the code above and will only accept values of type Double within this set going forward.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b936bce9-ee39-421b-b3fe-2cf6910e5caa'::uuid, 4, '76667e3a-a1ee-40a4-8fa6-55368854902e'::uuid, 'LESSON'::public.resource_type, 'Adding and Removing Elements', NULL, '<h3>Adding and Removing Elements</h3><p><br></p><p>To add or remove any elements from a set, we must utilize Kotlin’s built-in set&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>. Luckily, many of these functions can also be applied to other collection types, thus you might recognize some of these syntaxes from a previous lesson.</p><p>To add a single element to a set, we’d use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">add()</code>&nbsp;function as we did in the lists lesson; however, if we were interested in adding many elements to a set at once, the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">addAll()</code>&nbsp;function would be more appropriate. Note that in contrast to lists, we cannot add an element that already exists in the set.</p><p><br></p><p>Let’s take a look at how&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">addAll()</code>&nbsp;works. Recall the building example from the previous exercise. The manager got back to us with the following list of apartments:</p><pre class="ql-syntax" spellcheck="false">var aptList =&nbsp;listOf("1A", "1B", "1C", "2A", "2B", "2C", "2C", "1A")&nbsp;&nbsp;

</pre><p><br></p><p>We’re ready to populate our empty set,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">totalApts</code>, with these values. With the help of the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">addAll()</code>&nbsp;function, we’re able to populate our set with multiple values at once:</p><pre class="ql-syntax" spellcheck="false">totalApts.addAll(aptList)

println(totalApts) // Prints: [1A, 1B, 1C, 2A, 2B, 2C]

</pre><p><br></p><p>Looks like the manager may have accidentally added duplicate apartment numbers. Luckily, the set removed the duplicate elements, and we’re left with unique data.</p><p>Oppositely, we can also remove all elements from a collection using the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">clear()</code>&nbsp;function. Assume the building is selling their property and all of the apartments need to be removed from the data set:</p><pre class="ql-syntax" spellcheck="false">totalApts.clear()
println(totalApts) // Prints: []

</pre><p><br></p><p><code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">addAll()</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">clear()</code>&nbsp;are highly useful, quick, and efficient ways of adding or removing large amounts of data from a collection at once.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('141666cd-8fe1-4c46-ad66-7f4af59f7f6c'::uuid, 5, '76667e3a-a1ee-40a4-8fa6-55368854902e'::uuid, 'LESSON'::public.resource_type, 'Additional Set Functions', NULL, '<h3>Additional Set Functions</h3><p><br></p><p>In addition to adding and removing elements from a set, the set collection supports a myriad of other functionalities. You can find the entire list in Kotlin’s&nbsp;<a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-set/#functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">documentation</a>.</p><p><br></p><p>In this exercise, we’ll explore some of the most common set&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>&nbsp;using the following example:</p><pre class="ql-syntax" spellcheck="false">var numbers =&nbsp;setOf(10, 15, 20, 25)

</pre><p><br></p><p>To retrieve, the first element of any set, we can use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">first()</code>&nbsp;function:</p><pre class="ql-syntax" spellcheck="false">numbers.first() // 10

</pre><p><br></p><p>To retrieve the last element of any set, we can use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">last()</code>&nbsp;function:</p><pre class="ql-syntax" spellcheck="false">numbers.last() // 25

</pre><p><br></p><p>Finally, if we’d like to sum up all of the elements in a set, we can use the&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">sum()</code>&nbsp;function:</p><pre class="ql-syntax" spellcheck="false">numbers.sum() // 70

</pre><p><strong>Note</strong>: To see the output of each function call on a set, it must be wrapped in a print statement.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b1191833-2456-4996-8aa7-8b79a91cb20d'::uuid, 6, '76667e3a-a1ee-40a4-8fa6-55368854902e'::uuid, 'CODE'::public.resource_type, 'Set practice', 'b6484e21-6937-489c-b031-b71767994739'::uuid, 'Three sum closest', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a9e9a6ff-fd08-4f7e-b353-0d2208698f3b'::uuid, 0, '16973bd3-e042-4c10-ad58-5a4b89b9e8f6'::uuid, 'LESSON'::public.resource_type, 'Introduction to Loops', NULL, '<h3>Introduction to Loops</h3><p><br></p><p>Why write 100 lines of code when you can write 2? When we come across code we want to repeat, we can rely on&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/loops" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);"><em>loops</em></a>. Loops give us the ability to repeat specified blocks of code as many times as we want.</p><p><br></p><p>Let’s say we wanted to output elements in a list. The process wouldn’t be that bad if the list had 5 elements. We could write five&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">println()</code>&nbsp;statements. What if the list had 100 elements? Or 1,000? Or even 100,000?!</p><p><br></p><p>Loops answer the call when we need to repeat a task over and over again, even if it is millions of times.</p><p><br></p><p>In this lesson, we will look at loops that will repeat code a defined number of times or based on a specific condition. We will look at how to combine loops to obtain a higher number of repetitions as well as how to exit loops early or skip code repetitions.</p><p><br></p><p>By the end of this lesson you will understand the best way to repeat tasks in a controlled manner while keeping your code organized and readable.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('df90cd42-7ddb-48b5-9ee7-55297ce51e9a'::uuid, 1, '16973bd3-e042-4c10-ad58-5a4b89b9e8f6'::uuid, 'LESSON'::public.resource_type, 'for Loop', NULL, '<h3>for Loop</h3><p><br></p><p>When we know how many times we want a section of code to repeat, we often use a&nbsp;<em>for loop</em>.</p><p>A&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">for</code>&nbsp;loop starts with the&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">for</code>&nbsp;keyword and is followed by a statement that defines a loop variable followed by identifying an&nbsp;<em>iterator</em>:</p><pre class="ql-syntax" spellcheck="false">for(i in 1..4) {
&nbsp;&nbsp;println("I am in a&nbsp;loop!")
}

</pre><ul><li><code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">for</code>&nbsp;is a keyword used to declare a&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">for</code>&nbsp;loop.</li><li>We define&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">i</code>&nbsp;as the loop variable. This variable holds the current iteration value and can be used within the loop body.</li><li>The&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">in</code>&nbsp;keyword is between the variable definition and the iterator.</li><li>The range&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">1..4</code>&nbsp;is the&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">for</code>&nbsp;loop iterator.</li></ul><p><br></p><p>An&nbsp;<a href="https://kotlinlang.org/docs/reference/iterators.html" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">iterator</a>&nbsp;is an object that allows us to step through and access every individual element in a collection of values. In most cases, the iterators we use in&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">for</code>&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/loops" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">loops</a>&nbsp;are ranges and collections. In this example, the range has 4 elements so the&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">for</code>&nbsp;loop repeats&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">4</code>&nbsp;times:</p><pre class="ql-syntax" spellcheck="false">I am in a&nbsp;loop!
I am in a&nbsp;loop!
I am in a&nbsp;loop!
I am in a&nbsp;loop!

</pre><p><br></p><p>It is important to note that the loop variable only exists within the loop’s code block. Trying to access the loop variable outside the&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">for</code>&nbsp;loop will result in an error.</p><p>Here is an example of using the loop variable within the loop body:</p><pre class="ql-syntax" spellcheck="false">for (i in 1..4) {
&nbsp;&nbsp;println("i =&nbsp;$i")
}

</pre><p><br></p><p>While the above example uses literal numbers&nbsp;<code style="color: rgb(21, 20, 31); background-color: rgb(234, 233, 237);">1..4</code>&nbsp;to define the range, we can also use&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/variables" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">variables</a>&nbsp;to define the boundaries of our loop’s range, giving us more dynamic control over our loop’s iteration:</p><pre class="ql-syntax" spellcheck="false">var num =&nbsp;4
for (i in 1..num) {
&nbsp;&nbsp;println("i =&nbsp;$i")
}

</pre><p><br></p><p>Both of the code snippets produce the same final output:</p><pre class="ql-syntax" spellcheck="false">i =&nbsp;1
i =&nbsp;2
i =&nbsp;3
i =&nbsp;4
</pre>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6968105b-5169-4626-8f6b-28cea5e38556'::uuid, 2, '16973bd3-e042-4c10-ad58-5a4b89b9e8f6'::uuid, 'LESSON'::public.resource_type, 'Controlling the Iteration', NULL, '<h3>Controlling the Iteration</h3><p><br></p><p>Sometimes we want to count backwards, or count by 2s, or both! Using certain&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/functions" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">functions</a>&nbsp;alongside or instead of the normal range operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">..</code>) can enhance the iterative abilities of our&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">for</code>&nbsp;<a href="https://www.codecademy.com/resources/docs/kotlin/loops" rel="noopener noreferrer" target="_blank" style="background-color: transparent; color: var(--color-primary);">loops</a>. The functions&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">downTo</code>,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">until</code>&nbsp;and&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">step</code>&nbsp;give us more control of a range and therefore more control of our loops.</p><p><br></p><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">downTo</code>&nbsp;function simply creates a reverse order group of values, where the starting boundary is greater than the ending boundary. To accomplish this, replace the range operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">..</code>) with&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">downTo</code>:</p><pre class="ql-syntax" spellcheck="false">for (i in 4 downTo 1) {
&nbsp;&nbsp;println("i =&nbsp;$i")
}

</pre><p><br></p><p>We can see in the output that the first number in&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">i</code>&nbsp;is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">4</code>&nbsp;and the last is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1</code>:</p><pre class="ql-syntax" spellcheck="false">i =&nbsp;4
i =&nbsp;3
i =&nbsp;2
i =&nbsp;1

</pre><p><br></p><p>The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">until</code>&nbsp;function creates an ascending range, just like the (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">..</code>) operator, but excludes the upper boundary:</p><pre class="ql-syntax" spellcheck="false">for (i in 1 until 4) {
&nbsp;&nbsp;println("i =&nbsp;$i")
}

</pre><p><br></p><p>The upper boundary,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">4</code>, is not included in the output:</p><pre class="ql-syntax" spellcheck="false">i =&nbsp;1
i =&nbsp;2
i =&nbsp;3

</pre><p><br></p><p>Up until now, each of these functions, including the range operator (<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">..</code>), have counted up or down by one. The&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">step</code>&nbsp;function specifies the amount these functions count by:</p><pre class="ql-syntax" spellcheck="false">for (i in 1..8 step 2) {
&nbsp;&nbsp;println("i =&nbsp;$i")
}

</pre><p><br></p><p>The loop variable&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">i</code>&nbsp;now increases by 2 for every iteration. The last number output is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">7</code>, since 2 steps up from that is&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">9</code>&nbsp;which is outside the defined range,&nbsp;<code style="background-color: rgb(234, 233, 237); color: rgb(21, 20, 31);">1..8</code>:</p><pre class="ql-syntax" spellcheck="false">i =&nbsp;1
i =&nbsp;3
i =&nbsp;5
i =&nbsp;7
</pre><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('09301ac6-fff9-4bdb-9f77-9486fa3ef5d7'::uuid, 3, '16973bd3-e042-4c10-ad58-5a4b89b9e8f6'::uuid, 'CODE'::public.resource_type, 'Loops practice', 'b6484e21-6937-489c-b031-b71767994760'::uuid, 'Check triangle from side length', '');
-- end of chapter resource kotlin 1

-- chaper resource kotlin 2
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2ca0e31a-5b44-411e-af32-5126882d8d33'::uuid, 1, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'LESSON'::public.resource_type, 'Kotlin Documentation', NULL, '<p class="ql-align-center"><img src="https://video.udacity-data.com/topher/2018/March/5ab4e951_screen-shot-2018-03-23-at-1.47.03-pm/screen-shot-2018-03-23-at-1.47.03-pm.png"></p><h2>Kotlin Documentation</h2><p>Throughout this course you might find it useful to check the official Kotlin documentation every time you learn something new:</p><p><a href="http://kotlinlang.org/docs/reference/" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>http://kotlinlang.org/docs/reference/</strong></a></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b7420705-7874-413e-aae1-efc0029c88cc'::uuid, 2, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'VIDEO'::public.resource_type, 'Operators', NULL, '', 'https://www.youtube.com/watch?v=MVsKZB6SQ7M');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c9eb0957-0258-4e15-b28f-1b82df82dcfc'::uuid, 3, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'CODE'::public.resource_type, 'Operators practice', 'b6484e21-6937-489c-b031-b71767994763'::uuid, 'Determine the Day of the Week from a Given Date', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9a65f034-6420-48c6-847f-b2347dd5407c'::uuid, 4, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'VIDEO'::public.resource_type, 'Building the Aquarium', NULL, '', 'https://www.youtube.com/watch?v=60x8uwtyCDg');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6560f42d-8572-4229-9f9a-63e3b462976b'::uuid, 0, '10712a27-3124-4681-9a27-bde72357c1ef'::uuid, 'VIDEO'::public.resource_type, 'Welcome', NULL, '', 'https://www.youtube.com/watch?v=dCpwsTGzdRA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4a07f109-a648-46c6-a6c7-de3a2fee3c1e'::uuid, 1, '10712a27-3124-4681-9a27-bde72357c1ef'::uuid, 'LESSON'::public.resource_type, 'Installing the JDK', NULL, '<h2>Installing the Java Development Kit (JDK)</h2><p>If you don''t have the latest JDK already installed on your computer, follow the steps below. You will need to have the JDK installed to run Kotlin programs.</p><p>The JDK is freely available, and you can download it here:&nbsp;<a href="http://www.oracle.com/technetwork/java/javase/overview/index.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>http://www.oracle.com/technetwork/java/javase/overview/index.html</strong></a></p><p><a href="http://www.oracle.com/technetwork/java/javase/overview/index.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></p><p>.</p><h3>The JDK or the JRE?</h3><p>The JRE (Java Runtime Environment) is needed for running Java and Kotlin programs. The JDK (Java Development Kit), on the other hand, includes the JRE, plus the development tools you''ll need for writing and running Java programs. You need the JDK for writing Kotlin Programs.</p><p><br></p><h3>Steps to install the JDK</h3><h4>1. Uninstall any older versions of the JDK/JRE</h4><p>We recommend that you install only the latest JDK.</p><p><br></p><h4>2. Download the JDK</h4><p>You can download the JDK for free here:&nbsp;<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>http://www.oracle.com/technetwork/java/javase/downloads/index.html</strong></a></p><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></p><p>.</p><ol><li>Click the "Download" button under the JDK for the latest Java SE version.</li><li>Check "Accept License Agreement".</li><li>Choose the JDK for your operating system.</li></ol><p><br></p><h4>3. Install the JDK (for Mac)</h4><p>From either the Downloads window of the browser, or from the file browser, double-click the .dmg file to launch the install file.</p><ol><li>A Finder window appears with an icon of an open box and the name of the .pkg file.</li><li>Double-click the package icon to launch the Install app, and follow the prompts as they appear.</li><li>You might need to enter the administrator password to continue.</li><li>Feel free to delete the .dmg file to save space after the installation is complete.</li></ol><p><br></p><h4>3. Install the JDK (for Windows)</h4><p>Run the downloaded installer (e.g.,&nbsp;<code style="color: var(--chakra-colors-black);">jdk-10.0.x_windows-x64_bin.exe</code>), which installs both the JDK and the JRE.</p><p>By default, the JDK will be installed in the directory "C:\Program Files\Java\jdk-10.0.x", where x denotes the version number; and the JRE in "C:\Program Files\Java\jre-10.0.x".</p><p>Accept the defaults, and follow the screen instructions to install the JDK.</p><p><br></p><h4>4. Add the JDK installation path to PATH (Windows only)</h4><p>Windows searches the current directory and the directories listed in the PATH environment variable (system variable) for executable programs.</p><ol><li>Open "Control Panel" -&gt; "System" -&gt; "Advanced system settings" -&gt; "Environment Variables".</li><li>Under "System variables", scroll down to select "Path" and click "Edit...".</li><li>Append to the existing Path value a semi-colon ";" then the JDK''s "bin" directory (e.g. ";C:\Program Files\Java\jdk-10.0.0\bin").</li></ol><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0c82a1ac-ef32-48b3-93ff-5616b9168ef8'::uuid, 2, '10712a27-3124-4681-9a27-bde72357c1ef'::uuid, 'LESSON'::public.resource_type, 'Installing IntelliJ', NULL, '<h2>Download and Install IntelliJ IDEA</h2><ol><li><a href="https://www.jetbrains.com/idea/download/index.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>Download IntelliJ IDEA</strong></a></li><li><a href="https://www.jetbrains.com/idea/download/index.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></li><li>&nbsp;for your operating system.</li><li>Do the following, depending on your operating system:</li></ol><h5><br></h5><h5>Windows:</h5><ol><li>Run the ideaIC.exe or the ideaIU.exe file you have downloaded.</li><li>Follow the instructions in the installation wizard.</li></ol><h5><br></h5><h5>Mac:</h5><ol><li>Double-click the ideaIC.dmg or ideaIU.dmg file you have downloaded to mount the macOS disk image.</li><li>Copy IntelliJ IDEA to the Applications folder.</li></ol><h2><br></h2><h2>More information</h2><p>Check out this&nbsp;<a href="https://www.jetbrains.com/help/idea/install-and-set-up-product.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>link</strong></a></p><p><a href="https://www.jetbrains.com/help/idea/install-and-set-up-product.html" rel="noopener noreferrer" target="_blank" style="color: rgb(32, 21, 255); background-color: transparent;"><strong>(opens in a new tab)</strong></a></p><p>&nbsp;for more information on how to install and set up IntelliJ.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('51c69e36-4e07-4d30-9384-37b2e8ed9655'::uuid, 3, '10712a27-3124-4681-9a27-bde72357c1ef'::uuid, 'LESSON'::public.resource_type, 'Verify IntelliJ Installation', NULL, '<h2>Verify IntelliJ Installation</h2><p>Check that your IntelliJ is installed and up-to-date by following these steps below:</p><ol><li>To check whether you need to install JDK, in a terminal window, type:</li></ol><pre class="ql-syntax" spellcheck="false">java -version
 javac -version
</pre><p><br></p><ol><li>If you do not have it, or do not have the latest version, download and install JDK.</li><li>Install IntelliJ. This course uses IntelliJ and we recommend you use the same IDE.</li><li>Start IntelliJ.</li><li>Install any updates and additional content you are prompted for.</li><li>Select IntelliJ IDEA -&gt; Check for updates… until there are no more updates.</li></ol><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b6eb3b85-3fe8-47ed-a2c6-bedeaf2a4865'::uuid, 4, '10712a27-3124-4681-9a27-bde72357c1ef'::uuid, 'VIDEO'::public.resource_type, 'Hello, Kotlin', NULL, '', 'https://www.youtube.com/watch?v=02Tg9hOhqLc');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f8b532d3-2139-43c4-b3d2-10519e98ba26'::uuid, 5, '10712a27-3124-4681-9a27-bde72357c1ef'::uuid, 'VIDEO'::public.resource_type, 'Summary', NULL, '', 'https://www.youtube.com/watch?v=sBR8L7Vzu-k');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('76208f43-b0a1-4495-bab5-f48148caf06a'::uuid, 0, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=HOXrd62bBmM');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('fdf9ed70-cdec-4102-8074-443cc2e687e8'::uuid, 5, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'LESSON'::public.resource_type, 'Self quiz', NULL, '<h2>Practice Basic Operations in Kotlin</h2><p>When it comes to basic operations, it''s a good thing for this to become automatic, something less to think about while you are trying to figure out the solution to your actual programming challenge. There is only one road to automaticity, and that''s practice. The following are some starting points for playing in REPL with the operations and concepts introduced in this lesson.</p><p><br></p><p><strong>Practice Time: Basic Operations</strong></p><p>Solve the following using the operator methods in one line of code.</p><p>If you start with 2 fish, and they breed twice, producing 71 offspring the first time, and 233 offspring the second time, and then 13 fish are swallowed by a hungry moray eel, how many fish do you have left? How many aquariums do you need if you can put 30 fish per aquarium?</p><ul><li><strong>Hint:</strong>&nbsp;You can chain method calls.</li><li><strong>Hint:</strong>&nbsp;You can call the methods on numbers, and Kotlin will convert them to objects for you.</li><li><strong>Bonus question:</strong>&nbsp;What is special about all the numbers of fish?</li></ul><p><br></p><p><strong>Practice Time: Variables</strong></p><ol><li>Create a String variable rainbowColor, set its color value, then change it.</li><li>Create a variable blackColor whose value cannot be changed once assigned. Try changing it anyway.</li></ol><p><br></p><p><strong>Practice Time: Nullability</strong></p><ol><li>Try to set&nbsp;<code style="color: var(--chakra-colors-black);">rainbowColor</code>&nbsp;to&nbsp;<code style="color: var(--chakra-colors-black);">null</code>. Declare two variables,&nbsp;<code style="color: var(--chakra-colors-black);">greenColor</code>&nbsp;and&nbsp;<code style="color: var(--chakra-colors-black);">blueColor</code>. Use two different ways of setting them to&nbsp;<code style="color: var(--chakra-colors-black);">null</code>.</li></ol><p><br></p><p><strong>Practice Time: Nullability/Lists</strong></p><ol><li>Create a list with two elements that are null; do it in two different ways.</li><li>Next, create a list where the list is null.</li></ol><p><br></p><p><strong>Practice Time: Null Checks</strong></p><ol><li>Create a nullable integer variable called&nbsp;<code style="color: var(--chakra-colors-black);">nullTest</code>, and set it to&nbsp;<code style="color: var(--chakra-colors-black);">null</code>. Use a null-check that increases the value by one if it''s not null, otherwise returns 0, and prints the result.</li></ol><p><strong>Hint:</strong>&nbsp;Use the Elvis operator.</p><p>I''m done!</p><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e347c90c-1a17-49b3-a150-a1fb17acdb21'::uuid, 6, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'VIDEO'::public.resource_type, 'Strings', NULL, '', 'https://www.youtube.com/watch?v=O4GiJXCzyr4');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1935e3c6-e78e-4868-8222-466fdace49ba'::uuid, 7, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'LESSON'::public.resource_type, 'Self quiz', NULL, '<h2>Do the Following Tasks in REPL</h2><p><br></p><p><strong>Practice Time</strong></p><ol><li>Create three String variables for&nbsp;<code style="color: var(--chakra-colors-black);">trout</code>,&nbsp;<code style="color: var(--chakra-colors-black);">haddock</code>, and&nbsp;<code style="color: var(--chakra-colors-black);">snapper</code>.</li><li>Use a String template to print whether you do or don''t like to eat these kinds of fish.</li></ol><p><br></p><p><strong>Practice Time</strong></p><p><code style="color: var(--chakra-colors-black);">when</code>&nbsp;statements in Kotlin are like&nbsp;<code style="color: var(--chakra-colors-black);">case</code>&nbsp;or&nbsp;<code style="color: var(--chakra-colors-black);">switch</code>&nbsp;statements in other languages.</p><p>Create a&nbsp;<code style="color: var(--chakra-colors-black);">when</code>&nbsp;statement with three comparisons:</p><ul><li>If the length of the&nbsp;<code style="color: var(--chakra-colors-black);">fishName</code>&nbsp;is 0, print an error message.</li><li>If the length is in the range of 3...12, print "Good fish name".</li><li>If it''s anything else, print "OK fish name".</li></ul>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('536bc603-64fb-45b7-9293-37748616e706'::uuid, 8, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'VIDEO'::public.resource_type, 'Arrays and Loops', NULL, '', 'https://www.youtube.com/watch?v=DUs1lPAcPXI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ffd02839-a808-4a42-8f9e-d26fa32f470f'::uuid, 9, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'LESSON'::public.resource_type, 'Selft practice', NULL, '<p><span style="background-color: rgb(250, 250, 250); color: rgb(11, 11, 11);">Looping over arrays and lists is a fundamental technique that has a lot of flexibility in Kotlin. Let''s practice.</span></p><p><br></p><h4>Basic example</h4><ol><li>Create an integer array of numbers called&nbsp;<code style="color: var(--chakra-colors-black);">numbers</code>, from 11 to 15.</li><li>Create an empty mutable list for Strings.</li><li>Write a&nbsp;<code style="color: var(--chakra-colors-black);">for</code>&nbsp;loop that loops over the array and adds the string representation of each number to the list.</li></ol><h4>Challenge example</h4><ul><li>How can you use a&nbsp;<code style="color: var(--chakra-colors-black);">for</code>&nbsp;loop to create (a list of) the numbers between 0 and 100 that are divisible by 7?</li></ul>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('be82e95d-9fc7-4d54-b1f6-b5b4e4f499c8'::uuid, 10, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'CODE'::public.resource_type, 'Final chapter code practice', 'b6484e21-6937-489c-b031-b71767994761'::uuid, 'Determine number of days in a month', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('daba6029-f4eb-4dff-a86f-613fe5f56900'::uuid, 11, 'c0784c4e-8cd5-4ffd-843a-14963c94e59f'::uuid, 'VIDEO'::public.resource_type, 'Summary', NULL, '', 'https://www.youtube.com/watch?v=1yQhZ0tSDuM');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('391dd1cb-20aa-465b-a0ea-fb15ad253d3e'::uuid, 0, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=xlGj-pm3w-U');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d4534fd4-c0e1-4832-9cc9-9934a7507357'::uuid, 1, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Main Function', NULL, '', 'https://www.youtube.com/watch?v=NUsO0k5jDBs');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('63577824-ff37-4143-b462-6197de52cbcc'::uuid, 2, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'LESSON'::public.resource_type, 'Selft practice quiz', NULL, '<h2>Practice Functions</h2><p>In this practice, you will create your own Kotlin file with a main function and another function. You will use this file in later practices as a scratch file for your code, like we do in the screencasts.</p><p><br></p><p><strong>Basic Task</strong></p><ol><li>Create a new Kotlin file.</li><li>Copy and paste the&nbsp;<code style="color: var(--chakra-colors-black);">main()</code>&nbsp;function from Hello World into the file.</li><li>Create a new function,&nbsp;<code style="color: var(--chakra-colors-black);">dayOfWeek()</code>.</li><li>In the body of the function, print "What day is it today?"</li><li>Call&nbsp;<code style="color: var(--chakra-colors-black);">dayOfWeek()</code>&nbsp;from&nbsp;<code style="color: var(--chakra-colors-black);">main()</code>.</li><li>Run your program.</li></ol><p><br></p><p><strong>Extended Task</strong></p><p>In the body of the&nbsp;<code style="color: var(--chakra-colors-black);">dayOfWeek()</code>&nbsp;function, answer the question by printing the current day of the week.</p><h4>Hints</h4><ul><li>You can use Java libraries (java.util) from Kotlin. For example, to get the day of the week:</li></ul><pre class="ql-syntax" spellcheck="false">Calendar.getInstance().get(Calendar.DAY_OF_WEEK)
</pre><ul><li>Type in the code, then press Option + Enter in Mac, or Alt + Enter in Windows, over the red&nbsp;<code style="color: var(--chakra-colors-black);">Calendar</code>&nbsp;class to import the library.</li><li>Use a&nbsp;<code style="color: var(--chakra-colors-black);">when</code>&nbsp;statement to print a string depending on the day. Sunday is the first day of the week.</li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('cd97d531-4be2-46c2-8001-370cd9667659'::uuid, 3, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Main Arguments', NULL, '', 'https://www.youtube.com/watch?v=JjJYiQmdZ7o');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('729b798c-9263-442e-b234-430d29a95a17'::uuid, 4, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Random Day', NULL, '', 'https://www.youtube.com/watch?v=xSpBecWbJOo');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('fb9cc64b-6454-4b42-87cb-fabcc80f6c2d'::uuid, 5, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'LESSON'::public.resource_type, 'Quiz: Practice Time', NULL, '<p><strong>Practice Time</strong></p><p><br></p><p>Create a program with a function that returns a fortune cookie message that you can print.</p><ol><li>Create a&nbsp;<code style="color: var(--chakra-colors-black);">main()</code>&nbsp;function.</li><li>From the&nbsp;<code style="color: var(--chakra-colors-black);">main()</code>&nbsp;function, call a function,&nbsp;<code style="color: var(--chakra-colors-black);">getFortuneCookie()</code>, that returns a String.</li><li>Create a&nbsp;<code style="color: var(--chakra-colors-black);">getFortuneCookie()</code>&nbsp;function that takes no arguments and returns a String.</li><li>In the body of&nbsp;<code style="color: var(--chakra-colors-black);">getFortuneCookie()</code>, create a list of fortunes. Here are some ideas:</li></ol><ul><li class="ql-indent-1">"You will have a great day!"</li><li class="ql-indent-1">"Things will go well for you today."</li><li class="ql-indent-1">"Enjoy a wonderful day of success."</li><li class="ql-indent-1">"Be humble and all will turn out well."</li><li class="ql-indent-1">"Today is a good day for exercising restraint."</li><li class="ql-indent-1">"Take it easy and enjoy life!"</li><li class="ql-indent-1">"Treasure your friends because they are your greatest fortune."</li></ul><ol><li>Below the list, print: "Enter your birthday: "</li></ol><ul><li class="ql-indent-1"><strong>Hint:</strong>&nbsp;Use&nbsp;<code style="color: var(--chakra-colors-black);">print()</code>, not&nbsp;<code style="color: var(--chakra-colors-black);">println()</code></li></ul><ol><li>Create a variable,&nbsp;<code style="color: var(--chakra-colors-black);">birthday</code>.</li><li>Read the user''s input form the standard input and assign it to birthday. If there is no valid input, set&nbsp;<code style="color: var(--chakra-colors-black);">birthday</code>&nbsp;to 1.</li></ol><ul><li class="ql-indent-1"><strong>Hint:</strong>&nbsp;Use&nbsp;<code style="color: var(--chakra-colors-black);">readLine()</code>&nbsp;to read a line of input (completed with Enter) as a String.</li><li class="ql-indent-1"><strong>Hint:</strong>&nbsp;In Kotlin, you can use&nbsp;<code style="color: var(--chakra-colors-black);">toIntOrNull()</code>&nbsp;to convert a number as a String to an Integer numeric. If the user enters "",&nbsp;<code style="color: var(--chakra-colors-black);">toIntOrNull</code>&nbsp;returns&nbsp;<code style="color: var(--chakra-colors-black);">null</code>.</li><li class="ql-indent-1"><strong>Hint:</strong>&nbsp;Check for&nbsp;<code style="color: var(--chakra-colors-black);">null</code>&nbsp;using the ? operator and use the ?: operator to handle the null case.</li></ul><ol><li>Divide the birthday by the number of fortunes, and use the remainder as the index for the fortune to return.</li><li>Return the fortune.</li><li>In&nbsp;<code style="color: var(--chakra-colors-black);">main()</code>, print: "Your fortune is: ", followed by the fortune string.</li></ol><h3><br></h3><h3>Extra practice:</h3><p>Use a&nbsp;<code style="color: var(--chakra-colors-black);">for</code>&nbsp;loop to run the program 10 times, or until the "Take it easy" fortune has been selected.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('802a6bdb-a5e9-4607-b56c-f79275d6b116'::uuid, 6, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Fish Food', NULL, '', 'https://www.youtube.com/watch?v=f_SqAWop50Y');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f77a92fe-f62d-4f85-b083-f1ff832b0201'::uuid, 7, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'LESSON'::public.resource_type, 'Quiz: Practice Time 2', NULL, '<p><strong>Practice Time</strong></p><p><br></p><p>Use the code you created in the last practice, or copy the starter code from below.</p><p>The&nbsp;<code style="color: var(--chakra-colors-black);">getFortune()</code>&nbsp;function should really only be getting the fortune, and not be in the business of getting the birthday.</p><p>Change your Fortune Cookie program as follows:</p><ol><li>Create a function called&nbsp;<code style="color: var(--chakra-colors-black);">getBirthday()</code>&nbsp;that gets the birthday from the user.</li><li>Pass the result of&nbsp;<code style="color: var(--chakra-colors-black);">getBirthday()</code>&nbsp;to&nbsp;<code style="color: var(--chakra-colors-black);">getFortune()</code>&nbsp;using an Integer argument, and use it to return the correct fortune.</li><li>Remove getting the birthday from&nbsp;<code style="color: var(--chakra-colors-black);">getFortune()</code></li><li>Instead of calculating the fortune based on the birthday, use a&nbsp;<code style="color: var(--chakra-colors-black);">when</code>&nbsp;statement to assign some fortunes as follows (or use your own conditions):</li></ol><ul><li class="ql-indent-1">If the birthday is 28 or 31...</li><li class="ql-indent-1">If the birthday is in the first week…</li><li class="ql-indent-1"><code style="color: var(--chakra-colors-black);">else</code>&nbsp;… return the calculated fortune as before.</li></ul><p><strong>Hint</strong>: There are several ways in which to make this&nbsp;<code style="color: var(--chakra-colors-black);">when</code>&nbsp;statement. How much can you Kotlinize it?</p><p><br></p><p><strong>Starter Code:</strong>&nbsp;</p><p><code style="color: var(--chakra-colors-black);">fun main(args: Array&lt;String&gt;) { var fortune: String for (i in 1..10) { fortune = getFortune(getBirthday()) println("\nYour fortune is: $fortune") if (fortune.contains("Take it easy")) break; } }</code></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0f78c221-cc0a-4793-9fc1-cda58ffc291e'::uuid, 8, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Changing Water', NULL, '', 'https://www.youtube.com/watch?v=nK923oGRpNw');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('72d8a096-7ee9-4bdf-9b29-815ffb0fdf28'::uuid, 9, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Building The Aquarium', NULL, '', 'https://www.youtube.com/watch?v=JapRdKti3Gg');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3eb85733-c83a-4ac7-a2c0-cd25e0c64c56'::uuid, 10, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'LESSON'::public.resource_type, 'Quiz: Practice Time 3', NULL, '<p><strong>Practice Time</strong></p><p><br></p><p>Create a program that suggests an activity based on various parameters.</p><ol><li>Start in a new file with a&nbsp;<code style="color: var(--chakra-colors-black);">main</code>&nbsp;function.</li><li>From&nbsp;<code style="color: var(--chakra-colors-black);">main()</code>, create a function,&nbsp;<code style="color: var(--chakra-colors-black);">whatShouldIDoToday()</code>.</li><li>Let the function have three parameters.</li></ol><ul><li class="ql-indent-1"><code style="color: var(--chakra-colors-black);">mood</code>: a required string parameter</li><li class="ql-indent-1"><code style="color: var(--chakra-colors-black);">weather</code>: a string parameter that defaults to "sunny"</li><li class="ql-indent-1"><code style="color: var(--chakra-colors-black);">temperature</code>: an Integer parameter that defaults to 24 (Celsius).</li></ul><ol><li>Use a&nbsp;<code style="color: var(--chakra-colors-black);">when</code>&nbsp;construct to return some activities based on combinations of conditions. For example:</li></ol><pre class="ql-syntax" spellcheck="false">mood == "happy" &amp;&amp; weather == "Sunny" -&gt; "go for a walk"
else -&gt; "Stay home and read."
</pre><ol><li>Copy/paste your finished function into REPL, and call it with combinations of arguments. For example:</li></ol><pre class="ql-syntax" spellcheck="false">whatShouldIDoToday("sad")
&gt; Stay home and read.
</pre><p><br></p><p><strong>Note:</strong>&nbsp;Keep your work as you will do more with this code in the next practice.</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a12f95bf-ef26-4825-bd44-7643b63b1fe0'::uuid, 11, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Compact Functions', NULL, '', 'https://www.youtube.com/watch?v=hi85qx6006A');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('df4cbb02-4f17-44d9-ba70-b991c88b27b2'::uuid, 12, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'LESSON'::public.resource_type, 'Quiz: Practice Time 4', NULL, '<p><strong>Practice Time</strong></p><p><br></p><p>Improve your&nbsp;<code style="color: var(--chakra-colors-black);">whatShouldIDoToday()</code>&nbsp;program with the new knowledge from this segment.</p><ol><li>Add 3 more situations and activities. For example:</li></ol><pre class="ql-syntax" spellcheck="false">mood == "sad" &amp;&amp; weather == "rainy" &amp;&amp; temperature == 0 -&gt; "stay in bed"
 temperature &gt; 35 -&gt; "go swimming"
</pre><ol><li>Create a single-expression function for each condition and then use it in your&nbsp;<code style="color: var(--chakra-colors-black);">when</code>&nbsp;expression.</li></ol><h3><br></h3><h3>Challenge</h3><p>Instead of passing in the mood, get a mood string from the user.</p><p><strong>Hint:</strong>&nbsp;The !! operator may come handy.</p><h3><br></h3><h3>Loops</h3><p>This lesson introduced the while and repeat loops. To practice using them, do the following:</p><ul><li>Change your fortune cookie program to use&nbsp;<code style="color: var(--chakra-colors-black);">repeat()</code>&nbsp;instead of a&nbsp;<code style="color: var(--chakra-colors-black);">for</code>&nbsp;loop. What happens to the break instruction? Using the error message from the compiler, with what you''ve learned so far, can you think of why?</li><li>Change your fortune cookie program to use a&nbsp;<code style="color: var(--chakra-colors-black);">while</code>&nbsp;loop, which is the better choice when you are looping until a condition is met.</li></ul><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b2ecf527-ecd5-415a-b74e-527369fe4abf'::uuid, 13, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Kotlin Filters', NULL, '', 'https://www.youtube.com/watch?v=sKafWkywh1M');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8e9e4062-8120-48b3-ac57-42b0b9f16af8'::uuid, 14, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Kotlin Lambdas', NULL, '', 'https://www.youtube.com/watch?v=THSnGtDWgBs');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('dfb31856-9450-4e83-9c6a-5a2200b1aed5'::uuid, 15, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'LESSON'::public.resource_type, 'Quiz: Practice Time 5', NULL, '<p><strong>Practice Time: Lambdas</strong></p><ol><li>Create a lambda and assign it to&nbsp;<code style="color: var(--chakra-colors-black);">rollDice</code>, which returns a dice roll (number between 1 and 12).</li><li>Extend the lambda to take an argument indicating the number of sides of the dice used for the roll.</li><li>If you haven''t done so, fix the lambda to return 0 if the number of sides passed in is 0.</li><li>Create a new variable,&nbsp;<code style="color: var(--chakra-colors-black);">rollDice2</code>, for this same lambda using the function type notation.</li></ol><p><br></p><p><strong>Practice Time: Extra Questions</strong></p><ol><li>Why would you want to use the function type notation instead of just the lambda?</li><li>Create a function&nbsp;<code style="color: var(--chakra-colors-black);">gamePlay()</code>&nbsp;that takes a roll of the dice as an argument and prints it out.</li><li>Pass your&nbsp;<code style="color: var(--chakra-colors-black);">rollDice2</code>&nbsp;function as an argument to&nbsp;<code style="color: var(--chakra-colors-black);">gamePlay()</code>&nbsp;to generate a dice roll every time&nbsp;<code style="color: var(--chakra-colors-black);">gamePlay()</code>&nbsp;is called.</li></ol><p><br></p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6b4aaa97-e0d6-42f5-98d7-6a83f866de03'::uuid, 16, 'd4c89acb-cb24-42ca-b5af-b6e43c723b79'::uuid, 'VIDEO'::public.resource_type, 'Summary', NULL, '', 'https://www.youtube.com/watch?v=dTdbcSgNe5M');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d7a303af-525e-4ce6-ab9d-9ebddaf1358d'::uuid, 0, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=6X8ye87czxA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a6a185c7-aaf3-49ac-8765-eda8fba48c92'::uuid, 1, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'VIDEO'::public.resource_type, 'Defining Classes', NULL, '', 'https://www.youtube.com/watch?v=DTL4vpIpo_Y');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0154180d-a3aa-400d-b6df-7944783ccbf6'::uuid, 2, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'LESSON'::public.resource_type, 'Selft practice quiz', NULL, '<p>Practice Time</p><p>Earlier, we created and filtered a list of spices. Spices are much better represented as objects than as simple strings. Because they are objects, we can perform different things with them - such as cooking.</p><p><br></p><p>To recap, let''s make a simple&nbsp;<code style="color: var(--chakra-colors-black);">Spice</code>&nbsp;class. It doesn''t do much, but it will serve as the starting point for the next practice.</p><ol><li>Create class,&nbsp;<code style="color: var(--chakra-colors-black);">SimpleSpice</code>.</li><li>Let the class be a property with a String for the name of the spice, and a String for the level of spiciness.</li><li>Set the name to&nbsp;<code style="color: var(--chakra-colors-black);">curry</code>&nbsp;and the spiciness to&nbsp;<code style="color: var(--chakra-colors-black);">mild</code>.</li><li>Using a string for&nbsp;<code style="color: var(--chakra-colors-black);">spiciness</code>&nbsp;is nice for users, but not useful for calculations. Add a&nbsp;<code style="color: var(--chakra-colors-black);">heat</code>&nbsp;property to your class with a getter that returns a numeric value for&nbsp;<code style="color: var(--chakra-colors-black);">spiciness</code>. Use a value of 5 for&nbsp;<code style="color: var(--chakra-colors-black);">mild</code>.</li><li>Create an instance of&nbsp;<code style="color: var(--chakra-colors-black);">SimpleSpice</code>&nbsp;and print out its&nbsp;<code style="color: var(--chakra-colors-black);">name</code>&nbsp;and&nbsp;<code style="color: var(--chakra-colors-black);">heat</code>.</li></ol>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('81b24a63-aa86-4574-9254-295efd86a829'::uuid, 3, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'VIDEO'::public.resource_type, 'Constructors', NULL, '', 'https://www.youtube.com/watch?v=fKP0KIdjrFc');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ef50c5b3-2074-4d4a-82e9-389a02c18796'::uuid, 4, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'LESSON'::public.resource_type, 'Selft practice quiz 2', NULL, '<p><strong>Practice Time</strong></p><p><br></p><p>Let''s improve our&nbsp;<code style="color: var(--chakra-colors-black);">SimpleSpice</code>&nbsp;class so that we can have various spices with different levels of spiciness.</p><ol><li>Create a new class,&nbsp;<code style="color: var(--chakra-colors-black);">Spice</code>.</li><li>Pass in a mandatory String argument for the&nbsp;<code style="color: var(--chakra-colors-black);">name</code>, and a String argument for the level of&nbsp;<code style="color: var(--chakra-colors-black);">spiciness</code>&nbsp;where the default value is&nbsp;<code style="color: var(--chakra-colors-black);">mild</code>&nbsp;for not spicy.</li><li>Add a variable,&nbsp;<code style="color: var(--chakra-colors-black);">heat</code>, to your class, with a getter that returns a numeric value for each type of&nbsp;<code style="color: var(--chakra-colors-black);">spiciness</code>.</li><li>Instead of the list of spices as Strings you used earlier, create a list of&nbsp;<code style="color: var(--chakra-colors-black);">Spice</code>&nbsp;objects and give each object a name and a&nbsp;<code style="color: var(--chakra-colors-black);">spiciness</code>&nbsp;level.</li><li>Add an&nbsp;<code style="color: var(--chakra-colors-black);">init</code>&nbsp;block that prints out the values for the object after it has been created. Create a&nbsp;<code style="color: var(--chakra-colors-black);">spice</code>.</li><li>Create a list of spices that are spicy or less than spicy. Hint: Use a filter and the&nbsp;<code style="color: var(--chakra-colors-black);">heat</code>&nbsp;property.</li><li>Because salt is a very common spice, create a helper function called&nbsp;<code style="color: var(--chakra-colors-black);">makeSalt()</code>.</li></ol>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5b5c56c2-1918-4a3b-bde7-d3204bba890f'::uuid, 5, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'VIDEO'::public.resource_type, 'Building The Aquarium', NULL, '', 'https://www.youtube.com/watch?v=W-NtrHQ47O4');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('187ec07d-c2fe-488a-9d72-6e8f165d9947'::uuid, 6, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'VIDEO'::public.resource_type, 'Inheritance', NULL, '', 'https://www.youtube.com/watch?v=DXsZLghDqkg');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('96c3f920-1113-4514-9019-d2e30c9bb556'::uuid, 7, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'LESSON'::public.resource_type, 'Quiz: Practice Time', NULL, '<p><strong>Practice Time</strong></p><p><br></p><p>Let''s talk about books for a moment, those heavy tomes of paper with printed letters.</p><ol><li>Create a class,&nbsp;<code style="color: var(--chakra-colors-black);">Book</code>, with a title and an author.</li><li>Add a method,&nbsp;<code style="color: var(--chakra-colors-black);">readPage()</code>, that increases the value of a private variable,&nbsp;<code style="color: var(--chakra-colors-black);">currentPage</code>, by 1.</li><li>Create a subclass of&nbsp;<code style="color: var(--chakra-colors-black);">Book</code>; name it&nbsp;<code style="color: var(--chakra-colors-black);">eBook</code>.</li><li><code style="color: var(--chakra-colors-black);">eBook</code>&nbsp;also takes in a format, which defaults to "text".</li><li>In eBooks, counting words makes more sense than pages. Override the&nbsp;<code style="color: var(--chakra-colors-black);">readPage()</code>&nbsp;method to increase the word count by 250, the average number of words per page from typewriter days.</li></ol>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('90d41393-cd74-4241-89f3-fdfd66e65ad4'::uuid, 8, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'VIDEO'::public.resource_type, 'Interfaces', NULL, '', 'https://www.youtube.com/watch?v=cvSVHvk2Xug');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('bed70adf-a41b-4ee1-8a29-0e909952868d'::uuid, 9, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'LESSON'::public.resource_type, 'Quiz: Practice Time 2', NULL, '<p><strong>Practice Time</strong></p><p><br></p><h3>Abstract and Interface</h3><p>Let''s go back to your spices. Make&nbsp;<code style="color: var(--chakra-colors-black);">Spice</code>&nbsp;an abstract class, and then create some subclasses that are actual spices.</p><ol><li>It''s easiest (organizationally) if you make a new package,&nbsp;<code style="color: var(--chakra-colors-black);">Spices</code>, with a file, Spice, that has a&nbsp;<code style="color: var(--chakra-colors-black);">main()</code>&nbsp;function.</li><li>Copy/paste your&nbsp;<code style="color: var(--chakra-colors-black);">Spice</code>&nbsp;class code into that new file.</li><li>Make&nbsp;<code style="color: var(--chakra-colors-black);">Spice</code>&nbsp;abstract.</li><li>Create a subclass,&nbsp;<code style="color: var(--chakra-colors-black);">Curry</code>.&nbsp;<code style="color: var(--chakra-colors-black);">Curry</code>&nbsp;can have varying levels of spiciness, so we don''t want to use the default value, but rather pass in the spiciness value.</li><li>Spices are processed in different ways before they can be used. Add an abstract method&nbsp;<code style="color: var(--chakra-colors-black);">prepareSpice</code>&nbsp;to&nbsp;<code style="color: var(--chakra-colors-black);">Spice</code>, and implement it in&nbsp;<code style="color: var(--chakra-colors-black);">Curry</code>.</li><li>Curry is ground into a powder, so let''s call a method&nbsp;<code style="color: var(--chakra-colors-black);">grind()</code>. However, grinding is something that''s not unique to curry, or even to spices, and it''s always done in a grinder. So we can create an Interface,&nbsp;<code style="color: var(--chakra-colors-black);">Grinder</code>, that implements the&nbsp;<code style="color: var(--chakra-colors-black);">grind()</code>&nbsp;method. Do that now.</li><li>Then add the&nbsp;<code style="color: var(--chakra-colors-black);">Grinder</code>&nbsp;interface to the&nbsp;<code style="color: var(--chakra-colors-black);">Curry</code>&nbsp;class.</li></ol><h3><br></h3><h3>Delegation</h3><p>Using the provided code from the lesson for guidance, add a yellow color to&nbsp;<code style="color: var(--chakra-colors-black);">Curry</code>.</p><pre class="ql-syntax" spellcheck="false">fun main (args: Array&lt;String&gt;) {
   delegate()
}

fun delegate() {
   val pleco = Plecostomus()
   println("Fish has has color ${pleco.color}")
   pleco.eat()
}

interface FishAction {
   fun eat()
}

interface FishColor {
   val color: String
}

object GoldColor : FishColor {
   override val color = "gold"
}

class PrintingFishAction(val food: String) : FishAction {
   override fun eat() {
       println(food)
   }
}

class Plecostomus (fishColor: FishColor = GoldColor):
       FishAction by PrintingFishAction("eat a lot of algae"),
       FishColor by fishColor
</pre><ol><li>Create an interface,&nbsp;<code style="color: var(--chakra-colors-black);">SpiceColor</code>, that has a&nbsp;<code style="color: var(--chakra-colors-black);">color</code>&nbsp;property. You can use a String for the color.</li><li>Create a singleton subclass,&nbsp;<code style="color: var(--chakra-colors-black);">YellowSpiceColor</code>, using the&nbsp;<code style="color: var(--chakra-colors-black);">object</code>&nbsp;keyword, because all instances of&nbsp;<code style="color: var(--chakra-colors-black);">Curry</code>&nbsp;and other spices can use the same&nbsp;<code style="color: var(--chakra-colors-black);">YellowSpiceColor</code>&nbsp;instance.</li><li>Add a&nbsp;<code style="color: var(--chakra-colors-black);">color</code>&nbsp;property to&nbsp;<code style="color: var(--chakra-colors-black);">Curry</code>&nbsp;of type&nbsp;<code style="color: var(--chakra-colors-black);">SpiceColor</code>, and set the default value to&nbsp;<code style="color: var(--chakra-colors-black);">YellowSpiceColor</code>.</li><li>Add&nbsp;<code style="color: var(--chakra-colors-black);">SpiceColor</code>&nbsp;as an interface, and let it be by color.</li><li>Create an instance of&nbsp;<code style="color: var(--chakra-colors-black);">Curry</code>, and print its color. However, color is actually a property common to all spices, so you can move it to the parent class.</li><li>Change your code so that the&nbsp;<code style="color: var(--chakra-colors-black);">SpiceColor</code>&nbsp;interface is added to the&nbsp;<code style="color: var(--chakra-colors-black);">Spice</code>&nbsp;class and inherited by&nbsp;<code style="color: var(--chakra-colors-black);">Curry</code>.</li></ol>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9d8111cd-f2e1-45f2-9a4d-8d6fa7c4b24e'::uuid, 10, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'VIDEO'::public.resource_type, 'Data Classes', NULL, '', 'https://www.youtube.com/watch?v=AqLoXdiiiJo');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ac15df2d-6572-4e84-968d-ed255d9459ba'::uuid, 11, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'LESSON'::public.resource_type, 'Quiz: Practice Time 3', NULL, '<p>Practice Time</p><ol><li>Create a simple data class,&nbsp;<code style="color: var(--chakra-colors-black);">SpiceContainer</code>, that holds one spice.</li><li>Give&nbsp;<code style="color: var(--chakra-colors-black);">SpiceContainer</code>&nbsp;a property,&nbsp;<code style="color: var(--chakra-colors-black);">label</code>, that is derived from the name of the spice.</li><li>Create some containers with spices and print out their labels.</li></ol>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1f50871a-978a-431b-855d-62278f01b75b'::uuid, 12, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'VIDEO'::public.resource_type, 'Special Purpose Classes', NULL, '', 'https://www.youtube.com/watch?v=wBixYBDmewQ');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('31a82e31-d289-4e96-85f5-513591040253'::uuid, 13, 'cae8f2f7-afe6-4628-92b5-bc355297f10a'::uuid, 'VIDEO'::public.resource_type, 'Summary', NULL, '', 'https://www.youtube.com/watch?v=g0oAPk89dg0');
-- end of chapter resource kotlin 2

-- chapter resource dsa 1
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('525ea589-62b7-41bc-b92e-026c5c1b8d35'::uuid, 0, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=1PVt-iZBIto');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('25c0a3da-ef3e-4ea4-ba79-779806db13fd'::uuid, 1, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'LESSON'::public.resource_type, 'Course Advice', NULL, '<p>The videos move through some advanced material rather quickly, so to get the most out of this course, we recommend the following:</p><ol><li>Download the notes (cs6505.pdf) from the resources section and keep them available for reference.</li><li>Pause the video often and re-watch sections or refer back to the notes in order to solidify your understanding.</li></ol><p>Actively using the text and video together can be a great way to learn. Best of luck!</p>', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c2c026af-6143-4e95-903f-c107729e60c5'::uuid, 2, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'VIDEO'::public.resource_type, 'Functions', NULL, '', 'https://www.youtube.com/watch?v=izxObp1aSR0');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('842249a7-368c-4bb0-8781-35be829abc53'::uuid, 3, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'VIDEO'::public.resource_type, 'Rules of the Game', NULL, '', 'https://www.youtube.com/watch?v=szNCPREIROU');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c9895a10-d70a-43c9-aa68-bff8988616ab'::uuid, 4, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'VIDEO'::public.resource_type, 'Operations on Languages', NULL, '', 'https://www.youtube.com/watch?v=YDZWHFznLFc');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('09f1a9a2-c0e6-49ce-8f41-e564b5dfe46c'::uuid, 5, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'VIDEO'::public.resource_type, 'Language Operations Exercise', NULL, '', 'https://www.youtube.com/watch?v=5IC-KnrDdco');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('fb91baed-1600-4f87-9c52-83bb0f2cd64e'::uuid, 6, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'VIDEO'::public.resource_type, 'Countability', NULL, '', 'https://www.youtube.com/watch?v=4KGFpI_GGQI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5efc54db-5d36-49da-adab-08230d156ef4'::uuid, 7, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'VIDEO'::public.resource_type, 'Countability 2', NULL, '', 'https://www.youtube.com/watch?v=0cF7L9zJeto');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('93692db4-05d0-42f3-9e63-417fdb080b1b'::uuid, 8, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'VIDEO'::public.resource_type, 'A False Proof', NULL, '', 'https://www.youtube.com/watch?v=mMUmE7MW_68');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f51e3439-f932-46e8-b223-27f0d0ef7f48'::uuid, 9, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'VIDEO'::public.resource_type, 'Languages Are Uncountable', NULL, '', 'https://www.youtube.com/watch?v=Cus7aiA23nU');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a7d0402c-401c-4954-adf9-895801ebff90'::uuid, 10, 'dab8155a-dfe6-4897-85ec-97eae50306f1'::uuid, 'VIDEO'::public.resource_type, 'Consequences', NULL, '', 'https://www.youtube.com/watch?v=iRVfBOo5KKc');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1f44b895-1cc3-42dc-a1ec-74e1520336f0'::uuid, 0, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'Motivation', NULL, '', 'https://www.youtube.com/watch?v=RnY5xSd8W9M');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8cbd544a-9936-4c97-a8fe-a3b7a07a8981'::uuid, 1, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=R3Fy4Z2zLpg');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('88790e55-d637-4da1-ad7d-792e945bf692'::uuid, 2, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'Notation', NULL, '', 'https://www.youtube.com/watch?v=Fwqt43Be040');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('651164fb-679f-40fc-a1b2-9d2323813689'::uuid, 3, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'Testing Oddness', NULL, '', 'https://www.youtube.com/watch?v=8yFP7WKYEAI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('004c20c9-0a45-4290-90e4-7cbc06a7f04e'::uuid, 4, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'Configuration Sequences', NULL, '', 'https://www.youtube.com/watch?v=u0ELvsSsyK0');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('91077f18-c08a-452f-839d-b5f8511a39af'::uuid, 5, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'The Value of Practice', NULL, '', 'https://www.youtube.com/watch?v=P_t9RHHDFEA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5fd57c2d-dcdb-4f94-a9bc-dfe7e8da9e7d'::uuid, 6, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'Equality Testing', NULL, '', 'https://www.youtube.com/watch?v=Px3GfGAS3dQ');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b8e5d2ad-9538-4e85-84e8-f298369164c5'::uuid, 7, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'Configuration Exercise', NULL, '', 'https://www.youtube.com/watch?v=uDidLQaRoh4');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('fa0e45a2-0cad-4791-b8a4-07b09884eacd'::uuid, 8, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'CODE'::public.resource_type, 'Right Shift', 'b6484e21-6937-489c-b031-b71767994758'::uuid, 'Check prime number', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('da22be7b-9724-45d1-8df7-5fc19343c663'::uuid, 9, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'CODE'::public.resource_type, 'Balanced Strings', 'b6484e21-6937-489c-b031-b71767994763'::uuid, 'Determine the Day of the Week from a Given Date', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ab5400d3-f783-49a3-963d-0cccd68b44c4'::uuid, 10, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'Language Deciders', NULL, '', 'https://www.youtube.com/watch?v=yH183drtm1o');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9aa8cdeb-f9b4-4fb6-b594-422496d79271'::uuid, 11, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'Contains a One', NULL, '', 'https://www.youtube.com/watch?v=kGTEwqEbUGI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('fe3d3122-395f-4c5f-ac6d-0dda5be39f63'::uuid, 12, '41624f50-8635-4109-93da-3360acd2370b'::uuid, 'VIDEO'::public.resource_type, 'Language Recognizers', NULL, '', 'https://www.youtube.com/watch?v=Mk7UOHyAVaw');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('72a116f9-0b07-4d67-ae3b-4ed2e25ed71a'::uuid, 0, '59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=Y4vUo1p-gJQ');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6f8093da-0675-4302-bbbb-135613fc6878'::uuid, 1, '59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, 'VIDEO'::public.resource_type, 'Simulating Machines', NULL, '', 'https://www.youtube.com/watch?v=xWupr1J3ABc');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d7758b36-d697-4cb2-abae-d87e994fe74a'::uuid, 2, '59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, 'VIDEO'::public.resource_type, 'Multitape Turing Machines', NULL, '', 'https://www.youtube.com/watch?v=hMG9nWb5a7c');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7e5f294b-2a21-4dff-aad1-edeaaa00cbc1'::uuid, 3, '59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, 'VIDEO'::public.resource_type, 'Duplicate the Input', NULL, '', 'https://www.youtube.com/watch?v=DVBE7awiLs8');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('83acf81b-8b2f-4d0d-b08f-aeb3fe5589d7'::uuid, 4, '59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, 'CODE'::public.resource_type, 'Substring Search', 'b6484e21-6937-489c-b031-b71767994754'::uuid, 'Solve ax+b=0', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1db2ff81-b48e-486d-8e0f-356babcd2491'::uuid, 5, '59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, 'VIDEO'::public.resource_type, 'Multitape SingleTape Equivalence', NULL, '', 'https://www.youtube.com/watch?v=otW5KDW1IJA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('43cd531b-7891-49b9-99f4-bc8f7f2a3d5f'::uuid, 6, '59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, 'VIDEO'::public.resource_type, 'Analysis of Multitape Simulation', NULL, '', 'https://www.youtube.com/watch?v=O_pWm9n6LZY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d3d2aa83-010d-4b2d-b6eb-f19d733fd62b'::uuid, 7, '59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, 'VIDEO'::public.resource_type, 'RAM Model', NULL, '', 'https://www.youtube.com/watch?v=wkBjD0Fvl6U');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5dce9789-713a-4527-a7ae-1511302e6563'::uuid, 8, '59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, 'VIDEO'::public.resource_type, 'Equivalence of RAM and Turing Machines', NULL, '', 'https://www.youtube.com/watch?v=XhkXUHLVNtY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9d38d7ed-3816-453e-93f1-a05ff6503e68'::uuid, 9, '59d3f32f-25bc-4f34-9937-9d76527c188b'::uuid, 'VIDEO'::public.resource_type, 'RAM Simulation Running Time', NULL, '', 'https://www.youtube.com/watch?v=UETh0PmriwM');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e2ae778a-b5b9-417a-b234-f0f966a84cc2'::uuid, 0, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=je8Mhr4B5M8');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('629df5f0-0b47-422a-971e-f8ce5994ec16'::uuid, 1, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Encoding a Turing Machine', NULL, '', 'https://www.youtube.com/watch?v=ZSqsXGjMUd8');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6aadfd80-8e87-4572-a6a7-6902d91b6c2b'::uuid, 2, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Encoding Quiz', NULL, '', 'https://www.youtube.com/watch?v=znmk2a3pnQc');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('76f899bd-7484-481e-be8f-272a34387499'::uuid, 3, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Building a Universal Turing Machine', NULL, '', 'https://www.youtube.com/watch?v=C9T6iQYCW10');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('40ea0372-4940-4fec-a841-3ae1f6d3706d'::uuid, 4, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Abstraction', NULL, '', 'https://www.youtube.com/watch?v=wFvUFn7Jjic');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c493811b-9669-401a-8631-a338a4f08ff8'::uuid, 5, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Language Recognizers', NULL, '', 'https://www.youtube.com/watch?v=tVeUWwvLnNI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('de56efb9-5b9b-43dc-97d2-1ccbf87b9be9'::uuid, 6, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Recognizability and Decidability', NULL, '', 'https://www.youtube.com/watch?v=sNWC1Zz6qcg');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('bca5a1f0-67c5-4ed6-929a-663bc067458a'::uuid, 7, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Decidability Exercise', NULL, '', 'https://www.youtube.com/watch?v=DBp5EPN7qnI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('08d15a00-8413-474d-be54-c67eb54da3f6'::uuid, 8, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Alternating Machines', NULL, '', 'https://www.youtube.com/watch?v=HGZhF_3cksg');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2d5ddd14-5d2a-4ad8-96b5-382e418d3329'::uuid, 9, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Counting States', NULL, '', 'https://www.youtube.com/watch?v=3cEn8wqFwNw');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('33a9cd43-1696-457a-987c-9993443467b2'::uuid, 10, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Halting on 34', NULL, '', 'https://www.youtube.com/watch?v=f-8Q0yOE1yw');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('54bf7a1d-60f4-4c0b-bd67-1b984e360c68'::uuid, 11, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Accepting Nothing', NULL, '', 'https://www.youtube.com/watch?v=v8UB_1T7aDY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('9dfceebd-9de2-482f-b8a3-a3349193aeca'::uuid, 12, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Dovetailing', NULL, '', 'https://www.youtube.com/watch?v=RN9gWA2CMcM');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('6bd06256-0bb4-402e-b70a-b80befedc00a'::uuid, 13, '1acc66dc-4ad0-4cc3-846f-5d57d1a6dae4'::uuid, 'VIDEO'::public.resource_type, 'Always Halting', NULL, '', 'https://www.youtube.com/watch?v=r-mwONf8eMQ');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c68471bc-784c-4577-83c6-289674cfe04d'::uuid, 0, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=1s3xeoORQCQ');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ed50004d-1174-4fb4-87a9-cb9657b86cd2'::uuid, 1, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Diagonalization', NULL, '', 'https://www.youtube.com/watch?v=GbtNQ7yzo9Y');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b8aeaec9-1c3e-41a3-804d-42fbcb98d6d7'::uuid, 2, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'An Undecidable Language', NULL, '', 'https://www.youtube.com/watch?v=0UrcKOJhjnE');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c5daa6c7-7485-49d9-a773-cff98d87188b'::uuid, 3, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Dumaflaches', NULL, '', 'https://www.youtube.com/watch?v=7n_QAtyWVaA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ac8e30a8-9ffb-4549-9ae9-ac7af8865025'::uuid, 4, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Mapping Reductions', NULL, '', 'https://www.youtube.com/watch?v=UTqZtPSBzAo');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('efa5468c-98cc-4400-ae24-ba5e5ebc2009'::uuid, 5, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Some Trivial Reductions', NULL, '', 'https://www.youtube.com/watch?v=Dxgs0TuDQZs');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7c00fc43-3250-43c9-8204-21889030cf59'::uuid, 6, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'CODE'::public.resource_type, '{''John''} <= Complement of {''John''}', 'b6484e21-6937-489c-b031-b71767994763'::uuid, 'Determine the Day of the Week from a Given Date', '');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('26ebc456-34df-480d-9f37-e9894bab39ab'::uuid, 7, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Remember the Consequences', NULL, '', 'https://www.youtube.com/watch?v=L9b4J5u2Wxo');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ca4d05ec-26a2-495a-a5c4-6c48d34415f2'::uuid, 8, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'A Simple Reduction', NULL, '', 'https://www.youtube.com/watch?v=MSRJ-Llf6zc');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('bb88d7da-36e6-47f6-b30a-58f33f7ab627'::uuid, 9, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'The Halting Problem', NULL, '', 'https://www.youtube.com/watch?v=cx1RaTsuB54');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c3850daf-30aa-4150-beb0-664aad991a78'::uuid, 10, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Filtering', NULL, '', 'https://www.youtube.com/watch?v=b9nO6uWAUQk');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3a1a443b-6dd5-461e-ac39-fedb21beeafd'::uuid, 11, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Which Reductions Work?', NULL, '', 'https://www.youtube.com/watch?v=DIkohhg4Cxk');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('53007215-e5b4-4705-ac34-32c37fda1aaf'::uuid, 12, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Rice''s Theorem', NULL, '', 'https://www.youtube.com/watch?v=nP2phzkNzwE');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ca62a62d-47af-4198-8052-70b39a377ac7'::uuid, 13, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Undecidable Properties', NULL, '', 'https://www.youtube.com/watch?v=j_VbGGcq6vA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b27997ed-118c-46bc-986a-0381598fcca5'::uuid, 14, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Conclusion', NULL, '', 'https://www.youtube.com/watch?v=QWZnOrl2EJ0');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f5a9d16a-2124-4d01-80ba-c19e6871db15'::uuid, 15, '8b4bd3a5-6464-49b0-a363-d6463d936932'::uuid, 'VIDEO'::public.resource_type, 'Towards Complexity', NULL, '', 'https://www.youtube.com/watch?v=ir_VYLzitss');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('1f55e248-4e40-4533-a1d3-360aa9df2d45'::uuid, 0, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=tCs87wwHIyI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8dc4c261-32aa-4548-b27e-206c4151beed'::uuid, 1, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Friends or Enemies', NULL, '', 'https://www.youtube.com/watch?v=zqsHlNMhPCE');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('14f867b2-9332-48ff-bd82-10ef05e481fe'::uuid, 2, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Find a Clique', NULL, '', 'https://www.youtube.com/watch?v=Q_xKnn_mnpU');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3951177b-c88b-4584-8b53-110211226133'::uuid, 3, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'P and NP', NULL, '', 'https://www.youtube.com/watch?v=n0zd5hcOSQI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('01610d0e-714b-4af7-b588-92a1daaedf8e'::uuid, 4, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Delicacy of Tractability', NULL, '', 'https://www.youtube.com/watch?v=vI1wzzPB0rA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('aba7d639-02d3-4a6d-b48e-f72585734f07'::uuid, 5, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Running Time Analysis', NULL, '', 'https://www.youtube.com/watch?v=jPoKokRBm74');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3631fa80-f78c-4bd2-939a-6c7381c1c6a7'::uuid, 6, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Asymptotic Analysis', NULL, '', 'https://www.youtube.com/watch?v=H4rrB3TKD2U');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8176d9f7-b1ff-4caf-992f-a84c21a019eb'::uuid, 7, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Big O Question', NULL, '', 'https://www.youtube.com/watch?v=ZKJ85QZEick');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f7ff17f8-dbdc-4b94-8e8c-729e46a0c372'::uuid, 8, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'The Class P', NULL, '', 'https://www.youtube.com/watch?v=h25xuBtiwLA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4c1612ac-7905-46b4-a7cc-9ed0ad987306'::uuid, 9, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Problems and Encodings', NULL, '', 'https://www.youtube.com/watch?v=iwVBk70o7hQ');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('77ccfbe9-2519-4bee-b39c-0d8d211a652a'::uuid, 10, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Which Are in P?', NULL, '', 'https://www.youtube.com/watch?v=GEdSQF9Fe0U');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('05d7be18-5ae4-4329-870a-9b77a36094cd'::uuid, 11, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Nondeterministic TMs', NULL, '', 'https://www.youtube.com/watch?v=5iQmFiXxFRI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('0a40be7a-8b2e-4e12-95c6-78e70b7b1b9e'::uuid, 12, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Which Language Is Recognized?', NULL, '', 'https://www.youtube.com/watch?v=Wr54SqeIZ9Q');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('46a73277-1b8c-4b3a-acbb-a75bace7ee4b'::uuid, 13, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Composite Numbers', NULL, '', 'https://www.youtube.com/watch?v=yTp4I1YLxG4');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4df2c475-a7e5-4dcf-a796-c00120b0147f'::uuid, 14, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'The Class NP', NULL, '', 'https://www.youtube.com/watch?v=TujMsDSeUnA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('fbdacb22-bce7-41c0-af73-2352b67987c6'::uuid, 15, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'NP Equals Verifiability Intuition', NULL, '', 'https://www.youtube.com/watch?v=NXrHmeSqkWE');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c4da7639-d8db-4355-8e22-92c0110ffc5e'::uuid, 16, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'NP Equals Verifiability', NULL, '', 'https://www.youtube.com/watch?v=7E96m-QwQUY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('2573832c-0ff4-46a0-a858-a2d1b205d594'::uuid, 17, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Which Is in NP?', NULL, '', 'https://www.youtube.com/watch?v=9sHweZJS-Tk');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4705f3e7-9f09-40ca-afb1-c69ff201dac1'::uuid, 18, '64267f60-faca-4c29-a180-5528def47f96'::uuid, 'VIDEO'::public.resource_type, 'Conclusion', NULL, '', 'https://www.youtube.com/watch?v=HFjMNGxgPGw');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f7f6caef-3692-4ee9-9d28-cf2158eb4234'::uuid, 0, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=cRIcp-D2yOM');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('251e15a5-9e14-4881-bca9-f285a9f53b7b'::uuid, 1, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'The Hardest Problems in NP', NULL, '', 'https://www.youtube.com/watch?v=4oUBVBowW1U');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('71b260d8-d088-4cde-ae13-15ba60959893'::uuid, 2, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Polynomial Reductions', NULL, '', 'https://www.youtube.com/watch?v=WtqaJ28QzrA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ca4fda1f-0c6f-4025-9863-23daa74b9d30'::uuid, 3, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Running Time of Composition', NULL, '', 'https://www.youtube.com/watch?v=7ffRlAoDVQA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f7946e9c-9867-45a7-ad66-179b81a731e9'::uuid, 4, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Polynomial Reductions Part 2', NULL, '', 'https://www.youtube.com/watch?v=X4CRR2fisms');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('813b1328-d432-469f-8bd0-ca507c3e76e3'::uuid, 5, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'What Do Reductions Imply?', NULL, '', 'https://www.youtube.com/watch?v=vEEA0_r2NWI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('f3b1bcae-3432-4e45-b1b2-ee4bfa7c1fcb'::uuid, 6, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Independent Set', NULL, '', 'https://www.youtube.com/watch?v=ST1ozPWvgjs');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('70053258-6474-4225-bec2-9862e9a49dc7'::uuid, 7, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Find an Independent Set', NULL, '', 'https://www.youtube.com/watch?v=OfeB7t-FSZs');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a5412cc0-f99a-4b18-a938-d543e6cc8ed7'::uuid, 8, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Vertex Cover', NULL, '', 'https://www.youtube.com/watch?v=iA82FEZ-RDY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a2f1d2a1-8371-4760-8845-0babc9ac5568'::uuid, 9, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Find a Vertex Cover', NULL, '', 'https://www.youtube.com/watch?v=H1FhDCXHbdI');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4b087746-7737-4af1-8473-4a64844bd645'::uuid, 10, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Ind Set Reduces to Vertex Cover', NULL, '', 'https://www.youtube.com/watch?v=8LitpP6DM_A');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8417ec90-abb9-4635-b086-f948d24b4819'::uuid, 11, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Transitivity of Reducibility', NULL, '', 'https://www.youtube.com/watch?v=RbtvI8aPwpQ');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('998d48ea-7307-44fd-804c-b2b119aefa9c'::uuid, 12, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'Running Time of Composition', NULL, '', 'https://www.youtube.com/watch?v=f3qPH6DghyY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d01e1f81-8b86-48c2-b81c-138636aa2a12'::uuid, 13, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'NP-Completeness', NULL, '', 'https://www.youtube.com/watch?v=fLSKsserV4s');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('d5908dc6-3b97-4c96-9af2-4969fdd044c0'::uuid, 14, 'd3cb2a35-9644-4add-9298-09f6ea3b0cf1'::uuid, 'VIDEO'::public.resource_type, 'CNF Satisfiability', NULL, '', 'https://www.youtube.com/watch?v=UpZESgATOsE');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('fdb8601d-6074-4c49-8f9c-b7538795192b'::uuid, 0, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Intro to Algorithms', NULL, '', 'https://www.youtube.com/watch?v=0OuLdNq3ONo');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('15495f7e-4247-4d2c-8898-0f14531418b3'::uuid, 1, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=WgCh7PiVGiA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('5d61aa35-b282-4432-9949-e3fec1b23c4a'::uuid, 2, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Lesson Plan', NULL, '', 'https://www.youtube.com/watch?v=-46zyAkDzfw');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ec1ac014-db46-4141-af2c-c938f3a6d682'::uuid, 3, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Optimal Similar Substructure', NULL, '', 'https://www.youtube.com/watch?v=ZEYzxFtN9XA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('95b0be18-d9f4-49be-a55e-eaa6c6e2612a'::uuid, 4, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Edit Distance Problem', NULL, '', 'https://www.youtube.com/watch?v=3NLYH44F6SU');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('c241b972-0b6d-4216-aaa3-96cd5ad3a596'::uuid, 5, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Sequence Alignment Cost', NULL, '', 'https://www.youtube.com/watch?v=SJhPt1zUny0');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b4eed949-5cc6-4ce2-946e-e85261f3b193'::uuid, 6, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Prefix Substructure', NULL, '', 'https://www.youtube.com/watch?v=-T39hwzbX_M');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('ad0b757a-225f-457d-88b9-3d99fa40d7e5'::uuid, 7, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Sequence Alignment Algorithm', NULL, '', 'https://www.youtube.com/watch?v=-0gG_rOhcT8');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3aed758d-9dd5-40d8-a936-7bfe568032d9'::uuid, 8, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Sequence Alignment Exercise', NULL, '', 'https://www.youtube.com/watch?v=CUWsi8LA9JM');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3c59a110-9462-4e55-8599-2e34d7bda038'::uuid, 9, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Chain Matrix Multiplication', NULL, '', 'https://www.youtube.com/watch?v=eHHL3nUsBys');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('61246200-78af-4597-b79b-fd2d04b76753'::uuid, 10, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Subchain Substructure', NULL, '', 'https://www.youtube.com/watch?v=cE-Yt-JG7tc');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('983fb42b-7c7b-43b0-85d4-4abb878d39bf'::uuid, 11, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'CMM Algorithm', NULL, '', 'https://www.youtube.com/watch?v=sxuq6_MNEak');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('7eb70210-b686-45b5-a039-f7565e3d5b58'::uuid, 12, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'All Pairs Shortest Path', NULL, '', 'https://www.youtube.com/watch?v=Jcj1IahXbcw');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('af983625-ffc3-4a40-8533-c3524a863053'::uuid, 13, '9d4d3014-6631-491d-9158-8a981ff52078'::uuid, 'VIDEO'::public.resource_type, 'Conclusion', NULL, '', 'https://www.youtube.com/watch?v=L4GG6F62Js0');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('e7e0394e-7423-48a3-a55b-9b2f3ef7547c'::uuid, 0, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'Introduction', NULL, '', 'https://www.youtube.com/watch?v=JjKUH7tDq1g');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('96e85e7d-b993-4acc-8598-4242bcf1d25a'::uuid, 1, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'Preliminaries', NULL, '', 'https://www.youtube.com/watch?v=9E41QfPc9uA');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('4159697e-c3f8-4a1b-bd8d-0a0b05c710fc'::uuid, 2, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'HS Linear Programming', NULL, '', 'https://www.youtube.com/watch?v=jc0qkXFTYpo');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('44514230-ffc0-4bf9-a993-e5cc8c9e2df1'::uuid, 3, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'Workout Plan', NULL, '', 'https://www.youtube.com/watch?v=Vum5eokIvz8');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('8e64fdec-d999-437b-8d50-49a76902620d'::uuid, 4, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'To n Dimensions', NULL, '', 'https://www.youtube.com/watch?v=n0OwLJ7jYcE');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('a0616e61-36a4-44d5-acc7-82f76632e1dd'::uuid, 5, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'Transformation Quiz', NULL, '', 'https://www.youtube.com/watch?v=BHoZ89sNkpU');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('428a892e-92af-4d4e-8130-857c44372118'::uuid, 6, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'Favored Forms', NULL, '', 'https://www.youtube.com/watch?v=tZoHPkrGiDo');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3fcf30bf-61bf-4bd0-a49a-cdc87cb93924'::uuid, 7, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'Basic Solutions and Feasibility', NULL, '', 'https://www.youtube.com/watch?v=kQ-ECRqJWeQ');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('932f7827-b4eb-488c-bfa3-2adae24c9b8d'::uuid, 8, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'Find a Basic Solution', NULL, '', 'https://www.youtube.com/watch?v=EjRwmGGwyso');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('3b89ae83-a25e-4fd5-b59b-2dce8b532e67'::uuid, 9, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'Fundamental Theorem of LP', NULL, '', 'https://www.youtube.com/watch?v=6i-yGAU7Za0');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('43423d0f-e495-41c8-a2c3-3f5b14fe5836'::uuid, 10, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'Brute Force Algorithm', NULL, '', 'https://www.youtube.com/watch?v=8pJZrQvtdsY');
INSERT INTO public.chapter_resource
(id, "no", chapter_id, resource_type, title, question_id, lesson_html, youtube_video_url)
VALUES('b2cf3c1a-6d3d-42ec-a2ef-0ae43b5cfe5f'::uuid, 11, 'cd30fadf-0b6b-4e46-8632-d76392e72883'::uuid, 'VIDEO'::public.resource_type, 'Simplex Equations', NULL, '', 'https://www.youtube.com/watch?v=Qmm2zdrPz28');
-- end of chapter resource dsa 1