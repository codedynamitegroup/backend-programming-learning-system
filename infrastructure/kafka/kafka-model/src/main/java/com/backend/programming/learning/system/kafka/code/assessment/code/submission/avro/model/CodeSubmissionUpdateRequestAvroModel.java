/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CodeSubmissionUpdateRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5275879058295654697L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CodeSubmissionUpdateRequestAvroModel\",\"namespace\":\"com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"codeSubmisisonId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"codeQuestionId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"userId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"programmingLanguageId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"bodyCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"grade\",\"type\":[\"null\",\"float\"]},{\"name\":\"pass\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"cerCourseId\",\"type\":[\"null\",{\"type\":\"string\",\"logicalType\":\"uuid\"}]},{\"name\":\"contestId\",\"type\":[\"null\",{\"type\":\"string\",\"logicalType\":\"uuid\"}]},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"result\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"copyState\",\"type\":{\"type\":\"enum\",\"name\":\"CopyState\",\"symbols\":[\"CREATING\",\"CREATED\",\"UPDATING\",\"UPDATED\",\"DELETING\",\"DELETED\",\"CREATE_PROPAGATING\",\"UPDATE_PROPAGATING\",\"DELETE_PROPAGATING\",\"CREATE_ROLLBACKING\",\"UPDATE_ROLLBACKING\",\"DELETE_ROLLBACKING\",\"DELETE_FAILED\",\"UPDATE_FAILED\",\"CREATE_FAILED\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<CodeSubmissionUpdateRequestAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CodeSubmissionUpdateRequestAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CodeSubmissionUpdateRequestAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CodeSubmissionUpdateRequestAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CodeSubmissionUpdateRequestAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CodeSubmissionUpdateRequestAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CodeSubmissionUpdateRequestAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CodeSubmissionUpdateRequestAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CodeSubmissionUpdateRequestAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID id;
  private java.util.UUID codeSubmisisonId;
  private java.util.UUID codeQuestionId;
  private java.util.UUID userId;
  private java.util.UUID programmingLanguageId;
  private java.util.UUID sagaId;
  private java.lang.String bodyCode;
  private java.lang.Float grade;
  private java.lang.Boolean pass;
  private java.util.UUID cerCourseId;
  private java.util.UUID contestId;
  private java.time.Instant createdAt;
  private java.lang.String result;
  private com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CopyState copyState;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CodeSubmissionUpdateRequestAvroModel() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param codeSubmisisonId The new value for codeSubmisisonId
   * @param codeQuestionId The new value for codeQuestionId
   * @param userId The new value for userId
   * @param programmingLanguageId The new value for programmingLanguageId
   * @param sagaId The new value for sagaId
   * @param bodyCode The new value for bodyCode
   * @param grade The new value for grade
   * @param pass The new value for pass
   * @param cerCourseId The new value for cerCourseId
   * @param contestId The new value for contestId
   * @param createdAt The new value for createdAt
   * @param result The new value for result
   * @param copyState The new value for copyState
   */
  public CodeSubmissionUpdateRequestAvroModel(java.util.UUID id, java.util.UUID codeSubmisisonId, java.util.UUID codeQuestionId, java.util.UUID userId, java.util.UUID programmingLanguageId, java.util.UUID sagaId, java.lang.String bodyCode, java.lang.Float grade, java.lang.Boolean pass, java.util.UUID cerCourseId, java.util.UUID contestId, java.time.Instant createdAt, java.lang.String result, com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CopyState copyState) {
    this.id = id;
    this.codeSubmisisonId = codeSubmisisonId;
    this.codeQuestionId = codeQuestionId;
    this.userId = userId;
    this.programmingLanguageId = programmingLanguageId;
    this.sagaId = sagaId;
    this.bodyCode = bodyCode;
    this.grade = grade;
    this.pass = pass;
    this.cerCourseId = cerCourseId;
    this.contestId = contestId;
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.result = result;
    this.copyState = copyState;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return codeSubmisisonId;
    case 2: return codeQuestionId;
    case 3: return userId;
    case 4: return programmingLanguageId;
    case 5: return sagaId;
    case 6: return bodyCode;
    case 7: return grade;
    case 8: return pass;
    case 9: return cerCourseId;
    case 10: return contestId;
    case 11: return createdAt;
    case 12: return result;
    case 13: return copyState;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.Conversions.UUIDConversion(),
      new org.apache.avro.Conversions.UUIDConversion(),
      new org.apache.avro.Conversions.UUIDConversion(),
      new org.apache.avro.Conversions.UUIDConversion(),
      new org.apache.avro.Conversions.UUIDConversion(),
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.util.UUID)value$; break;
    case 1: codeSubmisisonId = (java.util.UUID)value$; break;
    case 2: codeQuestionId = (java.util.UUID)value$; break;
    case 3: userId = (java.util.UUID)value$; break;
    case 4: programmingLanguageId = (java.util.UUID)value$; break;
    case 5: sagaId = (java.util.UUID)value$; break;
    case 6: bodyCode = value$ != null ? value$.toString() : null; break;
    case 7: grade = (java.lang.Float)value$; break;
    case 8: pass = (java.lang.Boolean)value$; break;
    case 9: cerCourseId = (java.util.UUID)value$; break;
    case 10: contestId = (java.util.UUID)value$; break;
    case 11: createdAt = (java.time.Instant)value$; break;
    case 12: result = value$ != null ? value$.toString() : null; break;
    case 13: copyState = (com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CopyState)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.util.UUID getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.util.UUID value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'codeSubmisisonId' field.
   * @return The value of the 'codeSubmisisonId' field.
   */
  public java.util.UUID getCodeSubmisisonId() {
    return codeSubmisisonId;
  }


  /**
   * Sets the value of the 'codeSubmisisonId' field.
   * @param value the value to set.
   */
  public void setCodeSubmisisonId(java.util.UUID value) {
    this.codeSubmisisonId = value;
  }

  /**
   * Gets the value of the 'codeQuestionId' field.
   * @return The value of the 'codeQuestionId' field.
   */
  public java.util.UUID getCodeQuestionId() {
    return codeQuestionId;
  }


  /**
   * Sets the value of the 'codeQuestionId' field.
   * @param value the value to set.
   */
  public void setCodeQuestionId(java.util.UUID value) {
    this.codeQuestionId = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.util.UUID getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.util.UUID value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'programmingLanguageId' field.
   * @return The value of the 'programmingLanguageId' field.
   */
  public java.util.UUID getProgrammingLanguageId() {
    return programmingLanguageId;
  }


  /**
   * Sets the value of the 'programmingLanguageId' field.
   * @param value the value to set.
   */
  public void setProgrammingLanguageId(java.util.UUID value) {
    this.programmingLanguageId = value;
  }

  /**
   * Gets the value of the 'sagaId' field.
   * @return The value of the 'sagaId' field.
   */
  public java.util.UUID getSagaId() {
    return sagaId;
  }


  /**
   * Sets the value of the 'sagaId' field.
   * @param value the value to set.
   */
  public void setSagaId(java.util.UUID value) {
    this.sagaId = value;
  }

  /**
   * Gets the value of the 'bodyCode' field.
   * @return The value of the 'bodyCode' field.
   */
  public java.lang.String getBodyCode() {
    return bodyCode;
  }


  /**
   * Sets the value of the 'bodyCode' field.
   * @param value the value to set.
   */
  public void setBodyCode(java.lang.String value) {
    this.bodyCode = value;
  }

  /**
   * Gets the value of the 'grade' field.
   * @return The value of the 'grade' field.
   */
  public java.lang.Float getGrade() {
    return grade;
  }


  /**
   * Sets the value of the 'grade' field.
   * @param value the value to set.
   */
  public void setGrade(java.lang.Float value) {
    this.grade = value;
  }

  /**
   * Gets the value of the 'pass' field.
   * @return The value of the 'pass' field.
   */
  public java.lang.Boolean getPass() {
    return pass;
  }


  /**
   * Sets the value of the 'pass' field.
   * @param value the value to set.
   */
  public void setPass(java.lang.Boolean value) {
    this.pass = value;
  }

  /**
   * Gets the value of the 'cerCourseId' field.
   * @return The value of the 'cerCourseId' field.
   */
  public java.util.UUID getCerCourseId() {
    return cerCourseId;
  }


  /**
   * Sets the value of the 'cerCourseId' field.
   * @param value the value to set.
   */
  public void setCerCourseId(java.util.UUID value) {
    this.cerCourseId = value;
  }

  /**
   * Gets the value of the 'contestId' field.
   * @return The value of the 'contestId' field.
   */
  public java.util.UUID getContestId() {
    return contestId;
  }


  /**
   * Sets the value of the 'contestId' field.
   * @param value the value to set.
   */
  public void setContestId(java.util.UUID value) {
    this.contestId = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'result' field.
   * @return The value of the 'result' field.
   */
  public java.lang.String getResult() {
    return result;
  }


  /**
   * Sets the value of the 'result' field.
   * @param value the value to set.
   */
  public void setResult(java.lang.String value) {
    this.result = value;
  }

  /**
   * Gets the value of the 'copyState' field.
   * @return The value of the 'copyState' field.
   */
  public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CopyState getCopyState() {
    return copyState;
  }


  /**
   * Sets the value of the 'copyState' field.
   * @param value the value to set.
   */
  public void setCopyState(com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CopyState value) {
    this.copyState = value;
  }

  /**
   * Creates a new CodeSubmissionUpdateRequestAvroModel RecordBuilder.
   * @return A new CodeSubmissionUpdateRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder newBuilder() {
    return new com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder();
  }

  /**
   * Creates a new CodeSubmissionUpdateRequestAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CodeSubmissionUpdateRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder newBuilder(com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder other) {
    if (other == null) {
      return new com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder();
    } else {
      return new com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new CodeSubmissionUpdateRequestAvroModel RecordBuilder by copying an existing CodeSubmissionUpdateRequestAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new CodeSubmissionUpdateRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder newBuilder(com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel other) {
    if (other == null) {
      return new com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder();
    } else {
      return new com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for CodeSubmissionUpdateRequestAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CodeSubmissionUpdateRequestAvroModel>
    implements org.apache.avro.data.RecordBuilder<CodeSubmissionUpdateRequestAvroModel> {

    private java.util.UUID id;
    private java.util.UUID codeSubmisisonId;
    private java.util.UUID codeQuestionId;
    private java.util.UUID userId;
    private java.util.UUID programmingLanguageId;
    private java.util.UUID sagaId;
    private java.lang.String bodyCode;
    private java.lang.Float grade;
    private java.lang.Boolean pass;
    private java.util.UUID cerCourseId;
    private java.util.UUID contestId;
    private java.time.Instant createdAt;
    private java.lang.String result;
    private com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CopyState copyState;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.codeSubmisisonId)) {
        this.codeSubmisisonId = data().deepCopy(fields()[1].schema(), other.codeSubmisisonId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.codeQuestionId)) {
        this.codeQuestionId = data().deepCopy(fields()[2].schema(), other.codeQuestionId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.userId)) {
        this.userId = data().deepCopy(fields()[3].schema(), other.userId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.programmingLanguageId)) {
        this.programmingLanguageId = data().deepCopy(fields()[4].schema(), other.programmingLanguageId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[5].schema(), other.sagaId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.bodyCode)) {
        this.bodyCode = data().deepCopy(fields()[6].schema(), other.bodyCode);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.grade)) {
        this.grade = data().deepCopy(fields()[7].schema(), other.grade);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.pass)) {
        this.pass = data().deepCopy(fields()[8].schema(), other.pass);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.cerCourseId)) {
        this.cerCourseId = data().deepCopy(fields()[9].schema(), other.cerCourseId);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.contestId)) {
        this.contestId = data().deepCopy(fields()[10].schema(), other.contestId);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[11].schema(), other.createdAt);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.result)) {
        this.result = data().deepCopy(fields()[12].schema(), other.result);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.copyState)) {
        this.copyState = data().deepCopy(fields()[13].schema(), other.copyState);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing CodeSubmissionUpdateRequestAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.codeSubmisisonId)) {
        this.codeSubmisisonId = data().deepCopy(fields()[1].schema(), other.codeSubmisisonId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.codeQuestionId)) {
        this.codeQuestionId = data().deepCopy(fields()[2].schema(), other.codeQuestionId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.userId)) {
        this.userId = data().deepCopy(fields()[3].schema(), other.userId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.programmingLanguageId)) {
        this.programmingLanguageId = data().deepCopy(fields()[4].schema(), other.programmingLanguageId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[5].schema(), other.sagaId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bodyCode)) {
        this.bodyCode = data().deepCopy(fields()[6].schema(), other.bodyCode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.grade)) {
        this.grade = data().deepCopy(fields()[7].schema(), other.grade);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pass)) {
        this.pass = data().deepCopy(fields()[8].schema(), other.pass);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.cerCourseId)) {
        this.cerCourseId = data().deepCopy(fields()[9].schema(), other.cerCourseId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.contestId)) {
        this.contestId = data().deepCopy(fields()[10].schema(), other.contestId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[11].schema(), other.createdAt);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.result)) {
        this.result = data().deepCopy(fields()[12].schema(), other.result);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.copyState)) {
        this.copyState = data().deepCopy(fields()[13].schema(), other.copyState);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.util.UUID getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setId(java.util.UUID value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'codeSubmisisonId' field.
      * @return The value.
      */
    public java.util.UUID getCodeSubmisisonId() {
      return codeSubmisisonId;
    }


    /**
      * Sets the value of the 'codeSubmisisonId' field.
      * @param value The value of 'codeSubmisisonId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setCodeSubmisisonId(java.util.UUID value) {
      validate(fields()[1], value);
      this.codeSubmisisonId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'codeSubmisisonId' field has been set.
      * @return True if the 'codeSubmisisonId' field has been set, false otherwise.
      */
    public boolean hasCodeSubmisisonId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'codeSubmisisonId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearCodeSubmisisonId() {
      codeSubmisisonId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'codeQuestionId' field.
      * @return The value.
      */
    public java.util.UUID getCodeQuestionId() {
      return codeQuestionId;
    }


    /**
      * Sets the value of the 'codeQuestionId' field.
      * @param value The value of 'codeQuestionId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setCodeQuestionId(java.util.UUID value) {
      validate(fields()[2], value);
      this.codeQuestionId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'codeQuestionId' field has been set.
      * @return True if the 'codeQuestionId' field has been set, false otherwise.
      */
    public boolean hasCodeQuestionId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'codeQuestionId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearCodeQuestionId() {
      codeQuestionId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.util.UUID getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setUserId(java.util.UUID value) {
      validate(fields()[3], value);
      this.userId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'programmingLanguageId' field.
      * @return The value.
      */
    public java.util.UUID getProgrammingLanguageId() {
      return programmingLanguageId;
    }


    /**
      * Sets the value of the 'programmingLanguageId' field.
      * @param value The value of 'programmingLanguageId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setProgrammingLanguageId(java.util.UUID value) {
      validate(fields()[4], value);
      this.programmingLanguageId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'programmingLanguageId' field has been set.
      * @return True if the 'programmingLanguageId' field has been set, false otherwise.
      */
    public boolean hasProgrammingLanguageId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'programmingLanguageId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearProgrammingLanguageId() {
      programmingLanguageId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'sagaId' field.
      * @return The value.
      */
    public java.util.UUID getSagaId() {
      return sagaId;
    }


    /**
      * Sets the value of the 'sagaId' field.
      * @param value The value of 'sagaId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setSagaId(java.util.UUID value) {
      validate(fields()[5], value);
      this.sagaId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'sagaId' field has been set.
      * @return True if the 'sagaId' field has been set, false otherwise.
      */
    public boolean hasSagaId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'sagaId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearSagaId() {
      sagaId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'bodyCode' field.
      * @return The value.
      */
    public java.lang.String getBodyCode() {
      return bodyCode;
    }


    /**
      * Sets the value of the 'bodyCode' field.
      * @param value The value of 'bodyCode'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setBodyCode(java.lang.String value) {
      validate(fields()[6], value);
      this.bodyCode = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'bodyCode' field has been set.
      * @return True if the 'bodyCode' field has been set, false otherwise.
      */
    public boolean hasBodyCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'bodyCode' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearBodyCode() {
      bodyCode = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'grade' field.
      * @return The value.
      */
    public java.lang.Float getGrade() {
      return grade;
    }


    /**
      * Sets the value of the 'grade' field.
      * @param value The value of 'grade'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setGrade(java.lang.Float value) {
      validate(fields()[7], value);
      this.grade = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'grade' field has been set.
      * @return True if the 'grade' field has been set, false otherwise.
      */
    public boolean hasGrade() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'grade' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearGrade() {
      grade = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'pass' field.
      * @return The value.
      */
    public java.lang.Boolean getPass() {
      return pass;
    }


    /**
      * Sets the value of the 'pass' field.
      * @param value The value of 'pass'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setPass(java.lang.Boolean value) {
      validate(fields()[8], value);
      this.pass = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'pass' field has been set.
      * @return True if the 'pass' field has been set, false otherwise.
      */
    public boolean hasPass() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'pass' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearPass() {
      pass = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'cerCourseId' field.
      * @return The value.
      */
    public java.util.UUID getCerCourseId() {
      return cerCourseId;
    }


    /**
      * Sets the value of the 'cerCourseId' field.
      * @param value The value of 'cerCourseId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setCerCourseId(java.util.UUID value) {
      validate(fields()[9], value);
      this.cerCourseId = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'cerCourseId' field has been set.
      * @return True if the 'cerCourseId' field has been set, false otherwise.
      */
    public boolean hasCerCourseId() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'cerCourseId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearCerCourseId() {
      cerCourseId = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'contestId' field.
      * @return The value.
      */
    public java.util.UUID getContestId() {
      return contestId;
    }


    /**
      * Sets the value of the 'contestId' field.
      * @param value The value of 'contestId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setContestId(java.util.UUID value) {
      validate(fields()[10], value);
      this.contestId = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'contestId' field has been set.
      * @return True if the 'contestId' field has been set, false otherwise.
      */
    public boolean hasContestId() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'contestId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearContestId() {
      contestId = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[11], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearCreatedAt() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'result' field.
      * @return The value.
      */
    public java.lang.String getResult() {
      return result;
    }


    /**
      * Sets the value of the 'result' field.
      * @param value The value of 'result'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setResult(java.lang.String value) {
      validate(fields()[12], value);
      this.result = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'result' field has been set.
      * @return True if the 'result' field has been set, false otherwise.
      */
    public boolean hasResult() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'result' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearResult() {
      result = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'copyState' field.
      * @return The value.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CopyState getCopyState() {
      return copyState;
    }


    /**
      * Sets the value of the 'copyState' field.
      * @param value The value of 'copyState'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder setCopyState(com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CopyState value) {
      validate(fields()[13], value);
      this.copyState = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'copyState' field has been set.
      * @return True if the 'copyState' field has been set, false otherwise.
      */
    public boolean hasCopyState() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'copyState' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CodeSubmissionUpdateRequestAvroModel.Builder clearCopyState() {
      copyState = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CodeSubmissionUpdateRequestAvroModel build() {
      try {
        CodeSubmissionUpdateRequestAvroModel record = new CodeSubmissionUpdateRequestAvroModel();
        record.id = fieldSetFlags()[0] ? this.id : (java.util.UUID) defaultValue(fields()[0]);
        record.codeSubmisisonId = fieldSetFlags()[1] ? this.codeSubmisisonId : (java.util.UUID) defaultValue(fields()[1]);
        record.codeQuestionId = fieldSetFlags()[2] ? this.codeQuestionId : (java.util.UUID) defaultValue(fields()[2]);
        record.userId = fieldSetFlags()[3] ? this.userId : (java.util.UUID) defaultValue(fields()[3]);
        record.programmingLanguageId = fieldSetFlags()[4] ? this.programmingLanguageId : (java.util.UUID) defaultValue(fields()[4]);
        record.sagaId = fieldSetFlags()[5] ? this.sagaId : (java.util.UUID) defaultValue(fields()[5]);
        record.bodyCode = fieldSetFlags()[6] ? this.bodyCode : (java.lang.String) defaultValue(fields()[6]);
        record.grade = fieldSetFlags()[7] ? this.grade : (java.lang.Float) defaultValue(fields()[7]);
        record.pass = fieldSetFlags()[8] ? this.pass : (java.lang.Boolean) defaultValue(fields()[8]);
        record.cerCourseId = fieldSetFlags()[9] ? this.cerCourseId : (java.util.UUID) defaultValue(fields()[9]);
        record.contestId = fieldSetFlags()[10] ? this.contestId : (java.util.UUID) defaultValue(fields()[10]);
        record.createdAt = fieldSetFlags()[11] ? this.createdAt : (java.time.Instant) defaultValue(fields()[11]);
        record.result = fieldSetFlags()[12] ? this.result : (java.lang.String) defaultValue(fields()[12]);
        record.copyState = fieldSetFlags()[13] ? this.copyState : (com.backend.programming.learning.system.kafka.code.assessment.code.submission.avro.model.CopyState) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CodeSubmissionUpdateRequestAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<CodeSubmissionUpdateRequestAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CodeSubmissionUpdateRequestAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<CodeSubmissionUpdateRequestAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










