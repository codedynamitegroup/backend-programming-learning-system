/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.backend.programming.learning.system.kafka.core.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class QuestionRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2344332262308582653L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"QuestionRequestAvroModel\",\"namespace\":\"com.backend.programming.learning.system.kafka.core.avro.model\",\"fields\":[{\"name\":\"createdBy\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"defaultMark\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"java-class\":\"java.math.BigDecimal\"}},{\"name\":\"difficulty\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"generalFeedback\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"qtypeId\",\"type\":[{\"type\":\"string\",\"logicalType\":\"uuid\"},\"null\"]},{\"name\":\"categoryId\",\"type\":[{\"type\":\"string\",\"logicalType\":\"uuid\"},\"null\"]},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"inputFormat\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"outputFormat\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"constraint\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"isPublic\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"allowImport\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"organizationId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"qType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"questionText\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"updatedBy\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"copyState\",\"type\":{\"type\":\"enum\",\"name\":\"CopyState\",\"symbols\":[\"CREATING\",\"CREATED\",\"UPDATING\",\"UPDATED\",\"DELETING\",\"DELETED\",\"CREATE_PROPAGATING\",\"UPDATE_PROPAGATING\",\"DELETE_PROPAGATING\",\"CREATE_ROLLBACKING\",\"UPDATE_ROLLBACKING\",\"DELETE_ROLLBACKING\",\"DELETE_FAILED\",\"UPDATE_FAILED\",\"CREATE_FAILED\"]}},{\"name\":\"answers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AnswerOfQuestion\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"questionId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"feedback\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"answer\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"fraction\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"java-class\":\"java.math.BigDecimal\"}}]}},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
  }

  private static final BinaryMessageEncoder<QuestionRequestAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<QuestionRequestAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<QuestionRequestAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<QuestionRequestAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<QuestionRequestAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this QuestionRequestAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a QuestionRequestAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a QuestionRequestAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static QuestionRequestAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID createdBy;
  private java.math.BigDecimal defaultMark;
  private java.lang.String difficulty;
  private java.lang.String generalFeedback;
  private java.util.UUID id;
  private java.util.UUID qtypeId;
  private java.util.UUID categoryId;
  private java.lang.String name;
  private java.lang.String inputFormat;
  private java.lang.String outputFormat;
  private java.lang.String constraint;
  private java.lang.Boolean isPublic;
  private java.lang.Boolean allowImport;
  private java.util.UUID organizationId;
  private java.lang.String qType;
  private java.lang.String questionText;
  private java.lang.String sagaId;
  private java.util.UUID updatedBy;
  private com.backend.programming.learning.system.kafka.core.avro.model.CopyState copyState;
  private java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> answers;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public QuestionRequestAvroModel() {}

  /**
   * All-args constructor.
   * @param createdBy The new value for createdBy
   * @param defaultMark The new value for defaultMark
   * @param difficulty The new value for difficulty
   * @param generalFeedback The new value for generalFeedback
   * @param id The new value for id
   * @param qtypeId The new value for qtypeId
   * @param categoryId The new value for categoryId
   * @param name The new value for name
   * @param inputFormat The new value for inputFormat
   * @param outputFormat The new value for outputFormat
   * @param constraint The new value for constraint
   * @param isPublic The new value for isPublic
   * @param allowImport The new value for allowImport
   * @param organizationId The new value for organizationId
   * @param qType The new value for qType
   * @param questionText The new value for questionText
   * @param sagaId The new value for sagaId
   * @param updatedBy The new value for updatedBy
   * @param copyState The new value for copyState
   * @param answers The new value for answers
   */
  public QuestionRequestAvroModel(java.util.UUID createdBy, java.math.BigDecimal defaultMark, java.lang.String difficulty, java.lang.String generalFeedback, java.util.UUID id, java.util.UUID qtypeId, java.util.UUID categoryId, java.lang.String name, java.lang.String inputFormat, java.lang.String outputFormat, java.lang.String constraint, java.lang.Boolean isPublic, java.lang.Boolean allowImport, java.util.UUID organizationId, java.lang.String qType, java.lang.String questionText, java.lang.String sagaId, java.util.UUID updatedBy, com.backend.programming.learning.system.kafka.core.avro.model.CopyState copyState, java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> answers) {
    this.createdBy = createdBy;
    this.defaultMark = defaultMark;
    this.difficulty = difficulty;
    this.generalFeedback = generalFeedback;
    this.id = id;
    this.qtypeId = qtypeId;
    this.categoryId = categoryId;
    this.name = name;
    this.inputFormat = inputFormat;
    this.outputFormat = outputFormat;
    this.constraint = constraint;
    this.isPublic = isPublic;
    this.allowImport = allowImport;
    this.organizationId = organizationId;
    this.qType = qType;
    this.questionText = questionText;
    this.sagaId = sagaId;
    this.updatedBy = updatedBy;
    this.copyState = copyState;
    this.answers = answers;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return createdBy;
    case 1: return defaultMark;
    case 2: return difficulty;
    case 3: return generalFeedback;
    case 4: return id;
    case 5: return qtypeId;
    case 6: return categoryId;
    case 7: return name;
    case 8: return inputFormat;
    case 9: return outputFormat;
    case 10: return constraint;
    case 11: return isPublic;
    case 12: return allowImport;
    case 13: return organizationId;
    case 14: return qType;
    case 15: return questionText;
    case 16: return sagaId;
    case 17: return updatedBy;
    case 18: return copyState;
    case 19: return answers;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      null,
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      null,
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: createdBy = (java.util.UUID)value$; break;
    case 1: defaultMark = (java.math.BigDecimal)value$; break;
    case 2: difficulty = value$ != null ? value$.toString() : null; break;
    case 3: generalFeedback = value$ != null ? value$.toString() : null; break;
    case 4: id = (java.util.UUID)value$; break;
    case 5: qtypeId = (java.util.UUID)value$; break;
    case 6: categoryId = (java.util.UUID)value$; break;
    case 7: name = value$ != null ? value$.toString() : null; break;
    case 8: inputFormat = value$ != null ? value$.toString() : null; break;
    case 9: outputFormat = value$ != null ? value$.toString() : null; break;
    case 10: constraint = value$ != null ? value$.toString() : null; break;
    case 11: isPublic = (java.lang.Boolean)value$; break;
    case 12: allowImport = (java.lang.Boolean)value$; break;
    case 13: organizationId = (java.util.UUID)value$; break;
    case 14: qType = value$ != null ? value$.toString() : null; break;
    case 15: questionText = value$ != null ? value$.toString() : null; break;
    case 16: sagaId = value$ != null ? value$.toString() : null; break;
    case 17: updatedBy = (java.util.UUID)value$; break;
    case 18: copyState = (com.backend.programming.learning.system.kafka.core.avro.model.CopyState)value$; break;
    case 19: answers = (java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'createdBy' field.
   * @return The value of the 'createdBy' field.
   */
  public java.util.UUID getCreatedBy() {
    return createdBy;
  }


  /**
   * Sets the value of the 'createdBy' field.
   * @param value the value to set.
   */
  public void setCreatedBy(java.util.UUID value) {
    this.createdBy = value;
  }

  /**
   * Gets the value of the 'defaultMark' field.
   * @return The value of the 'defaultMark' field.
   */
  public java.math.BigDecimal getDefaultMark() {
    return defaultMark;
  }


  /**
   * Sets the value of the 'defaultMark' field.
   * @param value the value to set.
   */
  public void setDefaultMark(java.math.BigDecimal value) {
    this.defaultMark = value;
  }

  /**
   * Gets the value of the 'difficulty' field.
   * @return The value of the 'difficulty' field.
   */
  public java.lang.String getDifficulty() {
    return difficulty;
  }


  /**
   * Sets the value of the 'difficulty' field.
   * @param value the value to set.
   */
  public void setDifficulty(java.lang.String value) {
    this.difficulty = value;
  }

  /**
   * Gets the value of the 'generalFeedback' field.
   * @return The value of the 'generalFeedback' field.
   */
  public java.lang.String getGeneralFeedback() {
    return generalFeedback;
  }


  /**
   * Sets the value of the 'generalFeedback' field.
   * @param value the value to set.
   */
  public void setGeneralFeedback(java.lang.String value) {
    this.generalFeedback = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.util.UUID getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.util.UUID value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'qtypeId' field.
   * @return The value of the 'qtypeId' field.
   */
  public java.util.UUID getQtypeId() {
    return qtypeId;
  }


  /**
   * Sets the value of the 'qtypeId' field.
   * @param value the value to set.
   */
  public void setQtypeId(java.util.UUID value) {
    this.qtypeId = value;
  }

  /**
   * Gets the value of the 'categoryId' field.
   * @return The value of the 'categoryId' field.
   */
  public java.util.UUID getCategoryId() {
    return categoryId;
  }


  /**
   * Sets the value of the 'categoryId' field.
   * @param value the value to set.
   */
  public void setCategoryId(java.util.UUID value) {
    this.categoryId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'inputFormat' field.
   * @return The value of the 'inputFormat' field.
   */
  public java.lang.String getInputFormat() {
    return inputFormat;
  }


  /**
   * Sets the value of the 'inputFormat' field.
   * @param value the value to set.
   */
  public void setInputFormat(java.lang.String value) {
    this.inputFormat = value;
  }

  /**
   * Gets the value of the 'outputFormat' field.
   * @return The value of the 'outputFormat' field.
   */
  public java.lang.String getOutputFormat() {
    return outputFormat;
  }


  /**
   * Sets the value of the 'outputFormat' field.
   * @param value the value to set.
   */
  public void setOutputFormat(java.lang.String value) {
    this.outputFormat = value;
  }

  /**
   * Gets the value of the 'constraint' field.
   * @return The value of the 'constraint' field.
   */
  public java.lang.String getConstraint() {
    return constraint;
  }


  /**
   * Sets the value of the 'constraint' field.
   * @param value the value to set.
   */
  public void setConstraint(java.lang.String value) {
    this.constraint = value;
  }

  /**
   * Gets the value of the 'isPublic' field.
   * @return The value of the 'isPublic' field.
   */
  public java.lang.Boolean getIsPublic() {
    return isPublic;
  }


  /**
   * Sets the value of the 'isPublic' field.
   * @param value the value to set.
   */
  public void setIsPublic(java.lang.Boolean value) {
    this.isPublic = value;
  }

  /**
   * Gets the value of the 'allowImport' field.
   * @return The value of the 'allowImport' field.
   */
  public java.lang.Boolean getAllowImport() {
    return allowImport;
  }


  /**
   * Sets the value of the 'allowImport' field.
   * @param value the value to set.
   */
  public void setAllowImport(java.lang.Boolean value) {
    this.allowImport = value;
  }

  /**
   * Gets the value of the 'organizationId' field.
   * @return The value of the 'organizationId' field.
   */
  public java.util.UUID getOrganizationId() {
    return organizationId;
  }


  /**
   * Sets the value of the 'organizationId' field.
   * @param value the value to set.
   */
  public void setOrganizationId(java.util.UUID value) {
    this.organizationId = value;
  }

  /**
   * Gets the value of the 'qType' field.
   * @return The value of the 'qType' field.
   */
  public java.lang.String getQType() {
    return qType;
  }


  /**
   * Sets the value of the 'qType' field.
   * @param value the value to set.
   */
  public void setQType(java.lang.String value) {
    this.qType = value;
  }

  /**
   * Gets the value of the 'questionText' field.
   * @return The value of the 'questionText' field.
   */
  public java.lang.String getQuestionText() {
    return questionText;
  }


  /**
   * Sets the value of the 'questionText' field.
   * @param value the value to set.
   */
  public void setQuestionText(java.lang.String value) {
    this.questionText = value;
  }

  /**
   * Gets the value of the 'sagaId' field.
   * @return The value of the 'sagaId' field.
   */
  public java.lang.String getSagaId() {
    return sagaId;
  }


  /**
   * Sets the value of the 'sagaId' field.
   * @param value the value to set.
   */
  public void setSagaId(java.lang.String value) {
    this.sagaId = value;
  }

  /**
   * Gets the value of the 'updatedBy' field.
   * @return The value of the 'updatedBy' field.
   */
  public java.util.UUID getUpdatedBy() {
    return updatedBy;
  }


  /**
   * Sets the value of the 'updatedBy' field.
   * @param value the value to set.
   */
  public void setUpdatedBy(java.util.UUID value) {
    this.updatedBy = value;
  }

  /**
   * Gets the value of the 'copyState' field.
   * @return The value of the 'copyState' field.
   */
  public com.backend.programming.learning.system.kafka.core.avro.model.CopyState getCopyState() {
    return copyState;
  }


  /**
   * Sets the value of the 'copyState' field.
   * @param value the value to set.
   */
  public void setCopyState(com.backend.programming.learning.system.kafka.core.avro.model.CopyState value) {
    this.copyState = value;
  }

  /**
   * Gets the value of the 'answers' field.
   * @return The value of the 'answers' field.
   */
  public java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> getAnswers() {
    return answers;
  }


  /**
   * Sets the value of the 'answers' field.
   * @param value the value to set.
   */
  public void setAnswers(java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> value) {
    this.answers = value;
  }

  /**
   * Creates a new QuestionRequestAvroModel RecordBuilder.
   * @return A new QuestionRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder newBuilder() {
    return new com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder();
  }

  /**
   * Creates a new QuestionRequestAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new QuestionRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder newBuilder(com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder other) {
    if (other == null) {
      return new com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder();
    } else {
      return new com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new QuestionRequestAvroModel RecordBuilder by copying an existing QuestionRequestAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new QuestionRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder newBuilder(com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel other) {
    if (other == null) {
      return new com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder();
    } else {
      return new com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for QuestionRequestAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<QuestionRequestAvroModel>
    implements org.apache.avro.data.RecordBuilder<QuestionRequestAvroModel> {

    private java.util.UUID createdBy;
    private java.math.BigDecimal defaultMark;
    private java.lang.String difficulty;
    private java.lang.String generalFeedback;
    private java.util.UUID id;
    private java.util.UUID qtypeId;
    private java.util.UUID categoryId;
    private java.lang.String name;
    private java.lang.String inputFormat;
    private java.lang.String outputFormat;
    private java.lang.String constraint;
    private java.lang.Boolean isPublic;
    private java.lang.Boolean allowImport;
    private java.util.UUID organizationId;
    private java.lang.String qType;
    private java.lang.String questionText;
    private java.lang.String sagaId;
    private java.util.UUID updatedBy;
    private com.backend.programming.learning.system.kafka.core.avro.model.CopyState copyState;
    private java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> answers;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[0].schema(), other.createdBy);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.defaultMark)) {
        this.defaultMark = data().deepCopy(fields()[1].schema(), other.defaultMark);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.difficulty)) {
        this.difficulty = data().deepCopy(fields()[2].schema(), other.difficulty);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.generalFeedback)) {
        this.generalFeedback = data().deepCopy(fields()[3].schema(), other.generalFeedback);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.id)) {
        this.id = data().deepCopy(fields()[4].schema(), other.id);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.qtypeId)) {
        this.qtypeId = data().deepCopy(fields()[5].schema(), other.qtypeId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.categoryId)) {
        this.categoryId = data().deepCopy(fields()[6].schema(), other.categoryId);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.name)) {
        this.name = data().deepCopy(fields()[7].schema(), other.name);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.inputFormat)) {
        this.inputFormat = data().deepCopy(fields()[8].schema(), other.inputFormat);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.outputFormat)) {
        this.outputFormat = data().deepCopy(fields()[9].schema(), other.outputFormat);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.constraint)) {
        this.constraint = data().deepCopy(fields()[10].schema(), other.constraint);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.isPublic)) {
        this.isPublic = data().deepCopy(fields()[11].schema(), other.isPublic);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.allowImport)) {
        this.allowImport = data().deepCopy(fields()[12].schema(), other.allowImport);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.organizationId)) {
        this.organizationId = data().deepCopy(fields()[13].schema(), other.organizationId);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.qType)) {
        this.qType = data().deepCopy(fields()[14].schema(), other.qType);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.questionText)) {
        this.questionText = data().deepCopy(fields()[15].schema(), other.questionText);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[16].schema(), other.sagaId);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[17].schema(), other.updatedBy);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.copyState)) {
        this.copyState = data().deepCopy(fields()[18].schema(), other.copyState);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.answers)) {
        this.answers = data().deepCopy(fields()[19].schema(), other.answers);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
    }

    /**
     * Creates a Builder by copying an existing QuestionRequestAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[0].schema(), other.createdBy);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.defaultMark)) {
        this.defaultMark = data().deepCopy(fields()[1].schema(), other.defaultMark);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.difficulty)) {
        this.difficulty = data().deepCopy(fields()[2].schema(), other.difficulty);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.generalFeedback)) {
        this.generalFeedback = data().deepCopy(fields()[3].schema(), other.generalFeedback);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.id)) {
        this.id = data().deepCopy(fields()[4].schema(), other.id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.qtypeId)) {
        this.qtypeId = data().deepCopy(fields()[5].schema(), other.qtypeId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.categoryId)) {
        this.categoryId = data().deepCopy(fields()[6].schema(), other.categoryId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.name)) {
        this.name = data().deepCopy(fields()[7].schema(), other.name);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.inputFormat)) {
        this.inputFormat = data().deepCopy(fields()[8].schema(), other.inputFormat);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.outputFormat)) {
        this.outputFormat = data().deepCopy(fields()[9].schema(), other.outputFormat);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.constraint)) {
        this.constraint = data().deepCopy(fields()[10].schema(), other.constraint);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.isPublic)) {
        this.isPublic = data().deepCopy(fields()[11].schema(), other.isPublic);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.allowImport)) {
        this.allowImport = data().deepCopy(fields()[12].schema(), other.allowImport);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.organizationId)) {
        this.organizationId = data().deepCopy(fields()[13].schema(), other.organizationId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.qType)) {
        this.qType = data().deepCopy(fields()[14].schema(), other.qType);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.questionText)) {
        this.questionText = data().deepCopy(fields()[15].schema(), other.questionText);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[16].schema(), other.sagaId);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[17].schema(), other.updatedBy);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.copyState)) {
        this.copyState = data().deepCopy(fields()[18].schema(), other.copyState);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.answers)) {
        this.answers = data().deepCopy(fields()[19].schema(), other.answers);
        fieldSetFlags()[19] = true;
      }
    }

    /**
      * Gets the value of the 'createdBy' field.
      * @return The value.
      */
    public java.util.UUID getCreatedBy() {
      return createdBy;
    }


    /**
      * Sets the value of the 'createdBy' field.
      * @param value The value of 'createdBy'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setCreatedBy(java.util.UUID value) {
      validate(fields()[0], value);
      this.createdBy = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'createdBy' field has been set.
      * @return True if the 'createdBy' field has been set, false otherwise.
      */
    public boolean hasCreatedBy() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'createdBy' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearCreatedBy() {
      createdBy = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'defaultMark' field.
      * @return The value.
      */
    public java.math.BigDecimal getDefaultMark() {
      return defaultMark;
    }


    /**
      * Sets the value of the 'defaultMark' field.
      * @param value The value of 'defaultMark'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setDefaultMark(java.math.BigDecimal value) {
      validate(fields()[1], value);
      this.defaultMark = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'defaultMark' field has been set.
      * @return True if the 'defaultMark' field has been set, false otherwise.
      */
    public boolean hasDefaultMark() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'defaultMark' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearDefaultMark() {
      defaultMark = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'difficulty' field.
      * @return The value.
      */
    public java.lang.String getDifficulty() {
      return difficulty;
    }


    /**
      * Sets the value of the 'difficulty' field.
      * @param value The value of 'difficulty'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setDifficulty(java.lang.String value) {
      validate(fields()[2], value);
      this.difficulty = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'difficulty' field has been set.
      * @return True if the 'difficulty' field has been set, false otherwise.
      */
    public boolean hasDifficulty() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'difficulty' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearDifficulty() {
      difficulty = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'generalFeedback' field.
      * @return The value.
      */
    public java.lang.String getGeneralFeedback() {
      return generalFeedback;
    }


    /**
      * Sets the value of the 'generalFeedback' field.
      * @param value The value of 'generalFeedback'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setGeneralFeedback(java.lang.String value) {
      validate(fields()[3], value);
      this.generalFeedback = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'generalFeedback' field has been set.
      * @return True if the 'generalFeedback' field has been set, false otherwise.
      */
    public boolean hasGeneralFeedback() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'generalFeedback' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearGeneralFeedback() {
      generalFeedback = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.util.UUID getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setId(java.util.UUID value) {
      validate(fields()[4], value);
      this.id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearId() {
      id = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'qtypeId' field.
      * @return The value.
      */
    public java.util.UUID getQtypeId() {
      return qtypeId;
    }


    /**
      * Sets the value of the 'qtypeId' field.
      * @param value The value of 'qtypeId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setQtypeId(java.util.UUID value) {
      validate(fields()[5], value);
      this.qtypeId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'qtypeId' field has been set.
      * @return True if the 'qtypeId' field has been set, false otherwise.
      */
    public boolean hasQtypeId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'qtypeId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearQtypeId() {
      qtypeId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'categoryId' field.
      * @return The value.
      */
    public java.util.UUID getCategoryId() {
      return categoryId;
    }


    /**
      * Sets the value of the 'categoryId' field.
      * @param value The value of 'categoryId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setCategoryId(java.util.UUID value) {
      validate(fields()[6], value);
      this.categoryId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'categoryId' field has been set.
      * @return True if the 'categoryId' field has been set, false otherwise.
      */
    public boolean hasCategoryId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'categoryId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearCategoryId() {
      categoryId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setName(java.lang.String value) {
      validate(fields()[7], value);
      this.name = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearName() {
      name = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'inputFormat' field.
      * @return The value.
      */
    public java.lang.String getInputFormat() {
      return inputFormat;
    }


    /**
      * Sets the value of the 'inputFormat' field.
      * @param value The value of 'inputFormat'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setInputFormat(java.lang.String value) {
      validate(fields()[8], value);
      this.inputFormat = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'inputFormat' field has been set.
      * @return True if the 'inputFormat' field has been set, false otherwise.
      */
    public boolean hasInputFormat() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'inputFormat' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearInputFormat() {
      inputFormat = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'outputFormat' field.
      * @return The value.
      */
    public java.lang.String getOutputFormat() {
      return outputFormat;
    }


    /**
      * Sets the value of the 'outputFormat' field.
      * @param value The value of 'outputFormat'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setOutputFormat(java.lang.String value) {
      validate(fields()[9], value);
      this.outputFormat = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'outputFormat' field has been set.
      * @return True if the 'outputFormat' field has been set, false otherwise.
      */
    public boolean hasOutputFormat() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'outputFormat' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearOutputFormat() {
      outputFormat = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'constraint' field.
      * @return The value.
      */
    public java.lang.String getConstraint() {
      return constraint;
    }


    /**
      * Sets the value of the 'constraint' field.
      * @param value The value of 'constraint'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setConstraint(java.lang.String value) {
      validate(fields()[10], value);
      this.constraint = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'constraint' field has been set.
      * @return True if the 'constraint' field has been set, false otherwise.
      */
    public boolean hasConstraint() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'constraint' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearConstraint() {
      constraint = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'isPublic' field.
      * @return The value.
      */
    public java.lang.Boolean getIsPublic() {
      return isPublic;
    }


    /**
      * Sets the value of the 'isPublic' field.
      * @param value The value of 'isPublic'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setIsPublic(java.lang.Boolean value) {
      validate(fields()[11], value);
      this.isPublic = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'isPublic' field has been set.
      * @return True if the 'isPublic' field has been set, false otherwise.
      */
    public boolean hasIsPublic() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'isPublic' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearIsPublic() {
      isPublic = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowImport' field.
      * @return The value.
      */
    public java.lang.Boolean getAllowImport() {
      return allowImport;
    }


    /**
      * Sets the value of the 'allowImport' field.
      * @param value The value of 'allowImport'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setAllowImport(java.lang.Boolean value) {
      validate(fields()[12], value);
      this.allowImport = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'allowImport' field has been set.
      * @return True if the 'allowImport' field has been set, false otherwise.
      */
    public boolean hasAllowImport() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'allowImport' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearAllowImport() {
      allowImport = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'organizationId' field.
      * @return The value.
      */
    public java.util.UUID getOrganizationId() {
      return organizationId;
    }


    /**
      * Sets the value of the 'organizationId' field.
      * @param value The value of 'organizationId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setOrganizationId(java.util.UUID value) {
      validate(fields()[13], value);
      this.organizationId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'organizationId' field has been set.
      * @return True if the 'organizationId' field has been set, false otherwise.
      */
    public boolean hasOrganizationId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'organizationId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearOrganizationId() {
      organizationId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'qType' field.
      * @return The value.
      */
    public java.lang.String getQType() {
      return qType;
    }


    /**
      * Sets the value of the 'qType' field.
      * @param value The value of 'qType'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setQType(java.lang.String value) {
      validate(fields()[14], value);
      this.qType = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'qType' field has been set.
      * @return True if the 'qType' field has been set, false otherwise.
      */
    public boolean hasQType() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'qType' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearQType() {
      qType = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'questionText' field.
      * @return The value.
      */
    public java.lang.String getQuestionText() {
      return questionText;
    }


    /**
      * Sets the value of the 'questionText' field.
      * @param value The value of 'questionText'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setQuestionText(java.lang.String value) {
      validate(fields()[15], value);
      this.questionText = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'questionText' field has been set.
      * @return True if the 'questionText' field has been set, false otherwise.
      */
    public boolean hasQuestionText() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'questionText' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearQuestionText() {
      questionText = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'sagaId' field.
      * @return The value.
      */
    public java.lang.String getSagaId() {
      return sagaId;
    }


    /**
      * Sets the value of the 'sagaId' field.
      * @param value The value of 'sagaId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setSagaId(java.lang.String value) {
      validate(fields()[16], value);
      this.sagaId = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'sagaId' field has been set.
      * @return True if the 'sagaId' field has been set, false otherwise.
      */
    public boolean hasSagaId() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'sagaId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearSagaId() {
      sagaId = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedBy' field.
      * @return The value.
      */
    public java.util.UUID getUpdatedBy() {
      return updatedBy;
    }


    /**
      * Sets the value of the 'updatedBy' field.
      * @param value The value of 'updatedBy'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setUpdatedBy(java.util.UUID value) {
      validate(fields()[17], value);
      this.updatedBy = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedBy' field has been set.
      * @return True if the 'updatedBy' field has been set, false otherwise.
      */
    public boolean hasUpdatedBy() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'updatedBy' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearUpdatedBy() {
      updatedBy = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'copyState' field.
      * @return The value.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.CopyState getCopyState() {
      return copyState;
    }


    /**
      * Sets the value of the 'copyState' field.
      * @param value The value of 'copyState'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setCopyState(com.backend.programming.learning.system.kafka.core.avro.model.CopyState value) {
      validate(fields()[18], value);
      this.copyState = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'copyState' field has been set.
      * @return True if the 'copyState' field has been set, false otherwise.
      */
    public boolean hasCopyState() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'copyState' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearCopyState() {
      copyState = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'answers' field.
      * @return The value.
      */
    public java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> getAnswers() {
      return answers;
    }


    /**
      * Sets the value of the 'answers' field.
      * @param value The value of 'answers'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder setAnswers(java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> value) {
      validate(fields()[19], value);
      this.answers = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'answers' field has been set.
      * @return True if the 'answers' field has been set, false otherwise.
      */
    public boolean hasAnswers() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'answers' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionRequestAvroModel.Builder clearAnswers() {
      answers = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public QuestionRequestAvroModel build() {
      try {
        QuestionRequestAvroModel record = new QuestionRequestAvroModel();
        record.createdBy = fieldSetFlags()[0] ? this.createdBy : (java.util.UUID) defaultValue(fields()[0]);
        record.defaultMark = fieldSetFlags()[1] ? this.defaultMark : (java.math.BigDecimal) defaultValue(fields()[1]);
        record.difficulty = fieldSetFlags()[2] ? this.difficulty : (java.lang.String) defaultValue(fields()[2]);
        record.generalFeedback = fieldSetFlags()[3] ? this.generalFeedback : (java.lang.String) defaultValue(fields()[3]);
        record.id = fieldSetFlags()[4] ? this.id : (java.util.UUID) defaultValue(fields()[4]);
        record.qtypeId = fieldSetFlags()[5] ? this.qtypeId : (java.util.UUID) defaultValue(fields()[5]);
        record.categoryId = fieldSetFlags()[6] ? this.categoryId : (java.util.UUID) defaultValue(fields()[6]);
        record.name = fieldSetFlags()[7] ? this.name : (java.lang.String) defaultValue(fields()[7]);
        record.inputFormat = fieldSetFlags()[8] ? this.inputFormat : (java.lang.String) defaultValue(fields()[8]);
        record.outputFormat = fieldSetFlags()[9] ? this.outputFormat : (java.lang.String) defaultValue(fields()[9]);
        record.constraint = fieldSetFlags()[10] ? this.constraint : (java.lang.String) defaultValue(fields()[10]);
        record.isPublic = fieldSetFlags()[11] ? this.isPublic : (java.lang.Boolean) defaultValue(fields()[11]);
        record.allowImport = fieldSetFlags()[12] ? this.allowImport : (java.lang.Boolean) defaultValue(fields()[12]);
        record.organizationId = fieldSetFlags()[13] ? this.organizationId : (java.util.UUID) defaultValue(fields()[13]);
        record.qType = fieldSetFlags()[14] ? this.qType : (java.lang.String) defaultValue(fields()[14]);
        record.questionText = fieldSetFlags()[15] ? this.questionText : (java.lang.String) defaultValue(fields()[15]);
        record.sagaId = fieldSetFlags()[16] ? this.sagaId : (java.lang.String) defaultValue(fields()[16]);
        record.updatedBy = fieldSetFlags()[17] ? this.updatedBy : (java.util.UUID) defaultValue(fields()[17]);
        record.copyState = fieldSetFlags()[18] ? this.copyState : (com.backend.programming.learning.system.kafka.core.avro.model.CopyState) defaultValue(fields()[18]);
        record.answers = fieldSetFlags()[19] ? this.answers : (java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion>) defaultValue(fields()[19]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<QuestionRequestAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<QuestionRequestAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<QuestionRequestAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<QuestionRequestAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










